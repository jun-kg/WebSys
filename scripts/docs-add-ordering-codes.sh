#!/bin/bash

# WebSys ドキュメント順序コード付与スクリプト
# フォルダ・ファイル名に順序コードを付与して読み順を明確化

echo -e "\033[0;35m📋 WebSys ドキュメント順序コード付与開始\033[0m"
echo "フォルダ・ファイル名に読み順コードを付与"

# 現在位置確認
if [ ! -d "docs" ]; then
    echo "❌ docs/ フォルダが見つかりません"
    exit 1
fi

cd docs

echo -e "\033[0;34m📦 バックアップ作成...\033[0m"
BACKUP_DIR="../docs_no_ordering_backup_$(date +%Y%m%d_%H%M%S)"
cp -r . "$BACKUP_DIR"
echo "バックアップ先: $BACKUP_DIR"

echo -e "\033[0;34m📁 フォルダ名に順序コード付与...\033[0m"

# フォルダ順序付けマッピング（読み順）
declare -A FOLDER_ORDER=(
    ["基本"]="01_基本"
    ["設計"]="02_設計"
    ["機能"]="03_機能"
    ["試験"]="04_試験"
    ["運用"]="05_運用"
    ["デザイン"]="06_デザイン"
    ["ガイド"]="07_ガイド"
    ["報告"]="08_報告"
)

# フォルダ名変更実行
for japanese_name in "${!FOLDER_ORDER[@]}"; do
    ordered_name="${FOLDER_ORDER[$japanese_name]}"
    if [ -d "$japanese_name" ]; then
        echo "  📁 $japanese_name → $ordered_name"
        mv "$japanese_name" "$ordered_name"
    fi
done

echo -e "\033[0;36m📖 01_基本フォルダのファイル順序付け...\033[0m"
if [ -d "01_基本" ]; then
    cd 01_基本
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "技術仕様統一.md" ] && mv "技術仕様統一.md" "02_技術仕様統一.md" && echo "  📄 技術仕様統一.md → 02_技術仕様統一.md"
    [ -f "環境構築手順.md" ] && mv "環境構築手順.md" "03_環境構築手順.md" && echo "  📄 環境構築手順.md → 03_環境構築手順.md"
    [ -f "ドキュメント読み順.md" ] && mv "ドキュメント読み順.md" "04_ドキュメント読み順.md" && echo "  📄 ドキュメント読み順.md → 04_ドキュメント読み順.md"
    [ -f "トラブルシューティング.md" ] && mv "トラブルシューティング.md" "05_トラブルシューティング.md" && echo "  📄 トラブルシューティング.md → 05_トラブルシューティング.md"
    cd ..
fi

echo -e "\033[0;36m🏗️ 02_設計フォルダのファイル順序付け...\033[0m"
if [ -d "02_設計" ]; then
    cd 02_設計
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "システム概要.md" ] && mv "システム概要.md" "02_システム概要.md" && echo "  📄 システム概要.md → 02_システム概要.md"
    [ -f "システム設計.md" ] && mv "システム設計.md" "03_システム設計.md" && echo "  📄 システム設計.md → 03_システム設計.md"
    [ -f "API仕様書.md" ] && mv "API仕様書.md" "04_API仕様書.md" && echo "  📄 API仕様書.md → 04_API仕様書.md"
    [ -f "コンポーネント仕様書.md" ] && mv "コンポーネント仕様書.md" "05_コンポーネント仕様書.md" && echo "  📄 コンポーネント仕様書.md → 05_コンポーネント仕様書.md"
    [ -f "共通コンポーネント仕様.md" ] && mv "共通コンポーネント仕様.md" "06_共通コンポーネント仕様.md" && echo "  📄 共通コンポーネント仕様.md → 06_共通コンポーネント仕様.md"
    cd ..
fi

echo -e "\033[0;36m🔧 03_機能フォルダのファイル順序付け...\033[0m"
if [ -d "03_機能" ]; then
    cd 03_機能
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "企業システム共通機能仕様.md" ] && mv "企業システム共通機能仕様.md" "02_企業システム共通機能仕様.md" && echo "  📄 企業システム共通機能仕様.md → 02_企業システム共通機能仕様.md"
    [ -f "複数プロジェクト共有機能設計書.md" ] && mv "複数プロジェクト共有機能設計書.md" "03_複数プロジェクト共有機能設計書.md" && echo "  📄 複数プロジェクト共有機能設計書.md → 03_複数プロジェクト共有機能設計書.md"
    [ -f "申請承認ワークフロー機能設計書.md" ] && mv "申請承認ワークフロー機能設計書.md" "04_申請承認ワークフロー機能設計書.md" && echo "  📄 申請承認ワークフロー機能設計書.md → 04_申請承認ワークフロー機能設計書.md"
    [ -f "API設計書テンプレート.md" ] && mv "API設計書テンプレート.md" "05_API設計書テンプレート.md" && echo "  📄 API設計書テンプレート.md → 05_API設計書テンプレート.md"
    [ -d "機能設計書" ] && mv "機能設計書" "06_機能設計書" && echo "  📁 機能設計書 → 06_機能設計書"
    cd ..
fi

echo -e "\033[0;36m🧪 04_試験フォルダのファイル順序付け...\033[0m"
if [ -d "04_試験" ]; then
    cd 04_試験
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "テスト仕様書.md" ] && mv "テスト仕様書.md" "02_テスト仕様書.md" && echo "  📄 テスト仕様書.md → 02_テスト仕様書.md"
    [ -f "テスト実行報告書.md" ] && mv "テスト実行報告書.md" "03_テスト実行報告書.md" && echo "  📄 テスト実行報告書.md → 03_テスト実行報告書.md"
    [ -f "権限テンプレート単体試験仕様書.md" ] && mv "権限テンプレート単体試験仕様書.md" "04_権限テンプレート単体試験仕様書.md" && echo "  📄 権限テンプレート単体試験仕様書.md → 04_権限テンプレート単体試験仕様書.md"
    [ -f "単体試験実装完了報告書.md" ] && mv "単体試験実装完了報告書.md" "05_単体試験実装完了報告書.md" && echo "  📄 単体試験実装完了報告書.md → 05_単体試験実装完了報告書.md"
    cd ..
fi

echo -e "\033[0;36m🚀 05_運用フォルダのファイル順序付け...\033[0m"
if [ -d "05_運用" ]; then
    cd 05_運用
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "デプロイ手順.md" ] && mv "デプロイ手順.md" "02_デプロイ手順.md" && echo "  📄 デプロイ手順.md → 02_デプロイ手順.md"
    [ -f "運用手順書.md" ] && mv "運用手順書.md" "03_運用手順書.md" && echo "  📄 運用手順書.md → 03_運用手順書.md"
    [ -f "システム監視・ヘルスチェック機能完成報告書.md" ] && mv "システム監視・ヘルスチェック機能完成報告書.md" "04_システム監視・ヘルスチェック機能完成報告書.md" && echo "  📄 システム監視・ヘルスチェック機能完成報告書.md → 04_システム監視・ヘルスチェック機能完成報告書.md"
    cd ..
fi

echo -e "\033[0;36m🎨 06_デザインフォルダのファイル順序付け...\033[0m"
if [ -d "06_デザイン" ]; then
    cd 06_デザイン
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "レスポンシブデザインガイドライン.md" ] && mv "レスポンシブデザインガイドライン.md" "02_レスポンシブデザインガイドライン.md" && echo "  📄 レスポンシブデザインガイドライン.md → 02_レスポンシブデザインガイドライン.md"
    [ -f "ユニバーサルデザインガイドライン.md" ] && mv "ユニバーサルデザインガイドライン.md" "03_ユニバーサルデザインガイドライン.md" && echo "  📄 ユニバーサルデザインガイドライン.md → 03_ユニバーサルデザインガイドライン.md"
    [ -f "レスポンシブデザイン改善提案書.md" ] && mv "レスポンシブデザイン改善提案書.md" "04_レスポンシブデザイン改善提案書.md" && echo "  📄 レスポンシブデザイン改善提案書.md → 04_レスポンシブデザイン改善提案書.md"
    [ -f "レスポンシブ共通コンポーネント化による対策量削減案.md" ] && mv "レスポンシブ共通コンポーネント化による対策量削減案.md" "05_レスポンシブ共通コンポーネント化による対策量削減案.md" && echo "  📄 レスポンシブ共通コンポーネント化による対策量削減案.md → 05_レスポンシブ共通コンポーネント化による対策量削減案.md"
    [ -f "レスポンシブ対応実装ガイドライン.md" ] && mv "レスポンシブ対応実装ガイドライン.md" "06_レスポンシブ対応実装ガイドライン.md" && echo "  📄 レスポンシブ対応実装ガイドライン.md → 06_レスポンシブ対応実装ガイドライン.md"
    [ -f "システムUI改善分析レポート.md" ] && mv "システムUI改善分析レポート.md" "07_システムUI改善分析レポート.md" && echo "  📄 システムUI改善分析レポート.md → 07_システムUI改善分析レポート.md"
    cd ..
fi

echo -e "\033[0;36m📚 07_ガイドフォルダのファイル順序付け...\033[0m"
if [ -d "07_ガイド" ]; then
    cd 07_ガイド
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"
    [ -f "開発ガイド.md" ] && mv "開発ガイド.md" "02_開発ガイド.md" && echo "  📄 開発ガイド.md → 02_開発ガイド.md"
    [ -f "開発ガイドライン.md" ] && mv "開発ガイドライン.md" "03_開発ガイドライン.md" && echo "  📄 開発ガイドライン.md → 03_開発ガイドライン.md"
    [ -f "継続的改善プロセス運用ガイドライン.md" ] && mv "継続的改善プロセス運用ガイドライン.md" "04_継続的改善プロセス運用ガイドライン.md" && echo "  📄 継続的改善プロセス運用ガイドライン.md → 04_継続的改善プロセス運用ガイドライン.md"
    [ -f "機能追加改善チェックリスト.md" ] && mv "機能追加改善チェックリスト.md" "05_機能追加改善チェックリスト.md" && echo "  📄 機能追加改善チェックリスト.md → 05_機能追加改善チェックリスト.md"
    [ -f "実装リスク管理計画書.md" ] && mv "実装リスク管理計画書.md" "06_実装リスク管理計画書.md" && echo "  📄 実装リスク管理計画書.md → 06_実装リスク管理計画書.md"
    [ -f "性能テスト詳細計画書.md" ] && mv "性能テスト詳細計画書.md" "07_性能テスト詳細計画書.md" && echo "  📄 性能テスト詳細計画書.md → 07_性能テスト詳細計画書.md"
    cd ..
fi

echo -e "\033[0;36m📊 08_報告フォルダのファイル順序付け...\033[0m"
if [ -d "08_報告" ]; then
    cd 08_報告
    [ -f "概要.md" ] && mv "概要.md" "01_概要.md" && echo "  📄 概要.md → 01_概要.md"

    # Phase関連レポート（時系列順）
    [ -f "Phase1実装完了・次期展開計画書.md" ] && mv "Phase1実装完了・次期展開計画書.md" "02_Phase1実装完了・次期展開計画書.md" && echo "  📄 Phase1実装完了・次期展開計画書.md → 02_Phase1実装完了・次期展開計画書.md"
    [ -f "Phase2実装完了・高度品質保証基盤稼働レポート.md" ] && mv "Phase2実装完了・高度品質保証基盤稼働レポート.md" "03_Phase2実装完了・高度品質保証基盤稼働レポート.md" && echo "  📄 Phase2実装完了・高度品質保証基盤稼働レポート.md → 03_Phase2実装完了・高度品質保証基盤稼働レポート.md"
    [ -f "Phase3実装計画・技術仕様書.md" ] && mv "Phase3実装計画・技術仕様書.md" "04_Phase3実装計画・技術仕様書.md" && echo "  📄 Phase3実装計画・技術仕様書.md → 04_Phase3実装計画・技術仕様書.md"
    [ -f "Phase3メイン機能実装完了レポート.md" ] && mv "Phase3メイン機能実装完了レポート.md" "05_Phase3メイン機能実装完了レポート.md" && echo "  📄 Phase3メイン機能実装完了レポート.md → 05_Phase3メイン機能実装完了レポート.md"

    # プロジェクト管理関連
    [ -f "プロジェクトステータスボード.md" ] && mv "プロジェクトステータスボード.md" "10_プロジェクトステータスボード.md" && echo "  📄 プロジェクトステータスボード.md → 10_プロジェクトステータスボード.md"
    [ -f "プロジェクト総合サマリー.md" ] && mv "プロジェクト総合サマリー.md" "11_プロジェクト総合サマリー.md" && echo "  📄 プロジェクト総合サマリー.md → 11_プロジェクト総合サマリー.md"
    [ -f "プロジェクト完成報告書.md" ] && mv "プロジェクト完成報告書.md" "12_プロジェクト完成報告書.md" && echo "  📄 プロジェクト完成報告書.md → 12_プロジェクト完成報告書.md"

    # ドキュメント管理関連
    [ -f "ドキュメント総合レビュー結果・改善計画書.md" ] && mv "ドキュメント総合レビュー結果・改善計画書.md" "20_ドキュメント総合レビュー結果・改善計画書.md" && echo "  📄 ドキュメント総合レビュー結果・改善計画書.md → 20_ドキュメント総合レビュー結果・改善計画書.md"
    [ -f "ドキュメント改善実施進捗レポート.md" ] && mv "ドキュメント改善実施進捗レポート.md" "21_ドキュメント改善実施進捗レポート.md" && echo "  📄 ドキュメント改善実施進捗レポート.md → 21_ドキュメント改善実施進捗レポート.md"
    [ -f "ドキュメント総合レビュー最新化・全Phase完了報告.md" ] && mv "ドキュメント総合レビュー最新化・全Phase完了報告.md" "22_ドキュメント総合レビュー最新化・全Phase完了報告.md" && echo "  📄 ドキュメント総合レビュー最新化・全Phase完了報告.md → 22_ドキュメント総合レビュー最新化・全Phase完了報告.md"
    [ -f "ドキュメント構成分析・整理提案書.md" ] && mv "ドキュメント構成分析・整理提案書.md" "23_ドキュメント構成分析・整理提案書.md" && echo "  📄 ドキュメント構成分析・整理提案書.md → 23_ドキュメント構成分析・整理提案書.md"
    [ -f "ドキュメント更新多角的レビュー結果.md" ] && mv "ドキュメント更新多角的レビュー結果.md" "24_ドキュメント更新多角的レビュー結果.md" && echo "  📄 ドキュメント更新多角的レビュー結果.md → 24_ドキュメント更新多角的レビュー結果.md"

    # システム・品質分析関連
    [ -f "システム総合ステータスレポート2025-09-26.md" ] && mv "システム総合ステータスレポート2025-09-26.md" "30_システム総合ステータスレポート2025-09-26.md" && echo "  📄 システム総合ステータスレポート2025-09-26.md → 30_システム総合ステータスレポート2025-09-26.md"
    [ -f "不具合管理表.md" ] && mv "不具合管理表.md" "31_不具合管理表.md" && echo "  📄 不具合管理表.md → 31_不具合管理表.md"
    [ -f "実装設計差異分析報告書.md" ] && mv "実装設計差異分析報告書.md" "32_実装設計差異分析報告書.md" && echo "  📄 実装設計差異分析報告書.md → 32_実装設計差異分析報告書.md"
    [ -f "システム性能分析レポート.md" ] && mv "システム性能分析レポート.md" "33_システム性能分析レポート.md" && echo "  📄 システム性能分析レポート.md → 33_システム性能分析レポート.md"

    cd ..
fi

echo -e "\033[0;34m📋 各フォルダの概要.md更新...\033[0m"

# 01_基本フォルダの概要.md更新
cat > 01_基本/01_概要.md << 'EOF'
# 📖 01_基本ドキュメント

## 概要
WebSysプロジェクトの基本情報集。プロジェクト概要・環境構築・トラブルシューティングなどの基礎資料。

## 📚 読み順ガイド

### ステップ1: 基本理解
1. [技術仕様統一](02_技術仕様統一.md) - Single Source of Truth
2. [環境構築手順](03_環境構築手順.md) - 開発環境セットアップ手順
3. [ドキュメント読み順](04_ドキュメント読み順.md) - ドキュメント学習順序

### ステップ2: 問題解決
4. [トラブルシューティング](05_トラブルシューティング.md) - 問題解決・FAQ

## クイックリンク
- [システム設計](../02_設計/) - アーキテクチャ・API仕様
- [機能設計](../03_機能/) - 機能別詳細設計
- [開発ガイド](../07_ガイド/) - 開発・運用ガイドライン
EOF

# 02_設計フォルダの概要.md更新
cat > 02_設計/01_概要.md << 'EOF'
# 🏗️ 02_設計ドキュメント

## 概要
WebSysプロジェクトのシステム設計・アーキテクチャドキュメント集。API仕様・コンポーネント設計・システム概要。

## 📚 読み順ガイド

### ステップ1: システム理解
1. [システム概要](02_システム概要.md) - プロジェクト全体構成
2. [システム設計](03_システム設計.md) - 詳細設計・アーキテクチャ

### ステップ2: 技術仕様
3. [API仕様書](04_API仕様書.md) - RESTful API仕様
4. [コンポーネント仕様書](05_コンポーネント仕様書.md) - UIコンポーネント仕様
5. [共通コンポーネント仕様](06_共通コンポーネント仕様.md) - 共通部品仕様

## クイックリンク
- [基本情報](../01_基本/) - プロジェクト概要・環境構築
- [機能設計](../03_機能/) - 機能別詳細設計
- [試験](../04_試験/) - テスト仕様・試験結果
EOF

# 03_機能フォルダの概要.md更新
cat > 03_機能/01_概要.md << 'EOF'
# 🔧 03_機能ドキュメント

## 概要
WebSysプロジェクトの機能設計・仕様ドキュメント集。各機能の詳細設計・ワークフロー・企業向け機能。

## 📚 読み順ガイド

### ステップ1: 共通機能理解
1. [企業システム共通機能仕様](02_企業システム共通機能仕様.md) - 企業向け共通機能
2. [複数プロジェクト共有機能設計書](03_複数プロジェクト共有機能設計書.md) - マルチプロジェクト対応

### ステップ2: 特定機能設計
3. [申請承認ワークフロー機能設計書](04_申請承認ワークフロー機能設計書.md) - ワークフロー機能
4. [API設計書テンプレート](05_API設計書テンプレート.md) - API設計テンプレート

### ステップ3: 詳細機能設計
5. [機能設計書](06_機能設計書/) - 各機能の詳細設計書集

## クイックリンク
- [設計](../02_設計/) - システム設計・アーキテクチャ
- [試験](../04_試験/) - テスト仕様・試験結果
- [ガイド](../07_ガイド/) - 開発・実装ガイドライン
EOF

# 04_試験フォルダの概要.md更新
cat > 04_試験/01_概要.md << 'EOF'
# 🧪 04_試験ドキュメント

## 概要
WebSysプロジェクトのテスト・試験関連ドキュメント集。テスト仕様・実行結果・単体試験。

## 📚 読み順ガイド

### ステップ1: テスト計画
1. [テスト仕様書](02_テスト仕様書.md) - 全体テスト仕様
2. [テスト実行報告書](03_テスト実行報告書.md) - テスト実行結果

### ステップ2: 詳細テスト
3. [権限テンプレート単体試験仕様書](04_権限テンプレート単体試験仕様書.md) - 権限テンプレート試験
4. [単体試験実装完了報告書](05_単体試験実装完了報告書.md) - 単体試験結果

## クイックリンク
- [機能設計](../03_機能/) - 機能別詳細設計
- [設計](../02_設計/) - システム設計・アーキテクチャ
- [報告](../08_報告/) - 品質・性能レポート
EOF

# 05_運用フォルダの概要.md更新
cat > 05_運用/01_概要.md << 'EOF'
# 🚀 05_運用ドキュメント

## 概要
WebSysプロジェクトの運用・デプロイ関連ドキュメント集。デプロイ手順・運用手順・監視設定。

## 📚 読み順ガイド

### ステップ1: デプロイ準備
1. [デプロイ手順](02_デプロイ手順.md) - システムデプロイ手順
2. [運用手順書](03_運用手順書.md) - 日常運用手順

### ステップ2: 監視・保守
3. [システム監視・ヘルスチェック機能完成報告書](04_システム監視・ヘルスチェック機能完成報告書.md) - 監視機能

## クイックリンク
- [基本情報](../01_基本/) - 環境構築・トラブルシューティング
- [設計](../02_設計/) - システム設計・アーキテクチャ
- [報告](../08_報告/) - システム状況・性能レポート
EOF

# 06_デザインフォルダの概要.md更新
cat > 06_デザイン/01_概要.md << 'EOF'
# 🎨 06_デザインドキュメント

## 概要
WebSysプロジェクトのUI・UXデザイン関連ドキュメント集。レスポンシブ対応・デザインガイドライン・UI改善。

## 📚 読み順ガイド

### ステップ1: デザイン基礎
1. [レスポンシブデザインガイドライン](02_レスポンシブデザインガイドライン.md) - レスポンシブ設計
2. [ユニバーサルデザインガイドライン](03_ユニバーサルデザインガイドライン.md) - アクセシビリティ

### ステップ2: 改善・最適化
3. [レスポンシブデザイン改善提案書](04_レスポンシブデザイン改善提案書.md) - UI改善提案
4. [レスポンシブ共通コンポーネント化による対策量削減案](05_レスポンシブ共通コンポーネント化による対策量削減案.md) - コンポーネント最適化
5. [レスポンシブ対応実装ガイドライン](06_レスポンシブ対応実装ガイドライン.md) - 実装ガイド

### ステップ3: 分析・改善
6. [システムUI改善分析レポート](07_システムUI改善分析レポート.md) - UI分析

## クイックリンク
- [設計](../02_設計/) - システム設計・コンポーネント仕様
- [機能](../03_機能/) - 機能設計・UI設計
- [ガイド](../07_ガイド/) - 開発・実装ガイドライン
EOF

# 07_ガイドフォルダの概要.md更新
cat > 07_ガイド/01_概要.md << 'EOF'
# 📚 07_ガイドドキュメント

## 概要
WebSysプロジェクトの開発・運用ガイドライン集。開発手順・ベストプラクティス・改善プロセス。

## 📚 読み順ガイド

### ステップ1: 開発基礎
1. [開発ガイド](02_開発ガイド.md) - 基本開発手順
2. [開発ガイドライン](03_開発ガイドライン.md) - 開発標準・規約

### ステップ2: プロセス・品質管理
3. [継続的改善プロセス運用ガイドライン](04_継続的改善プロセス運用ガイドライン.md) - 改善プロセス
4. [機能追加改善チェックリスト](05_機能追加改善チェックリスト.md) - 品質チェック

### ステップ3: リスク・性能管理
5. [実装リスク管理計画書](06_実装リスク管理計画書.md) - リスク管理
6. [性能テスト詳細計画書](07_性能テスト詳細計画書.md) - 性能テスト

## クイックリンク
- [基本情報](../01_基本/) - 環境構築・トラブルシューティング
- [設計](../02_設計/) - システム設計・アーキテクチャ
- [機能](../03_機能/) - 機能設計・仕様
EOF

# 08_報告フォルダの概要.md更新
cat > 08_報告/01_概要.md << 'EOF'
# 📊 08_報告ドキュメント

## 概要
WebSysプロジェクトの各種レポート・分析ドキュメント集。プロジェクト状況・品質・性能・Phase別報告。

## 📚 読み順ガイド

### Phase別レポート（時系列順）
1. [Phase1実装完了・次期展開計画書](02_Phase1実装完了・次期展開計画書.md) - Phase1完了報告
2. [Phase2実装完了・高度品質保証基盤稼働レポート](03_Phase2実装完了・高度品質保証基盤稼働レポート.md) - Phase2完了報告
3. [Phase3実装計画・技術仕様書](04_Phase3実装計画・技術仕様書.md) - Phase3計画
4. [Phase3メイン機能実装完了レポート](05_Phase3メイン機能実装完了レポート.md) - Phase3完了報告

### プロジェクト管理レポート
10. [プロジェクトステータスボード](10_プロジェクトステータスボード.md) - 現在状況
11. [プロジェクト総合サマリー](11_プロジェクト総合サマリー.md) - 全体サマリー
12. [プロジェクト完成報告書](12_プロジェクト完成報告書.md) - 最終完成報告

### ドキュメント管理レポート
20. [ドキュメント総合レビュー結果・改善計画書](20_ドキュメント総合レビュー結果・改善計画書.md) - レビュー結果
21. [ドキュメント改善実施進捗レポート](21_ドキュメント改善実施進捗レポート.md) - 改善進捗
22. [ドキュメント総合レビュー最新化・全Phase完了報告](22_ドキュメント総合レビュー最新化・全Phase完了報告.md) - 最新レビュー
23. [ドキュメント構成分析・整理提案書](23_ドキュメント構成分析・整理提案書.md) - 構成分析
24. [ドキュメント更新多角的レビュー結果](24_ドキュメント更新多角的レビュー結果.md) - 多角的レビュー

### システム・品質分析レポート
30. [システム総合ステータスレポート2025-09-26](30_システム総合ステータスレポート2025-09-26.md) - システム状況
31. [不具合管理表](31_不具合管理表.md) - BUG管理
32. [実装設計差異分析報告書](32_実装設計差異分析報告書.md) - 差異分析
33. [システム性能分析レポート](33_システム性能分析レポート.md) - 性能分析

## クイックリンク
- [基本情報](../01_基本/) - プロジェクト概要
- [設計](../02_設計/) - システム設計
- [機能](../03_機能/) - 機能設計
EOF

echo -e "\033[0;34m🔗 リンク更新用スクリプト作成...\033[0m"

# リンク更新スクリプト作成
cat > ../update-ordered-links.py << 'EOF'
#!/usr/bin/env python3
import os
import re
import glob

def update_ordered_links():
    """順序コード付きフォルダ名・ファイル名に対応したリンク更新"""

    # フォルダマッピング
    folder_mapping = {
        '基本/': '01_基本/',
        '設計/': '02_設計/',
        '機能/': '03_機能/',
        '試験/': '04_試験/',
        '運用/': '05_運用/',
        'デザイン/': '06_デザイン/',
        'ガイド/': '07_ガイド/',
        '報告/': '08_報告/'
    }

    # ファイルマッピング（基本的なパターン）
    file_mapping = {
        '概要.md': '01_概要.md',
        '技術仕様統一.md': '02_技術仕様統一.md',
        '環境構築手順.md': '03_環境構築手順.md',
        'ドキュメント読み順.md': '04_ドキュメント読み順.md',
        'トラブルシューティング.md': '05_トラブルシューティング.md',
        'システム概要.md': '02_システム概要.md',
        'システム設計.md': '03_システム設計.md',
        'API仕様書.md': '04_API仕様書.md',
        'コンポーネント仕様書.md': '05_コンポーネント仕様書.md',
        '共通コンポーネント仕様.md': '06_共通コンポーネント仕様.md',
        '企業システム共通機能仕様.md': '02_企業システム共通機能仕様.md',
        '複数プロジェクト共有機能設計書.md': '03_複数プロジェクト共有機能設計書.md',
        '申請承認ワークフロー機能設計書.md': '04_申請承認ワークフロー機能設計書.md',
        'API設計書テンプレート.md': '05_API設計書テンプレート.md',
        '機能設計書/': '06_機能設計書/',
        'テスト仕様書.md': '02_テスト仕様書.md',
        'テスト実行報告書.md': '03_テスト実行報告書.md',
        '権限テンプレート単体試験仕様書.md': '04_権限テンプレート単体試験仕様書.md',
        '単体試験実装完了報告書.md': '05_単体試験実装完了報告書.md',
        'デプロイ手順.md': '02_デプロイ手順.md',
        '運用手順書.md': '03_運用手順書.md',
        'レスポンシブデザインガイドライン.md': '02_レスポンシブデザインガイドライン.md',
        'ユニバーサルデザインガイドライン.md': '03_ユニバーサルデザインガイドライン.md',
        '開発ガイド.md': '02_開発ガイド.md',
        '開発ガイドライン.md': '03_開発ガイドライン.md'
    }

    updated_files = []

    # docsフォルダ内の全てのmdファイルを処理
    for md_file in glob.glob('docs/**/*.md', recursive=True):
        try:
            with open(md_file, 'r', encoding='utf-8') as f:
                content = f.read()

            original_content = content

            # フォルダ名リンク更新
            for old_folder, new_folder in folder_mapping.items():
                # 相対パス形式のリンク更新
                content = re.sub(
                    rf'\(\.\./({re.escape(old_folder)}[^)]*)\)',
                    lambda m: f'(../{new_folder}{m.group(1)[len(old_folder):]})',
                    content
                )
                content = re.sub(
                    rf'\(({re.escape(old_folder)}[^)]*)\)',
                    lambda m: f'({new_folder}{m.group(1)[len(old_folder):]})',
                    content
                )

            # ファイル名リンク更新
            for old_file, new_file in file_mapping.items():
                content = re.sub(
                    rf'\[([^\]]+)\]\(([^)]*{re.escape(old_file)})\)',
                    lambda m: f'[{m.group(1)}]({m.group(2).replace(old_file, new_file)})',
                    content
                )

            # 内容が変更された場合のみファイルを更新
            if content != original_content:
                with open(md_file, 'w', encoding='utf-8') as f:
                    f.write(content)
                updated_files.append(md_file)

        except Exception as e:
            print(f"Error processing {md_file}: {e}")

    print(f"Updated links in {len(updated_files)} files:")
    for file in updated_files:
        print(f"  - {file}")

if __name__ == "__main__":
    update_ordered_links()
EOF

chmod +x ../update-ordered-links.py

echo -e "\033[0;32m🎉 ドキュメント順序コード付与完了！\033[0m"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo -e "\033[0;34m📊 変更結果:\033[0m"
echo "  📁 フォルダ順序: 01_基本 → 08_報告（読み順）"
echo "  📄 ファイル順序: 各フォルダ内で論理的読み順に配置"
echo "  📋 概要更新: 読み順ガイド付き概要.md作成"

echo -e "\033[0;34m📂 新しい順序付きフォルダ構成:\033[0m"
echo "  📖 01_基本/          - プロジェクト理解の出発点"
echo "  🏗️ 02_設計/          - システム設計・アーキテクチャ"
echo "  🔧 03_機能/          - 機能設計・仕様詳細"
echo "  🧪 04_試験/          - テスト・品質保証"
echo "  🚀 05_運用/          - デプロイ・運用手順"
echo "  🎨 06_デザイン/      - UI・UX設計指針"
echo "  📚 07_ガイド/        - 開発・運用ガイドライン"
echo "  📊 08_報告/          - プロジェクト報告・分析結果"
echo "  📦 legacy/           - 既存ファイル保管"

echo -e "\033[1;33m📋 次のステップ:\033[0m"
echo "  1. リンク更新: python3 ../update-ordered-links.py"
echo "  2. 動作確認: 各フォルダの順序確認"
echo "  3. Git commit: 順序付け結果をコミット"

echo -e "\033[0;32m✅ 順序コード付与完了 - 学習効率最適化実現！\033[0m"