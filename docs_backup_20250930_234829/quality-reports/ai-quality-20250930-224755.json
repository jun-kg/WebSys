{
  "metadata": {
    "timestamp": "2025-09-30T22:47:55.108441",
    "analyzer": "AIQualityAnalyzer v1.0",
    "ai_enabled": false,
    "total_files": 112
  },
  "content_analysis": {
    "docs/21-不具合管理表.md": {
      "basic_metrics": {
        "lines": 1251,
        "words": 2591,
        "characters": 26223,
        "avg_line_length": 20.961630695443645
      },
      "structure_analysis": {
        "headers": {
          "total": 57,
          "hierarchy": [
            {
              "level": 1,
              "text": "不具合管理表",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "管理方針",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2025-09-25 更新要約",
              "line_number": 9
            },
            {
              "level": 2,
              "text": "不具合一覧",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "BUG-001: ログイン失敗（セッション管理エラー）",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "BUG-002: パスワード認証失敗",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "BUG-003: ユーザー一覧取得失敗",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "BUG-004: 権限管理でのモデル名エラー (水平展開で発見)",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "BUG-005: ログ監視システム画面エラー",
              "line_number": 152
            },
            {
              "level": 3,
              "text": "BUG-006: アラートルール画面エラー",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "BUG-007: 機能管理API・統計API・ユーザー管理APIでのPrismaモデル名エラー (システム全体チェックで発見)",
              "line_number": 237
            },
            {
              "level": 2,
              "text": "水平展開チェック結果",
              "line_number": 321
            },
            {
              "level": 3,
              "text": "Prismaモデル名関連チェック (2025-09-24実施)",
              "line_number": 323
            },
            {
              "level": 2,
              "text": "チェック・修正プロセス",
              "line_number": 348
            },
            {
              "level": 3,
              "text": "1. 不具合発見時",
              "line_number": 350
            },
            {
              "level": 3,
              "text": "2. 修正完了後（必須）",
              "line_number": 356
            },
            {
              "level": 3,
              "text": "3. 水平展開チェック項目",
              "line_number": 362
            },
            {
              "level": 3,
              "text": "4. 再発防止策",
              "line_number": 373
            },
            {
              "level": 2,
              "text": "統計情報",
              "line_number": 381
            },
            {
              "level": 3,
              "text": "BUG-008: 権限テンプレート作成時のPrisma updatedAt エラー",
              "line_number": 424
            },
            {
              "level": 3,
              "text": "BUG-009: 権限テンプレート単体試験での認証失敗",
              "line_number": 485
            },
            {
              "level": 3,
              "text": "BUG-010: 権限テンプレート機能の設計書未記載",
              "line_number": 521
            },
            {
              "level": 3,
              "text": "BUG-004: JWTトークン解析エラーハンドリング不十分 (旧BUG-011と重複)",
              "line_number": 555
            },
            {
              "level": 1,
              "text": "空トークンテスト",
              "line_number": 610
            },
            {
              "level": 1,
              "text": "Result: {\"success\":false,\"error\":{\"code\":\"AUTH_001\",\"message\":\"Authorization header missing\"}}",
              "line_number": 612
            },
            {
              "level": 1,
              "text": "短いトークンテスト",
              "line_number": 614
            },
            {
              "level": 1,
              "text": "Result: {\"success\":false,\"error\":{\"code\":\"TOKEN_MALFORMED\",\"message\":\"トークンの形式が無効です (長さ不正)\"}}",
              "line_number": 616
            },
            {
              "level": 1,
              "text": "無効トークンテスト",
              "line_number": 618
            },
            {
              "level": 1,
              "text": "Result: {\"success\":false,\"error\":{\"code\":\"TOKEN_INVALID\",\"message\":\"トークンが無効です (形式が不正)\"}}",
              "line_number": 620
            },
            {
              "level": 4,
              "text": "対象範囲",
              "line_number": 625
            },
            {
              "level": 4,
              "text": "発見・修正事項",
              "line_number": 631
            },
            {
              "level": 4,
              "text": "動作確認結果",
              "line_number": 647
            },
            {
              "level": 1,
              "text": "改善されたエラーレスポンス確認",
              "line_number": 649
            },
            {
              "level": 1,
              "text": "Result: {\"success\":false,\"error\":{\"code\":\"TOKEN_INVALID\",\"message\":\"トークンが無効です (形式が不正)\"}}",
              "line_number": 651
            },
            {
              "level": 1,
              "text": "WebSocketサービス正常動作確認",
              "line_number": 653
            },
            {
              "level": 1,
              "text": "Result: {\"status\":\"OK\",\"message\":\"Server is running\",\"websocket\":{\"connections\":0}}",
              "line_number": 655
            },
            {
              "level": 4,
              "text": "予防効果",
              "line_number": 658
            },
            {
              "level": 3,
              "text": "BUG-012: レスポンシブデザイン未対応（全画面）",
              "line_number": 674
            },
            {
              "level": 3,
              "text": "BUG-013: ログイン後の画面遷移失敗",
              "line_number": 747
            },
            {
              "level": 3,
              "text": "BUG-014: BizUDGothicフォント読み込みエラー",
              "line_number": 782
            },
            {
              "level": 3,
              "text": "BUG-015: システム監視ページ表示エラー",
              "line_number": 816
            },
            {
              "level": 3,
              "text": "BUG-014: ワークフローメニュー非表示",
              "line_number": 858
            },
            {
              "level": 3,
              "text": "BUG-015: echartsライブラリ未インストール",
              "line_number": 899
            },
            {
              "level": 1,
              "text": "Dockerコンテナ内でのインストール",
              "line_number": 923
            },
            {
              "level": 1,
              "text": "一時的なモック実装",
              "line_number": 926
            },
            {
              "level": 3,
              "text": "BUG-016: dateユーティリティファイル不存在",
              "line_number": 950
            },
            {
              "level": 3,
              "text": "BUG-017: authユーティリティファイル不存在",
              "line_number": 993
            },
            {
              "level": 2,
              "text": "水平展開チェック結果",
              "line_number": 1041
            },
            {
              "level": 3,
              "text": "対象範囲",
              "line_number": 1043
            },
            {
              "level": 3,
              "text": "発見・修正事項",
              "line_number": 1047
            },
            {
              "level": 4,
              "text": "1. 同様のインポートエラー（予防修正）",
              "line_number": 1049
            },
            {
              "level": 4,
              "text": "2. 未使用ライブラリ確認",
              "line_number": 1059
            },
            {
              "level": 4,
              "text": "3. メニュー定義整合性確認",
              "line_number": 1064
            },
            {
              "level": 3,
              "text": "予防効果",
              "line_number": 1070
            },
            {
              "level": 3,
              "text": "システム全体影響分析",
              "line_number": 1078
            },
            {
              "level": 3,
              "text": "BUG-018: Vueレンダリングエラー（ElCardスロット関連）",
              "line_number": 1086
            },
            {
              "level": 3,
              "text": "BUG-019: モバイル表示でメニューが表示されない",
              "line_number": 1128
            }
          ],
          "hierarchy_issues": [
            {
              "line": 625,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 658,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 950,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 19,
          "inline_code": 245,
          "languages": {
            "sql": 1,
            "typescript": 2
          },
          "details": [
            [
              "",
              "Login error: TypeError: Cannot read properties of undefined (reading 'count')\nat AuthService.getActiveSessionCount (/app/src/services/AuthService.ts:251:32)"
            ],
            [
              "sql",
              "UPDATE users SET password = '$2a$10$J12Kbug.Ma43O3AgQU7P8uct7q4.YcS/Spclo5dc1ky2Vp5W8UUfm'\nWHERE username = 'admin';"
            ],
            [
              "",
              "Get users error: TypeError: Cannot read properties of undefined (reading 'findMany')\nServer error: SYS_001"
            ],
            [
              "",
              "GET /api/logs/realtime [500]\nリアルタイム統計エラー: TypeError: Cannot read properties of undefined (reading 'count')\nat LogService.getRealtimeStatistics (/app/src/services/LogService.ts:259:18)"
            ],
            [
              "",
              "GET /api/alert-rules?page=1&pageSize=20 [500]\nアラートルール取得エラー: TypeError: Cannot read properties of undefined (reading 'findMany')\nat AlertRuleController.getAlertRules (/app/src/controllers/AlertRuleController.ts:33:31)"
            ],
            [
              "",
              "GET /api/features [500]\nError fetching features: TypeError: Cannot read properties of undefined (reading 'findMany')\nat /app/src/routes/features.ts:27:43"
            ],
            [
              "",
              "POST /api/permissions/templates [400]\nArgument `updatedAt` is missing"
            ],
            [
              "typescript",
              "// Before\nconst template = await prisma.permission_templates.create({\n  data: {\n    companyId,\n    name,\n    description,\n    category: category || 'CUSTOM',\n    createdBy: user.id,\n    // updatedAt missing\n  }\n})\n\n// After\nconst template = await prisma.permission_templates.create({\n  data: {\n    companyId,\n    name,\n    description,\n    category: category || 'CUSTOM',\n    createdBy: user.id,\n    updatedAt: new Date() // Added\n  }\n})"
            ],
            [
              "",
              "401 Unauthorized\nError: expected 200 \"OK\", got 401 \"Unauthorized\""
            ],
            [
              "typescript",
              "   TOKEN_MISSING: 'トークンが提供されていません'\n   TOKEN_MALFORMED: 'トークンの形式が無効です (長さ不正)'\n   TOKEN_EXPIRED: 'トークンが期限切れです (期限: 詳細時刻)'\n   TOKEN_INVALID: 'トークンが無効です (署名が無効)'\n   TOKEN_PAYLOAD_INVALID: 'トークンのペイロードが不完全です'\n   SESSION_NOT_FOUND: 'セッションが見つかりません'\n   SESSION_INACTIVE: 'セッションが無効化されています'\n   SESSION_EXPIRED: 'セッションが期限切れです (X分前に期限切れ)'\n   USER_NOT_FOUND: 'ユーザーが見つかりません (ユーザーID: X)'\n   USER_INACTIVE: 'ユーザーアカウントが無効になっています'\n   ```\n\n3. **ミドルウェアのステータスコード改善**\n   - エラー種別によるHTTPステータス適切化\n   - システムエラー時の詳細ログ追加\n   - リクエスト情報の記録強化\n\n**修正ファイル:**\n- `src/services/AuthService.ts` - verifyToken()メソッド大幅改善\n- `src/middleware/auth.ts` - エラーハンドリング・ログ強化\n\n**動作確認結果:**\n✅ JWT認証エラーハンドリング改善確認 (2025-09-25)"
            ],
            [
              "",
              "\n**水平展開チェック:** ✅ 完了 (2025-09-25実施)\n\n#### 対象範囲\n- **バックエンド**: 4ファイルのJWT関連処理確認\n- **フロントエンド**: 5ファイルのエラーハンドリング確認\n- **WebSocket認証**: 詳細エラーハンドリング実装\n- **システム全体**: エラーログ記録統一化\n\n#### 発見・修正事項\n1. **WebSocketService認証改善** ✅\n   - JWT認証ミドルウェアの詳細エラーハンドリング実装\n   - WebSocket専用エラーコード追加 (WEBSOCKET_*)\n   - 構造化ログ記録・セキュリティ情報追加\n\n2. **フロントエンドエラーハンドリング強化** ✅\n   - 新エラーコード対応 (10種類追加)\n   - エラーメッセージマッピング改善\n   - ユーザー体験向上 (適切なリダイレクト・メッセージ)\n\n3. **エラーハンドリング標準化ドキュメント作成** ✅\n   - `docs/ERROR_HANDLING_STANDARDS.md` 作成\n   - 統一的エラーコード体系定義\n   - 実装パターン・ベストプラクティス記載\n\n#### 動作確認結果"
            ],
            [
              "",
              "\n#### 予防効果\n- **WebSocket認証エラー**: 6種類のエラーケース事前対応\n- **フロントエンドユーザビリティ**: 15種類のエラーメッセージ改善\n- **開発効率**: 標準化ドキュメントによる統一的実装\n\n**再発防止策:**\n- エラーハンドリングの詳細化を開発標準に追加\n- 認証エラーの分類・メッセージ標準化\n- デバッグ情報の適切な記録\n\n**単体試験追加:**\n- `src/__tests__/auth.test.ts` - 18項目の包括的JWT認証エラーテスト作成\n- エッジケース・境界値・エラー種別の完全カバー\n\n---\n\n### BUG-012: レスポンシブデザイン未対応（全画面）\n\n**発生日時:** 2025-09-27\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**\n- モバイル端末でテーブルの操作列が見えない（横スクロール不可）\n- ダイアログが画面からはみ出る（固定幅500px〜800px）\n- グリッドレイアウトがモバイルで崩れる（ブレークポイント未設定）\n- サイドメニューのモバイル対応が不完全\n\n**原因:**\n1. **テーブルの固定幅列多用**\n   - Users.vue: 10列全て固定幅（合計1,305px）\n   - Companies.vue: 9列全て固定幅（合計1,355px）\n   - Departments.vue: 7列全て固定幅（合計955px）\n2. **操作列のfixed=\"right\"問題**\n   - モバイルでスクロールしても見えない\n3. **ダイアログの固定幅**\n   - 全画面で500px〜800px固定\n4. **グリッドシステムの不適切使用**\n   - 10画面以上で`span`のみ使用\n\n**影響範囲:**\n- **対応済み:** 7画面（Dashboard, LogMonitoring等）\n- **未対応:** 10画面以上（Users, Companies, Departments等）\n\n**対策:**\n1. テーブルコンテナに`overflow-x: auto`追加\n2. 操作列の条件付きfixed設定\n3. ダイアログ幅の動的調整\n4. グリッドシステムのブレークポイント設定\n\n**修正予定ファイル:**\n- `src/views/Users.vue`\n- `src/views/Companies.vue`\n- `src/views/Departments.vue`\n- `src/views/FeatureManagement.vue`\n- `src/views/SystemHealth.vue`\n- その他未対応画面\n\n**水平展開チェック:** ✅ 完了\n- 全Vueファイルのレスポンシブ対応状況調査完了\n- 問題箇所の洗い出し完了（10画面以上で共通パターン発見）\n- **共通コンポーネント化による根本解決策策定完了**\n\n**対策実装:**\n1. **共通レスポンシブコンポーネント5個**を新規開発\n   - ResponsiveCrudPage（10画面対応）\n   - ResponsiveTable（12画面対応）\n   - ResponsiveDialog（10画面対応）\n   - ResponsiveForm（15画面対応）\n   - ResponsiveGrid（17画面対応）\n\n2. **設計書更新完了**\n   - レスポンシブ対応設計書更新\n   - 共通コンポーネント設計書更新\n   - レスポンシブコンポーネント詳細設計書新規作成\n\n**実装効果:**\n- 個別対応17時間 → 共通化8時間（53%削減）\n- 各画面54行 → 15行（72%削減）\n- 保守性94%向上（17倍 → 1倍）\n\n**再発防止策:**\n- ✅ レスポンシブデザインガイドライン策定完了\n- ✅ 共通コンポーネント化による根本解決\n- ✅ 設計書への反映完了\n- ✅ 実装フェーズ移行完了\n\n---\n\n### BUG-013: ログイン後の画面遷移失敗\n\n**発生日時:** 2025-09-29\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**\n- ログイン成功後も画面が遷移しない\n- `/dashboard` へのリダイレクトが実行されない\n- コンソールに \"Login success: true\" と表示されるが画面は変わらない\n\n**原因:**\n1. Vue Routerのナビゲーションガードでの権限チェックエラー\n2. `loadMenuPermissions()` の実行時エラー\n3. `router.push()` が正常に動作しない\n\n**対策:**\n1. `window.location.href = '/dashboard'` による強制リダイレクト\n2. 権限取得エラーでもログインを続行するように修正\n3. エラーハンドリングの改善\n\n**修正ファイル:**\n- `workspace/frontend/src/views/Login.vue`\n- `workspace/frontend/src/stores/auth.ts`\n\n**水平展開チェック:** ✅ 完了\n- 他のリダイレクト処理の確認: 正常\n- 認証フローの見直し: 完了\n\n**再発防止策:**\n- Vue Routerのナビゲーション処理の標準化\n- 認証後のリダイレクト処理の統一\n\n---\n\n### BUG-014: BizUDGothicフォント読み込みエラー\n\n**発生日時:** 2025-09-29\n**重要度:** 低\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- Google Fontsの古いURLを使用していた\n- フォントファイルのパスが変更されていた\n\n**対策:**\n1. Google Fontsの標準的な@import方式に変更\n2. `@import url('https://fonts.googleapis.com/css2?family=BIZ+UDGothic:wght@400;700&display=swap')` を使用\n\n**修正ファイル:**\n- `workspace/frontend/src/styles/fonts.css`\n\n**水平展開チェック:** ✅ 完了\n- 他のフォント読み込み: 正常\n- CDN依存の確認: 完了\n\n**再発防止策:**\n- 外部リソースのURL管理の改善\n- Google Fontsの公式インポート方法の使用\n\n---\n\n### BUG-015: システム監視ページ表示エラー\n\n**発生日時:** 2025-09-27\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- SystemHealth.vueで存在しない`MemoryCard`アイコンをインポート\n- Element Plusアイコンライブラリに`MemoryCard`アイコンが存在しない\n\n**対策:**\n1. 存在しないアイコン`MemoryCard`を`Cpu`アイコンに変更\n2. メモリ関連表示にはCPUアイコンが適切\n3. BIZ UDゴシック等幅フォントを最優先に設定\n\n**修正ファイル:**\n- `frontend/src/views/SystemHealth.vue` - アイコン変更\n- `frontend/src/App.vue` - フォント優先順位変更\n\n**水平展開チェック:** ✅ 完了\n- 他画面での存在しないアイコンインポート確認: なし\n- Element Plusアイコンライブラリ仕様確認: 293アイコン利用可能\n\n**再発防止策:**\n- Element Plusアイコン使用前の存在確認\n- 公式ドキュメント参照の徹底\n- アイコン選択時の代替案検討\n\n**動作確認結果:**\n✅ システム監視ページ正常表示確認 (2025-09-27)\n- ページアクセス: 正常\n- アイコン表示: Cpuアイコン正常表示\n- フォント: BIZ UDゴシック等幅適用確認\n\n---\n\n### BUG-014: ワークフローメニュー非表示\n\n**発生日時:** 2025-09-27\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**\n- ルーターに定義済みのワークフロー関連メニュー（5機能）がLayout.vueで表示されていない\n- ワークフロー・承認システムへのアクセスができない状態\n\n**原因:**\n- router/index.tsでは以下のワークフロールートが定義済み:\n  - `/workflow-dashboard` - ワークフロー統計\n  - `/workflow-types` - ワークフロータイプ管理\n  - `/workflow-requests` - ワークフロー申請管理\n  - `/approval-process` - 承認処理\n  - `/approval-routes` - 承認ルート管理\n- しかし、Layout.vueのサイドメニューにはこれらのメニュー項目が含まれていない\n\n**対策:**\n1. Layout.vueに「ワークフロー・承認」サブメニューを追加\n2. Operationアイコンと5つのメニュー項目を実装\n3. el-sub-menu構造でグループ化\n\n**修正ファイル:**\n- `src/views/Layout.vue` - サイドメニューにワークフローサブメニュー追加\n- Operationアイコンのインポート追加\n\n**水平展開チェック:** ✅ 完了\n- 他の機能で同様のメニュー定義漏れ確認: なし\n- 全ルート定義とメニュー表示の整合性確認: 正常\n\n**再発防止策:**\n- 新機能追加時のルート定義とメニュー表示の同期チェック\n- 機能完成時のメニューアクセス確認をチェックリストに追加\n\n**動作確認結果:**\n✅ ワークフローメニュー正常表示確認 (2025-09-27)\n\n---\n\n### BUG-015: echartsライブラリ未インストール\n\n**発生日時:** 2025-09-27\n**重要度:** 中\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- WorkflowDashboard.vueでechartsライブラリを使用\n- フロントエンドプロジェクトにechartsがインストールされていない\n- Docker環境とローカル環境の依存関係不整合\n\n**対策:**\n1. Dockerコンテナ内でechartsライブラリをインストール\n2. 一時的にechartsモックを実装してエラー回避\n3. チャート描画機能は後日実装予定\n\n**修正内容:**"
            ],
            [
              "",
              "\n**修正ファイル:**\n- `package.json` - echartsライブラリ追加\n- `src/views/WorkflowDashboard.vue` - echartsモック実装\n\n**水平展開チェック:** ✅ 完了\n- 他のVueファイルでのecharts使用確認: なし\n- 他の未インストールライブラリ確認: なし\n\n**再発防止策:**\n- 新規ライブラリ使用時の事前インストール確認\n- package.jsonとimport文の整合性チェック\n\n---\n\n### BUG-016: dateユーティリティファイル不存在\n\n**発生日時:** 2025-09-27\n**重要度:** 中\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- WorkflowDashboard.vueで`formatDate`関数をインポート\n- `/src/utils/date.ts`ファイルが存在しない\n- 日付フォーマット用ユーティリティファイル未実装\n\n**対策:**\n1. `/src/utils/date.ts`ファイルを新規作成\n2. 包括的な日付ユーティリティ関数を実装\n3. `formatDate`, `formatDateTime`などの関数を提供\n\n**実装した機能:**\n- `formatDate()` - 基本的な日付フォーマット（複数パターン対応）\n- `formatDateTime()` - 日時フォーマット専用\n- `getRelativeTime()` - 相対時間表示（○分前など）\n- `formatDateRange()` - 日付範囲フォーマット\n- `getToday()`, `getDaysAgo()` - 便利な日付取得\n- `isValidDate()` - 日付バリデーション\n\n**修正ファイル:**\n- `src/utils/date.ts` - 新規作成（110行）\n\n**水平展開チェック:** ✅ 完了\n- 他のファイルでの日付フォーマット関数使用確認: 2ファイルで同様のインポート発見\n- WorkflowTypes.vueでも`formatDateTime`を使用: 対応済み\n\n**再発防止策:**\n- ユーティリティファイル作成時の共通関数整備\n- import文使用前のファイル存在確認\n\n---\n\n### BUG-017: authユーティリティファイル不存在\n\n**発生日時:** 2025-09-27\n**重要度:** 中\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- WorkflowTypes.vueで`hasPermission`関数をインポート\n- `/src/utils/auth.ts`ファイルが存在しない\n- `hasPermission`は`stores/auth.ts`で定義済みだが、utils形式でエクスポートされていない\n\n**対策:**\n1. `/src/utils/auth.ts`ファイルを新規作成\n2. 認証・権限関連のユーティリティ関数を実装\n3. `stores/auth.ts`をラップする形で関数を提供\n\n**実装した機能:**\n- `hasPermission()` - 権限チェック（メイン関数）\n- `isAdmin()`, `isManager()` - ロール確認\n- `getCurrentUser()`, `getDisplayName()` - ユーザー情報取得\n- `hasRole()`, `hasAnyRole()` - ロール判定\n- `isSameCompany()`, `isSameDepartment()` - 組織判定\n- その他認証・権限関連ユーティリティ15個\n\n**修正ファイル:**\n- `src/utils/auth.ts` - 新規作成（115行）\n\n**水平展開チェック:** ✅ 完了\n- 他のファイルでの権限チェック関数使用確認: 6ファイルで`hasPermission`インポート発見\n  - ApprovalRoutes.vue\n  - WorkflowRequests.vue\n  - WorkflowTypes.vue\n  - InheritanceVisualization.vue\n  - api/permissions.ts\n- 全ファイルで同じインポート形式使用: 対応済み\n\n**再発防止策:**\n- ストア関数のユーティリティ化標準化\n- 権限チェック関数の統一的な使用ガイドライン作成\n\n---\n\n## 水平展開チェック結果\n\n### 対象範囲\n- **フロントエンド**: src/ 配下の全Vueファイル・TypeScriptファイル\n- **インポート文**: @/utils/*, echarts, 日付・認証関連関数\n\n### 発見・修正事項\n\n#### 1. 同様のインポートエラー（予防修正）\n✅ **6ファイルで`hasPermission`インポート使用確認**\n- 全ファイルで同じインポート形式: `import { hasPermission } from '@/utils/auth'`\n- utils/auth.ts作成により全て解決\n\n✅ **2ファイルで日付フォーマット関数使用確認**\n- WorkflowDashboard.vue: `formatDate`\n- WorkflowTypes.vue: `formatDate`, `formatDateTime`\n- utils/date.ts作成により全て解決\n\n#### 2. 未使用ライブラリ確認\n✅ **echartsライブラリ使用状況**\n- WorkflowDashboard.vueのみで使用\n- 他ファイルでの未インストールライブラリ使用: なし\n\n#### 3. メニュー定義整合性確認\n✅ **ルート定義とメニュー表示の一致確認**\n- router/index.ts定義ルート: 22機能\n- Layout.vueメニュー表示: 22機能（ワークフロー5個追加後）\n- 全機能のメニューアクセス可能\n\n### 予防効果\n- **直接的な不具合修正**: 4件\n- **水平展開で予防した潜在的問題**: 8件\n  - hasPermissionインポートエラー: 5ファイル（予防）\n  - 日付フォーマットエラー: 1ファイル（予防）\n  - メニューアクセス不可: 5機能（予防）\n  - ライブラリインポートエラー: 0件（確認済み）\n\n### システム全体影響分析\n✅ **機能完成度**: 100% 維持（ワークフロー機能追加により機能向上）\n✅ **API稼働率**: 100% 維持\n✅ **テストカバレッジ**: 95% 維持\n✅ **エラー解決率**: 100%（4/4件解決済み）\n\n---\n\n### BUG-018: Vueレンダリングエラー（ElCardスロット関連）\n\n**発生日時:** 2025-09-28\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**"
            ],
            [
              "",
              "\n**原因:**\n- Element Plus の日本語ロケールファイル（`element-plus/dist/locale/ja.mjs`）のインポートエラー\n- `ElConfigProvider` コンポーネントの locale prop に不正な値（undefined/null）が渡されていた\n- Vue のスロットレンダリング処理で null 参照エラーが発生\n\n**対策:**\n1. `App.vue` から `ElConfigProvider` と日本語ロケールのインポートを削除\n2. `main.ts` の Element Plus 初期化から locale オプションを削除\n3. シンプルな `<router-view />` のみの構造に変更\n\n**修正ファイル:**\n- `frontend/src/App.vue` - ElConfigProvider とロケール設定を削除\n- `frontend/src/main.ts` - app.use(ElementPlus) から locale オプションを削除\n\n**水平展開チェック:** ✅ 完了\n- 他のロケール関連設定の確認: なし\n- Element Plus コンポーネントのスロット使用確認: 正常\n- 他の Vue レンダリングエラーの確認: なし\n\n**再発防止策:**\n- ロケールファイルのインポート前に存在確認を実施\n- 外部ライブラリの設定は段階的に追加してテスト\n- エラー発生時は最小構成から段階的に機能追加\n\n---\n\n### BUG-019: モバイル表示でメニューが表示されない\n\n**発生日時:** 2025-09-28\n**重要度:** 高\n**ステータス:** ✅ 解決済み\n\n**症状:**\n- スマホ表示（画面幅768px未満）でサイドメニューが表示されない\n- 画面切り替えができない\n- メニューアクセスが不可能\n\n**原因:**\n- Layout.vue にモバイル対応の実装がない\n- ハンバーガーメニューの実装がない\n- レスポンシブデザインの考慮不足\n\n**対策:**\n1. ハンバーガーメニューの実装\n   - モバイルヘッダーの追加（固定ヘッダー）\n   - ハンバーガーアイコンの実装\n   - スライドイン/アウトサイドバー\n2. レスポンシブ対応の実装\n   - window.innerWidth 監視による自動切り替え\n   - オーバーレイクリックでメニュー閉じる機能\n   - メニュー選択後の自動クローズ\n3. スタイル調整\n   - モバイル時のパディング調整\n   - z-index による適切な重なり順序\n   - スムーズなアニメーション実装\n\n**修正ファイル:**\n- `frontend/src/views/Layout.vue`\n  - テンプレート: モバイルヘッダー、ハンバーガーメニュー追加\n  - スクリプト: isMobile、sidebarVisible の状態管理追加\n  - スタイル: モバイル用CSS、レスポンシブ対応追加\n\n**実装機能:**\n- 768px未満で自動的にモバイル表示に切り替え\n- ハンバーガーメニューでサイドバーの開閉\n- オーバーレイクリックでメニュークローズ\n- ユーザーメニューのモバイル対応\n\n**水平展開チェック:** ✅ 完了\n- 他の画面のレスポンシブ対応状況: 要改善（別タスクで対応）\n- 類似のナビゲーション実装: なし\n- ブレークポイントの統一性: 768px で統一\n\n**追加調査（2025-09-28 12:40）:**\n- ハンバーガーアイコンクリック時にオーバーレイ（暗い表示）は表示される\n- しかし、サイドメニュー自体が表示されない\n- コンソールログでは`toggleSidebar`関数が正常に呼ばれている\n- `sidebarVisible`の状態変更は正常に動作している\n\n**追加対策実施:**\n1. CSS クラス名を `sidebar-hidden` から `sidebar-visible` に変更\n2. モバイルサイドバーの初期状態を `translateX(-100%)` に設定\n3. 表示時に `translateX(0)` を適用するよう修正\n4. サイドバー幅を明示的に `200px !important` で固定\n\n**現在の状況:**\n- オーバーレイは正常に表示・非表示される\n- サイドバー本体が表示されない（原因調査中）\n\n**最終解決策（2025-09-28 12:45）:**\n1. **Element Plus el-aside の問題特定**\n   - el-aside コンポーネントが fixed positioning と正常に動作しない\n   - 複雑なスタイル継承により transform が適用されない\n\n2. **完全リファクタリング実施**\n   - Layout.vue を完全に書き直し\n   - Element Plus el-aside を通常の div に置き換え\n   - モバイル専用サイドバーを独立したコンポーネントとして実装\n   - デスクトップとモバイルで別々のメニュー実装\n\n3. **新しい実装内容**\n   - モバイル: 純粋な div ベースのサイドバー\n   - デスクトップ: Element Plus el-aside（従来通り）\n   - カスタム CSS による完全制御\n   - シンプルなナビゲーション関数\n\n**再発防止策:**\n- 新規画面作成時はモバイルファーストで設計\n- レスポンシブデザインをチェックリストに追加\n- 複数デバイスでの動作確認を必須化\n- CSS transform と position の組み合わせテスト強化\n\n**ナビゲーション問題対応（2025-09-28 13:15）:**\n\n**新規課題:** モバイルメニューからの画面遷移が動作しない\n\n**詳細調査結果:**\n- ハンバーガーメニューは正常に表示される\n- メニュー項目のクリックは検知される\n- しかし、画面遷移（ルーター navigate）が実行されない\n\n**デバッグ強化実施:**\n1. `navigateAndClose` 関数に詳細ログ追加\n2. router.push 実行前後の状態監視\n3. 権限チェック結果の詳細出力\n4. ナビゲーション完了後のルート確認機能追加\n\n**追加されたデバッグ機能:**"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 96.75,
        "sentences": 351,
        "avg_words_per_sentence": 7.38,
        "long_sentences": 38,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 51,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.92
    },
    "docs/12-ユニバーサルデザインガイドライン.md": {
      "basic_metrics": {
        "lines": 591,
        "words": 1345,
        "characters": 13739,
        "avg_line_length": 23.24703891708968
      },
      "structure_analysis": {
        "headers": {
          "total": 34,
          "hierarchy": [
            {
              "level": 1,
              "text": "ユニバーサルデザインガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "フォント設計基準",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "基本フォント設定",
              "line_number": 10
            },
            {
              "level": 4,
              "text": "優先フォントファミリー",
              "line_number": 12
            },
            {
              "level": 4,
              "text": "フォントサイズスケール",
              "line_number": 41
            },
            {
              "level": 4,
              "text": "行間・字間設定",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "UDゴシック詳細設定",
              "line_number": 106
            },
            {
              "level": 4,
              "text": "フォント読み込み設定",
              "line_number": 108
            },
            {
              "level": 4,
              "text": "UDゴシック適用ルール",
              "line_number": 137
            },
            {
              "level": 2,
              "text": "カラーアクセシビリティ",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "色覚アクセシビリティ対応カラーパレット",
              "line_number": 172
            },
            {
              "level": 3,
              "text": "コントラスト比チェック",
              "line_number": 207
            },
            {
              "level": 2,
              "text": "レスポンシブ・アクセシブルレイアウト",
              "line_number": 230
            },
            {
              "level": 3,
              "text": "ブレークポイント設定",
              "line_number": 232
            },
            {
              "level": 3,
              "text": "スペーシング設計",
              "line_number": 265
            },
            {
              "level": 2,
              "text": "共通コンポーネントのUD対応",
              "line_number": 290
            },
            {
              "level": 3,
              "text": "CommonButton UD仕様",
              "line_number": 292
            },
            {
              "level": 3,
              "text": "CommonInput UD仕様",
              "line_number": 367
            },
            {
              "level": 2,
              "text": "アクセシビリティチェックリスト",
              "line_number": 473
            },
            {
              "level": 3,
              "text": "必須対応項目",
              "line_number": 475
            },
            {
              "level": 4,
              "text": "キーボードアクセシビリティ",
              "line_number": 477
            },
            {
              "level": 4,
              "text": "スクリーンリーダー対応",
              "line_number": 484
            },
            {
              "level": 4,
              "text": "色・コントラスト",
              "line_number": 491
            },
            {
              "level": 4,
              "text": "フォント・テキスト",
              "line_number": 497
            },
            {
              "level": 3,
              "text": "チェックツール",
              "line_number": 503
            },
            {
              "level": 2,
              "text": "実装優先順位",
              "line_number": 549
            },
            {
              "level": 3,
              "text": "フェーズ1: 基盤整備",
              "line_number": 551
            },
            {
              "level": 3,
              "text": "フェーズ2: コンポーネント対応",
              "line_number": 557
            },
            {
              "level": 3,
              "text": "フェーズ3: 高度な機能",
              "line_number": 563
            },
            {
              "level": 3,
              "text": "フェーズ4: 検証・改善",
              "line_number": 569
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 575
            },
            {
              "level": 3,
              "text": "主要成果",
              "line_number": 579
            },
            {
              "level": 3,
              "text": "対象ユーザー",
              "line_number": 585
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 13,
          "inline_code": 26,
          "languages": {
            "css": 9,
            "typescript": 1,
            "vue": 2,
            "javascript": 1
          },
          "details": [
            [
              "css",
              "/* 基本フォント設定 */\n:root {\n  /* メインフォント（本文・UI要素） */\n  --font-family-primary: \"BIZ UDPゴシック\", \"UD デジタル 教科書体\",\n                         \"游ゴシック\", \"Yu Gothic\", \"游ゴシック体\",\n                         \"Hiragino Sans\", \"メイリオ\", \"Meiryo\",\n                         \"MS Pゴシック\", \"Helvetica Neue\",\n                         \"Arial\", sans-serif;\n\n  /* 見出し用フォント */\n  --font-family-heading: \"BIZ UDPゴシック\", \"UD デジタル 教科書体\",\n                         \"游ゴシック Medium\", \"Yu Gothic Medium\",\n                         \"游ゴシック体\", \"Hiragino Sans\",\n                         \"メイリオ\", \"Meiryo\", \"MS Pゴシック\",\n                         \"Helvetica Neue\", \"Arial\", sans-serif;\n\n  /* 数字・データ表示用 */\n  --font-family-numeric: \"BIZ UDPゴシック\", \"UD デジタル 教科書体\",\n                         \"Consolas\", \"Monaco\", \"Courier New\",\n                         \"游ゴシック\", \"Yu Gothic\", monospace;\n\n  /* 英文用フォント */\n  --font-family-english: \"Helvetica Neue\", \"Arial\", \"Segoe UI\",\n                         \"Roboto\", \"Noto Sans\", sans-serif;\n}"
            ],
            [
              "css",
              ":root {\n  /* 基本サイズ（16px = 1rem） */\n  --font-size-base: 16px;\n\n  /* サイズスケール（1.25倍スケール - Major Third） */\n  --font-size-xs: 0.75rem;    /* 12px - 注釈、ラベル */\n  --font-size-sm: 0.875rem;   /* 14px - 小さなテキスト */\n  --font-size-md: 1rem;       /* 16px - 基本テキスト */\n  --font-size-lg: 1.125rem;   /* 18px - 強調テキスト */\n  --font-size-xl: 1.25rem;    /* 20px - 小見出し */\n  --font-size-2xl: 1.5rem;    /* 24px - 中見出し */\n  --font-size-3xl: 1.875rem;  /* 30px - 大見出し */\n  --font-size-4xl: 2.25rem;   /* 36px - 特大見出し */\n\n  /* アクセシビリティ対応サイズ */\n  --font-size-accessible-min: 1.125rem; /* 18px - 最小推奨サイズ */\n  --font-size-accessible-preferred: 1.25rem; /* 20px - 推奨サイズ */\n}\n\n/* フォントサイズユーティリティクラス */\n.text-xs { font-size: var(--font-size-xs); }\n.text-sm { font-size: var(--font-size-sm); }\n.text-md { font-size: var(--font-size-md); }\n.text-lg { font-size: var(--font-size-lg); }\n.text-xl { font-size: var(--font-size-xl); }\n.text-2xl { font-size: var(--font-size-2xl); }\n.text-3xl { font-size: var(--font-size-3xl); }\n.text-4xl { font-size: var(--font-size-4xl); }\n\n/* アクセシビリティ対応 */\n.text-accessible { font-size: var(--font-size-accessible-preferred); }\n.text-accessible-min { font-size: var(--font-size-accessible-min); }"
            ],
            [
              "css",
              ":root {\n  /* 行間（line-height） */\n  --line-height-tight: 1.2;     /* 見出し用 */\n  --line-height-normal: 1.5;    /* 本文用（推奨） */\n  --line-height-relaxed: 1.75;  /* 読みやすさ重視 */\n  --line-height-loose: 2;       /* 高齢者・視覚障害者向け */\n\n  /* 字間（letter-spacing） */\n  --letter-spacing-tight: -0.025em;\n  --letter-spacing-normal: 0;\n  --letter-spacing-wide: 0.025em;  /* 日本語推奨 */\n  --letter-spacing-wider: 0.05em;  /* アクセシビリティ向上 */\n}\n\n/* 行間ユーティリティ */\n.leading-tight { line-height: var(--line-height-tight); }\n.leading-normal { line-height: var(--line-height-normal); }\n.leading-relaxed { line-height: var(--line-height-relaxed); }\n.leading-loose { line-height: var(--line-height-loose); }\n\n/* 字間ユーティリティ */\n.tracking-tight { letter-spacing: var(--letter-spacing-tight); }\n.tracking-normal { letter-spacing: var(--letter-spacing-normal); }\n.tracking-wide { letter-spacing: var(--letter-spacing-wide); }\n.tracking-wider { letter-spacing: var(--letter-spacing-wider); }"
            ],
            [
              "css",
              "/* Google Fonts経由でのUDフォント読み込み */\n@import url('https://fonts.googleapis.com/css2?family=BIZ+UDPGothic:wght@400;700&display=swap');\n\n/* フォールバック用のローカルフォント */\n@font-face {\n  font-family: 'UD Gothic';\n  src: local('BIZ UDPゴシック Regular'),\n       local('BIZ-UDPGothic-Regular'),\n       local('UD デジタル 教科書体 N-R'),\n       local('UDDigiKyokashoN-R');\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'UD Gothic';\n  src: local('BIZ UDPゴシック Bold'),\n       local('BIZ-UDPGothic-Bold'),\n       local('UD デジタル 教科書体 N-B'),\n       local('UDDigiKyokashoN-B');\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}"
            ],
            [
              "css",
              "/* 全体の基本設定 */\n* {\n  font-family: var(--font-family-primary);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n/* 日本語テキスト最適化 */\n.text-ja {\n  font-family: var(--font-family-primary);\n  letter-spacing: var(--letter-spacing-wide);\n  line-height: var(--line-height-normal);\n}\n\n/* 見出し最適化 */\nh1, h2, h3, h4, h5, h6 {\n  font-family: var(--font-family-heading);\n  font-weight: 700;\n  letter-spacing: var(--letter-spacing-wide);\n  line-height: var(--line-height-tight);\n}\n\n/* 数字・データ表示最適化 */\n.text-numeric {\n  font-family: var(--font-family-numeric);\n  font-variant-numeric: tabular-nums;\n  letter-spacing: var(--letter-spacing-normal);\n}"
            ],
            [
              "css",
              ":root {\n  /* メインカラー（色覚バリアフリー対応） */\n  --color-primary: #0066CC;      /* 青（判別しやすい） */\n  --color-secondary: #6B46C1;    /* 紫（区別可能） */\n  --color-accent: #DC2626;       /* 赤（警告用） */\n\n  /* 成功・警告・エラー（WCAG準拠） */\n  --color-success: #059669;      /* 緑（コントラスト比4.5:1以上） */\n  --color-warning: #D97706;      /* オレンジ（色覚障害者でも判別可能） */\n  --color-error: #DC2626;        /* 赤（十分なコントラスト） */\n  --color-info: #0284C7;         /* 水色（情報表示用） */\n\n  /* グレースケール（十分なコントラスト確保） */\n  --color-gray-50: #F9FAFB;      /* 背景用 */\n  --color-gray-100: #F3F4F6;     /* 軽い背景 */\n  --color-gray-200: #E5E7EB;     /* ボーダー用 */\n  --color-gray-300: #D1D5DB;     /* 非活性要素 */\n  --color-gray-400: #9CA3AF;     /* プレースホルダー */\n  --color-gray-500: #6B7280;     /* 補助テキスト */\n  --color-gray-600: #4B5563;     /* 通常テキスト */\n  --color-gray-700: #374151;     /* 強調テキスト */\n  --color-gray-800: #1F2937;     /* 見出し */\n  --color-gray-900: #111827;     /* 最も強いテキスト */\n\n  /* コントラスト比確保用 */\n  --color-text-high-contrast: var(--color-gray-900);\n  --color-text-medium-contrast: var(--color-gray-700);\n  --color-text-low-contrast: var(--color-gray-500);\n  --color-bg-high-contrast: var(--color-gray-50);\n}"
            ],
            [
              "css",
              "/* WCAG AAA準拠（コントラスト比7:1以上） */\n.high-contrast {\n  color: var(--color-gray-900);\n  background-color: var(--color-gray-50);\n}\n\n/* WCAG AA準拠（コントラスト比4.5:1以上） */\n.normal-contrast {\n  color: var(--color-gray-700);\n  background-color: var(--color-gray-100);\n}\n\n/* 大きな文字用（コントラスト比3:1以上） */\n.large-text-contrast {\n  color: var(--color-gray-600);\n  background-color: var(--color-gray-50);\n  font-size: var(--font-size-accessible-preferred);\n}"
            ],
            [
              "css",
              ":root {\n  /* モバイルファースト設計 */\n  --breakpoint-xs: 320px;   /* 小型スマートフォン */\n  --breakpoint-sm: 640px;   /* スマートフォン */\n  --breakpoint-md: 768px;   /* タブレット */\n  --breakpoint-lg: 1024px;  /* デスクトップ */\n  --breakpoint-xl: 1280px;  /* 大型デスクトップ */\n  --breakpoint-2xl: 1536px; /* 超大型ディスプレイ */\n}\n\n/* レスポンシブフォントサイズ */\n@media (max-width: 640px) {\n  :root {\n    --font-size-base: 14px; /* モバイルでは基準サイズを小さく */\n  }\n}\n\n@media (min-width: 1024px) {\n  :root {\n    --font-size-base: 16px; /* デスクトップでは標準サイズ */\n  }\n}\n\n@media (min-width: 1280px) {\n  :root {\n    --font-size-base: 18px; /* 大画面では読みやすいサイズ */\n  }\n}"
            ],
            [
              "css",
              ":root {\n  /* 8pxベーススケール（タッチ操作に適した間隔） */\n  --spacing-0: 0;\n  --spacing-1: 0.25rem;  /* 4px */\n  --spacing-2: 0.5rem;   /* 8px */\n  --spacing-3: 0.75rem;  /* 12px */\n  --spacing-4: 1rem;     /* 16px */\n  --spacing-5: 1.25rem;  /* 20px */\n  --spacing-6: 1.5rem;   /* 24px */\n  --spacing-8: 2rem;     /* 32px */\n  --spacing-10: 2.5rem;  /* 40px */\n  --spacing-12: 3rem;    /* 48px */\n  --spacing-16: 4rem;    /* 64px */\n  --spacing-20: 5rem;    /* 80px */\n\n  /* タッチターゲットサイズ（最小44px推奨） */\n  --touch-target-min: 44px;\n  --touch-target-comfortable: 48px;\n  --touch-target-large: 56px;\n}"
            ],
            [
              "typescript",
              "interface CommonButtonUDProps extends CommonButtonProps {\n  // アクセシビリティプロパティ\n  ariaLabel?: string          // スクリーンリーダー用ラベル\n  ariaDescribedBy?: string    // 説明要素のID\n  tabIndex?: number          // タブ順序制御\n\n  // ユニバーサルデザインオプション\n  highContrast?: boolean     // 高コントラストモード\n  largeText?: boolean        // 大文字表示モード\n  touchFriendly?: boolean    // タッチ操作最適化\n}"
            ],
            [
              "vue",
              "<!-- CommonButton UD実装例 -->\n<template>\n  <button\n    :class=\"buttonClasses\"\n    :aria-label=\"ariaLabel || $slots.default\"\n    :aria-describedby=\"ariaDescribedBy\"\n    :tabindex=\"tabIndex\"\n    @click=\"handleClick\"\n    @keydown.enter=\"handleClick\"\n    @keydown.space=\"handleClick\"\n  >\n    <slot />\n  </button>\n</template>\n\n<style scoped>\n.ud-button {\n  /* 基本UD設定 */\n  font-family: var(--font-family-primary);\n  font-size: var(--font-size-accessible-min);\n  line-height: var(--line-height-normal);\n  letter-spacing: var(--letter-spacing-wide);\n\n  /* タッチターゲット */\n  min-height: var(--touch-target-min);\n  min-width: var(--touch-target-min);\n  padding: var(--spacing-3) var(--spacing-6);\n\n  /* アクセシビリティ */\n  border: 2px solid transparent;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.ud-button:focus {\n  outline: 2px solid var(--color-primary);\n  outline-offset: 2px;\n}\n\n.ud-button.high-contrast {\n  color: var(--color-text-high-contrast);\n  background-color: var(--color-bg-high-contrast);\n  border-color: var(--color-gray-900);\n}\n\n.ud-button.large-text {\n  font-size: var(--font-size-accessible-preferred);\n  padding: var(--spacing-4) var(--spacing-8);\n}\n\n.ud-button.touch-friendly {\n  min-height: var(--touch-target-comfortable);\n  min-width: var(--touch-target-comfortable);\n}\n</style>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"ud-input-wrapper\">\n    <label\n      v-if=\"label\"\n      :for=\"inputId\"\n      class=\"ud-input-label\"\n      :class=\"{ 'sr-only': hideLabel }\"\n    >\n      {{ label }}\n      <span v-if=\"required\" class=\"required-indicator\">*</span>\n    </label>\n\n    <input\n      :id=\"inputId\"\n      :type=\"type\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      :aria-label=\"ariaLabel || label\"\n      :aria-describedby=\"errorId\"\n      :aria-invalid=\"hasError\"\n      class=\"ud-input\"\n      :class=\"inputClasses\"\n      @input=\"handleInput\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n    />\n\n    <div\n      v-if=\"hasError && errorMessage\"\n      :id=\"errorId\"\n      class=\"ud-input-error\"\n      role=\"alert\"\n      aria-live=\"polite\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ud-input {\n  font-family: var(--font-family-primary);\n  font-size: var(--font-size-accessible-min);\n  line-height: var(--line-height-normal);\n  letter-spacing: var(--letter-spacing-wide);\n\n  /* サイズ・スペーシング */\n  width: 100%;\n  min-height: var(--touch-target-min);\n  padding: var(--spacing-3) var(--spacing-4);\n\n  /* 視覚デザイン */\n  border: 2px solid var(--color-gray-300);\n  border-radius: 4px;\n  background-color: var(--color-gray-50);\n\n  /* アクセシビリティ */\n  transition: border-color 0.2s ease, box-shadow 0.2s ease;\n}\n\n.ud-input:focus {\n  outline: none;\n  border-color: var(--color-primary);\n  box-shadow: 0 0 0 3px rgba(6, 102, 204, 0.1);\n}\n\n.ud-input.error {\n  border-color: var(--color-error);\n}\n\n.ud-input-label {\n  display: block;\n  font-weight: 600;\n  margin-bottom: var(--spacing-2);\n  color: var(--color-text-high-contrast);\n}\n\n.ud-input-error {\n  margin-top: var(--spacing-2);\n  font-size: var(--font-size-sm);\n  color: var(--color-error);\n}\n\n.required-indicator {\n  color: var(--color-error);\n  margin-left: var(--spacing-1);\n}\n\n/* スクリーンリーダー専用（視覚的に隠す） */\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n</style>"
            ],
            [
              "javascript",
              "// アクセシビリティチェック用スクリプト\nclass AccessibilityChecker {\n  static checkFontSize() {\n    const elements = document.querySelectorAll('*')\n    const violations = []\n\n    elements.forEach(el => {\n      const fontSize = parseFloat(window.getComputedStyle(el).fontSize)\n      if (fontSize < 16 && el.textContent.trim()) {\n        violations.push({\n          element: el,\n          fontSize: fontSize,\n          message: `フォントサイズが16px未満です: ${fontSize}px`\n        })\n      }\n    })\n\n    return violations\n  }\n\n  static checkContrastRatio() {\n    // コントラスト比チェックロジック\n    // WebAIM Contrast Checker API等を使用\n  }\n\n  static checkKeyboardAccess() {\n    // キーボードアクセシビリティチェック\n    const interactiveElements = document.querySelectorAll(\n      'button, a, input, select, textarea, [tabindex]'\n    )\n\n    return Array.from(interactiveElements).filter(el => {\n      return el.tabIndex < 0 ||\n             (el.offsetWidth === 0 && el.offsetHeight === 0)\n    })\n  }\n}\n\n// 使用例\nconsole.log('フォントサイズ違反:', AccessibilityChecker.checkFontSize())\nconsole.log('キーボードアクセス問題:', AccessibilityChecker.checkKeyboardAccess())"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 96.44,
        "sentences": 118,
        "avg_words_per_sentence": 11.4,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.43
    },
    "docs/39-レスポンシブ対応実装ガイドライン.md": {
      "basic_metrics": {
        "lines": 435,
        "words": 808,
        "characters": 7608,
        "avg_line_length": 17.489655172413794
      },
      "structure_analysis": {
        "headers": {
          "total": 42,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブ対応実装ガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 基本原則",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "1. モバイルファースト設計",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "2. 共通コンポーネント優先",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "3. パフォーマンス重視",
              "line_number": 23
            },
            {
              "level": 2,
              "text": "🧩 コンポーネント使用方法",
              "line_number": 30
            },
            {
              "level": 3,
              "text": "新規CRUD画面作成時",
              "line_number": 32
            },
            {
              "level": 4,
              "text": "❌ 従来の方法（禁止）",
              "line_number": 34
            },
            {
              "level": 4,
              "text": "✅ 推奨方法",
              "line_number": 75
            },
            {
              "level": 2,
              "text": "📱 デバイス別対応指針",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "スマートフォン (〜768px)",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "タブレット (768px〜1024px)",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "デスクトップ (1024px〜)",
              "line_number": 148
            },
            {
              "level": 2,
              "text": "🔧 実装パターン集",
              "line_number": 160
            },
            {
              "level": 3,
              "text": "パターン1: 検索付きデータ一覧",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "パターン2: カスタムアクション",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "パターン3: カスタム列表示",
              "line_number": 204
            },
            {
              "level": 2,
              "text": "📏 ブレークポイント活用",
              "line_number": 223
            },
            {
              "level": 3,
              "text": "useResponsive Composable",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "条件付きレンダリング",
              "line_number": 248
            },
            {
              "level": 2,
              "text": "🎨 スタイリングガイドライン",
              "line_number": 268
            },
            {
              "level": 3,
              "text": "CSS Variables活用",
              "line_number": 270
            },
            {
              "level": 3,
              "text": "タッチ対応",
              "line_number": 294
            },
            {
              "level": 2,
              "text": "🧪 テスト要件",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "必須テストデバイス",
              "line_number": 314
            },
            {
              "level": 3,
              "text": "テストチェック項目",
              "line_number": 324
            },
            {
              "level": 2,
              "text": "🚫 禁止事項",
              "line_number": 333
            },
            {
              "level": 3,
              "text": "❌ やってはいけないこと",
              "line_number": 335
            },
            {
              "level": 3,
              "text": "✅ 推奨方法",
              "line_number": 353
            },
            {
              "level": 2,
              "text": "📈 品質指標",
              "line_number": 370
            },
            {
              "level": 3,
              "text": "パフォーマンス",
              "line_number": 372
            },
            {
              "level": 3,
              "text": "アクセシビリティ",
              "line_number": 377
            },
            {
              "level": 3,
              "text": "ユーザビリティ",
              "line_number": 382
            },
            {
              "level": 2,
              "text": "🔄 レビューチェックリスト",
              "line_number": 389
            },
            {
              "level": 3,
              "text": "コードレビュー時",
              "line_number": 391
            },
            {
              "level": 3,
              "text": "デザインレビュー時",
              "line_number": 398
            },
            {
              "level": 2,
              "text": "📚 参考リソース",
              "line_number": 406
            },
            {
              "level": 3,
              "text": "設計書",
              "line_number": 408
            },
            {
              "level": 3,
              "text": "サンプルコード",
              "line_number": 412
            },
            {
              "level": 3,
              "text": "テストツール",
              "line_number": 416
            },
            {
              "level": 2,
              "text": "🎯 まとめ",
              "line_number": 423
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 4,
          "internal": 4,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "レスポンシブ対応設計書",
              "01_機能設計書/05_レスポンシブ対応/"
            ],
            [
              "レスポンシブコンポーネント詳細設計書",
              "01_機能設計書/04_共通コンポーネント/"
            ],
            [
              "ResponsiveCrudPage実装例",
              "samples/ResponsiveCrudPage.vue"
            ],
            [
              "ResponsiveTable実装例",
              "samples/ResponsiveTable.vue"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 15,
          "inline_code": 29,
          "languages": {
            "vue": 10,
            "typescript": 3,
            "scss": 2
          },
          "details": [
            [
              "vue",
              "<template>\n  <div class=\"users-page\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>ユーザー管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">\n            新規追加\n          </el-button>\n        </div>\n      </template>\n\n      <el-form :inline=\"true\" :model=\"searchForm\">\n        <!-- 検索フォーム（20行） -->\n      </el-form>\n\n      <el-table :data=\"tableData\">\n        <!-- テーブル定義（25行） -->\n      </el-table>\n\n      <el-pagination>\n        <!-- ページネーション（5行） -->\n      </el-pagination>\n    </el-card>\n\n    <el-dialog width=\"500px\">\n      <!-- ダイアログ（20行） -->\n    </el-dialog>\n  </div>\n</template>\n\n<style scoped>\n/* レスポンシブCSS（50行） */\n@media (max-width: 768px) {\n  /* モバイル対応 */\n}\n</style>"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage\n    title=\"ユーザー管理\"\n    :columns=\"userColumns\"\n    :data=\"users\"\n    :total=\"total\"\n    :loading=\"loading\"\n    @add=\"addUser\"\n    @edit=\"editUser\"\n    @delete=\"deleteUser\"\n  >\n    <template #search>\n      <el-input\n        v-model=\"searchQuery\"\n        placeholder=\"検索...\"\n        clearable\n      />\n    </template>\n\n    <template #dialog-content>\n      <ResponsiveForm :model=\"userForm\" :rules=\"userRules\">\n        <el-form-item label=\"名前\" prop=\"name\">\n          <el-input v-model=\"userForm.name\" />\n        </el-form-item>\n      </ResponsiveForm>\n    </template>\n  </ResponsiveCrudPage>\n</template>\n\n<script setup lang=\"ts\">\n// 設定のみ（10行程度）\nconst userColumns = ref([\n  { prop: 'name', label: '名前', minWidth: 150, important: true },\n  { prop: 'email', label: 'メール', minWidth: 200 }\n])\n</script>"
            ],
            [
              "typescript",
              "// 表示優先度設定\nconst columns = [\n  { prop: 'name', label: '名前', important: true },      // 必須表示\n  { prop: 'email', label: 'メール', important: false },  // 非表示OK\n  { prop: 'status', label: '状態', important: true }     // 必須表示\n]\n\n// フォームレイアウト\n<ResponsiveForm>  <!-- 自動で縦積みに変更 -->\n  <el-form-item label=\"長いラベル名\">\n    <el-input />\n  </el-form-item>\n</ResponsiveForm>"
            ],
            [
              "vue",
              "<!-- グリッドレイアウト -->\n<ResponsiveGrid>\n  <ResponsiveCol :tablet=\"12\" :desktop=\"6\">\n    <!-- タブレットで2列、デスクトップで4列 -->\n  </ResponsiveCol>\n</ResponsiveGrid>"
            ],
            [
              "vue",
              "<!-- 全機能表示 -->\n<ResponsiveTable\n  :columns=\"allColumns\"\n  show-actions\n  action-width=\"180\"\n/>"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage\n    title=\"データ管理\"\n    :columns=\"columns\"\n    :data=\"data\"\n    @search=\"handleSearch\"\n  >\n    <template #search>\n      <el-form :inline=\"!isMobile\">\n        <el-form-item label=\"キーワード\">\n          <el-input v-model=\"search.keyword\" />\n        </el-form-item>\n        <el-form-item label=\"カテゴリ\">\n          <el-select v-model=\"search.category\">\n            <el-option label=\"全て\" value=\"\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage>\n    <template #header-actions>\n      <el-button @click=\"exportData\">エクスポート</el-button>\n      <el-button @click=\"importData\">インポート</el-button>\n    </template>\n\n    <template #row-actions=\"{ row }\">\n      <el-button @click=\"viewDetail(row)\">詳細</el-button>\n      <el-button @click=\"duplicate(row)\">複製</el-button>\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage>\n    <template #column-status=\"{ row }\">\n      <el-tag :type=\"getStatusType(row.status)\">\n        {{ getStatusLabel(row.status) }}\n      </el-tag>\n    </template>\n\n    <template #column-avatar=\"{ row }\">\n      <el-avatar :src=\"row.avatar\" :size=\"isMobile ? 24 : 32\" />\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ],
            [
              "typescript",
              "import { useResponsive } from '@/composables/useResponsive'\n\nexport default {\n  setup() {\n    const { isMobile, isTablet, isDesktop, windowWidth } = useResponsive()\n\n    // 条件付き表示\n    const showAdvancedFilters = computed(() => isDesktop.value)\n\n    // サイズ調整\n    const buttonSize = computed(() => isMobile.value ? 'small' : 'default')\n\n    return {\n      isMobile,\n      showAdvancedFilters,\n      buttonSize\n    }\n  }\n}"
            ],
            [
              "vue",
              "<template>\n  <!-- デスクトップのみ表示 -->\n  <div v-if=\"isDesktop\">\n    <el-button>詳細フィルター</el-button>\n  </div>\n\n  <!-- モバイル用シンプル表示 -->\n  <div v-if=\"isMobile\">\n    <el-button icon=\"Filter\" circle />\n  </div>\n\n  <!-- 動的サイズ調整 -->\n  <el-avatar :size=\"isMobile ? 24 : 48\" />\n</template>"
            ],
            [
              "scss",
              ":root {\n  --mobile-padding: 12px;\n  --tablet-padding: 16px;\n  --desktop-padding: 24px;\n\n  --mobile-font-size: 14px;\n  --desktop-font-size: 16px;\n}\n\n.container {\n  padding: var(--mobile-padding);\n\n  @media (min-width: 768px) {\n    padding: var(--tablet-padding);\n  }\n\n  @media (min-width: 1024px) {\n    padding: var(--desktop-padding);\n  }\n}"
            ],
            [
              "scss",
              ".touch-target {\n  min-height: 44px;\n  min-width: 44px;\n\n  // タッチ領域拡張\n  &::before {\n    content: '';\n    position: absolute;\n    top: -8px; left: -8px;\n    right: -8px; bottom: -8px;\n  }\n}"
            ],
            [
              "typescript",
              "const testDevices = [\n  { name: 'iPhone SE', width: 375, height: 667 },\n  { name: 'iPhone 12', width: 390, height: 844 },\n  { name: 'iPad', width: 768, height: 1024 },\n  { name: 'Desktop', width: 1440, height: 900 }\n]"
            ],
            [
              "vue",
              "<!-- 固定幅の使用 -->\n<el-dialog width=\"600px\">  <!-- 禁止 -->\n\n<!-- レスポンシブを考慮しないグリッド -->\n<el-col :span=\"8\">  <!-- 禁止 -->\n\n<!-- 直接的なElement Plus使用 -->\n<el-table>  <!-- ResponsiveTableを使用すること -->\n\n<!-- 個別のメディアクエリ -->\n<style>\n@media (max-width: 768px) {  <!-- 共通コンポーネントで解決 -->\n  .custom-responsive { }\n</style>"
            ],
            [
              "vue",
              "<!-- レスポンシブダイアログ -->\n<ResponsiveDialog :desktop-width=\"600\">\n\n<!-- レスポンシブグリッド -->\n<ResponsiveCol :mobile=\"24\" :desktop=\"8\">\n\n<!-- レスポンシブテーブル -->\n<ResponsiveTable>\n\n<!-- 共通スタイル活用 -->\n<div class=\"responsive-container\">"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 93.57,
        "sentences": 56,
        "avg_words_per_sentence": 14.43,
        "long_sentences": 12,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 64.16,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.23
    },
    "docs/34-レポート機能完成報告書.md": {
      "basic_metrics": {
        "lines": 210,
        "words": 498,
        "characters": 3761,
        "avg_line_length": 17.909523809523808
      },
      "structure_analysis": {
        "headers": {
          "total": 31,
          "hierarchy": [
            {
              "level": 1,
              "text": "📋 レポート機能完成報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "🚀 今回の実装成果",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "1. フロントエンドUI実装",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "2. バックエンドAPI実装",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "3. エクスポート機能",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "4. 統合機能",
              "line_number": 34
            },
            {
              "level": 2,
              "text": "📊 実装詳細",
              "line_number": 39
            },
            {
              "level": 3,
              "text": "API エンドポイント一覧",
              "line_number": 41
            },
            {
              "level": 3,
              "text": "データベース連携",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "フロントエンド機能",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "🧪 テスト結果",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "API動作確認",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "エラーハンドリング確認",
              "line_number": 100
            },
            {
              "level": 2,
              "text": "📈 システム完成度更新",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "機能別完成度（2025-09-26時点）",
              "line_number": 110
            },
            {
              "level": 3,
              "text": "総合完成度推移",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "🎯 技術的成果",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "1. 完全なCRUD対応",
              "line_number": 135
            },
            {
              "level": 3,
              "text": "2. TypeScript型安全性",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "3. エラーハンドリング",
              "line_number": 146
            },
            {
              "level": 3,
              "text": "4. パフォーマンス最適化",
              "line_number": 151
            },
            {
              "level": 2,
              "text": "🎉 プロジェクト達成指標",
              "line_number": 156
            },
            {
              "level": 3,
              "text": "最終達成状況",
              "line_number": 158
            },
            {
              "level": 3,
              "text": "特筆すべき成果",
              "line_number": 165
            },
            {
              "level": 2,
              "text": "📝 使用方法",
              "line_number": 172
            },
            {
              "level": 3,
              "text": "1. 基本的な使用手順",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "2. 高度な使用方法",
              "line_number": 184
            },
            {
              "level": 2,
              "text": "🔮 今後の拡張可能性",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "短期拡張",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "長期拡張",
              "line_number": 199
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 7,
          "inline_code": 14,
          "languages": {
            "typescript": 1,
            "bash": 1
          },
          "details": [
            [
              "",
              "GET /api/reports/users        - ユーザーレポート\nGET /api/reports/permissions  - 権限レポート\nGET /api/reports/audit        - 監査レポート\nGET /api/reports/statistics   - 統計レポート"
            ],
            [
              "typescript",
              "// レポート種類\n- ログレポート\n- ユーザーレポート\n- 権限レポート\n- システム監査レポート\n\n// 出力形式\n- CSV (Excel対応)\n- JSON (構造化データ)\n- Excel (将来対応)\n\n// フィルタ機能\n- 期間指定\n- ログレベル選択\n- カテゴリ・ソース指定\n- 会社・部署絞り込み"
            ],
            [
              "bash",
              "✅ GET /api/reports/users?format=json\n   - 4ユーザーのデータ正常取得\n   - 権限数・最終ログイン時刻・所属情報完全表示\n\n✅ GET /api/reports/permissions?format=json\n   - ユーザー別権限14件・部署別権限13件取得\n   - 機能カテゴリ・CRUD権限詳細表示\n\n✅ GET /api/reports/audit?format=json\n   - 52件の監査ログ取得\n   - ログイン成功/失敗・システム初期化履歴表示\n\n✅ GET /api/reports/statistics?format=json\n   - 包括的システム統計取得\n   - ユーザー・権限・ログイン・ログ・監査統計\n\n✅ CSV エクスポート\n   - BOM付きUTF-8出力\n   - Excel文字化け防止確認\n   - 自動ファイル名生成"
            ],
            [
              "",
              "✅ 認証エラー: 適切な401レスポンス\n✅ 権限エラー: 管理者以外403拒否\n✅ パラメータエラー: バリデーション実装\n✅ データベースエラー: 詳細エラーメッセージ"
            ],
            [
              "",
              "2025-09-20: 90%  │████████████████████▒▒▒▒│\n2025-09-23: 95%  │███████████████████████▒▒│\n2025-09-25: 98%  │████████████████████████▒│\n2025-09-26: 99%  │█████████████████████████│ ← 緊急BUG修正完了\n2025-09-26: 100% │██████████████████████████│ ← レポート機能完成"
            ],
            [
              "",
              "1. ダッシュボードから「レポート生成」クリック\n2. レポート種類選択（ログ/ユーザー/権限/監査）\n3. 期間・条件設定\n4. 出力形式選択（CSV/JSON）\n5. 「レポート生成」実行\n6. 自動ダウンロード開始"
            ],
            [
              "",
              "- フィルタ条件組み合わせ\n- 大量データエクスポート\n- 定期レポート生成\n- 権限別アクセス制御"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 12
        }
      },
      "readability": {
        "score": 96.18,
        "sentences": 33,
        "avg_words_per_sentence": 15.09,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 51.96,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.14
    },
    "docs/14-想定問題とリスク分析.md": {
      "basic_metrics": {
        "lines": 328,
        "words": 680,
        "characters": 5230,
        "avg_line_length": 15.945121951219512
      },
      "structure_analysis": {
        "headers": {
          "total": 41,
          "hierarchy": [
            {
              "level": 1,
              "text": "想定問題とリスク分析",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "高確率で発生する問題",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "🚨 **レベル1: 緊急リスク**",
              "line_number": 9
            },
            {
              "level": 4,
              "text": "1. **開発者によるガイドライン違反の継続**",
              "line_number": 11
            },
            {
              "level": 1,
              "text": "pre-commit フックで強制チェック",
              "line_number": 30
            },
            {
              "level": 4,
              "text": "2. **共通コンポーネントライブラリの未実装**",
              "line_number": 35
            },
            {
              "level": 1,
              "text": "最優先で実装必須",
              "line_number": 50
            },
            {
              "level": 1,
              "text": "CommonButton, CommonTable等の基本コンポーネント実装",
              "line_number": 52
            },
            {
              "level": 4,
              "text": "3. **バージョン管理の複雑化**",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "⚠️ **レベル2: 重要リスク**",
              "line_number": 72
            },
            {
              "level": 4,
              "text": "4. **パフォーマンス劣化**",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "5. **学習コストと開発者体験の悪化**",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "6. **CI/CD パイプラインの負荷増大**",
              "line_number": 114
            },
            {
              "level": 1,
              "text": "各チェックの実行時間増加",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "📊 **レベル3: 監視が必要なリスク**",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "7. **技術負債の蓄積**",
              "line_number": 134
            },
            {
              "level": 4,
              "text": "8. **外部依存関係の脆弱性**",
              "line_number": 153
            },
            {
              "level": 4,
              "text": "9. **モバイル・レスポンシブ対応の問題**",
              "line_number": 174
            },
            {
              "level": 2,
              "text": "長期的リスク",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "💣 **レベル4: 戦略的リスク**",
              "line_number": 189
            },
            {
              "level": 4,
              "text": "10. **Element Plus の EOL (End of Life)**",
              "line_number": 191
            },
            {
              "level": 4,
              "text": "11. **組織規模拡大による管理困難**",
              "line_number": 203
            },
            {
              "level": 2,
              "text": "予防・対策戦略",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "🛡️ **即座に実装すべき対策**",
              "line_number": 219
            },
            {
              "level": 4,
              "text": "1. **自動化による品質ゲート強化**",
              "line_number": 221
            },
            {
              "level": 1,
              "text": ".husky/pre-commit",
              "line_number": 224
            },
            {
              "level": 1,
              "text": "!/bin/sh",
              "line_number": 225
            },
            {
              "level": 4,
              "text": "2. **段階的実装計画**",
              "line_number": 232
            },
            {
              "level": 4,
              "text": "3. **開発者教育プログラム**",
              "line_number": 241
            },
            {
              "level": 3,
              "text": "🔧 **継続的改善策**",
              "line_number": 251
            },
            {
              "level": 4,
              "text": "1. **メトリクス監視**",
              "line_number": 253
            },
            {
              "level": 4,
              "text": "2. **定期レビューサイクル**",
              "line_number": 266
            },
            {
              "level": 3,
              "text": "⚡ **緊急時対応計画**",
              "line_number": 284
            },
            {
              "level": 4,
              "text": "1. **ロールバック戦略**",
              "line_number": 286
            },
            {
              "level": 1,
              "text": "共通コンポーネントに問題発生時",
              "line_number": 289
            },
            {
              "level": 4,
              "text": "2. **ホットフィックス手順**",
              "line_number": 294
            },
            {
              "level": 2,
              "text": "リスク評価マトリックス",
              "line_number": 303
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 314
            },
            {
              "level": 3,
              "text": "🚨 **最重要対応事項**",
              "line_number": 316
            },
            {
              "level": 3,
              "text": "📈 **成功のカギ**",
              "line_number": 322
            }
          ],
          "hierarchy_issues": [
            {
              "line": 35,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 55,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 132,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 232,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 294,
              "issue": "見出しレベル4が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 17,
          "inline_code": 34,
          "languages": {
            "vue": 1,
            "bash": 4,
            "json": 2,
            "javascript": 2,
            "yaml": 1,
            "typescript": 2,
            "mermaid": 1
          },
          "details": [
            [
              "vue",
              "<!-- 発生しやすい違反例 -->\n<el-button type=\"primary\">     ❌ 禁止されているのに使用\n<el-table :data=\"data\">        ❌ 直接使用\n<div style=\"font-size: 14px\">  ❌ UDサイズ未満"
            ],
            [
              "bash",
              "# pre-commit フックで強制チェック\nnpm run component-check:strict  # 違反時はコミット拒否\nnpm run accessibility-check     # フォント・コントラストチェック"
            ],
            [
              "bash",
              "# 最優先で実装必須\nmkdir -p packages/shared-components/src\n# CommonButton, CommonTable等の基本コンポーネント実装"
            ],
            [
              "json",
              "// 異なるプロジェクトで異なるバージョン使用\nProject A: \"@company/shared-components\": \"1.0.0\"\nProject B: \"@company/shared-components\": \"1.2.0\"\nProject C: \"@company/shared-components\": \"2.0.0\""
            ],
            [
              "javascript",
              "// 共通コンポーネントの肥大化\nimport {\n  CommonButton, CommonTable, CommonForm,\n  CommonChart, CommonDialog, CommonDrawer,\n  // ... 50個のコンポーネント\n} from '@company/shared-components'  // 巨大バンドル"
            ],
            [
              "javascript",
              "// Tree-shaking対応の実装\nimport { CommonButton } from '@company/shared-components/button'\nimport { CommonTable } from '@company/shared-components/table'"
            ],
            [
              "yaml",
              "# 各チェックの実行時間増加\n- lint: 2分 → 5分\n- component-check: 1分 → 3分\n- accessibility-check: 1分 → 2分\n- type-check: 3分 → 8分\n合計: 7分 → 18分"
            ],
            [
              "typescript",
              "// 技術負債の例\ninterface CommonButtonProps {\n  variant: 'primary' | 'secondary'     // 新API\n  type?: 'primary' | 'danger'          // 旧API (deprecated)\n  buttonType?: string                  // さらに古いAPI\n}"
            ],
            [
              "json",
              "// 依存関係の増加\n\"dependencies\": {\n  \"element-plus\": \"^2.5.1\",\n  \"@company/shared-components\": \"*\",\n  \"@company/shared-theme\": \"*\",\n  \"vue\": \"^3.4.15\",\n  // ... 多数の依存関係\n}"
            ],
            [
              "",
              "現在: 3-5プロジェクト\n将来: 20-50プロジェクト\n↓\n- 共通コンポーネントの要求の複雑化\n- 互換性維持の困難\n- 意思決定の遅延"
            ],
            [
              "bash",
              "# .husky/pre-commit\n#!/bin/sh\nnpm run component-check:strict || exit 1\nnpm run accessibility-check || exit 1\nnpm run lint || exit 1\nnpm run type-check || exit 1"
            ],
            [
              "mermaid",
              "graph TD\n    A[Phase1: 基本4コンポーネント] --> B[Phase2: フォーム系コンポーネント]\n    B --> C[Phase3: データ表示系コンポーネント]\n    C --> D[Phase4: 高度な機能コンポーネント]"
            ],
            [
              "",
              "週1回 30分 のセッション:\n- Week 1: UDガイドライン理解\n- Week 2: 共通コンポーネント使用方法\n- Week 3: アクセシビリティ基準\n- Week 4: 実践的な問題解決"
            ],
            [
              "typescript",
              "// 定期的に測定すべき指標\ninterface QualityMetrics {\n  componentComplianceRate: number    // 共通コンポーネント使用率\n  accessibilityScore: number        // アクセシビリティスコア\n  performanceScore: number          // パフォーマンススコア\n  developmentVelocity: number       // 開発速度\n  bugReportCount: number            // バグレポート数\n}"
            ],
            [
              "",
              "月次レビュー:\n- ガイドライン違反状況\n- 共通コンポーネント使用率\n- パフォーマンス指標\n\n四半期レビュー:\n- ガイドライン更新\n- 新コンポーネント追加\n- 技術負債対応\n\n年次レビュー:\n- 基盤技術見直し\n- 戦略的方向性確認"
            ],
            [
              "bash",
              "# 共通コンポーネントに問題発生時\nnpm install @company/shared-components@1.0.0  # 安定版に戻す\ngit revert <commit-hash>                      # 問題のあるコミットを戻す"
            ],
            [
              "",
              "1. 緊急パッチ作成 (1時間以内)\n2. 最小限のテスト実行 (30分)\n3. 段階的デプロイ (カナリアリリース)\n4. 全プロジェクトへの適用 (24時間以内)"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 91.7,
        "sentences": 47,
        "avg_words_per_sentence": 14.47,
        "long_sentences": 13,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 40.6,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.25
    },
    "docs/65-対策実施総合レポート.md": {
      "basic_metrics": {
        "lines": 356,
        "words": 808,
        "characters": 6110,
        "avg_line_length": 17.162921348314608
      },
      "structure_analysis": {
        "headers": {
          "total": 63,
          "hierarchy": [
            {
              "level": 1,
              "text": "多角的レビュー改善対策 実施総合レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 総合レポート概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施概要・完了状況",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "対策実施項目",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "実施成果サマリー",
              "line_number": 19
            },
            {
              "level": 2,
              "text": "📊 実施詳細・成果分析",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "1. 実装リスク管理強化対策 ✅",
              "line_number": 29
            },
            {
              "level": 4,
              "text": "対策内容",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "主要成果",
              "line_number": 35
            },
            {
              "level": 5,
              "text": "CRITICAL リスク完全対策",
              "line_number": 37
            },
            {
              "level": 5,
              "text": "包括的リスク管理体制",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "定量的改善効果",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "2. 性能テスト計画詳細化 ✅",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "対策内容",
              "line_number": 64
            },
            {
              "level": 4,
              "text": "主要成果",
              "line_number": 68
            },
            {
              "level": 5,
              "text": "Core Web Vitals準拠テスト設計",
              "line_number": 70
            },
            {
              "level": 5,
              "text": "4段階テストシナリオ",
              "line_number": 79
            },
            {
              "level": 5,
              "text": "継続的性能監視システム",
              "line_number": 87
            },
            {
              "level": 4,
              "text": "定量的改善効果",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "3. 運用手順書整備 ✅",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "対策内容",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "主要成果",
              "line_number": 106
            },
            {
              "level": 5,
              "text": "3段階デプロイ手順",
              "line_number": 108
            },
            {
              "level": 5,
              "text": "分散システム監視",
              "line_number": 115
            },
            {
              "level": 5,
              "text": "3レベル障害対応",
              "line_number": 123
            },
            {
              "level": 4,
              "text": "定量的改善効果",
              "line_number": 130
            },
            {
              "level": 2,
              "text": "🏆 総合的改善効果",
              "line_number": 137
            },
            {
              "level": 3,
              "text": "実装準備完成度",
              "line_number": 139
            },
            {
              "level": 3,
              "text": "観点別改善効果",
              "line_number": 145
            },
            {
              "level": 4,
              "text": "技術担当者観点",
              "line_number": 147
            },
            {
              "level": 4,
              "text": "プロジェクトマネージャー観点",
              "line_number": 152
            },
            {
              "level": 4,
              "text": "品質保証担当者観点",
              "line_number": 157
            },
            {
              "level": 4,
              "text": "運用担当者観点",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "🎯 総合評価向上",
              "line_number": 167
            },
            {
              "level": 2,
              "text": "📈 定量的成果指標",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "リスク軽減効果",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "品質保証効果",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "運用効率効果",
              "line_number": 201
            },
            {
              "level": 2,
              "text": "🎯 実装成功確率予測",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "Before（対策実施前）",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "After（対策実施後）",
              "line_number": 227
            },
            {
              "level": 2,
              "text": "📋 実装フェーズ別準備完了状況",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "Phase 1: 準備・設計（Day 1）",
              "line_number": 246
            },
            {
              "level": 3,
              "text": "Phase 2: 基盤ファイル作成（Day 2-4）",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "Phase 3: 承認機能ファイル（Day 5-7）",
              "line_number": 257
            },
            {
              "level": 3,
              "text": "Phase 4: 高度承認機能（Day 8-9）",
              "line_number": 262
            },
            {
              "level": 3,
              "text": "Phase 5: 移行・検証（Day 9）",
              "line_number": 266
            },
            {
              "level": 2,
              "text": "🚀 実装開始推奨事項",
              "line_number": 272
            },
            {
              "level": 3,
              "text": "即座実装開始可能",
              "line_number": 274
            },
            {
              "level": 3,
              "text": "実装時の重点監視項目",
              "line_number": 285
            },
            {
              "level": 3,
              "text": "成功のための推奨アクション",
              "line_number": 291
            },
            {
              "level": 1,
              "text": "1. 実装開始前準備",
              "line_number": 293
            },
            {
              "level": 1,
              "text": "2. 継続監視開始",
              "line_number": 296
            },
            {
              "level": 1,
              "text": "3. チーム体制確認",
              "line_number": 299
            },
            {
              "level": 1,
              "text": "4. 実装開始",
              "line_number": 302
            },
            {
              "level": 2,
              "text": "📊 期待される実装後効果",
              "line_number": 308
            },
            {
              "level": 3,
              "text": "技術的効果",
              "line_number": 310
            },
            {
              "level": 3,
              "text": "ビジネス効果",
              "line_number": 316
            },
            {
              "level": 3,
              "text": "組織効果",
              "line_number": 322
            },
            {
              "level": 2,
              "text": "🎉 結論",
              "line_number": 330
            },
            {
              "level": 3,
              "text": "対策実施成果",
              "line_number": 332
            },
            {
              "level": 3,
              "text": "実装準備完成",
              "line_number": 339
            },
            {
              "level": 3,
              "text": "最終評価",
              "line_number": 346
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 5
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 18,
          "inline_code": 35,
          "languages": {
            "json": 4,
            "typescript": 1,
            "bash": 1
          },
          "details": [
            [
              "",
              "🔴 データベーストランザクション整合性\n  → Saga パターン実装設計\n  → データ整合性検証機能設計\n  → 段階的移行戦略策定\n\n🔴 API互換性破綻リスク\n  → レガシーAPI互換性保証層設計\n  → Consumer-Driven Contracts テスト実装"
            ],
            [
              "",
              "📊 リスク管理マトリクス: 5段階評価・責任者明確化\n🚨 緊急対応プロトコル: レベル別対応手順\n📞 エスカレーション体制: 24時間対応可能\n🎯 成功基準・KPI: 定量的品質保証"
            ],
            [
              "json",
              "{\n  \"LCP\": \"< 2.0s (目標: 現在3.2s → 2.0s)\",\n  \"FID\": \"< 50ms (目標: 現在150ms → 50ms)\",\n  \"CLS\": \"< 0.05 (目標: 現在0.15 → 0.05)\"\n}"
            ],
            [
              "",
              "🧪 シナリオ1: 初回読み込み性能 (95%削減検証)\n🧪 シナリオ2: API応答時間 (40%高速化検証)\n🧪 シナリオ3: メモリ使用量 (60%削減検証)\n🧪 シナリオ4: 同時接続数 (1000ユーザー対応検証)"
            ],
            [
              "typescript",
              "// GitHub Actions統合・自動回帰テスト\n// Grafana監視ダッシュボード\n// アラート・閾値管理システム\n// 長期トレンド分析・予測"
            ],
            [
              "",
              "🚀 開発環境: マイクロサービス個別デプロイ\n🔄 ステージング: Blue-Green デプロイ\n🎯 本番環境: 段階的ロールアウト (5% → 25% → 50% → 100%)"
            ],
            [
              "",
              "📋 統合ログ収集: Fluentd + Elasticsearch\n🔍 分散トレーシング: Jaeger統合\n📊 メトリクス収集: Prometheus統合\n📈 ダッシュボード: Grafana可視化"
            ],
            [
              "",
              "🚨 P1 CRITICAL: 5分以内・緊急ロールバック\n⚠️ P2 HIGH: 15分以内・代替手段適用\n🟡 P3 MEDIUM: 1時間以内・計画的修正"
            ],
            [
              "",
              "Before (多角的レビュー時): 8.5/10\nAfter (対策実施後): 10.0/10 (完全準備完了)"
            ],
            [
              "",
              "Before: 8.5/10 (優秀)\nAfter:  10.0/10 (完璧) ⬆️ +1.5点向上"
            ],
            [
              "json",
              "{\n  \"risk_reduction\": {\n    \"data_consistency\": \"40% → 5% (87.5%軽減)\",\n    \"api_compatibility\": \"60% → 5% (91.7%軽減)\",\n    \"performance_degradation\": \"50% → 10% (80%軽減)\",\n    \"operational_complexity\": \"70% → 20% (71.4%軽減)\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"quality_assurance\": {\n    \"test_coverage\": \"30% → 95% (+65%向上)\",\n    \"performance_monitoring\": \"手動 → 100%自動化\",\n    \"deployment_success_rate\": \"85% → 99% (+14%向上)\",\n    \"incident_response_time\": \"30分 → 5分 (83%短縮)\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"operational_efficiency\": {\n    \"deployment_automation\": \"50% → 95% (+45%向上)\",\n    \"monitoring_automation\": \"20% → 100% (+80%向上)\",\n    \"documentation_completeness\": \"60% → 100% (+40%向上)\",\n    \"team_readiness\": \"70% → 100% (+30%向上)\"\n  }\n}"
            ],
            [
              "",
              "実装成功確率: 75%\n主要懸念:\n- データ整合性リスク (40%確率で発生)\n- API互換性問題 (60%確率で発生)\n- 性能テスト不備による見落とし\n- 運用時の混乱・対応遅延"
            ],
            [
              "",
              "実装成功確率: 95%\n残存リスク:\n- 予期せぬ技術的問題 (5%確率)\n- 外部要因による影響 (極低確率)\n\n成功要因:\n✅ 包括的リスク管理計画\n✅ 詳細性能テスト計画\n✅ 完全運用手順書\n✅ 自動化・監視体制\n✅ エスカレーション体制"
            ],
            [
              "",
              "🟢 準備完了度: 100%\n🟢 リスク管理: 包括的対策完了\n🟢 品質保証: 詳細テスト計画完了\n🟢 運用準備: 完全手順書完備\n🟢 チーム体制: 責任・連絡体制確立\n\n⭐ 推奨: 即座実装開始"
            ],
            [
              "bash",
              "# 1. 実装開始前準備\n./scripts/pre-implementation-setup.sh\n\n# 2. 継続監視開始\n./scripts/start-continuous-monitoring.sh\n\n# 3. チーム体制確認\n./scripts/verify-team-readiness.sh\n\n# 4. 実装開始\n./scripts/start-workflow-splitting.sh"
            ],
            [
              "",
              "準備完了度: 100% (10.0/10)\n成功確率: 95%\n実装推奨: 即座開始可能"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 96.9,
        "sentences": 87,
        "avg_words_per_sentence": 9.29,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 56.16,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.03
    },
    "docs/22-未実装機能分析報告書.md": {
      "basic_metrics": {
        "lines": 317,
        "words": 610,
        "characters": 4377,
        "avg_line_length": 13.807570977917981
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "未実装機能分析報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 分析結果サマリー",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "実装状況概要",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "📊 機能別実装状況",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "✅ 完全実装済み機能",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "⚠️ 部分実装機能",
              "line_number": 67
            },
            {
              "level": 4,
              "text": "1. **ダッシュボード機能** (85% 完了)",
              "line_number": 69
            },
            {
              "level": 4,
              "text": "2. **機能管理システム** (80% 完了)",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "✅ 完全実装済み機能",
              "line_number": 91
            },
            {
              "level": 4,
              "text": "**ログ監視システム** (95% 完了)",
              "line_number": 93
            },
            {
              "level": 5,
              "text": "✅ 実装済み機能:",
              "line_number": 98
            },
            {
              "level": 2,
              "text": "🔍 詳細未実装機能リスト",
              "line_number": 148
            },
            {
              "level": 3,
              "text": "機能管理システム関連",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "権限テンプレート機能（BUG #002）",
              "line_number": 152
            },
            {
              "level": 4,
              "text": "高度な権限制御機能",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "運用支援機能",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "ダッシュボード機能関連",
              "line_number": 201
            },
            {
              "level": 4,
              "text": "統計・分析機能",
              "line_number": 203
            },
            {
              "level": 4,
              "text": "チャート・グラフ機能",
              "line_number": 222
            },
            {
              "level": 3,
              "text": "ログ監視システム（詳細）",
              "line_number": 229
            },
            {
              "level": 4,
              "text": "フロントエンド統合",
              "line_number": 231
            },
            {
              "level": 4,
              "text": "バックエンド統合",
              "line_number": 238
            },
            {
              "level": 4,
              "text": "監視ダッシュボード",
              "line_number": 245
            },
            {
              "level": 4,
              "text": "アラート・通知機能",
              "line_number": 252
            },
            {
              "level": 2,
              "text": "📋 実装優先度",
              "line_number": 259
            },
            {
              "level": 3,
              "text": "🔴 高優先度（即座に対応）",
              "line_number": 261
            },
            {
              "level": 3,
              "text": "🟡 中優先度（中期対応）",
              "line_number": 265
            },
            {
              "level": 3,
              "text": "🟢 低優先度（長期対応）",
              "line_number": 272
            },
            {
              "level": 2,
              "text": "💡 実装推奨順序",
              "line_number": 278
            },
            {
              "level": 3,
              "text": "フェーズ1: 緊急対応（1-2週間）",
              "line_number": 280
            },
            {
              "level": 3,
              "text": "フェーズ2: 基盤拡張（3-4週間）",
              "line_number": 284
            },
            {
              "level": 3,
              "text": "フェーズ3: 高度機能（5-8週間）",
              "line_number": 289
            },
            {
              "level": 3,
              "text": "フェーズ4: 運用最適化（長期）",
              "line_number": 294
            },
            {
              "level": 2,
              "text": "🚀 技術的考慮事項",
              "line_number": 299
            },
            {
              "level": 3,
              "text": "実装時の注意点",
              "line_number": 301
            },
            {
              "level": 3,
              "text": "推奨技術スタック",
              "line_number": 307
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 5
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.0,
        "sentences": 50,
        "avg_words_per_sentence": 12.2,
        "long_sentences": 5,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 37.2,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.48
    },
    "docs/58-LogMonitoring分割対策案.md": {
      "basic_metrics": {
        "lines": 295,
        "words": 649,
        "characters": 6256,
        "avg_line_length": 21.20677966101695
      },
      "structure_analysis": {
        "headers": {
          "total": 30,
          "hierarchy": [
            {
              "level": 1,
              "text": "LogMonitoring.vue 分割対策案",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📊 現状分析",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "ファイル規模",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "主要機能領域",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🎯 分割戦略",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "方針",
              "line_number": 21
            },
            {
              "level": 3,
              "text": "分割構造",
              "line_number": 24
            },
            {
              "level": 2,
              "text": "📦 分割後のコンポーネント詳細",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "1. LogMonitoringHeader.vue",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "2. LogStatsDashboard.vue",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "3. LogRealtimePanel.vue",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "4. LogSearchPanel.vue",
              "line_number": 128
            },
            {
              "level": 2,
              "text": "🔧 実装手順",
              "line_number": 184
            },
            {
              "level": 3,
              "text": "Phase 1: 準備（1日）",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "Phase 2: 基盤コンポーネント作成（2日）",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "Phase 3: 主要機能コンポーネント（3日）",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "Phase 4: 補助機能コンポーネント（2日）",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "Phase 5: 統合とテスト（2日）",
              "line_number": 210
            },
            {
              "level": 2,
              "text": "📈 期待される改善効果",
              "line_number": 216
            },
            {
              "level": 3,
              "text": "サイズ削減",
              "line_number": 218
            },
            {
              "level": 3,
              "text": "パフォーマンス改善",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "開発効率",
              "line_number": 231
            },
            {
              "level": 2,
              "text": "🚀 追加の最適化案",
              "line_number": 237
            },
            {
              "level": 3,
              "text": "1. 仮想スクロール実装",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "2. Web Worker活用",
              "line_number": 250
            },
            {
              "level": 3,
              "text": "3. 遅延読み込み",
              "line_number": 260
            },
            {
              "level": 3,
              "text": "4. メモ化とキャッシュ",
              "line_number": 268
            },
            {
              "level": 2,
              "text": "📊 測定指標",
              "line_number": 277
            },
            {
              "level": 3,
              "text": "KPI",
              "line_number": 279
            },
            {
              "level": 3,
              "text": "成功基準",
              "line_number": 285
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 17,
          "languages": {
            "vue": 4,
            "typescript": 4
          },
          "details": [
            [
              "",
              "LogMonitoring.vue (メインコンテナ: 150行)\n├── components/\n│   ├── LogMonitoringHeader.vue (80行)\n│   │   └── WebSocket状態・更新ボタン・テスト送信\n│   ├── LogStatsDashboard.vue (120行)\n│   │   └── 統計カード・リアルタイム数値\n│   ├── LogRealtimePanel.vue (150行)\n│   │   └── リアルタイムログ・WebSocket連携\n│   ├── LogSearchPanel.vue (200行)\n│   │   └── 検索フォーム・フィルター・結果表示\n│   ├── LogDetailDialog.vue (100行)\n│   │   └── ログ詳細モーダル\n│   ├── LogAlertPanel.vue (120行)\n│   │   └── アラート一覧・通知管理\n│   ├── LogExportDialog.vue (80行)\n│   │   └── エクスポート設定・ダウンロード\n│   └── LogSidebar.vue (100行)\n│       └── クイックフィルター・エラー/警告フィルタ"
            ],
            [
              "vue",
              "<template>\n  <el-card class=\"log-header\">\n    <div class=\"header-content\">\n      <h2>ログ監視システム</h2>\n      <div class=\"header-actions\">\n        <el-button-group>\n          <el-button @click=\"$emit('refresh')\">更新</el-button>\n          <el-button @click=\"$emit('toggle-errors')\">エラーのみ</el-button>\n        </el-button-group>\n        <WebSocketStatus :status=\"wsStatus\" :latency=\"latency\" />\n      </div>\n    </div>\n  </el-card>\n</template>\n\n<script setup lang=\"ts\">\ndefineProps<{\n  wsStatus: string\n  latency: number\n}>()\ndefineEmits(['refresh', 'toggle-errors'])\n</script>"
            ],
            [
              "vue",
              "<template>\n  <el-row :gutter=\"16\">\n    <el-col v-for=\"stat in stats\" :key=\"stat.key\" :xs=\"12\" :md=\"6\">\n      <StatCard :stat=\"stat\" @click=\"$emit('filter', stat.type)\" />\n    </el-col>\n  </el-row>\n</template>\n\n<script setup lang=\"ts\">\nimport StatCard from './StatCard.vue'\n\ndefineProps<{\n  stats: StatData[]\n}>()\ndefineEmits(['filter'])\n</script>"
            ],
            [
              "vue",
              "<template>\n  <el-card>\n    <template #header>\n      <div class=\"panel-header\">\n        <span>📡 リアルタイムログ</span>\n        <el-button @click=\"clearLogs\" size=\"small\">クリア</el-button>\n      </div>\n    </template>\n    <VirtualScroller :items=\"logs\" :item-height=\"60\">\n      <template #default=\"{ item }\">\n        <LogItem :log=\"item\" @click=\"$emit('show-detail', item)\" />\n      </template>\n    </VirtualScroller>\n  </el-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { VirtualScroller } from '@/components/VirtualScroller'\nimport LogItem from './LogItem.vue'\n\ndefineProps<{\n  logs: LogEntry[]\n}>()\ndefineEmits(['show-detail', 'clear'])\n\nconst clearLogs = () => {\n  emit('clear')\n}\n</script>"
            ],
            [
              "vue",
              "<template>\n  <el-card>\n    <template #header>\n      <div class=\"search-header\">\n        <span>🔍 ログ検索</span>\n        <el-button @click=\"toggleAdvanced\">\n          {{ showAdvanced ? '簡易検索' : '詳細検索' }}\n        </el-button>\n      </div>\n    </template>\n    <el-form :model=\"searchForm\" @submit.prevent=\"handleSearch\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"キーワード\">\n            <el-input v-model=\"searchForm.keyword\" />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"レベル\">\n            <el-select v-model=\"searchForm.level\">\n              <el-option v-for=\"level in logLevels\" :key=\"level\" :value=\"level\" />\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n      <AdvancedSearchOptions v-if=\"showAdvanced\" v-model=\"searchForm\" />\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSearch\">検索</el-button>\n        <el-button @click=\"resetSearch\">リセット</el-button>\n      </el-form-item>\n    </el-form>\n    <SearchResults :results=\"searchResults\" :loading=\"loading\" />\n  </el-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive } from 'vue'\nimport AdvancedSearchOptions from './AdvancedSearchOptions.vue'\nimport SearchResults from './SearchResults.vue'\n\nconst showAdvanced = ref(false)\nconst searchForm = reactive({\n  keyword: '',\n  level: null,\n  // ...\n})\n\nconst emit = defineEmits(['search'])\nconst handleSearch = () => {\n  emit('search', searchForm)\n}\n</script>"
            ],
            [
              "typescript",
              "// VirtualScroller.vue\n// 1000件以上のログでも60FPSを維持\nconst VirtualScroller = {\n  visibleItems: computed(() => {\n    // 表示範囲のアイテムのみレンダリング\n  })\n}"
            ],
            [
              "typescript",
              "// logProcessor.worker.ts\n// 重い処理をバックグラウンドで実行\nself.onmessage = (e) => {\n  const filtered = filterLogs(e.data)\n  self.postMessage(filtered)\n}"
            ],
            [
              "typescript",
              "// 検索パネルは必要時のみ読み込み\nconst LogSearchPanel = defineAsyncComponent(() =>\n  import('./components/LogSearchPanel.vue')\n)"
            ],
            [
              "typescript",
              "// 計算結果をキャッシュ\nconst statsCards = computed(() => {\n  // useMemo相当の処理\n  return memoizedCalculation(stats.value)\n})"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.56,
        "sentences": 86,
        "avg_words_per_sentence": 7.55,
        "long_sentences": 7,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 52.980000000000004,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.96
    },
    "docs/56-ワークフロー柔軟化分析レポート.md": {
      "basic_metrics": {
        "lines": 281,
        "words": 705,
        "characters": 5152,
        "avg_line_length": 18.334519572953738
      },
      "structure_analysis": {
        "headers": {
          "total": 50,
          "hierarchy": [
            {
              "level": 1,
              "text": "ワークフロー設計の柔軟化分析レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 現状分析",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "1.1 既存実装の確認",
              "line_number": 9
            },
            {
              "level": 4,
              "text": "✅ 実装済み機能",
              "line_number": 11
            },
            {
              "level": 4,
              "text": "❌ 未実装・制限事項",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "1.2 現在の問題点",
              "line_number": 27
            },
            {
              "level": 4,
              "text": "🚨 Critical Issues",
              "line_number": 29
            },
            {
              "level": 4,
              "text": "⚠️ High Issues",
              "line_number": 35
            },
            {
              "level": 2,
              "text": "2. 必要な改善機能",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "2.1 緊急時直接操作モード",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "実装要件",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "ビジネスルール",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "2.2 承認委任機能",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 67
            },
            {
              "level": 4,
              "text": "実装要件",
              "line_number": 72
            },
            {
              "level": 4,
              "text": "ビジネスルール",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "2.3 承認代理機能",
              "line_number": 95
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 97
            },
            {
              "level": 4,
              "text": "実装要件",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "ビジネルール",
              "line_number": 110
            },
            {
              "level": 3,
              "text": "2.4 複数承認者並列承認",
              "line_number": 115
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 117
            },
            {
              "level": 4,
              "text": "実装要件",
              "line_number": 122
            },
            {
              "level": 4,
              "text": "ビジネスルール",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "2.5 自動承認ルール",
              "line_number": 135
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 137
            },
            {
              "level": 4,
              "text": "実装要件",
              "line_number": 142
            },
            {
              "level": 4,
              "text": "条件例",
              "line_number": 156
            },
            {
              "level": 2,
              "text": "3. 実装優先順位",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "Phase 2-1: 緊急対応機能（1週間）",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "Phase 2-2: 効率化機能（2週間）",
              "line_number": 172
            },
            {
              "level": 3,
              "text": "Phase 2-3: 自動化機能（1週間）",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "4. 期待効果",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "4.1 業務効率向上",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "4.2 ユーザビリティ向上",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "4.3 コンプライアンス強化",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "5. リスク分析",
              "line_number": 202
            },
            {
              "level": 3,
              "text": "5.1 セキュリティリスク",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "5.2 運用リスク",
              "line_number": 211
            },
            {
              "level": 2,
              "text": "6. 実装アーキテクチャ",
              "line_number": 218
            },
            {
              "level": 3,
              "text": "6.1 サービス層設計",
              "line_number": 220
            },
            {
              "level": 3,
              "text": "6.2 API設計",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "6.3 フロントエンド設計",
              "line_number": 240
            },
            {
              "level": 2,
              "text": "7. 次のアクション",
              "line_number": 250
            },
            {
              "level": 3,
              "text": "7.1 即座実行項目",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "7.2 準備項目",
              "line_number": 257
            },
            {
              "level": 2,
              "text": "8. 結論",
              "line_number": 262
            },
            {
              "level": 3,
              "text": "主要課題",
              "line_number": 266
            },
            {
              "level": 3,
              "text": "実装による効果",
              "line_number": 271
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 17,
          "languages": {
            "sql": 5,
            "json": 1
          },
          "details": [
            [
              "sql",
              "-- 緊急操作フラグ追加\nALTER TABLE workflow_requests\nADD COLUMN isEmergencyMode BOOLEAN DEFAULT false,\nADD COLUMN emergencyReason TEXT,\nADD COLUMN emergencyApprovedBy INTEGER,\nADD COLUMN emergencyApprovedAt TIMESTAMP;"
            ],
            [
              "sql",
              "-- 委任設定テーブル\nCREATE TABLE approval_delegations (\n  id SERIAL PRIMARY KEY,\n  delegatorId INTEGER NOT NULL,\n  delegateId INTEGER NOT NULL,\n  startDate DATE NOT NULL,\n  endDate DATE NOT NULL,\n  workflowTypeIds INTEGER[],\n  reason TEXT,\n  isActive BOOLEAN DEFAULT true,\n  FOREIGN KEY (delegatorId) REFERENCES users(id),\n  FOREIGN KEY (delegateId) REFERENCES users(id)\n);"
            ],
            [
              "sql",
              "-- 代理承認設定\nALTER TABLE approval_history\nADD COLUMN isProxy BOOLEAN DEFAULT false,\nADD COLUMN proxyReason TEXT;"
            ],
            [
              "sql",
              "-- 並列承認設定拡張\nALTER TABLE approval_routes\nADD COLUMN parallelType TEXT CHECK (parallelType IN ('AND', 'OR')),\nADD COLUMN minimumApprovals INTEGER DEFAULT 1;"
            ],
            [
              "sql",
              "-- 自動承認ルール詳細\nCREATE TABLE auto_approval_rules (\n  id SERIAL PRIMARY KEY,\n  workflowTypeId INTEGER NOT NULL,\n  ruleName TEXT NOT NULL,\n  conditions JSONB NOT NULL,\n  isActive BOOLEAN DEFAULT true,\n  priority INTEGER DEFAULT 0,\n  FOREIGN KEY (workflowTypeId) REFERENCES workflow_types(id)\n);"
            ],
            [
              "json",
              "{\n  \"amount\": {\"max\": 50000},\n  \"department\": {\"in\": [1, 2, 3]},\n  \"requester\": {\"role\": {\"in\": [\"MANAGER\", \"ADMIN\"]}},\n  \"recurring\": true\n}"
            ],
            [
              "",
              "ApprovalEngine\n├── EmergencyApprovalService    // 緊急承認\n├── DelegationService          // 委任管理\n├── ProxyApprovalService       // 代理承認\n├── ParallelApprovalService    // 並列承認\n├── AutoApprovalService        // 自動承認\n└── NotificationService        // 通知管理"
            ],
            [
              "",
              "POST /api/workflow/emergency-approve     // 緊急承認\nPOST /api/workflow/delegate             // 委任設定\nPOST /api/workflow/proxy-approve        // 代理承認\nGET  /api/workflow/parallel-status      // 並列承認状況\nPOST /api/workflow/auto-approve-test    // 自動承認テスト"
            ],
            [
              "",
              "components/\n├── EmergencyApprovalModal      // 緊急承認モーダル\n├── DelegationSettings         // 委任設定画面\n├── ProxyApprovalSelector      // 代理承認選択\n├── ParallelApprovalViewer     // 並列承認表示\n└── AutoApprovalRuleEditor     // 自動承認ルール編集"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 16
        }
      },
      "readability": {
        "score": 93.68,
        "sentences": 57,
        "avg_words_per_sentence": 12.37,
        "long_sentences": 12,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 59.1,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.24
    },
    "docs/68-permissions.ts分割実装効果レポート.md": {
      "basic_metrics": {
        "lines": 290,
        "words": 702,
        "characters": 5702,
        "avg_line_length": 19.662068965517243
      },
      "structure_analysis": {
        "headers": {
          "total": 44,
          "hierarchy": [
            {
              "level": 1,
              "text": "permissions.ts API分割実装効果レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 分割実装概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 分割前後の比較",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "分割前（モノリシック構成）",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "分割後（マイクロサービス構成）",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "📊 削減効果分析",
              "line_number": 42
            },
            {
              "level": 3,
              "text": "ファイルサイズ削減",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "API分散効果",
              "line_number": 51
            },
            {
              "level": 2,
              "text": "🛠️ マイクロサービス分割設計",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "アーキテクチャパターン",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "マイクロサービス責務分析",
              "line_number": 82
            },
            {
              "level": 2,
              "text": "🚀 性能改善効果",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "API応答時間改善",
              "line_number": 97
            },
            {
              "level": 3,
              "text": "負荷分散効果",
              "line_number": 103
            },
            {
              "level": 3,
              "text": "キャッシュ最適化",
              "line_number": 114
            },
            {
              "level": 2,
              "text": "🔧 開発・保守性向上",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "開発効率改善",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "保守性向上",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "デプロイメント効率化",
              "line_number": 134
            },
            {
              "level": 2,
              "text": "📈 技術的負債解消効果",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "Before（技術的負債）",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "After（モダンアーキテクチャ）",
              "line_number": 149
            },
            {
              "level": 2,
              "text": "🛡️ セキュリティ・信頼性向上",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "セキュリティ分離",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "障害分離",
              "line_number": 164
            },
            {
              "level": 2,
              "text": "🎯 実装品質評価",
              "line_number": 171
            },
            {
              "level": 3,
              "text": "コード品質指標",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "設計原則適用",
              "line_number": 179
            },
            {
              "level": 2,
              "text": "🌟 ユーザー体験改善",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "API応答速度向上",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "システム信頼性向上",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "📋 フィーチャーフラグ移行戦略",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "段階的移行計画",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "レガシー互換性",
              "line_number": 215
            },
            {
              "level": 2,
              "text": "💡 今後の拡張計画",
              "line_number": 222
            },
            {
              "level": 3,
              "text": "段階2: 高度最適化",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "段階3: 分散アーキテクチャ",
              "line_number": 229
            },
            {
              "level": 2,
              "text": "🏆 成功基準達成状況",
              "line_number": 236
            },
            {
              "level": 2,
              "text": "💡 学習・知見",
              "line_number": 248
            },
            {
              "level": 3,
              "text": "成功要因",
              "line_number": 250
            },
            {
              "level": 3,
              "text": "次回適用ポイント",
              "line_number": 256
            },
            {
              "level": 2,
              "text": "🔗 関連リソース",
              "line_number": 264
            },
            {
              "level": 3,
              "text": "技術スタック",
              "line_number": 266
            },
            {
              "level": 3,
              "text": "監視・運用",
              "line_number": 272
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 6,
          "inline_code": 11,
          "languages": {
            "json": 1,
            "typescript": 2
          },
          "details": [
            [
              "",
              "permissions.ts: 1,368行（39KB）\n├── 部署権限管理: 直接実装\n├── ユーザー権限管理: 直接実装\n├── 権限テンプレート: 直接実装\n├── 権限マトリクス: 直接実装\n├── 権限チェック: 直接実装\n├── 権限継承: 直接実装\n├── 監査ログ: 直接実装\n└── メニュー権限: 直接実装"
            ],
            [
              "",
              "routes/permissions/\n├── index.ts (統合ルーター: 194行, 6KB) - API統合・フィーチャーフラグ制御\n├── permission-roles.ts (200行, 8KB) - 部署役職権限管理\n├── permission-users.ts (250行, 10KB) - ユーザー権限・メニュー権限\n├── permission-templates.ts (300行, 12KB) - 権限テンプレート管理\n├── permission-inheritance.ts (180行, 7KB) - 権限継承管理\n├── permission-matrix.ts (200行, 8KB) - 権限マトリクス・統計\n├── permission-audit.ts (150行, 6KB) - 監査ログ管理\n└── permission-validation.ts (120行, 5KB) - 権限検証・チェック"
            ],
            [
              "json",
              "{\n  \"before\": {\n    \"total_lines\": 1368,\n    \"endpoints\": 18,\n    \"single_file\": true,\n    \"complexity\": \"VERY_HIGH\",\n    \"maintainability\": \"LOW\"\n  },\n  \"after\": {\n    \"total_microservices\": 7,\n    \"max_service_lines\": 300,\n    \"avg_service_lines\": 200,\n    \"endpoints_per_service\": \"5-12\",\n    \"complexity\": \"LOW\",\n    \"maintainability\": \"HIGH\"\n  }\n}"
            ],
            [
              "typescript",
              "// 負荷分散例（実装可能）\nconst loadBalancer = {\n  'permission-roles': ['server1', 'server2'],\n  'permission-users': ['server2', 'server3'],\n  'permission-templates': ['server1', 'server3'],\n  // 機能別独立スケーリング\n}"
            ],
            [
              "",
              "従来: 1,368行の巨大API → 修正影響範囲不明・テスト困難\n分割後: 最大300行のマイクロサービス → 影響局所化・独立テスト"
            ],
            [
              "typescript",
              "// Phase 1-7の段階的有効化\nPhase 1: permission-roles (部署権限)\nPhase 2: permission-users (ユーザー権限)\nPhase 3: permission-templates (テンプレート)\nPhase 4: permission-inheritance (継承)\nPhase 5: permission-matrix (マトリクス)\nPhase 6: permission-audit (監査)\nPhase 7: permission-validation (検証)"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 21
        }
      },
      "readability": {
        "score": 80.84,
        "sentences": 31,
        "avg_words_per_sentence": 22.65,
        "long_sentences": 4,
        "readability_level": "読みやすい"
      },
      "structure_score": 59.04,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.37
    },
    "docs/72-ドキュメント総合レビュー結果・改善計画書.md": {
      "basic_metrics": {
        "lines": 613,
        "words": 1645,
        "characters": 13215,
        "avg_line_length": 21.557911908646002
      },
      "structure_analysis": {
        "headers": {
          "total": 104,
          "hierarchy": [
            {
              "level": 1,
              "text": "WebSysプロジェクト ドキュメント総合レビュー結果・改善計画書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "文書情報",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "エグゼクティブサマリー",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "📊 総合評価スコア",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "🎯 改善優先度・実施状況",
              "line_number": 23
            },
            {
              "level": 2,
              "text": "1. レビュー対象と方法論",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "1.1 対象範囲",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "1.2 レビュー観点",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "🔍 利用者観点（エンドユーザー・システム管理者）",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "🔧 開発者観点（開発・保守チーム）",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "2. 主要発見事項",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "2.1 🟢 優秀な点",
              "line_number": 60
            },
            {
              "level": 4,
              "text": "技術的品質の卓越性",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "包括的な開発支援",
              "line_number": 68
            },
            {
              "level": 4,
              "text": "実践的な設計アプローチ",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "2.2 🔴 Critical Issues（緊急対応必要）",
              "line_number": 80
            },
            {
              "level": 4,
              "text": "1. 情報アクセス性の深刻な問題",
              "line_number": 82
            },
            {
              "level": 4,
              "text": "2. ドキュメント体系の混乱",
              "line_number": 90
            },
            {
              "level": 4,
              "text": "3. 重複情報による混乱",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "2.3 🟡 High Priority Issues（重要改善項目）",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "4. ドキュメント間の不整合",
              "line_number": 104
            },
            {
              "level": 4,
              "text": "5. 保守性の課題",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "2.4 🟢 Medium Priority Issues（中期改善項目）",
              "line_number": 117
            },
            {
              "level": 4,
              "text": "6. 利用者エクスペリエンス",
              "line_number": 119
            },
            {
              "level": 2,
              "text": "3. 具体的改善計画",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "3.1 ✅ Phase 1: 緊急改善完了（2025-09-30）",
              "line_number": 128
            },
            {
              "level": 4,
              "text": "🎯 目標: 情報アクセス性の劇的改善 - **100%達成**",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "1.1 マスタードキュメント作成",
              "line_number": 132
            },
            {
              "level": 1,
              "text": "docs/MASTER_REFERENCE.md（新規作成）",
              "line_number": 134
            },
            {
              "level": 2,
              "text": "技術スタック（単一真実源）",
              "line_number": 135
            },
            {
              "level": 2,
              "text": "システム概要",
              "line_number": 142
            },
            {
              "level": 2,
              "text": "主要リンク",
              "line_number": 145
            },
            {
              "level": 4,
              "text": "1.2 メインナビゲーション改善",
              "line_number": 151
            },
            {
              "level": 1,
              "text": "docs/README.md（大幅改訂）",
              "line_number": 153
            },
            {
              "level": 1,
              "text": "🌟 WebSys ドキュメントポータル",
              "line_number": 154
            },
            {
              "level": 2,
              "text": "🚀 はじめに（5分で理解）",
              "line_number": 156
            },
            {
              "level": 2,
              "text": "👨‍💻 開発者向け",
              "line_number": 161
            },
            {
              "level": 2,
              "text": "🔧 運用・保守",
              "line_number": 166
            },
            {
              "level": 2,
              "text": "🏗️ アーキテクチャ・設計",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "1.3 重複ドキュメント統合",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "3.2 🚀 Phase 2: 構造改善 (実装準備100%完了)",
              "line_number": 184
            },
            {
              "level": 4,
              "text": "🎯 目標: ドキュメント体系の論理的再構成・自動化拡張",
              "line_number": 186
            },
            {
              "level": 4,
              "text": "2.1 ディレクトリ構造再編成",
              "line_number": 188
            },
            {
              "level": 4,
              "text": "2.2 自動化導入",
              "line_number": 222
            },
            {
              "level": 1,
              "text": ".github/workflows/docs-validation.yml",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "3.3 📋 Phase 3: 高度化・自動化（設計完了・実装計画確定）",
              "line_number": 250
            },
            {
              "level": 4,
              "text": "🎯 目標: 次世代ドキュメント体験の実現・グローバル標準達成",
              "line_number": 252
            },
            {
              "level": 4,
              "text": "3.1 インタラクティブドキュメントサイト構築",
              "line_number": 254
            },
            {
              "level": 4,
              "text": "3.2 スマートナビゲーション",
              "line_number": 268
            },
            {
              "level": 4,
              "text": "3.3 多言語対応",
              "line_number": 285
            },
            {
              "level": 1,
              "text": "i18n設定",
              "line_number": 287
            },
            {
              "level": 2,
              "text": "4. 実装計画と工数見積もり",
              "line_number": 301
            },
            {
              "level": 3,
              "text": "4.1 Phase 1: 緊急改善（工数: 3-5人日）",
              "line_number": 303
            },
            {
              "level": 4,
              "text": "🎯 成果指標",
              "line_number": 311
            },
            {
              "level": 3,
              "text": "4.2 Phase 2: 構造改善（工数: 8-12人日）",
              "line_number": 316
            },
            {
              "level": 4,
              "text": "🎯 成果指標",
              "line_number": 325
            },
            {
              "level": 3,
              "text": "4.3 Phase 3: 高度化（工数: 15-20人日）",
              "line_number": 330
            },
            {
              "level": 4,
              "text": "🎯 成果指標",
              "line_number": 340
            },
            {
              "level": 2,
              "text": "5. リスク管理",
              "line_number": 347
            },
            {
              "level": 3,
              "text": "5.1 技術的リスク",
              "line_number": 349
            },
            {
              "level": 3,
              "text": "5.2 運用リスク",
              "line_number": 357
            },
            {
              "level": 3,
              "text": "5.3 コンティンジェンシープラン",
              "line_number": 365
            },
            {
              "level": 4,
              "text": "緊急時対応",
              "line_number": 367
            },
            {
              "level": 2,
              "text": "6. 成功指標（KPI）",
              "line_number": 382
            },
            {
              "level": 3,
              "text": "6.1 定量指標",
              "line_number": 384
            },
            {
              "level": 4,
              "text": "ユーザビリティ指標",
              "line_number": 386
            },
            {
              "level": 4,
              "text": "品質指標",
              "line_number": 392
            },
            {
              "level": 4,
              "text": "効率性指標",
              "line_number": 398
            },
            {
              "level": 3,
              "text": "6.2 定性指標",
              "line_number": 404
            },
            {
              "level": 4,
              "text": "利用者満足度",
              "line_number": 406
            },
            {
              "level": 4,
              "text": "ビジネス指標",
              "line_number": 415
            },
            {
              "level": 2,
              "text": "7. 実装ロードマップ",
              "line_number": 423
            },
            {
              "level": 3,
              "text": "7.1 タイムライン",
              "line_number": 425
            },
            {
              "level": 3,
              "text": "7.2 マイルストーン",
              "line_number": 448
            },
            {
              "level": 4,
              "text": "✅ マイルストーン1: 緊急改善完了（2025-09-30 完了）",
              "line_number": 450
            },
            {
              "level": 4,
              "text": "🚀 マイルストーン2: 構造改善準備完了（2025-09-30）",
              "line_number": 456
            },
            {
              "level": 4,
              "text": "📋 マイルストーン3: 高度化設計完了（2025-09-30）",
              "line_number": 462
            },
            {
              "level": 2,
              "text": "8. 投資対効果分析",
              "line_number": 470
            },
            {
              "level": 3,
              "text": "8.1 コスト分析",
              "line_number": 472
            },
            {
              "level": 4,
              "text": "人的コスト (実績・計画)",
              "line_number": 474
            },
            {
              "level": 4,
              "text": "技術コスト",
              "line_number": 500
            },
            {
              "level": 3,
              "text": "8.2 効果分析",
              "line_number": 505
            },
            {
              "level": 4,
              "text": "直接効果（年間）",
              "line_number": 507
            },
            {
              "level": 4,
              "text": "間接効果（年間）",
              "line_number": 512
            },
            {
              "level": 4,
              "text": "ROI計算 (更新版)",
              "line_number": 517
            },
            {
              "level": 1,
              "text": "Phase1実績効果",
              "line_number": 519
            },
            {
              "level": 1,
              "text": "全体計画更新",
              "line_number": 525
            },
            {
              "level": 1,
              "text": "Phase1効果により全体ROI大幅改善",
              "line_number": 531
            },
            {
              "level": 2,
              "text": "9. 次のアクション (更新版)",
              "line_number": 537
            },
            {
              "level": 3,
              "text": "9.1 ✅ Phase1完了項目 (2025-09-30完了)",
              "line_number": 539
            },
            {
              "level": 3,
              "text": "9.2 🚀 Phase2実行準備完了項目 (即座開始可能)",
              "line_number": 545
            },
            {
              "level": 3,
              "text": "9.3 📋 Phase3設計完了項目 (実装計画確定)",
              "line_number": 550
            },
            {
              "level": 3,
              "text": "9.4 🎯 推奨次期アクション",
              "line_number": 555
            },
            {
              "level": 2,
              "text": "10. 結論と提言",
              "line_number": 560
            },
            {
              "level": 3,
              "text": "10.1 総合評価",
              "line_number": 562
            },
            {
              "level": 3,
              "text": "10.2 戦略的重要性",
              "line_number": 566
            },
            {
              "level": 3,
              "text": "10.3 最終提言",
              "line_number": 570
            },
            {
              "level": 4,
              "text": "🎯 戦略的提言",
              "line_number": 572
            },
            {
              "level": 4,
              "text": "💡 成功の鍵",
              "line_number": 577
            },
            {
              "level": 4,
              "text": "🚀 実現された成果・期待される成果",
              "line_number": 582
            },
            {
              "level": 2,
              "text": "承認と改訂",
              "line_number": 591
            },
            {
              "level": 3,
              "text": "承認履歴",
              "line_number": 593
            },
            {
              "level": 3,
              "text": "レビュー計画",
              "line_number": 599
            },
            {
              "level": 3,
              "text": "連絡先",
              "line_number": 604
            }
          ],
          "hierarchy_issues": [
            {
              "line": 151,
              "issue": "見出しレベル4が2から飛躍"
            },
            {
              "line": 177,
              "issue": "見出しレベル4が2から飛躍"
            },
            {
              "line": 250,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 17,
          "internal": 17,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "🚀 クイックスタート",
              "getting-started/README.md"
            ],
            [
              "👨‍💻 開発ガイド",
              "guides/development.md"
            ],
            [
              "📋 API仕様",
              "reference/api/README.md"
            ],
            [
              "システム概要",
              "MASTER_REFERENCE.md#システム概要"
            ],
            [
              "クイックスタート",
              "getting-started/quick-start.md"
            ],
            [
              "15分チュートリアル",
              "getting-started/tutorial.md"
            ],
            [
              "環境構築",
              "02-環境構築手順.md"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "API仕様",
              "07-API仕様書.md"
            ],
            [
              "デプロイ手順",
              "05-デプロイ手順.md"
            ],
            [
              "トラブルシューティング",
              "06-トラブルシューティング.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "システム設計",
              "04-システム設計.md"
            ],
            [
              "共通機能保護戦略",
              "70-共通機能保護戦略設計書.md"
            ],
            [
              "企業向けカスタマイズ",
              "71-企業向けフォルダ構成サンプル.md"
            ],
            [
              "70-共通機能保護戦略設計書.md",
              "70-共通機能保護戦略設計書.md"
            ],
            [
              "71-企業向けフォルダ構成サンプル.md",
              "71-企業向けフォルダ構成サンプル.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 16,
          "inline_code": 31,
          "languages": {
            "typescript": 2,
            "yaml": 7,
            "markdown": 2,
            "javascript": 1,
            "mermaid": 1
          },
          "details": [
            [
              "",
              "レビュー対象: 73ドキュメントファイル\n├── 基本ドキュメント: 00-20番台（22ファイル）\n├── 機能設計・システム仕様: 21-40番台（20ファイル）\n├── 高度機能・改善提案: 41-71番台（31ファイル）\n└── 機能設計書・システム仕様書: 階層構造（多数ファイル）"
            ],
            [
              "typescript",
              "// 統一Prismaクライアント使用ガイドライン例\nimport { prisma } from '../lib/prisma';  // ✅ 正しい方法\n// new PrismaClient() は使用禁止        // ❌ 違反例"
            ],
            [
              "",
              "問題: 73ファイルから目的の情報を見つけるのに過度な時間が必要\n影響: 新規参加者の学習コスト増、開発効率低下\n現状: 平均3-5分の情報検索時間\n目標: 30秒以内での情報アクセス"
            ],
            [
              "yaml",
              "技術バージョン表記例:\n- Vue.js: 3.4.29 (一部ファイル) vs 3.4+ (他ファイル)\n- Element Plus: 2.8.0 vs 2.5.1\n- PostgreSQL: 15 vs 15-alpine"
            ],
            [
              "markdown",
              "# docs/MASTER_REFERENCE.md（新規作成）\n## 技術スタック（単一真実源）\n- Vue.js: 3.4.29\n- Element Plus: 2.8.0\n- Express: 4.19.2\n- PostgreSQL: 15\n- TypeScript: 5.4.5\n\n## システム概要\n[統一されたシステム概要]\n\n## 主要リンク\n- [🚀 クイックスタート](./getting-started/README.md)\n- [👨‍💻 開発ガイド](./guides/development.md)\n- [📋 API仕様](./reference/api/README.md)"
            ],
            [
              "markdown",
              "# docs/README.md（大幅改訂）\n# 🌟 WebSys ドキュメントポータル\n\n## 🚀 はじめに（5分で理解）\n- [システム概要](./MASTER_REFERENCE.md#システム概要)\n- [クイックスタート](./getting-started/quick-start.md)\n- [15分チュートリアル](./getting-started/tutorial.md)\n\n## 👨‍💻 開発者向け\n- [環境構築](./02-環境構築手順.md)\n- [開発ガイド](./03-開発ガイド.md)\n- [API仕様](./07-API仕様書.md)\n\n## 🔧 運用・保守\n- [デプロイ手順](./05-デプロイ手順.md)\n- [トラブルシューティング](./06-トラブルシューティング.md)\n- [運用手順書](./64-運用手順書.md)\n\n## 🏗️ アーキテクチャ・設計\n- [システム設計](./04-システム設計.md)\n- [共通機能保護戦略](./70-共通機能保護戦略設計書.md)\n- [企業向けカスタマイズ](./71-企業向けフォルダ構成サンプル.md)"
            ],
            [
              "",
              "docs/\n├── 📚 getting-started/           # 初心者向け（学習コスト削減）\n│   ├── README.md                # クイックスタート\n│   ├── installation.md          # 環境構築\n│   ├── tutorial.md              # 15分チュートリアル\n│   └── first-project.md         # 初回プロジェクト作成\n├── 📖 guides/                   # 実践ガイド（業務効率化）\n│   ├── development.md           # 開発手順\n│   ├── deployment.md            # デプロイ手順\n│   ├── troubleshooting.md       # トラブルシューティング\n│   └── best-practices.md        # ベストプラクティス\n├── 📋 reference/                # リファレンス（辞書的利用）\n│   ├── api/                     # API仕様書\n│   ├── components/              # コンポーネント仕様\n│   ├── database/                # データベース設計\n│   └── configurations/          # 設定ファイル\n├── 🏗️ architecture/             # アーキテクチャ（設計理解）\n│   ├── system-design.md         # システム設計\n│   ├── security.md              # セキュリティ設計\n│   ├── performance.md           # 性能設計\n│   └── microservices.md         # マイクロサービス分割\n├── 🔧 advanced/                 # 高度な機能（専門利用）\n│   ├── customization/           # カスタマイズガイド\n│   ├── enterprise/              # 企業向け機能\n│   ├── monitoring/              # 監視・運用\n│   └── extensions/              # 拡張機能\n└── 📈 reports/                  # レポート・分析結果\n    ├── performance/             # 性能分析\n    ├── reviews/                 # レビュー記録\n    └── improvements/            # 改善提案"
            ],
            [
              "yaml",
              "# .github/workflows/docs-validation.yml\nname: Documentation Quality Assurance\non: [push, pull_request]\n\njobs:\n  validate-docs:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Check broken links\n        run: npm run docs:check-links\n\n      - name: Validate technical versions\n        run: npm run docs:validate-versions\n\n      - name: Check for duplicates\n        run: npm run docs:check-duplicates\n\n      - name: Spell check\n        run: npm run docs:spellcheck\n\n      - name: Generate navigation\n        run: npm run docs:generate-nav"
            ],
            [
              "typescript",
              "// docs-site/ 新規構築\n// 技術選択: VitePress (Vue.js生態系との親和性)\ninterface DocsConfig {\n  // インタラクティブ機能\n  liveCodeExamples: boolean;      // ライブコード実行\n  searchEngine: 'algolia';       // 高度検索\n  versionControl: 'git-based';   // バージョン管理\n  feedback: 'github-issues';     // フィードバック収集\n  analytics: 'google-analytics'; // 利用状況分析\n}"
            ],
            [
              "javascript",
              "// 自動推奨機能\nconst recommendedDocs = {\n  role: 'developer',\n  current: 'api-reference',\n  recommended: [\n    'development-guide',\n    'best-practices',\n    'troubleshooting'\n  ],\n  learningPath: [\n    'getting-started → development → api → advanced'\n  ]\n};"
            ],
            [
              "yaml",
              "# i18n設定\nlanguages:\n  ja:\n    name: \"日本語\"\n    priority: 1\n    completeness: 100%\n  en:\n    name: \"English\"\n    priority: 2\n    completeness: 0%   # 段階的作成予定"
            ],
            [
              "yaml",
              "rollback_plan:\n  trigger: \"重大な問題発生時\"\n  action: \"旧ドキュメント体系への即座復旧\"\n  duration: \"30分以内\"\n\nmigration_support:\n  period: \"2週間の並行運用\"\n  support: \"専用ヘルプデスク設置\"\n  training: \"移行説明会の実施\""
            ],
            [
              "yaml",
              "feedback_metrics:\n  overall_satisfaction: \"> 4.5/5.0\"\n  ease_of_use: \"> 4.3/5.0\"\n  information_quality: \"> 4.4/5.0\"\n  navigation: \"> 4.2/5.0\""
            ],
            [
              "mermaid",
              "gantt\n    title ドキュメント改善実装計画・実施状況\n    dateFormat  YYYY-MM-DD\n    section Phase 1: 緊急改善 ✅完了\n    マスタードキュメント作成    :done, p1-1, 2025-09-30, 1d\n    ナビゲーション改善         :done, p1-2, 2025-09-30, 1d\n    重複解消・統合            :done, p1-3, 2025-09-30, 1d\n    自動化スクリプト導入       :done, p1-4, 2025-09-30, 1d\n\n    section Phase 2: 構造改善 🚀準備完了\n    CI/CD統合               :ready, p2-1, 2025-10-01, 3d\n    品質保証体制             :ready, p2-2, 2025-10-01, 2d\n    高度チェック機能          :ready, p2-3, after p2-2, 3d\n\n    section Phase 3: 高度化 📋計画中\n    サイト構築              :p3-1, 2025-10-15, 7d\n    インタラクティブ機能     :p3-2, after p3-1, 4d\n    多言語対応              :p3-3, after p3-2, 3d"
            ],
            [
              "yaml",
              "phase_1_実績:\n  人日: 0.75人日\n  コスト: ¥60,000\n  期間: 1日間\n  効率: 予算の85%削減\n\nphase_2_計画:\n  人日: 8人日\n  コスト: ¥640,000\n  期間: 2週間\n  準備度: 100%完了\n\nphase_3_計画:\n  人日: 15人日\n  コスト: ¥1,200,000\n  期間: 4週間\n  設計完了度: 100%\n\ntotal_更新:\n  人日: 23.75人日 (36%削減)\n  コスト: ¥1,900,000 (36%削減)\n  期間: 7週間 (30%短縮)"
            ],
            [
              "yaml",
              "# Phase1実績効果\nphase1_実績:\n  投資: ¥60,000\n  即座効果: ¥2,400,000/年 (時間削減・効率化)\n  ROI: 4000%\n\n# 全体計画更新\ntotal_investment: ¥1,900,000 + ¥1,200,000/年（運用）\nannual_benefit: ¥14,500,000\nroi_updated: 468%（第1年度・36%向上）\npayback_period: 2.1ヶ月 (40%短縮)\n\n# Phase1効果により全体ROI大幅改善\nimmediate_impact: \"自動化・効率化により継続的効果発現\""
            ]
          ]
        },
        "tables": {
          "total": 9,
          "total_rows": 48
        }
      },
      "readability": {
        "score": 96.21,
        "sentences": 182,
        "avg_words_per_sentence": 9.04,
        "long_sentences": 23,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 76,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 81.76
    },
    "docs/24-権限テンプレート単体試験仕様書.md": {
      "basic_metrics": {
        "lines": 260,
        "words": 1175,
        "characters": 8000,
        "avg_line_length": 30.76923076923077
      },
      "structure_analysis": {
        "headers": {
          "total": 25,
          "hierarchy": [
            {
              "level": 1,
              "text": "権限テンプレート機能 単体試験仕様書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. バックエンドAPI単体試験",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "1.1 権限テンプレート一覧取得API",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "1.2 権限テンプレート作成API",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "1.3 権限テンプレート更新API",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "1.4 権限テンプレート削除API",
              "line_number": 114
            },
            {
              "level": 3,
              "text": "1.5 権限テンプレート適用API",
              "line_number": 125
            },
            {
              "level": 2,
              "text": "2. フロントエンドコンポーネント単体試験",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "2.1 PermissionTemplate.vue コンポーネント",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "2.2 権限設定テーブル",
              "line_number": 163
            },
            {
              "level": 2,
              "text": "3. データベース操作単体試験",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "3.1 permission_templates テーブル",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "3.2 permission_template_features テーブル",
              "line_number": 184
            },
            {
              "level": 2,
              "text": "4. 統合試験項目",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "4.1 エンドツーエンド試験",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "5. 性能試験項目",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "5.1 負荷試験",
              "line_number": 208
            },
            {
              "level": 2,
              "text": "6. セキュリティ試験項目",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "6.1 認証・認可",
              "line_number": 219
            },
            {
              "level": 2,
              "text": "7. 試験実行計画",
              "line_number": 229
            },
            {
              "level": 3,
              "text": "7.1 試験環境",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "7.2 試験データ",
              "line_number": 236
            },
            {
              "level": 3,
              "text": "7.3 実行順序",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "7.4 成功基準",
              "line_number": 250
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 45,
          "languages": {
            "json": 2
          },
          "details": [
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"管理者テンプレート\",\n      \"description\": \"管理者用権限テンプレート\",\n      \"category\": \"ADMIN\",\n      \"isPreset\": true,\n      \"displayOrder\": 1,\n      \"features\": [\n        {\n          \"featureId\": 1,\n          \"featureCode\": \"USER_MANAGEMENT\",\n          \"featureName\": \"ユーザー管理\",\n          \"featureCategory\": \"ADMIN\",\n          \"permissions\": {\n            \"canView\": true,\n            \"canCreate\": true,\n            \"canEdit\": true,\n            \"canDelete\": false,\n            \"canApprove\": true,\n            \"canExport\": true\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"timestamp\": \"2025-09-25T10:00:00.000Z\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"companyId\": 1,\n  \"name\": \"新規テンプレート\",\n  \"description\": \"テスト用テンプレート\",\n  \"category\": \"CUSTOM\",\n  \"features\": [\n    {\n      \"featureId\": 1,\n      \"canView\": true,\n      \"canCreate\": false,\n      \"canEdit\": false,\n      \"canDelete\": false,\n      \"canApprove\": false,\n      \"canExport\": true\n    }\n  ]\n}"
            ]
          ]
        },
        "tables": {
          "total": 12,
          "total_rows": 87
        }
      },
      "readability": {
        "score": 56.32,
        "sentences": 38,
        "avg_words_per_sentence": 30.92,
        "long_sentences": 15,
        "readability_level": "やや読みにくい"
      },
      "structure_score": 56,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 61.8
    },
    "docs/36-システム監視・ヘルスチェック機能完成報告書.md": {
      "basic_metrics": {
        "lines": 272,
        "words": 626,
        "characters": 5702,
        "avg_line_length": 20.96323529411765
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "🏥 システム監視・ヘルスチェック機能完成報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🚀 実装成果",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1. バックエンド監視システム実装",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2. フロントエンド監視ダッシュボード実装",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "3. 高度な監視機能",
              "line_number": 30
            },
            {
              "level": 4,
              "text": "🖥️ システムメトリクス監視",
              "line_number": 32
            },
            {
              "level": 4,
              "text": "🔍 サービス状態監視",
              "line_number": 62
            },
            {
              "level": 2,
              "text": "📊 実装詳細",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "API エンドポイント一覧",
              "line_number": 79
            },
            {
              "level": 3,
              "text": "WebSocket イベント",
              "line_number": 90
            },
            {
              "level": 3,
              "text": "リアルタイム監視機能",
              "line_number": 102
            },
            {
              "level": 2,
              "text": "🎯 主要機能",
              "line_number": 120
            },
            {
              "level": 3,
              "text": "1. 全体ステータス表示",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "2. サービス別詳細監視",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "3. 高度な分析機能",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "4. 運用支援機能",
              "line_number": 138
            },
            {
              "level": 2,
              "text": "🧪 実装検証結果",
              "line_number": 144
            },
            {
              "level": 3,
              "text": "フロントエンド検証",
              "line_number": 146
            },
            {
              "level": 3,
              "text": "バックエンド検証",
              "line_number": 156
            },
            {
              "level": 3,
              "text": "統合テスト",
              "line_number": 166
            },
            {
              "level": 2,
              "text": "🎨 UI/UX設計",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "ダッシュボード構成",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "インタラクション設計",
              "line_number": 183
            },
            {
              "level": 2,
              "text": "📈 期待される効果",
              "line_number": 205
            },
            {
              "level": 3,
              "text": "1. 運用安定性向上",
              "line_number": 207
            },
            {
              "level": 3,
              "text": "2. 運用効率向上",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "3. 意思決定支援",
              "line_number": 217
            },
            {
              "level": 2,
              "text": "🔮 今後の拡張可能性",
              "line_number": 222
            },
            {
              "level": 3,
              "text": "短期拡張",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "長期拡張",
              "line_number": 229
            },
            {
              "level": 2,
              "text": "📝 使用方法",
              "line_number": 234
            },
            {
              "level": 3,
              "text": "基本監視手順",
              "line_number": 236
            },
            {
              "level": 3,
              "text": "高度な活用方法",
              "line_number": 244
            },
            {
              "level": 2,
              "text": "🏆 技術的成果",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "革新的要素",
              "line_number": 254
            },
            {
              "level": 3,
              "text": "品質指標",
              "line_number": 260
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 21,
          "languages": {
            "typescript": 8
          },
          "details": [
            [
              "typescript",
              "interface SystemMetrics {\n  cpu: {\n    usage: number        // CPU使用率\n    cores: number        // CPUコア数\n    loadAverage: number[]  // ロードアベレージ\n  }\n  memory: {\n    used: number         // 使用メモリ\n    free: number         // 空きメモリ\n    total: number        // 総メモリ\n    percentage: number   // 使用率\n  }\n  disk: {\n    used: number         // 使用ディスク\n    free: number         // 空きディスク\n    total: number        // 総容量\n    percentage: number   // 使用率\n  }\n  application: {\n    uptime: number           // 稼働時間\n    activeSessions: number   // アクティブセッション数\n    totalRequests: number    // 総リクエスト数\n    errorRate: number        // エラー率\n    averageResponseTime: number  // 平均応答時間\n  }\n}"
            ],
            [
              "typescript",
              "interface ServiceHealth {\n  status: 'healthy' | 'degraded' | 'unhealthy'\n  responseTime?: number\n  error?: string\n  details?: {\n    connectionPool: string\n    queryPerformance: string\n    activeSessions: number\n    errorRate: string\n  }\n}"
            ],
            [
              "",
              "GET  /api/health                 - 基本ヘルスチェック（認証不要）\nGET  /api/health/detailed        - 詳細ヘルスチェック（認証必要）\nGET  /api/health/metrics         - システムメトリクス取得\nGET  /api/health/live            - ライブネスプローブ（K8s用）\nGET  /api/health/ready           - レディネスプローブ（K8s用）\nPOST /api/health/loadtest        - 負荷テスト実行（管理者のみ）\nGET  /api/health/history         - ヘルスチェック履歴取得"
            ],
            [
              "typescript",
              "// クライアント → サーバー\nsocket.emit('join-room', 'system-health')   // 監視ルーム参加\nsocket.emit('leave-room', 'system-health')  // 監視ルーム退出\n\n// サーバー → クライアント\n'health-update'  // ヘルスメトリクス更新\n'health-alert'   // システムアラート\n'connected'      // 接続確立通知"
            ],
            [
              "typescript",
              "// サーバー起動時に自動開始\nhealthService.startRealTimeMonitoring(30000) // 30秒間隔\n\n// ステータス変化検知\nprivate checkStatusChange(healthResult: HealthCheckResult): void {\n  if (currentStatus !== this.lastHealthStatus) {\n    webSocketService.broadcastHealthAlert({\n      level: 'critical' | 'warning' | 'info',\n      service: 'system',\n      message: 'システム状態が変化しました',\n      details: healthResult\n    })\n  }\n}"
            ],
            [
              "typescript",
              "✅ Vue 3 Composition API: 正しい実装パターン\n✅ Element Plus統合: UI コンポーネント完全対応\n✅ WebSocket統合: リアルタイム通信実装\n✅ TypeScript型安全性: 完全な型定義\n✅ レスポンシブ対応: 全画面サイズ対応\n✅ エラーハンドリング: 適切なエラー表示"
            ],
            [
              "typescript",
              "✅ システムメトリクス収集: CPU・メモリ・ディスク・ネットワーク\n✅ ヘルスチェックロジック: データベース・アプリケーション監視\n✅ WebSocket配信: リアルタイムデータ配信\n✅ 負荷テスト機能: パフォーマンス計測実装\n✅ API設計: RESTful・適切なエラーハンドリング\n✅ 認証・認可: 管理者権限チェック完備"
            ],
            [
              "typescript",
              "✅ リアルタイム通信: WebSocketデータ送受信\n✅ ステータス変化検知: アラート自動発信\n✅ 負荷テスト実行: パフォーマンス計測正常\n✅ 履歴管理: データ保存・表示機能\n✅ 自動更新: 定期的データ更新動作"
            ],
            [
              "typescript",
              "// 自動更新制御\nconst toggleAutoRefresh = () => {\n  if (autoRefresh.value) {\n    refreshInterval = setInterval(refreshData, 30000)\n    ElMessage.success('自動更新を開始しました（30秒間隔）')\n  } else {\n    clearInterval(refreshInterval)\n    ElMessage.info('自動更新を停止しました')\n  }\n}\n\n// 負荷テスト実行\nconst performLoadTest = async () => {\n  loadTesting.value = true\n  const result = await runLoadTest()\n  loadTestDialog.value = true\n  ElMessage.success('負荷テストが完了しました')\n}"
            ],
            [
              "",
              "1. サイドメニュー → 「システム監視」選択\n2. ダッシュボード表示 → システム状態確認\n3. 自動更新ON → リアルタイム監視開始\n4. 異常検知時 → 詳細確認・対応実施"
            ],
            [
              "",
              "- 負荷テスト: 「負荷テスト」ボタンでパフォーマンス確認\n- 履歴分析: ヘルスチェック履歴での傾向把握\n- アラート監視: WebSocketアラートでの即座対応\n- 詳細診断: JSON詳細表示での深度調査"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 92.7,
        "sentences": 40,
        "avg_words_per_sentence": 15.65,
        "long_sentences": 8,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 52.519999999999996,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.32
    },
    "docs/README.md": {
      "basic_metrics": {
        "lines": 147,
        "words": 390,
        "characters": 3525,
        "avg_line_length": 23.979591836734695
      },
      "structure_analysis": {
        "headers": {
          "total": 28,
          "hierarchy": [
            {
              "level": 1,
              "text": "WebSys ドキュメントハブ",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "🚀 クイックナビゲーション",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "🎯 目的別アクセス",
              "line_number": 5
            },
            {
              "level": 4,
              "text": "👨‍💻 **開発者向け（初回30分）**",
              "line_number": 7
            },
            {
              "level": 4,
              "text": "🏢 **システム管理者向け（初回60分）**",
              "line_number": 12
            },
            {
              "level": 4,
              "text": "📊 **プロジェクトマネージャー向け（初回45分）**",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "💡 **緊急時・問題解決**",
              "line_number": 22
            },
            {
              "level": 2,
              "text": "🎯 プロジェクト状況（2025-09-30現在）",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "📊 完成度指標",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "🏆 主要成果",
              "line_number": 40
            },
            {
              "level": 2,
              "text": "📚 カテゴリ別ドキュメント",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "🚀 **はじめに・基本情報**",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "🏗️ **アーキテクチャ・設計**",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "🔧 **運用・保守**",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "📋 **仕様・リファレンス**",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "🧪 **テスト・品質保証**",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "📊 **分析・改善**",
              "line_number": 79
            },
            {
              "level": 2,
              "text": "🎯 実装中プロジェクト",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "🔄 **マイクロサービス化進行中**",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "📊 **ドキュメント改善進行中**",
              "line_number": 94
            },
            {
              "level": 2,
              "text": "🔗 重要リンク",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "📊 **監視・ログ**",
              "line_number": 103
            },
            {
              "level": 3,
              "text": "🔧 **開発環境**",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "📞 **サポート**",
              "line_number": 112
            },
            {
              "level": 2,
              "text": "📝 ドキュメント管理ルール",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "📂 ファイル命名規則",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "📋 番号体系",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "🔄 更新ルール",
              "line_number": 134
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 42,
          "internal": 38,
          "external": 4,
          "empty": 0,
          "internal_details": [
            [
              "マスタードキュメント",
              "MASTER_REFERENCE.md"
            ],
            [
              "環境構築手順",
              "02-環境構築手順.md"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "デプロイ手順",
              "05-デプロイ手順.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "ログ監視システム",
              "01_機能設計書/12_ログ監視システム/"
            ],
            [
              "システム概要",
              "01-システム概要.md"
            ],
            [
              "機能一覧",
              "01_機能設計書/機能一覧と概要.md"
            ],
            [
              "改善計画",
              "72-ドキュメント総合レビュー結果・改善計画書.md"
            ],
            [
              "トラブルシューティング",
              "06-トラブルシューティング.md"
            ],
            [
              "不具合管理表",
              "21-不具合管理表.md"
            ],
            [
              "API仕様書",
              "07-API仕様書.md"
            ],
            [
              "MASTER_REFERENCE.md",
              "MASTER_REFERENCE.md"
            ],
            [
              "システム概要",
              "01-システム概要.md"
            ],
            [
              "環境構築手順",
              "02-環境構築手順.md"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "システム設計",
              "04-システム設計.md"
            ],
            [
              "詳細設計",
              "DETAILED_DESIGN.md"
            ],
            [
              "共通機能保護戦略",
              "70-共通機能保護戦略設計書.md"
            ],
            [
              "水平展開実装計画",
              "66-水平展開実装計画.md"
            ],
            [
              "デプロイ手順",
              "05-デプロイ手順.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "トラブルシューティング",
              "06-トラブルシューティング.md"
            ],
            [
              "API仕様書",
              "07-API仕様書.md"
            ],
            [
              "コンポーネント仕様書",
              "08-コンポーネント仕様書.md"
            ],
            [
              "機能一覧",
              "01_機能設計書/機能一覧と概要.md"
            ],
            [
              "データベース設計",
              "01_機能設計書/07_データベース設計/データベース設計書.md"
            ],
            [
              "テスト仕様書",
              "19-テスト仕様書.md"
            ],
            [
              "不具合管理表",
              "21-不具合管理表.md"
            ],
            [
              "テスト実行報告書",
              "20-テスト実行報告書.md"
            ],
            [
              "ドキュメント総合レビュー",
              "72-ドキュメント総合レビュー結果・改善計画書.md"
            ],
            [
              "対策実施総合レポート",
              "65-対策実施総合レポート.md"
            ],
            [
              "性能テスト詳細計画書",
              "63-性能テスト詳細計画書.md"
            ],
            [
              "詳細計画書",
              "66-水平展開実装計画.md"
            ],
            [
              "ログ監視システム",
              "01_機能設計書/12_ログ監視システム/ログ監視システム設計書.md"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "トラブルシューティング",
              "06-トラブルシューティング.md"
            ]
          ],
          "external_details": [
            [
              "アクセス方法",
              "http://localhost:3000/log-monitoring"
            ],
            [
              "http://localhost:3000",
              "http://localhost:3000"
            ],
            [
              "http://localhost:8000",
              "http://localhost:8000"
            ],
            [
              "http://localhost:5555",
              "http://localhost:5555"
            ]
          ]
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 3,
          "languages": {
            "yaml": 1
          },
          "details": [
            [
              "yaml",
              "システム完成度: 100%\nBUG解決率: 100% (19/19件完了)\n水平展開効果: 657% (52件予防修正)\nテストカバレッジ: 95%\nAPI稼働率: 100%"
            ],
            [
              "",
              "[連番]-[日本語ファイル名].md"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 6
        }
      },
      "readability": {
        "score": 98.74,
        "sentences": 95,
        "avg_words_per_sentence": 4.11,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60.8,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.44
    },
    "docs/18-プロジェクトステータスボード.md": {
      "basic_metrics": {
        "lines": 230,
        "words": 799,
        "characters": 5697,
        "avg_line_length": 24.769565217391303
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "🎯 プロジェクトステータスボード",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "🚀 システム実装状況",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "✅ 完全実装済み（15機能）",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "🟡 部分実装（0機能）",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "❌ 未実装（0機能）",
              "line_number": 32
            },
            {
              "level": 2,
              "text": "🐛 BUG管理状況",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "✅ 修正完了",
              "line_number": 39
            },
            {
              "level": 3,
              "text": "🔧 対応中・未対応",
              "line_number": 52
            },
            {
              "level": 2,
              "text": "📈 2025-09-27 の最終修正成果",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "🚨 システム監視エラー修正完了",
              "line_number": 65
            },
            {
              "level": 2,
              "text": "📈 2025-09-26 の緊急修正成果",
              "line_number": 72
            },
            {
              "level": 3,
              "text": "🚨 CRITICAL BUG修正完了",
              "line_number": 74
            },
            {
              "level": 2,
              "text": "📈 2025-09-25 の成果",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "🎉 権限テンプレート機能完全実装",
              "line_number": 84
            },
            {
              "level": 3,
              "text": "📊 実装数値（2025-09-25）",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "🧪 テスト結果（2025-09-25）",
              "line_number": 112
            },
            {
              "level": 2,
              "text": "📋 今後のロードマップ",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "🚨 今日中（Priority 1）",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "📅 今週中（Priority 2）",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "🔮 来週以降（Priority 3）",
              "line_number": 143
            },
            {
              "level": 2,
              "text": "🔗 クイックアクセス",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "📚 重要ドキュメント",
              "line_number": 152
            },
            {
              "level": 3,
              "text": "🛠️ 開発環境",
              "line_number": 159
            },
            {
              "level": 1,
              "text": "環境起動",
              "line_number": 161
            },
            {
              "level": 1,
              "text": "アプリケーションアクセス",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "🧪 動作確認コマンド",
              "line_number": 171
            },
            {
              "level": 1,
              "text": "統計API確認",
              "line_number": 173
            },
            {
              "level": 1,
              "text": "権限テンプレート確認",
              "line_number": 177
            },
            {
              "level": 1,
              "text": "システムヘルスチェック",
              "line_number": 181
            },
            {
              "level": 2,
              "text": "🎯 成功指標",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "📊 現在の達成状況（2025-09-27）",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "🏆 最終目標達成状況",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "⚡ 次のアクション",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "✅ 完了済み実行",
              "line_number": 206
            },
            {
              "level": 1,
              "text": "✅ ログ監視システム実装ファイルのコミット完了",
              "line_number": 208
            },
            {
              "level": 1,
              "text": "コミットID: 9b7effc",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "📞 確認事項",
              "line_number": 215
            }
          ],
          "hierarchy_issues": [
            {
              "line": 171,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 215,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 5,
          "internal": 5,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "残りの作業一覧",
              "16-残りの作業一覧.md"
            ],
            [
              "即座実行プラン",
              "17-即座実行アクションプラン.md"
            ],
            [
              "未実装機能分析",
              "22-未実装機能分析報告書.md"
            ],
            [
              "テスト実行報告",
              "20-テスト実行報告書.md"
            ],
            [
              "BUG管理表",
              "21-不具合管理表.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 9,
          "languages": {
            "json": 1,
            "bash": 3
          },
          "details": [
            [
              "",
              "権限テンプレート機能:\n  - フロントエンドファイル: 2ファイル（Vue/API）\n  - バックエンドファイル: 1ファイル（ルート追加）\n  - 単体試験ファイル: 2ファイル（BE/FE）\n  - 設計ドキュメント: 3ファイル（仕様・分析・報告）\n\nAPI実装:\n  - 権限テンプレート関連: 6エンドポイント\n  - CRUD操作: 作成・取得・更新・削除・適用・マトリクス\n\nテストカバレッジ:\n  - バックエンドAPI: 30項目（100%カバー）\n  - フロントエンド: 18項目（95%カバー）\n  - 統合・性能・セキュリティ: 15項目\n\nBUG修正: 4件（#002, #005, #006, 認証問題）"
            ],
            [
              "json",
              "{\n  \"権限テンプレート作成\": \"✅ 正常動作・バリデーション完成\",\n  \"権限テンプレート一覧\": \"✅ 検索・フィルタ機能完成\",\n  \"権限テンプレート適用\": \"✅ 部署一括適用・監査ログ完成\",\n  \"プリセット保護\": \"✅ ADMIN/GENERAL/READONLY保護完成\",\n  \"権限マトリクス\": \"✅ 部署×機能権限一覧表示完成\",\n  \"単体試験実行\": \"✅ Jest/Vitest 正常実行確認\",\n  \"設計書整合性\": \"✅ 未記載機能洗い出し完了\",\n  \"システム完成度\": \"✅ 98%達成\"\n}"
            ],
            [
              "bash",
              "# 環境起動\ncd /home/typho/src/elementplus/websys/infrastructure/docker/development\ndocker compose up -d\n\n# アプリケーションアクセス\nFrontend: http://localhost:3000\nBackend:  http://localhost:8000\nDatabase: localhost:5433"
            ],
            [
              "bash",
              "# 統計API確認\ncurl -X GET \"http://localhost:8000/api/statistics/dashboard\" \\\n  -H \"Authorization: Bearer $TOKEN\"\n\n# 権限テンプレート確認\ncurl -X GET \"http://localhost:8000/api/permissions/templates?companyId=1\" \\\n  -H \"Authorization: Bearer $TOKEN\"\n\n# システムヘルスチェック\ncurl http://localhost:8000/health"
            ],
            [
              "bash",
              "# ✅ ログ監視システム実装ファイルのコミット完了\ncd /home/typho/src/elementplus/websys/workspace\ngit add backend/src/services/LogService.ts backend/prisma/schema.prisma\ngit commit -m \"feat: ログ監視システム完全実装とスキーマ修正\"\n# コミットID: 9b7effc"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 31
        }
      },
      "readability": {
        "score": 68.73,
        "sentences": 30,
        "avg_words_per_sentence": 26.63,
        "long_sentences": 8,
        "readability_level": "普通"
      },
      "structure_score": 64.98,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.11
    },
    "docs/54-認証改善検証レポート.md": {
      "basic_metrics": {
        "lines": 279,
        "words": 591,
        "characters": 4723,
        "avg_line_length": 16.92831541218638
      },
      "structure_analysis": {
        "headers": {
          "total": 46,
          "hierarchy": [
            {
              "level": 1,
              "text": "認証・初期設定改善検証レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 改善実装内容",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "1.1 デフォルトパスワード設定機能",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "1.2 パスワードリセット機能",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "1.3 初回ログイン判定機能",
              "line_number": 21
            },
            {
              "level": 3,
              "text": "1.4 デモユーザー自動作成",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "2. 検証結果",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "2.1 デモユーザーログインテスト",
              "line_number": 35
            },
            {
              "level": 4,
              "text": "テスト実行",
              "line_number": 37
            },
            {
              "level": 4,
              "text": "結果",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "2.2 作成されたデモユーザー",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "2.3 データベーススキーマ更新",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "追加フィールド",
              "line_number": 76
            },
            {
              "level": 2,
              "text": "3. 新機能API仕様",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "3.1 ユーザー作成API拡張",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "3.2 パスワード変更API",
              "line_number": 113
            },
            {
              "level": 3,
              "text": "3.3 パスワードリセットAPI",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "リセット要求",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "リセット実行",
              "line_number": 141
            },
            {
              "level": 2,
              "text": "4. セキュリティ強化内容",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "4.1 パスワードポリシー",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "4.2 トークン管理",
              "line_number": 158
            },
            {
              "level": 3,
              "text": "4.3 情報漏洩対策",
              "line_number": 163
            },
            {
              "level": 2,
              "text": "5. 改善効果測定",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "5.1 Before/After比較",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "5.2 ユーザビリティ向上",
              "line_number": 179
            },
            {
              "level": 4,
              "text": "管理者視点",
              "line_number": 181
            },
            {
              "level": 4,
              "text": "一般ユーザー視点",
              "line_number": 186
            },
            {
              "level": 2,
              "text": "6. 残課題と今後の改善",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "6.1 現在の制限事項",
              "line_number": 193
            },
            {
              "level": 3,
              "text": "6.2 今後の改善計画",
              "line_number": 199
            },
            {
              "level": 4,
              "text": "Phase 2 改善項目",
              "line_number": 201
            },
            {
              "level": 2,
              "text": "7. 運用ガイドライン",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "7.1 デモユーザー管理",
              "line_number": 216
            },
            {
              "level": 1,
              "text": "デモユーザー作成",
              "line_number": 218
            },
            {
              "level": 1,
              "text": "既存確認（重複作成なし）",
              "line_number": 221
            },
            {
              "level": 3,
              "text": "7.2 パスワードリセット運用",
              "line_number": 226
            },
            {
              "level": 1,
              "text": "開発環境でのリセットトークン確認",
              "line_number": 228
            },
            {
              "level": 1,
              "text": "バックエンドログでトークンを確認後、以下実行：",
              "line_number": 229
            },
            {
              "level": 3,
              "text": "7.3 環境変数設定",
              "line_number": 235
            },
            {
              "level": 1,
              "text": ".envファイルに追加推奨",
              "line_number": 237
            },
            {
              "level": 2,
              "text": "8. 総合評価",
              "line_number": 245
            },
            {
              "level": 3,
              "text": "8.1 実装完了度",
              "line_number": 247
            },
            {
              "level": 3,
              "text": "8.2 品質指標",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "8.3 改善効果",
              "line_number": 258
            },
            {
              "level": 2,
              "text": "9. 結論",
              "line_number": 264
            }
          ],
          "hierarchy_issues": [
            {
              "line": 226,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 235,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 30,
          "languages": {
            "bash": 4,
            "json": 6,
            "sql": 1
          },
          "details": [
            [
              "bash",
              "curl -X POST http://localhost:8000/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"demo_admin\", \"password\": \"demo123\"}'"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n      \"id\": 12,\n      \"username\": \"demo_admin\",\n      \"role\": \"ADMIN\",\n      \"companyId\": 1\n    },\n    \"expiresIn\": 28800,\n    \"isFirstLogin\": false,\n    \"requirePasswordChange\": false\n  }\n}"
            ],
            [
              "sql",
              "ALTER TABLE users\nADD COLUMN \"isFirstLogin\" BOOLEAN DEFAULT true,\nADD COLUMN \"passwordResetToken\" TEXT,\nADD COLUMN \"passwordResetExpiry\" TIMESTAMP;"
            ],
            [
              "json",
              "{\n  \"username\": \"new_user\",\n  \"email\": \"user@example.com\",\n  \"name\": \"新規ユーザー\",\n  \"useDefaultPassword\": true,  // 新規追加\n  \"companyId\": 1,\n  \"role\": \"USER\"\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": { \"user\": {...} },\n  \"message\": \"ユーザーが作成されました。初期パスワード: Welcome123!\"\n}"
            ],
            [
              "json",
              "{\n  \"currentPassword\": \"現在のパスワード\",\n  \"newPassword\": \"新しいパスワード\"\n}"
            ],
            [
              "json",
              "{\n  \"email\": \"user@example.com\"\n}"
            ],
            [
              "json",
              "{\n  \"token\": \"リセットトークン\",\n  \"newPassword\": \"新しいパスワード\"\n}"
            ],
            [
              "bash",
              "# デモユーザー作成\nnode scripts/create-demo-users.js\n\n# 既存確認（重複作成なし）\ndocker exec websys_postgres_dev psql -U admin -d websys_db -c \\\n  \"SELECT username, role FROM users WHERE username LIKE 'demo_%';\""
            ],
            [
              "bash",
              "# 開発環境でのリセットトークン確認\n# バックエンドログでトークンを確認後、以下実行：\ncurl -X POST http://localhost:8000/api/auth/reset-password \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"token\": \"TOKEN\", \"newPassword\": \"newpass123\"}'"
            ],
            [
              "bash",
              "# .envファイルに追加推奨\nDEFAULT_USER_PASSWORD=Company2024!\nSMTP_HOST=smtp.example.com\nSMTP_PORT=587\nSMTP_USER=noreply@company.com\nSMTP_PASS=password"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 12
        }
      },
      "readability": {
        "score": 95.16,
        "sentences": 62,
        "avg_words_per_sentence": 9.53,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 49.82,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.98
    },
    "docs/13-環境チェック結果と修正提案.md": {
      "basic_metrics": {
        "lines": 310,
        "words": 623,
        "characters": 5775,
        "avg_line_length": 18.629032258064516
      },
      "structure_analysis": {
        "headers": {
          "total": 40,
          "hierarchy": [
            {
              "level": 1,
              "text": "環境チェック結果と修正提案",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "チェック結果",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "✅ 良好な点",
              "line_number": 9
            },
            {
              "level": 4,
              "text": "1. プロジェクト構造",
              "line_number": 11
            },
            {
              "level": 4,
              "text": "2. 実行権限・スクリプト",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "3. 基本ファイル構成",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "4. ドキュメント整備",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "❌ 重大な問題点",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "1. **ユニバーサルデザイン違反（緊急）**",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "2. **Element Plus 直接使用（重大）**",
              "line_number": 43
            },
            {
              "level": 4,
              "text": "3. **共通テーマライブラリ未適用**",
              "line_number": 58
            },
            {
              "level": 4,
              "text": "4. **package.json依存関係の不整合**",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "⚠️ 改善が必要な点",
              "line_number": 80
            },
            {
              "level": 4,
              "text": "1. npm スクリプトの不整合",
              "line_number": 82
            },
            {
              "level": 4,
              "text": "2. 型チェック設定",
              "line_number": 87
            },
            {
              "level": 4,
              "text": "3. 共通コンポーネントライブラリの未実装",
              "line_number": 90
            },
            {
              "level": 2,
              "text": "修正提案",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "🚨 緊急修正事項（Priority 1）",
              "line_number": 96
            },
            {
              "level": 4,
              "text": "1. UDゴシックフォント適用",
              "line_number": 98
            },
            {
              "level": 4,
              "text": "2. 共通テーマライブラリの導入",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "🔧 重要修正事項（Priority 2）",
              "line_number": 158
            },
            {
              "level": 4,
              "text": "1. 共通コンポーネントライブラリの実装",
              "line_number": 160
            },
            {
              "level": 4,
              "text": "2. Element Plus 使用箇所の置換",
              "line_number": 176
            },
            {
              "level": 4,
              "text": "3. npm スクリプトの修正",
              "line_number": 197
            },
            {
              "level": 3,
              "text": "🔄 改善提案事項（Priority 3）",
              "line_number": 225
            },
            {
              "level": 4,
              "text": "1. ESLint設定の強化",
              "line_number": 227
            },
            {
              "level": 4,
              "text": "2. アクセシビリティチェックの自動化",
              "line_number": 238
            },
            {
              "level": 4,
              "text": "3. pre-commit フックの設定",
              "line_number": 250
            },
            {
              "level": 1,
              "text": "!/bin/sh",
              "line_number": 254
            },
            {
              "level": 2,
              "text": "実装順序",
              "line_number": 260
            },
            {
              "level": 3,
              "text": "Phase 1: 緊急修正（1-2日）",
              "line_number": 262
            },
            {
              "level": 3,
              "text": "Phase 2: 重要修正（3-5日）",
              "line_number": 267
            },
            {
              "level": 3,
              "text": "Phase 3: 改善実装（1週間）",
              "line_number": 272
            },
            {
              "level": 2,
              "text": "検証方法",
              "line_number": 277
            },
            {
              "level": 3,
              "text": "修正完了チェックリスト",
              "line_number": 279
            },
            {
              "level": 3,
              "text": "自動チェックコマンド",
              "line_number": 289
            },
            {
              "level": 1,
              "text": "修正前チェック",
              "line_number": 292
            },
            {
              "level": 1,
              "text": "修正後チェック",
              "line_number": 295
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 301
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 15,
          "inline_code": 53,
          "languages": {
            "css": 1,
            "vue": 3,
            "json": 6,
            "typescript": 1,
            "javascript": 1,
            "bash": 2
          },
          "details": [
            [
              "css",
              "font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;"
            ],
            [
              "vue",
              "<!-- workspace/frontend/src/views/Dashboard.vue -->\n<el-card>        <!-- 禁止されたコンポーネント -->\n<el-button>      <!-- 禁止されたコンポーネント -->\n<el-table>       <!-- 禁止されたコンポーネント -->\n<el-progress>    <!-- 禁止されたコンポーネント -->"
            ],
            [
              "json",
              "\"dependencies\": {\n  \"element-plus\": \"^2.5.1\"  // 直接使用は禁止\n}"
            ],
            [
              "json",
              "\"@company/shared-components\": \"workspace:*\",\n\"@company/shared-theme\": \"workspace:*\""
            ],
            [
              "vue",
              "<!-- 修正前 -->\n<style>\nhtml, body, #app {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n}\n</style>\n\n<!-- 修正後 -->\n<style>\n@import '@company/shared-theme';\n\nhtml, body, #app {\n  font-family: var(--font-family-primary); /* UDゴシック優先 */\n  font-size: var(--font-size-accessible-min); /* 18px以上 */\n  line-height: var(--line-height-normal); /* 1.5 */\n}\n</style>"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-theme\": \"workspace:*\",\n    \"@company/shared-components\": \"workspace:*\"\n  }\n}"
            ],
            [
              "typescript",
              "import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n// Element Plus直接インポートを削除\n// import ElementPlus from 'element-plus'\n// import 'element-plus/dist/index.css'\n\n// 共通テーマを適用\nimport '@company/shared-theme'\n\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\nconst pinia = createPinia()\n\napp.use(pinia)\napp.use(router)\n// Element Plus直接使用を削除\n// app.use(ElementPlus, { locale: 'ja' })\n\napp.mount('#app')"
            ],
            [
              "",
              "packages/shared-components/\n├── package.json\n├── src/\n│   ├── components/\n│   │   ├── CommonButton/\n│   │   ├── CommonCard/\n│   │   ├── CommonTable/\n│   │   └── index.ts\n│   └── index.ts\n└── dist/"
            ],
            [
              "vue",
              "<!-- 修正前 -->\n<el-button type=\"primary\" @click=\"handleClick\">\n  クリック\n</el-button>\n\n<!-- 修正後 -->\n<CommonButton variant=\"primary\" @on-click=\"handleClick\">\n  クリック\n</CommonButton>"
            ],
            [
              "json",
              "{\n  \"scripts\": {\n    \"dev\": \"vite --host 0.0.0.0 --port 3000\",\n    \"dev:frontend\": \"vite --host 0.0.0.0 --port 3000\", // 追加\n    \"build\": \"vue-tsc && vite build\",\n    \"build:frontend\": \"vue-tsc && vite build\", // 追加\n    \"test:frontend\": \"vitest\", // 追加\n    \"test:coverage\": \"vitest --coverage\" // 追加\n  }\n}"
            ],
            [
              "json",
              "{\n  \"scripts\": {\n    \"dev:backend\": \"tsx watch src/index.ts\", // 追加\n    \"build:backend\": \"tsc\", // 追加\n    \"test:backend\": \"jest\", // 追加\n    \"type-check\": \"tsc --noEmit\" // 追加\n  }\n}"
            ],
            [
              "javascript",
              "module.exports = {\n  extends: [\n    '../../.eslintrc.js' // ルートのESLint設定を継承\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"scripts\": {\n    \"accessibility-check\": \"node tools/accessibility-checker.js\",\n    \"font-check\": \"node tools/font-checker.js\"\n  }\n}"
            ],
            [
              "bash",
              "#!/bin/sh\nnpm run component-check:strict\nnpm run accessibility-check\nnpm run lint"
            ],
            [
              "bash",
              "# 修正前チェック\nnpm run component-check:html  # 現在の違反状況を確認\n\n# 修正後チェック\nnpm run component-check:strict  # 違反があると終了コード1\nnpm run lint                    # コード品質チェック\nnpm run type-check             # 型チェック"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.16,
        "sentences": 95,
        "avg_words_per_sentence": 6.56,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 52.46,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.63
    },
    "docs/MASTER_REFERENCE.md": {
      "basic_metrics": {
        "lines": 204,
        "words": 393,
        "characters": 3888,
        "avg_line_length": 19.058823529411764
      },
      "structure_analysis": {
        "headers": {
          "total": 32,
          "hierarchy": [
            {
              "level": 1,
              "text": "WebSys マスタードキュメント",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "技術情報統一リファレンス（単一真実源）",
              "line_number": 2
            },
            {
              "level": 2,
              "text": "🚀 システム概要",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "主要特徴",
              "line_number": 15
            },
            {
              "level": 2,
              "text": "💻 技術スタック（確定版）",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "フロントエンド",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "バックエンド",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "データベース・インフラ",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "開発ツール",
              "line_number": 57
            },
            {
              "level": 2,
              "text": "🏗️ アーキテクチャ概要",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "システム構成",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "保護レベル",
              "line_number": 80
            },
            {
              "level": 2,
              "text": "📊 プロジェクト指標",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "品質指標",
              "line_number": 90
            },
            {
              "level": 3,
              "text": "性能指標",
              "line_number": 98
            },
            {
              "level": 2,
              "text": "🔗 主要リンク",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "🚀 はじめに",
              "line_number": 110
            },
            {
              "level": 3,
              "text": "👨‍💻 開発者向け",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "🔧 運用・保守",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "🏗️ アーキテクチャ・設計",
              "line_number": 127
            },
            {
              "level": 3,
              "text": "📋 仕様・リファレンス",
              "line_number": 133
            },
            {
              "level": 2,
              "text": "🔄 バージョン管理",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "現在バージョン",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "更新履歴",
              "line_number": 148
            },
            {
              "level": 3,
              "text": "互換性",
              "line_number": 159
            },
            {
              "level": 2,
              "text": "🎯 利用開始ガイド",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "新規開発者（初回30分）",
              "line_number": 171
            },
            {
              "level": 3,
              "text": "システム管理者（初回60分）",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "プロジェクトマネージャー（初回45分）",
              "line_number": 181
            },
            {
              "level": 2,
              "text": "📞 サポート・連絡先",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "技術サポート",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "貢献・フィードバック",
              "line_number": 195
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 28,
          "internal": 28,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "クイックスタート",
              "README.md#quick-start"
            ],
            [
              "環境構築手順",
              "02-環境構築手順.md"
            ],
            [
              "15分チュートリアル",
              "getting-started/tutorial.md"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "API仕様書",
              "07-API仕様書.md"
            ],
            [
              "コンポーネント仕様",
              "08-コンポーネント仕様書.md"
            ],
            [
              "データベース設計",
              "01_機能設計書/07_データベース設計/データベース設計書.md"
            ],
            [
              "デプロイ手順",
              "05-デプロイ手順.md"
            ],
            [
              "トラブルシューティング",
              "06-トラブルシューティング.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "監視・ログ管理",
              "01_機能設計書/12_ログ監視システム/ログ監視システム設計書.md"
            ],
            [
              "システム設計",
              "04-システム設計.md"
            ],
            [
              "共通機能保護戦略",
              "70-共通機能保護戦略設計書.md"
            ],
            [
              "企業向けカスタマイズ",
              "71-企業向けフォルダ構成サンプル.md"
            ],
            [
              "詳細設計",
              "DETAILED_DESIGN.md"
            ],
            [
              "機能一覧",
              "01_機能設計書/機能一覧と概要.md"
            ],
            [
              "テスト仕様",
              "19-テスト仕様書.md"
            ],
            [
              "不具合管理",
              "21-不具合管理表.md"
            ],
            [
              "改善提案",
              "51-改善実装タスク管理表.md"
            ],
            [
              "環境構築",
              "02-環境構築手順.md"
            ],
            [
              "クイックスタート",
              "README.md#quick-start"
            ],
            [
              "開発ガイド",
              "03-開発ガイド.md"
            ],
            [
              "デプロイ手順",
              "05-デプロイ手順.md"
            ],
            [
              "運用手順書",
              "64-運用手順書.md"
            ],
            [
              "監視設定",
              "01_機能設計書/12_ログ監視システム/"
            ],
            [
              "システム概要",
              "01-システム概要.md"
            ],
            [
              "機能一覧",
              "01_機能設計書/機能一覧と概要.md"
            ],
            [
              "改善計画",
              "72-ドキュメント総合レビュー結果・改善計画書.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 17,
          "languages": {
            "json": 2,
            "yaml": 6
          },
          "details": [
            [
              "json",
              "{\n  \"vue\": \"3.4.29\",\n  \"element-plus\": \"2.8.0\",\n  \"typescript\": \"5.4.5\",\n  \"vite\": \"5.1.4\",\n  \"pinia\": \"2.1.7\",\n  \"vue-router\": \"4.2.5\"\n}"
            ],
            [
              "json",
              "{\n  \"express\": \"4.19.2\",\n  \"typescript\": \"5.4.5\",\n  \"prisma\": \"5.10.2\",\n  \"jsonwebtoken\": \"9.0.2\",\n  \"bcryptjs\": \"2.4.3\",\n  \"cors\": \"2.8.5\"\n}"
            ],
            [
              "yaml",
              "database: \"PostgreSQL 15-alpine\"\ncontainer: \"Docker + Docker Compose\"\ntesting: \"Jest (Backend) + Vitest (Frontend)\"\ndeployment: \"Docker環境 + 水平スケーリング対応\""
            ],
            [
              "yaml",
              "code_quality: \"ESLint + Prettier\"\ntesting: \"Jest + Vitest + Supertest\"\ndocumentation: \"Markdown + 自動生成\"\nci_cd: \"GitHub Actions\""
            ],
            [
              "",
              "Frontend (Vue.js 3 + Element Plus)  ←→  Backend (Express + TypeScript)\n     ↓                                          ↓\n  Pinia Store                              Prisma ORM\n     ↓                                          ↓\n  Vue Router                              PostgreSQL 15\n     ↓                                          ↓\nWebSocket (リアルタイム)              監査ログ・セキュリティ"
            ],
            [
              "yaml",
              "test_coverage: \"95%以上\"\nbug_resolution: \"19/19件完了（100%）\"\nhorizontal_scaling: \"657%効果（52件予防修正）\"\napi_uptime: \"100%（全エンドポイント正常）\""
            ],
            [
              "yaml",
              "initial_load: \"LogMonitoring 36KB→4KB（89%削減）\"\nmemory_usage: \"50%削減（未使用コンポーネント解放）\"\nre_rendering: \"90%削減（局所的更新）\"\nbuild_time: \"3分以内\""
            ],
            [
              "yaml",
              "v1.0.0:\n  date: \"2025-09-30\"\n  changes:\n    - \"初回リリース版\"\n    - \"全機能実装完了\"\n    - \"95%テストカバレッジ達成\"\n    - \"BUG修正19件完了\""
            ],
            [
              "yaml",
              "minimum_node: \"18.0.0\"\nminimum_postgresql: \"15.0\"\nminimum_docker: \"24.0.0\"\nbrowser_support: \"Chrome 90+, Firefox 88+, Safari 14+\""
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 99.18,
        "sentences": 110,
        "avg_words_per_sentence": 3.57,
        "long_sentences": 3,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 67.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 79.4
    },
    "docs/71-企業向けフォルダ構成サンプル.md": {
      "basic_metrics": {
        "lines": 340,
        "words": 756,
        "characters": 7271,
        "avg_line_length": 21.38529411764706
      },
      "structure_analysis": {
        "headers": {
          "total": 38,
          "hierarchy": [
            {
              "level": 1,
              "text": "企業向けフォルダ構成実装サンプル",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実装例: Company-A向けカスタマイズ",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "フォルダ構成",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "実装サンプル",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "1. 企業カスタムワークフロー",
              "line_number": 61
            },
            {
              "level": 4,
              "text": "2. 企業ブランディング設定",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "3. 機能有効化設定",
              "line_number": 136
            },
            {
              "level": 4,
              "text": "4. ビルド制御スクリプト",
              "line_number": 182
            },
            {
              "level": 4,
              "text": "5. デプロイメント設定",
              "line_number": 221
            },
            {
              "level": 1,
              "text": "config/deployment.yml",
              "line_number": 223
            },
            {
              "level": 1,
              "text": "企業固有の環境変数",
              "line_number": 229
            },
            {
              "level": 1,
              "text": "保護されたコア設定",
              "line_number": 234
            },
            {
              "level": 1,
              "text": "カスタマイズ可能な設定",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "開発フロー",
              "line_number": 261
            },
            {
              "level": 4,
              "text": "1. 企業カスタマイズ開発",
              "line_number": 263
            },
            {
              "level": 1,
              "text": "企業プロジェクトのセットアップ",
              "line_number": 265
            },
            {
              "level": 1,
              "text": "開発環境起動",
              "line_number": 268
            },
            {
              "level": 1,
              "text": "カスタムコンポーネント作成",
              "line_number": 272
            },
            {
              "level": 1,
              "text": "ビルド（保護チェック付き）",
              "line_number": 275
            },
            {
              "level": 1,
              "text": "デプロイ",
              "line_number": 278
            },
            {
              "level": 4,
              "text": "2. 保護機能の検証",
              "line_number": 282
            },
            {
              "level": 1,
              "text": "コア機能の変更を試行（エラーになる）",
              "line_number": 284
            },
            {
              "level": 1,
              "text": "カスタマイズ範囲の確認",
              "line_number": 287
            },
            {
              "level": 1,
              "text": "企業固有設定の検証",
              "line_number": 290
            },
            {
              "level": 3,
              "text": "運用フロー",
              "line_number": 294
            },
            {
              "level": 4,
              "text": "1. アップデート",
              "line_number": 296
            },
            {
              "level": 1,
              "text": "コア機能のアップデート（自動）",
              "line_number": 298
            },
            {
              "level": 1,
              "text": "プラットフォーム機能のアップデート（選択可能）",
              "line_number": 301
            },
            {
              "level": 1,
              "text": "カスタマイズの互換性チェック",
              "line_number": 304
            },
            {
              "level": 4,
              "text": "2. 監視",
              "line_number": 308
            },
            {
              "level": 1,
              "text": "保護機能の監視",
              "line_number": 310
            },
            {
              "level": 1,
              "text": "カスタマイズの健全性チェック",
              "line_number": 313
            },
            {
              "level": 1,
              "text": "企業設定の整合性確認",
              "line_number": 316
            },
            {
              "level": 2,
              "text": "利点",
              "line_number": 320
            },
            {
              "level": 3,
              "text": "✅ **明確な責任分界**",
              "line_number": 322
            },
            {
              "level": 3,
              "text": "✅ **安全性**",
              "line_number": 327
            },
            {
              "level": 3,
              "text": "✅ **保守性**",
              "line_number": 332
            },
            {
              "level": 3,
              "text": "✅ **拡張性**",
              "line_number": 337
            }
          ],
          "hierarchy_issues": [
            {
              "line": 261,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 282,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 294,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 308,
              "issue": "見出しレベル4が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 10,
          "inline_code": 21,
          "languages": {
            "typescript": 2,
            "json": 2,
            "yaml": 1,
            "bash": 4
          },
          "details": [
            [
              "",
              "websys-enterprise-company-a/\n├── 📦 packages/\n│   ├── websys-core/               # 🔒 コア機能（変更不可）\n│   │   ├── auth/\n│   │   │   ├── jwt.service.ts\n│   │   │   ├── session.manager.ts\n│   │   │   └── security.middleware.ts\n│   │   ├── audit/\n│   │   │   ├── audit.logger.ts\n│   │   │   └── compliance.service.ts\n│   │   └── package.json           # readonly: true\n│   ├── websys-platform/           # 🔧 プラットフォーム（拡張可能）\n│   │   ├── workflow/\n│   │   │   ├── base.workflow.ts   # 基盤クラス\n│   │   │   └── interfaces.ts      # 拡張インターフェース\n│   │   ├── permissions/\n│   │   │   ├── rbac.service.ts\n│   │   │   └── extensions/        # 拡張ポイント\n│   │   └── package.json\n│   ├── websys-ui/                 # 🎨 UI（テーマ可能）\n│   │   ├── components/\n│   │   │   ├── base/\n│   │   │   └── themes/\n│   │   ├── layouts/\n│   │   └── package.json\n│   └── company-a-custom/          # ✨ 企業カスタマイズ\n│       ├── workflows/\n│       │   ├── approval.workflow.ts\n│       │   └── purchase.workflow.ts\n│       ├── components/\n│       │   ├── CompanyHeader.vue\n│       │   └── CustomDashboard.vue\n│       ├── integrations/\n│       │   ├── erp-connector.ts\n│       │   └── hr-system.ts\n│       ├── themes/\n│       │   ├── company-a.scss\n│       │   └── variables.scss\n│       ├── config/\n│       │   ├── features.json\n│       │   └── branding.json\n│       └── package.json\n├── 🔧 tools/\n│   ├── build-guardian.ts          # ビルド制御\n│   ├── permission-checker.ts      # 権限チェック\n│   └── deployment.scripts/\n└── 📋 config/\n    ├── base.config.json\n    ├── company-a.config.json\n    └── production.config.json"
            ],
            [
              "typescript",
              "// packages/company-a-custom/workflows/approval.workflow.ts\nimport { BaseWorkflow, WorkflowStep } from '@websys/platform/workflow';\n\nexport class CompanyAApprovalWorkflow extends BaseWorkflow {\n  constructor() {\n    super('company-a-approval', '1.0.0');\n  }\n\n  protected defineSteps(): WorkflowStep[] {\n    return [\n      {\n        id: 'department-approval',\n        name: '部署承認',\n        handler: this.departmentApproval.bind(this),\n        condition: (context) => context.amount > 10000\n      },\n      {\n        id: 'executive-approval',\n        name: '役員承認',\n        handler: this.executiveApproval.bind(this),\n        condition: (context) => context.amount > 100000\n      }\n    ];\n  }\n\n  private async departmentApproval(context: any) {\n    // Company-A固有の部署承認ロジック\n    await this.notifyDepartmentManager(context);\n  }\n\n  private async executiveApproval(context: any) {\n    // Company-A固有の役員承認ロジック\n    await this.escalateToExecutive(context);\n  }\n}"
            ],
            [
              "json",
              "// packages/company-a-custom/config/branding.json\n{\n  \"companyId\": \"company-a\",\n  \"name\": \"Company A Corporation\",\n  \"branding\": {\n    \"logo\": {\n      \"main\": \"/assets/company-a/logo-main.svg\",\n      \"icon\": \"/assets/company-a/logo-icon.svg\",\n      \"white\": \"/assets/company-a/logo-white.svg\"\n    },\n    \"colors\": {\n      \"primary\": \"#2B5D8C\",\n      \"secondary\": \"#4A90B8\",\n      \"accent\": \"#F0A500\",\n      \"background\": \"#F8F9FA\"\n    },\n    \"fonts\": {\n      \"primary\": \"Noto Sans JP\",\n      \"secondary\": \"Arial\"\n    }\n  },\n  \"customization\": {\n    \"header\": {\n      \"showCompanyName\": true,\n      \"showLogo\": true,\n      \"customLinks\": [\n        { \"name\": \"社内ポータル\", \"url\": \"https://portal.company-a.com\" },\n        { \"name\": \"ヘルプデスク\", \"url\": \"https://help.company-a.com\" }\n      ]\n    }\n  }\n}"
            ],
            [
              "json",
              "// packages/company-a-custom/config/features.json\n{\n  \"core\": {\n    \"auth\": {\n      \"enabled\": true,\n      \"readonly\": true,\n      \"sso\": {\n        \"provider\": \"okta\",\n        \"domain\": \"company-a.okta.com\"\n      }\n    },\n    \"audit\": {\n      \"enabled\": true,\n      \"readonly\": true,\n      \"retention\": \"7years\"\n    }\n  },\n  \"platform\": {\n    \"workflow\": {\n      \"enabled\": true,\n      \"customizations\": [\n        \"company-a-approval\",\n        \"purchase-approval\"\n      ]\n    },\n    \"notifications\": {\n      \"enabled\": true,\n      \"channels\": [\"email\", \"slack\", \"teams\"]\n    }\n  },\n  \"custom\": {\n    \"erp-integration\": {\n      \"enabled\": true,\n      \"system\": \"SAP\",\n      \"endpoint\": \"https://erp.company-a.com/api\"\n    },\n    \"custom-dashboard\": {\n      \"enabled\": true,\n      \"widgets\": [\"sales\", \"hr\", \"finance\"]\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// tools/build-guardian.ts\nimport { ProtectionLevel, BuildConfig } from '@websys/core';\n\nexport class BuildGuardian {\n  private readonly protectedPaths = [\n    'packages/websys-core/**/*',\n    'packages/websys-platform/auth/**/*',\n    'packages/websys-platform/audit/**/*'\n  ];\n\n  validateBuild(config: BuildConfig): void {\n    this.checkCoreIntegrity();\n    this.validateCustomizations(config);\n    this.verifyPermissions(config);\n  }\n\n  private checkCoreIntegrity(): void {\n    // コアファイルの改ざんチェック\n    for (const path of this.protectedPaths) {\n      if (this.isModified(path)) {\n        throw new Error(`Core file modification detected: ${path}`);\n      }\n    }\n  }\n\n  private validateCustomizations(config: BuildConfig): void {\n    // カスタマイズの妥当性チェック\n    const customizations = config.custom;\n    for (const [key, value] of Object.entries(customizations)) {\n      if (!this.isAllowedCustomization(key, value)) {\n        throw new Error(`Invalid customization: ${key}`);\n      }\n    }\n  }\n}"
            ],
            [
              "yaml",
              "# config/deployment.yml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: websys-enterprise-company-a\ndata:\n  # 企業固有の環境変数\n  COMPANY_ID: \"company-a\"\n  BRANDING_CONFIG: \"company-a-branding\"\n  CUSTOM_FEATURES: \"company-a-features\"\n\n  # 保護されたコア設定\n  CORE_AUTH_READONLY: \"true\"\n  CORE_AUDIT_READONLY: \"true\"\n\n  # カスタマイズ可能な設定\n  WORKFLOW_CUSTOM_PATH: \"/custom/workflows\"\n  UI_THEME_PATH: \"/custom/themes\"\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: websys-enterprise-company-a\nspec:\n  replicas: 3\n  template:\n    spec:\n      containers:\n      - name: websys-app\n        image: websys/enterprise:company-a-v1.0.0\n        env:\n        - name: COMPANY_CONFIG\n          valueFrom:\n            configMapKeyRef:\n              name: websys-enterprise-company-a\n              key: COMPANY_ID"
            ],
            [
              "bash",
              "# 企業プロジェクトのセットアップ\nnpm create @websys/enterprise company-a\n\n# 開発環境起動\ncd websys-enterprise-company-a\nnpm run dev:custom\n\n# カスタムコンポーネント作成\nnpm run generate:component CustomDashboard --company company-a\n\n# ビルド（保護チェック付き）\nnpm run build:protected\n\n# デプロイ\nnpm run deploy:company-a"
            ],
            [
              "bash",
              "# コア機能の変更を試行（エラーになる）\nnpm run test:protection\n\n# カスタマイズ範囲の確認\nnpm run validate:customization\n\n# 企業固有設定の検証\nnpm run test:company-config"
            ],
            [
              "bash",
              "# コア機能のアップデート（自動）\nnpm run update:core  # 1.0.0 -> 1.0.1\n\n# プラットフォーム機能のアップデート（選択可能）\nnpm run update:platform --version 1.2.0\n\n# カスタマイズの互換性チェック\nnpm run check:compatibility"
            ],
            [
              "bash",
              "# 保護機能の監視\nnpm run monitor:protection\n\n# カスタマイズの健全性チェック\nnpm run health:custom\n\n# 企業設定の整合性確認\nnpm run verify:config"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 96.81,
        "sentences": 94,
        "avg_words_per_sentence": 8.04,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 43.12,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 68.79
    },
    "docs/74-Phase1実装完了・次期展開計画書.md": {
      "basic_metrics": {
        "lines": 233,
        "words": 422,
        "characters": 3648,
        "avg_line_length": 15.656652360515022
      },
      "structure_analysis": {
        "headers": {
          "total": 27,
          "hierarchy": [
            {
              "level": 1,
              "text": "Phase1実装完了・次期展開計画書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 実施概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "✅ Phase1完了サマリー",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "実装項目・達成状況",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "定量的成果",
              "line_number": 28
            },
            {
              "level": 2,
              "text": "🚀 Phase2実装計画 (準備完了)",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "実装準備状況: 100%完了",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "Phase2目標機能",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "実装スケジュール",
              "line_number": 79
            },
            {
              "level": 2,
              "text": "📋 Phase3展開計画 (設計完了)",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "高度化機能設計",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "実装計画",
              "line_number": 112
            },
            {
              "level": 2,
              "text": "💡 成功要因分析",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "Phase1成功の鍵",
              "line_number": 124
            },
            {
              "level": 3,
              "text": "予想を上回る成果の理由",
              "line_number": 130
            },
            {
              "level": 2,
              "text": "🎯 推奨次期アクション",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "1. Phase2即座開始",
              "line_number": 152
            },
            {
              "level": 3,
              "text": "2. 段階的価値最大化",
              "line_number": 163
            },
            {
              "level": 3,
              "text": "3. 投資対効果最大化",
              "line_number": 171
            },
            {
              "level": 2,
              "text": "📊 Phase1実装による組織効果",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "技術チーム効果",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "プロジェクト管理効果",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "利用者・学習者効果",
              "line_number": 199
            },
            {
              "level": 2,
              "text": "🏆 結論・提言",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "Phase1完全成功",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "Phase2-3実装強く推奨",
              "line_number": 216
            },
            {
              "level": 3,
              "text": "戦略的価値",
              "line_number": 219
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 20,
          "languages": {
            "yaml": 9
          },
          "details": [
            [
              "yaml",
              "Phase1_実装完了:\n  マスタードキュメント作成: ✅完了 (MASTER_REFERENCE.md)\n  メインナビゲーション改善: ✅完了 (docs/README.md完全改訂)\n  重複ドキュメント統合: ✅完了 (技術スタック統一)\n  自動化スクリプト導入: ✅完了 (CI/CD統合)\n  品質保証体制構築: ✅完了 (継続的監視)\n\n実装期間: 1日間 (予定1-2週間の大幅短縮)\n投資額: ¥60,000 (予算¥400,000の85%削減)\n効果: 即座発現・継続的改善基盤完成"
            ],
            [
              "yaml",
              "品質スコア向上:\n  技術的完成度: 95/100 → 100/100 (+5点)\n  ドキュメント品質: 78/100 → 95/100 (+17点)\n  利用者体験: 72/100 → 90/100 (+18点)\n  保守性: 85/100 → 98/100 (+13点)\n\n効率改善:\n  技術仕様アクセス: 5-10分 → 30秒 (95%高速化)\n  情報発見性: 85%向上 (目的別ナビゲーション)\n  保守効率: 83%向上 (重複排除・統一参照)\n  自動化率: 100% (手動チェック → 完全自動)\n\n投資対効果:\n  Phase1_ROI: 4000%\n  年間効果: ¥2,400,000\n  投資回収: 即座回収"
            ],
            [
              "yaml",
              "高度品質保証機能:\n  - AI活用コンテンツ品質分析\n  - クロスリファレンス整合性チェック\n  - 用語統一自動検証\n  - アクセシビリティ評価\n\n動的ドキュメント生成:\n  - 自動索引・目次生成\n  - タグベース分類・検索\n  - 関連性分析・推奨リンク\n  - 更新影響分析\n\n継続的改善基盤:\n  - リアルタイム品質監視\n  - 自動レポート生成\n  - 品質劣化検出・アラート\n  - 定期的品質レビュー自動実行"
            ],
            [
              "yaml",
              "準備期間: 0日 (準備完了済み)\n実装期間: 2週間\n総工数: 8人日 (従来計画12人日の33%削減)\n開始推奨: 即座実装開始可能"
            ],
            [
              "yaml",
              "インタラクティブサイト:\n  - Vue.js + Vitepress構築\n  - 検索・フィルタリング高度化\n  - ダッシュボード形式ナビゲーション\n  - ユーザー個別カスタマイズ\n\n国際化・多言語対応:\n  - 英語版自動生成 (主要ドキュメント)\n  - 多言語品質管理体制\n  - 翻訳整合性自動チェック\n  - グローバル開発者対応\n\nAI活用高度分析:\n  - GPT統合コンテンツ品質評価\n  - 自動改善提案生成\n  - ユーザビリティ分析\n  - 継続的学習・最適化"
            ],
            [
              "yaml",
              "設計完了度: 100%\n実装期間: 4週間\n総工数: 15人日 (従来計画20人日の25%削減)\n実装開始: Phase2完了後"
            ],
            [
              "yaml",
              "計画精度向上:\n  - 事前分析の徹底による正確な要件定義\n  - 技術的実現可能性の事前検証\n  - リスク要因の事前特定・対策\n\n実装効率化:\n  - 既存リソース最大活用\n  - 重複作業排除\n  - 自動化による人的コスト削減\n\n即座効果発現:\n  - 利用者体験の劇的改善\n  - 技術仕様アクセスの大幅高速化\n  - 継続的品質保証基盤の確立"
            ],
            [
              "yaml",
              "Month 1: Phase2実装 → 自動化品質保証完全稼働\nMonth 2: Phase2効果測定 → Phase3実装開始\nMonth 3: Phase3実装 → グローバル標準達成\nMonth 4: 全機能稼働 → 継続的改善体制確立"
            ],
            [
              "yaml",
              "Phase2投資: ¥640,000\nPhase2効果: ¥3,200,000/年 (継続的自動化効果)\nPhase2_ROI: 500%\n\nPhase3投資: ¥1,200,000\nPhase3効果: ¥4,800,000/年 (グローバル展開効果)\nPhase3_ROI: 400%\n\n全体ROI: 550% (Phase1効果込み)\n総投資回収期間: 2.1ヶ月"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 82.87,
        "sentences": 23,
        "avg_words_per_sentence": 18.35,
        "long_sentences": 8,
        "readability_level": "読みやすい"
      },
      "structure_score": 48.44,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.74
    },
    "docs/64-運用手順書.md": {
      "basic_metrics": {
        "lines": 806,
        "words": 1578,
        "characters": 15234,
        "avg_line_length": 18.90074441687345
      },
      "structure_analysis": {
        "headers": {
          "total": 93,
          "hierarchy": [
            {
              "level": 1,
              "text": "workflow.ts分割 運用手順書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 運用手順書概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🚀 デプロイ手順",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "1. 開発環境デプロイ",
              "line_number": 14
            },
            {
              "level": 4,
              "text": "前提条件チェック",
              "line_number": 16
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 18
            },
            {
              "level": 1,
              "text": "scripts/pre-deploy-check.sh",
              "line_number": 19
            },
            {
              "level": 1,
              "text": "Node.js バージョン確認",
              "line_number": 23
            },
            {
              "level": 1,
              "text": "依存関係確認",
              "line_number": 30
            },
            {
              "level": 1,
              "text": "TypeScript型チェック",
              "line_number": 37
            },
            {
              "level": 1,
              "text": "単体テスト実行",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "マイクロサービス個別デプロイ",
              "line_number": 54
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 56
            },
            {
              "level": 1,
              "text": "scripts/deploy-microservices.sh",
              "line_number": 57
            },
            {
              "level": 1,
              "text": "サービス停止",
              "line_number": 78
            },
            {
              "level": 1,
              "text": "新バージョンデプロイ",
              "line_number": 81
            },
            {
              "level": 1,
              "text": "ヘルスチェック",
              "line_number": 87
            },
            {
              "level": 4,
              "text": "ヘルスチェック関数",
              "line_number": 102
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 104
            },
            {
              "level": 1,
              "text": "scripts/health-check.sh",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "2. ステージング環境デプロイ",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "Blue-Green デプロイ実装",
              "line_number": 134
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 136
            },
            {
              "level": 1,
              "text": "scripts/blue-green-deploy.sh",
              "line_number": 137
            },
            {
              "level": 1,
              "text": "ターゲット環境にデプロイ",
              "line_number": 155
            },
            {
              "level": 1,
              "text": "ヘルスチェック・煙テスト",
              "line_number": 158
            },
            {
              "level": 3,
              "text": "3. 本番環境デプロイ",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "段階的ロールアウト",
              "line_number": 173
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 175
            },
            {
              "level": 1,
              "text": "scripts/gradual-rollout.sh",
              "line_number": 176
            },
            {
              "level": 1,
              "text": "ロードバランサー設定更新",
              "line_number": 192
            },
            {
              "level": 1,
              "text": "監視・アラート確認",
              "line_number": 195
            },
            {
              "level": 2,
              "text": "🔍 監視・ログ管理",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "1. 統合ログ収集",
              "line_number": 214
            },
            {
              "level": 4,
              "text": "Fluentd設定",
              "line_number": 216
            },
            {
              "level": 1,
              "text": "config/fluentd/workflow-microservices.conf",
              "line_number": 218
            },
            {
              "level": 4,
              "text": "ログ構造統一",
              "line_number": 246
            },
            {
              "level": 3,
              "text": "2. 分散トレーシング",
              "line_number": 293
            },
            {
              "level": 4,
              "text": "Jaeger統合",
              "line_number": 295
            },
            {
              "level": 3,
              "text": "3. メトリクス収集",
              "line_number": 335
            },
            {
              "level": 4,
              "text": "Prometheus統合",
              "line_number": 337
            },
            {
              "level": 2,
              "text": "🚨 障害対応フロー",
              "line_number": 386
            },
            {
              "level": 3,
              "text": "1. 障害検出・アラート",
              "line_number": 388
            },
            {
              "level": 4,
              "text": "自動障害検出",
              "line_number": 390
            },
            {
              "level": 3,
              "text": "2. 障害レベル分類",
              "line_number": 439
            },
            {
              "level": 4,
              "text": "障害レベル定義",
              "line_number": 441
            },
            {
              "level": 3,
              "text": "3. 緊急ロールバック手順",
              "line_number": 467
            },
            {
              "level": 4,
              "text": "自動ロールバック",
              "line_number": 469
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 471
            },
            {
              "level": 1,
              "text": "scripts/emergency-rollback.sh",
              "line_number": 472
            },
            {
              "level": 1,
              "text": "現在のバージョン特定",
              "line_number": 476
            },
            {
              "level": 1,
              "text": "1. トラフィック停止",
              "line_number": 482
            },
            {
              "level": 1,
              "text": "2. 前バージョンのヘルスチェック",
              "line_number": 486
            },
            {
              "level": 1,
              "text": "3. トラフィック切り替え",
              "line_number": 494
            },
            {
              "level": 1,
              "text": "4. 動作確認",
              "line_number": 498
            },
            {
              "level": 1,
              "text": "5. 通知・ログ",
              "line_number": 502
            },
            {
              "level": 2,
              "text": "🔧 メンテナンス手順",
              "line_number": 511
            },
            {
              "level": 3,
              "text": "1. 定期メンテナンス",
              "line_number": 513
            },
            {
              "level": 4,
              "text": "週次メンテナンス",
              "line_number": 515
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 517
            },
            {
              "level": 1,
              "text": "scripts/weekly-maintenance.sh",
              "line_number": 518
            },
            {
              "level": 1,
              "text": "1. ログローテーション",
              "line_number": 522
            },
            {
              "level": 1,
              "text": "2. 不要ファイル削除",
              "line_number": 526
            },
            {
              "level": 1,
              "text": "3. データベース最適化",
              "line_number": 531
            },
            {
              "level": 1,
              "text": "4. パフォーマンス分析",
              "line_number": 535
            },
            {
              "level": 1,
              "text": "5. セキュリティスキャン",
              "line_number": 539
            },
            {
              "level": 3,
              "text": "2. データベースメンテナンス",
              "line_number": 546
            },
            {
              "level": 4,
              "text": "インデックス最適化",
              "line_number": 548
            },
            {
              "level": 3,
              "text": "3. 性能チューニング",
              "line_number": 570
            },
            {
              "level": 4,
              "text": "自動スケーリング設定",
              "line_number": 572
            },
            {
              "level": 1,
              "text": "kubernetes/workflow-autoscaler.yaml",
              "line_number": 574
            },
            {
              "level": 2,
              "text": "📞 運用連絡体制",
              "line_number": 616
            },
            {
              "level": 3,
              "text": "1. エスカレーション フロー",
              "line_number": 618
            },
            {
              "level": 3,
              "text": "2. 連絡先リスト",
              "line_number": 636
            },
            {
              "level": 4,
              "text": "緊急連絡先",
              "line_number": 638
            },
            {
              "level": 2,
              "text": "📊 運用KPI・SLA",
              "line_number": 669
            },
            {
              "level": 3,
              "text": "1. サービスレベル目標",
              "line_number": 671
            },
            {
              "level": 3,
              "text": "2. 運用指標監視",
              "line_number": 699
            },
            {
              "level": 4,
              "text": "ダッシュボード設定",
              "line_number": 701
            },
            {
              "level": 2,
              "text": "🛠️ 運用ツール・スクリプト",
              "line_number": 741
            },
            {
              "level": 3,
              "text": "1. 運用コマンド集",
              "line_number": 743
            },
            {
              "level": 1,
              "text": "全サービス状態確認",
              "line_number": 746
            },
            {
              "level": 1,
              "text": "特定サービス再起動",
              "line_number": 749
            },
            {
              "level": 1,
              "text": "ログ一括確認",
              "line_number": 752
            },
            {
              "level": 1,
              "text": "性能レポート生成",
              "line_number": 755
            },
            {
              "level": 1,
              "text": "データベース健全性チェック",
              "line_number": 758
            },
            {
              "level": 1,
              "text": "緊急メンテナンスモード",
              "line_number": 761
            },
            {
              "level": 3,
              "text": "2. 自動化スクリプト",
              "line_number": 765
            },
            {
              "level": 4,
              "text": "自動復旧スクリプト",
              "line_number": 767
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 769
            },
            {
              "level": 1,
              "text": "scripts/auto-recovery.sh",
              "line_number": 770
            },
            {
              "level": 1,
              "text": "サービス死活監視・自動復旧",
              "line_number": 772
            },
            {
              "level": 1,
              "text": "3回まで再起動試行",
              "line_number": 779
            }
          ],
          "hierarchy_issues": [
            {
              "line": 54,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 102,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 132,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 171,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 246,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 546,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 765,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 21,
          "inline_code": 43,
          "languages": {
            "bash": 9,
            "ruby": 1,
            "typescript": 5,
            "json": 3,
            "sql": 1,
            "yaml": 1,
            "mermaid": 1
          },
          "details": [
            [
              "bash",
              "#!/bin/bash\n# scripts/pre-deploy-check.sh\n\necho \"🔍 デプロイ前チェック開始\"\n\n# Node.js バージョン確認\nnode_version=$(node --version)\nif [[ ! \"$node_version\" =~ ^v18 ]]; then\n  echo \"❌ Node.js v18が必要です (現在: $node_version)\"\n  exit 1\nfi\n\n# 依存関係確認\nnpm list --depth=0 > /dev/null\nif [ $? -ne 0 ]; then\n  echo \"❌ 依存関係に問題があります\"\n  exit 1\nfi\n\n# TypeScript型チェック\nnpm run type-check\nif [ $? -ne 0 ]; then\n  echo \"❌ TypeScript型エラーがあります\"\n  exit 1\nfi\n\n# 単体テスト実行\nnpm test\nif [ $? -ne 0 ]; then\n  echo \"❌ テストが失敗しています\"\n  exit 1\nfi\n\necho \"✅ デプロイ前チェック完了\""
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/deploy-microservices.sh\n\nservices=(\n  \"workflow-types:8001\"\n  \"workflow-requests:8002\"\n  \"workflow-dashboard:8003\"\n  \"emergency-approval:8004\"\n  \"delegation-approval:8005\"\n  \"proxy-approval:8006\"\n  \"parallel-approval:8007\"\n  \"sequential-approval:8008\"\n  \"auto-approval:8009\"\n)\n\necho \"🚀 マイクロサービスデプロイ開始\"\n\nfor service_info in \"${services[@]}\"; do\n  IFS=':' read -r service port <<< \"$service_info\"\n\n  echo \"📦 $service をポート $port にデプロイ中...\"\n\n  # サービス停止\n  pm2 stop \"workflow-$service\" 2>/dev/null || true\n\n  # 新バージョンデプロイ\n  pm2 start \"dist/routes/workflow/$service.js\" \\\n    --name \"workflow-$service\" \\\n    --env PORT=$port \\\n    --env NODE_ENV=development\n\n  # ヘルスチェック\n  sleep 5\n  health_check $port\n\n  if [ $? -eq 0 ]; then\n    echo \"✅ $service デプロイ成功\"\n  else\n    echo \"❌ $service デプロイ失敗\"\n    exit 1\n  fi\ndone\n\necho \"🎉 全マイクロサービスデプロイ完了\""
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/health-check.sh\n\nhealth_check() {\n  local port=$1\n  local max_attempts=10\n  local attempt=1\n\n  while [ $attempt -le $max_attempts ]; do\n    echo \"🔍 ヘルスチェック試行 $attempt/$max_attempts (ポート: $port)\"\n\n    response=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:$port/health)\n\n    if [ \"$response\" = \"200\" ]; then\n      echo \"✅ ヘルスチェック成功 (ポート: $port)\"\n      return 0\n    fi\n\n    echo \"⏳ 待機中... (5秒)\"\n    sleep 5\n    ((attempt++))\n  done\n\n  echo \"❌ ヘルスチェック失敗 (ポート: $port)\"\n  return 1\n}"
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/blue-green-deploy.sh\n\nBLUE_PORT=8000\nGREEN_PORT=8100\nCURRENT_ENV=$(get_current_environment)\n\necho \"🔄 Blue-Green デプロイ開始 (現在: $CURRENT_ENV)\"\n\nif [ \"$CURRENT_ENV\" = \"blue\" ]; then\n  TARGET_ENV=\"green\"\n  TARGET_PORT=$GREEN_PORT\nelse\n  TARGET_ENV=\"blue\"\n  TARGET_PORT=$BLUE_PORT\nfi\n\necho \"📦 $TARGET_ENV 環境にデプロイ中...\"\n\n# ターゲット環境にデプロイ\ndeploy_to_environment $TARGET_ENV $TARGET_PORT\n\n# ヘルスチェック・煙テスト\nrun_smoke_tests $TARGET_PORT\n\nif [ $? -eq 0 ]; then\n  echo \"🔀 トラフィック切り替え実行\"\n  switch_traffic $TARGET_ENV\n  echo \"✅ Blue-Green デプロイ完了\"\nelse\n  echo \"❌ 煙テスト失敗 - ロールバック実行\"\n  rollback_deployment\nfi"
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/gradual-rollout.sh\n\necho \"🎯 段階的ロールアウト開始\"\n\nrollout_stages=(\n  \"5:5分間\"      # 5%のトラフィック\n  \"25:15分間\"    # 25%のトラフィック\n  \"50:30分間\"    # 50%のトラフィック\n  \"100:完全移行\" # 100%のトラフィック\n)\n\nfor stage_info in \"${rollout_stages[@]}\"; do\n  IFS=':' read -r percentage duration <<< \"$stage_info\"\n\n  echo \"📊 $percentage% トラフィック振り分け開始 ($duration)\"\n\n  # ロードバランサー設定更新\n  update_load_balancer_weight $percentage\n\n  # 監視・アラート確認\n  monitor_deployment $percentage \"$duration\"\n\n  if [ $? -ne 0 ]; then\n    echo \"❌ 異常検出 - 緊急ロールバック\"\n    emergency_rollback\n    exit 1\n  fi\n\n  echo \"✅ $percentage% 段階完了\"\ndone\n\necho \"🎉 段階的ロールアウト完了\""
            ],
            [
              "ruby",
              "# config/fluentd/workflow-microservices.conf\n<source>\n  @type tail\n  path /var/log/workflow/*.log\n  pos_file /var/log/fluentd/workflow.log.pos\n  tag workflow.*\n  format json\n  time_key timestamp\n</source>\n\n<filter workflow.**>\n  @type record_transformer\n  <record>\n    service_name ${tag_parts[1]}\n    environment #{ENV['NODE_ENV']}\n    server_name #{ENV['HOSTNAME']}\n  </record>\n</filter>\n\n<match workflow.**>\n  @type elasticsearch\n  host elasticsearch.internal\n  port 9200\n  index_name workflow-logs\n  type_name microservice\n</match>"
            ],
            [
              "typescript",
              "// utils/logger.ts - 統一ログフォーマット\ninterface LogEntry {\n  timestamp: string;\n  level: LogLevel;\n  service: string;\n  traceId: string;\n  message: string;\n  metadata?: {\n    userId?: number;\n    endpoint?: string;\n    duration?: number;\n    errorCode?: string;\n  };\n}\n\nclass MicroserviceLogger {\n  constructor(private serviceName: string) {}\n\n  info(message: string, metadata?: any) {\n    this.log('INFO', message, metadata);\n  }\n\n  error(message: string, error?: Error, metadata?: any) {\n    this.log('ERROR', message, {\n      ...metadata,\n      error: error?.message,\n      stack: error?.stack\n    });\n  }\n\n  private log(level: LogLevel, message: string, metadata?: any) {\n    const entry: LogEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      service: this.serviceName,\n      traceId: this.getTraceId(),\n      message,\n      metadata\n    };\n\n    console.log(JSON.stringify(entry));\n  }\n}"
            ],
            [
              "typescript",
              "// utils/tracing.ts\nimport { initTracer } from 'jaeger-client';\n\nconst tracer = initTracer({\n  serviceName: process.env.SERVICE_NAME || 'workflow-service',\n  sampler: {\n    type: 'const',\n    param: 1, // 全リクエストをトレース\n  },\n  reporter: {\n    logSpans: true,\n    agentHost: 'jaeger-agent',\n    agentPort: 6832,\n  },\n});\n\nexport class TracingMiddleware {\n  middleware() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      const span = tracer.startSpan(`${req.method} ${req.path}`);\n\n      span.setTag('http.method', req.method);\n      span.setTag('http.url', req.url);\n      span.setTag('service.name', process.env.SERVICE_NAME);\n\n      req.span = span;\n\n      res.on('finish', () => {\n        span.setTag('http.status_code', res.statusCode);\n        span.finish();\n      });\n\n      next();\n    };\n  }\n}"
            ],
            [
              "typescript",
              "// utils/metrics.ts\nimport prometheus from 'prom-client';\n\nclass WorkflowMetrics {\n  private httpRequestDuration = new prometheus.Histogram({\n    name: 'http_request_duration_seconds',\n    help: 'Duration of HTTP requests in seconds',\n    labelNames: ['method', 'route', 'status_code', 'service'],\n    buckets: [0.1, 0.3, 0.5, 0.7, 1, 3, 5, 7, 10]\n  });\n\n  private httpRequestsTotal = new prometheus.Counter({\n    name: 'http_requests_total',\n    help: 'Total number of HTTP requests',\n    labelNames: ['method', 'route', 'status_code', 'service']\n  });\n\n  private activeConnections = new prometheus.Gauge({\n    name: 'active_connections',\n    help: 'Number of active connections',\n    labelNames: ['service']\n  });\n\n  middleware() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      const start = Date.now();\n\n      res.on('finish', () => {\n        const duration = (Date.now() - start) / 1000;\n\n        this.httpRequestDuration\n          .labels(req.method, req.route?.path || req.path, res.statusCode.toString(), process.env.SERVICE_NAME)\n          .observe(duration);\n\n        this.httpRequestsTotal\n          .labels(req.method, req.route?.path || req.path, res.statusCode.toString(), process.env.SERVICE_NAME)\n          .inc();\n      });\n\n      next();\n    };\n  }\n}"
            ],
            [
              "typescript",
              "// monitoring/health-checker.ts\nclass HealthChecker {\n  private services = [\n    { name: 'workflow-types', port: 8001 },\n    { name: 'workflow-requests', port: 8002 },\n    // ... 全9サービス\n  ];\n\n  async runHealthChecks() {\n    const results = [];\n\n    for (const service of this.services) {\n      const result = await this.checkService(service);\n      results.push(result);\n\n      if (!result.healthy) {\n        await this.triggerAlert(service, result);\n      }\n    }\n\n    return results;\n  }\n\n  private async checkService(service: ServiceConfig) {\n    try {\n      const response = await axios.get(`http://localhost:${service.port}/health`, {\n        timeout: 5000\n      });\n\n      return {\n        service: service.name,\n        healthy: response.status === 200,\n        responseTime: response.headers['x-response-time'],\n        lastCheck: new Date()\n      };\n    } catch (error) {\n      return {\n        service: service.name,\n        healthy: false,\n        error: error.message,\n        lastCheck: new Date()\n      };\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"incident_levels\": {\n    \"P1_CRITICAL\": {\n      \"description\": \"全サービス停止・データ破損\",\n      \"response_time\": \"5分以内\",\n      \"escalation\": \"即座に責任者連絡\",\n      \"actions\": [\"緊急ロールバック\", \"データ復旧\", \"顧客通知\"]\n    },\n    \"P2_HIGH\": {\n      \"description\": \"主要機能停止・性能大幅劣化\",\n      \"response_time\": \"15分以内\",\n      \"escalation\": \"チームリーダー経由\",\n      \"actions\": [\"代替手段適用\", \"原因調査\", \"修正適用\"]\n    },\n    \"P3_MEDIUM\": {\n      \"description\": \"一部機能停止・軽微な性能劣化\",\n      \"response_time\": \"1時間以内\",\n      \"escalation\": \"通常フロー\",\n      \"actions\": [\"監視強化\", \"計画的修正\"]\n    }\n  }\n}"
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/emergency-rollback.sh\n\necho \"🚨 緊急ロールバック開始\"\n\n# 現在のバージョン特定\nCURRENT_VERSION=$(get_current_version)\nPREVIOUS_VERSION=$(get_previous_stable_version)\n\necho \"📦 $CURRENT_VERSION → $PREVIOUS_VERSION にロールバック\"\n\n# 1. トラフィック停止\necho \"🛑 新バージョンへのトラフィック停止\"\nstop_traffic_to_version $CURRENT_VERSION\n\n# 2. 前バージョンのヘルスチェック\necho \"🔍 前バージョンのヘルスチェック\"\nif ! health_check_version $PREVIOUS_VERSION; then\n  echo \"❌ 前バージョンも異常 - 手動対応が必要\"\n  notify_emergency_team\n  exit 1\nfi\n\n# 3. トラフィック切り替え\necho \"🔀 前バージョンにトラフィック切り替え\"\nswitch_traffic_to_version $PREVIOUS_VERSION\n\n# 4. 動作確認\necho \"✅ ロールバック動作確認\"\nrun_smoke_tests\n\n# 5. 通知・ログ\necho \"📢 ロールバック完了通知\"\nnotify_rollback_completion $CURRENT_VERSION $PREVIOUS_VERSION\n\necho \"✅ 緊急ロールバック完了\""
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/weekly-maintenance.sh\n\necho \"🔧 週次メンテナンス開始\"\n\n# 1. ログローテーション\necho \"📋 ログローテーション実行\"\nlogrotate /etc/logrotate.d/workflow-microservices\n\n# 2. 不要ファイル削除\necho \"🗑️ 不要ファイル削除\"\nfind /var/log/workflow -name \"*.log.*\" -mtime +30 -delete\nfind /tmp -name \"workflow-*\" -mtime +7 -delete\n\n# 3. データベース最適化\necho \"🗄️ データベース最適化\"\nnpm run db:optimize\n\n# 4. パフォーマンス分析\necho \"📊 パフォーマンス分析\"\nnpm run analyze:performance\n\n# 5. セキュリティスキャン\necho \"🔒 セキュリティスキャン\"\nnpm audit --audit-level moderate\n\necho \"✅ 週次メンテナンス完了\""
            ],
            [
              "sql",
              "-- scripts/optimize-database.sql\n\n-- 未使用インデックス削除\nSELECT schemaname, tablename, indexname, idx_tup_read, idx_tup_fetch\nFROM pg_stat_user_indexes\nWHERE idx_tup_read = 0 AND idx_tup_fetch = 0;\n\n-- テーブル統計更新\nANALYZE logs;\nANALYZE workflow_requests;\nANALYZE approval_history;\n\n-- 断片化解消\nREINDEX INDEX CONCURRENTLY logs_timestamp_idx;\nREINDEX INDEX CONCURRENTLY workflow_requests_status_idx;\n\n-- 古いログデータクリーンアップ\nDELETE FROM logs WHERE created_at < NOW() - INTERVAL '90 days' AND level < 40;"
            ],
            [
              "yaml",
              "# kubernetes/workflow-autoscaler.yaml\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: workflow-microservices-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: workflow-microservices\n  minReplicas: 3\n  maxReplicas: 20\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 15\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60"
            ],
            [
              "mermaid",
              "graph TD\n    A[障害検出] --> B{障害レベル判定}\n    B -->|P1 CRITICAL| C[即座通知]\n    B -->|P2 HIGH| D[15分以内通知]\n    B -->|P3 MEDIUM| E[1時間以内通知]\n\n    C --> F[テックリード]\n    D --> G[開発チーム]\n    E --> H[担当者]\n\n    F --> I[緊急対応開始]\n    G --> J[優先対応開始]\n    H --> K[通常対応開始]"
            ],
            [
              "json",
              "{\n  \"emergency_contacts\": {\n    \"tech_lead\": {\n      \"name\": \"テックリード\",\n      \"phone\": \"+81-90-XXXX-XXXX\",\n      \"email\": \"tech-lead@company.com\",\n      \"slack\": \"@tech-lead\",\n      \"availability\": \"24/7\"\n    },\n    \"devops_engineer\": {\n      \"name\": \"DevOpsエンジニア\",\n      \"phone\": \"+81-90-XXXX-XXXX\",\n      \"email\": \"devops@company.com\",\n      \"slack\": \"@devops\",\n      \"availability\": \"業務時間\"\n    },\n    \"database_admin\": {\n      \"name\": \"データベース管理者\",\n      \"phone\": \"+81-90-XXXX-XXXX\",\n      \"email\": \"dba@company.com\",\n      \"slack\": \"@dba\",\n      \"availability\": \"オンコール\"\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"sla_targets\": {\n    \"availability\": {\n      \"target\": \"99.9%\",\n      \"measurement\": \"monthly\",\n      \"downtime_allowance\": \"43.8 minutes/month\"\n    },\n    \"response_time\": {\n      \"target\": \"< 100ms\",\n      \"percentile\": \"95th\",\n      \"measurement\": \"API endpoints\"\n    },\n    \"error_rate\": {\n      \"target\": \"< 0.1%\",\n      \"measurement\": \"total requests\",\n      \"exclusions\": [\"client_errors\"]\n    },\n    \"deployment_frequency\": {\n      \"target\": \"daily\",\n      \"success_rate\": \"> 95%\"\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// monitoring/dashboard-config.ts\nexport const operationalDashboard = {\n  name: 'Workflow Microservices Operations',\n  panels: [\n    {\n      title: 'Service Availability',\n      type: 'stat',\n      targets: [\n        'avg_over_time(up{job=\"workflow-microservices\"}[5m]) * 100'\n      ],\n      thresholds: [\n        { value: 99.9, color: 'green' },\n        { value: 99.0, color: 'yellow' },\n        { value: 95.0, color: 'red' }\n      ]\n    },\n    {\n      title: 'Response Time Distribution',\n      type: 'histogram',\n      targets: [\n        'histogram_quantile(0.50, rate(http_request_duration_seconds_bucket[5m]))',\n        'histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))',\n        'histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))'\n      ]\n    },\n    {\n      title: 'Error Rate',\n      type: 'graph',\n      targets: [\n        'rate(http_requests_total{status=~\"5..\"}[5m]) / rate(http_requests_total[5m]) * 100'\n      ]\n    }\n  ]\n};"
            ],
            [
              "bash",
              "# 全サービス状態確認\n./scripts/check-all-services.sh\n\n# 特定サービス再起動\n./scripts/restart-service.sh workflow-types\n\n# ログ一括確認\n./scripts/tail-all-logs.sh\n\n# 性能レポート生成\n./scripts/generate-performance-report.sh\n\n# データベース健全性チェック\n./scripts/check-database-health.sh\n\n# 緊急メンテナンスモード\n./scripts/enable-maintenance-mode.sh"
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/auto-recovery.sh\n\n# サービス死活監視・自動復旧\nmonitor_and_recover() {\n  while true; do\n    for service in \"${SERVICES[@]}\"; do\n      if ! health_check_service $service; then\n        echo \"⚠️ $service 異常検出 - 自動復旧試行\"\n\n        # 3回まで再起動試行\n        for attempt in {1..3}; do\n          restart_service $service\n          sleep 10\n\n          if health_check_service $service; then\n            echo \"✅ $service 復旧完了\"\n            break\n          fi\n\n          if [ $attempt -eq 3 ]; then\n            echo \"❌ $service 自動復旧失敗 - エスカレーション\"\n            escalate_incident $service\n          fi\n        done\n      fi\n    done\n\n    sleep 30\n  done\n}"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.5,
        "sentences": 192,
        "avg_words_per_sentence": 8.22,
        "long_sentences": 16,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 39,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 67.35
    },
    "docs/57-システム性能分析レポート.md": {
      "basic_metrics": {
        "lines": 147,
        "words": 393,
        "characters": 3053,
        "avg_line_length": 20.768707482993197
      },
      "structure_analysis": {
        "headers": {
          "total": 32,
          "hierarchy": [
            {
              "level": 1,
              "text": "システム性能分析レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📊 分析概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🚨 CRITICAL（重大）な性能問題",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "1. モノリシックコンポーネント問題",
              "line_number": 11
            },
            {
              "level": 4,
              "text": "LogMonitoring.vue（★★★ 最重要 - 完全解決済み）",
              "line_number": 13
            },
            {
              "level": 4,
              "text": "PermissionMatrix.vue",
              "line_number": 19
            },
            {
              "level": 4,
              "text": "InheritanceVisualization.vue",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "2. APIモノリス問題",
              "line_number": 29
            },
            {
              "level": 4,
              "text": "workflow.ts（★★★ 最重要 - 設計済み）",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "permissions.ts",
              "line_number": 38
            },
            {
              "level": 2,
              "text": "⚠️ HIGH（高）優先度の性能問題",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "3. フロントエンド構造問題",
              "line_number": 45
            },
            {
              "level": 4,
              "text": "依存関係の重複",
              "line_number": 47
            },
            {
              "level": 4,
              "text": "TypeScript肥大化",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "4. データベース設計問題",
              "line_number": 60
            },
            {
              "level": 4,
              "text": "過剰インデックス",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "クエリパターン",
              "line_number": 67
            },
            {
              "level": 2,
              "text": "📈 MEDIUM（中）優先度の性能問題",
              "line_number": 72
            },
            {
              "level": 3,
              "text": "5. インフラ・開発環境",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "Docker構成",
              "line_number": 76
            },
            {
              "level": 4,
              "text": "メモリ使用量",
              "line_number": 81
            },
            {
              "level": 3,
              "text": "6. ワークフロー機能の複雑化",
              "line_number": 88
            },
            {
              "level": 4,
              "text": "サービス層肥大化",
              "line_number": 90
            },
            {
              "level": 2,
              "text": "🎯 性能改善優先度マトリクス",
              "line_number": 95
            },
            {
              "level": 2,
              "text": "📊 期待される改善効果",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "フロントエンド（LogMonitoring分割達成分）",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "バックエンド",
              "line_number": 113
            },
            {
              "level": 3,
              "text": "データベース",
              "line_number": 118
            },
            {
              "level": 2,
              "text": "🚀 次のアクション",
              "line_number": 123
            },
            {
              "level": 2,
              "text": "📋 測定指標",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "KPI（LogMonitoring分割達成分）",
              "line_number": 132
            },
            {
              "level": 3,
              "text": "監視項目",
              "line_number": 138
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 3,
          "languages": {},
          "details": [
            [
              "",
              "Element Plus: 2.5.1 (大容量UIライブラリ)\nD3.js: 7.9.0 (可視化ライブラリ - 部分的使用)\nECharts: 6.0.0 (チャートライブラリ - D3と重複)\nSocket.io: 4.8.1 (リアルタイム通信)\nPrism.js: 1.30.0 (シンタックスハイライト)"
            ],
            [
              "",
              "Backend: 267MB（通常範囲）\nFrontend: 201MB（やや高）\nPostgreSQL: 35MB（良好）"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 94.55,
        "sentences": 44,
        "avg_words_per_sentence": 8.93,
        "long_sentences": 8,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 40.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 67.21
    },
    "docs/62-実装リスク管理計画書.md": {
      "basic_metrics": {
        "lines": 468,
        "words": 1072,
        "characters": 8911,
        "avg_line_length": 19.04059829059829
      },
      "structure_analysis": {
        "headers": {
          "total": 64,
          "hierarchy": [
            {
              "level": 1,
              "text": "workflow.ts分割実装リスク管理計画書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 リスク管理概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🚨 CRITICAL（重大）リスク",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "1. データベーストランザクション整合性リスク",
              "line_number": 14
            },
            {
              "level": 4,
              "text": "リスク内容",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "技術的詳細",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "対策・軽減策",
              "line_number": 35
            },
            {
              "level": 5,
              "text": "1. 分散トランザクション設計 🔴",
              "line_number": 37
            },
            {
              "level": 5,
              "text": "2. データ整合性検証機能 🟡",
              "line_number": 72
            },
            {
              "level": 5,
              "text": "3. 段階的移行戦略 🟢",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "2. API互換性破綻リスク",
              "line_number": 125
            },
            {
              "level": 4,
              "text": "リスク内容",
              "line_number": 127
            },
            {
              "level": 4,
              "text": "対策・軽減策",
              "line_number": 134
            },
            {
              "level": 5,
              "text": "1. API互換性保証層 🔴",
              "line_number": 136
            },
            {
              "level": 5,
              "text": "2. API契約テスト 🟡",
              "line_number": 168
            },
            {
              "level": 2,
              "text": "⚠️ HIGH（高）リスク",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "3. 性能劣化リスク",
              "line_number": 200
            },
            {
              "level": 4,
              "text": "リスク内容",
              "line_number": 202
            },
            {
              "level": 4,
              "text": "対策・軽減策",
              "line_number": 209
            },
            {
              "level": 5,
              "text": "1. 性能監視・アラート 🟡",
              "line_number": 211
            },
            {
              "level": 5,
              "text": "2. キャッシュ戦略 🟢",
              "line_number": 247
            },
            {
              "level": 3,
              "text": "4. 運用複雑性増大リスク",
              "line_number": 269
            },
            {
              "level": 4,
              "text": "リスク内容",
              "line_number": 271
            },
            {
              "level": 4,
              "text": "対策・軽減策",
              "line_number": 278
            },
            {
              "level": 5,
              "text": "1. 統合ログ・トレーシング 🟡",
              "line_number": 280
            },
            {
              "level": 2,
              "text": "🟢 MEDIUM（中）リスク",
              "line_number": 308
            },
            {
              "level": 3,
              "text": "5. 開発効率低下リスク",
              "line_number": 310
            },
            {
              "level": 4,
              "text": "リスク内容",
              "line_number": 312
            },
            {
              "level": 4,
              "text": "対策・軽減策",
              "line_number": 319
            },
            {
              "level": 5,
              "text": "1. 開発環境統合 🟢",
              "line_number": 321
            },
            {
              "level": 1,
              "text": "開発用統合スクリプト",
              "line_number": 323
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 324
            },
            {
              "level": 1,
              "text": "dev-workflow.sh",
              "line_number": 325
            },
            {
              "level": 1,
              "text": "各サービスの並行起動",
              "line_number": 329
            },
            {
              "level": 1,
              "text": "ヘルスチェック",
              "line_number": 335
            },
            {
              "level": 2,
              "text": "📊 リスク管理マトリクス",
              "line_number": 348
            },
            {
              "level": 2,
              "text": "🎯 実装フェーズ別リスク軽減計画",
              "line_number": 360
            },
            {
              "level": 3,
              "text": "Phase 1: 準備・設計（Day 1）",
              "line_number": 362
            },
            {
              "level": 3,
              "text": "Phase 2: 基盤ファイル作成（Day 2-4）",
              "line_number": 368
            },
            {
              "level": 3,
              "text": "Phase 3: 承認機能ファイル（Day 5-7）",
              "line_number": 374
            },
            {
              "level": 3,
              "text": "Phase 4: 高度承認機能（Day 8-9）",
              "line_number": 380
            },
            {
              "level": 3,
              "text": "Phase 5: 移行・検証（Day 9）",
              "line_number": 386
            },
            {
              "level": 2,
              "text": "🚨 緊急対応プロトコル",
              "line_number": 394
            },
            {
              "level": 3,
              "text": "レベル1: データ不整合検出",
              "line_number": 396
            },
            {
              "level": 1,
              "text": "緊急データ修復スクリプト",
              "line_number": 398
            },
            {
              "level": 1,
              "text": "→ 自動ロールバック実行",
              "line_number": 400
            },
            {
              "level": 1,
              "text": "→ 緊急通知送信",
              "line_number": 401
            },
            {
              "level": 1,
              "text": "→ 調査開始",
              "line_number": 402
            },
            {
              "level": 3,
              "text": "レベル2: API応答異常",
              "line_number": 405
            },
            {
              "level": 1,
              "text": "サービス健全性チェック",
              "line_number": 407
            },
            {
              "level": 1,
              "text": "→ 異常サービス特定",
              "line_number": 409
            },
            {
              "level": 1,
              "text": "→ フェイルオーバー実行",
              "line_number": 410
            },
            {
              "level": 1,
              "text": "→ 復旧作業開始",
              "line_number": 411
            },
            {
              "level": 3,
              "text": "レベル3: 性能劣化",
              "line_number": 414
            },
            {
              "level": 1,
              "text": "性能診断実行",
              "line_number": 416
            },
            {
              "level": 1,
              "text": "→ ボトルネック特定",
              "line_number": 418
            },
            {
              "level": 1,
              "text": "→ キャッシュクリア",
              "line_number": 419
            },
            {
              "level": 1,
              "text": "→ スケールアウト実行",
              "line_number": 420
            },
            {
              "level": 2,
              "text": "📋 成功基準・KPI",
              "line_number": 425
            },
            {
              "level": 3,
              "text": "技術KPI",
              "line_number": 427
            },
            {
              "level": 3,
              "text": "ビジネスKPI",
              "line_number": 433
            },
            {
              "level": 2,
              "text": "📞 エスカレーション・連絡体制",
              "line_number": 441
            },
            {
              "level": 3,
              "text": "緊急連絡先",
              "line_number": 443
            },
            {
              "level": 3,
              "text": "報告フロー",
              "line_number": 449
            }
          ],
          "hierarchy_issues": [
            {
              "line": 405,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 414,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 5
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 14,
          "inline_code": 29,
          "languages": {
            "sql": 1,
            "typescript": 8,
            "bash": 4
          },
          "details": [
            [
              "sql",
              "-- 現在のworkflow.ts内でのトランザクション例\nBEGIN;\n  INSERT INTO workflow_requests ...;\n  UPDATE approval_history ...;\n  INSERT INTO notifications ...;\nCOMMIT;\n\n-- 分割後の課題: 3つのマイクロサービス間での整合性"
            ],
            [
              "typescript",
              "// Saga パターン実装\nclass WorkflowSagaOrchestrator {\n  async createWorkflowRequest(data: WorkflowData) {\n    const saga = new Saga();\n\n    try {\n      // Step 1: リクエスト作成\n      const request = await saga.execute(\n        () => workflowRequestService.create(data),\n        () => workflowRequestService.rollback(data.id)\n      );\n\n      // Step 2: 承認履歴作成\n      const history = await saga.execute(\n        () => approvalHistoryService.create(request.id),\n        () => approvalHistoryService.rollback(request.id)\n      );\n\n      // Step 3: 通知送信\n      await saga.execute(\n        () => notificationService.send(request.id),\n        () => notificationService.cancel(request.id)\n      );\n\n      return request;\n    } catch (error) {\n      await saga.compensate();\n      throw error;\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// 整合性チェッカー\nclass DataConsistencyChecker {\n  async validateWorkflowData() {\n    const issues = [];\n\n    // 孤立したリクエストチェック\n    const orphanedRequests = await this.findOrphanedRequests();\n    if (orphanedRequests.length > 0) {\n      issues.push({\n        type: 'ORPHANED_REQUESTS',\n        count: orphanedRequests.length,\n        severity: 'HIGH'\n      });\n    }\n\n    // 承認履歴の整合性チェック\n    const inconsistentHistory = await this.validateApprovalHistory();\n    if (inconsistentHistory.length > 0) {\n      issues.push({\n        type: 'INCONSISTENT_HISTORY',\n        count: inconsistentHistory.length,\n        severity: 'MEDIUM'\n      });\n    }\n\n    return issues;\n  }\n}"
            ],
            [
              "typescript",
              "// フィーチャーフラグによる段階的移行\nclass WorkflowFeatureFlags {\n  private flags = {\n    useNewWorkflowTypes: false,      // Phase 1\n    useNewRequests: false,           // Phase 2\n    useNewApprovals: false,          // Phase 3\n    fullyMigrated: false             // Phase 4\n  };\n\n  async processWorkflow(data: WorkflowData) {\n    if (this.flags.fullyMigrated) {\n      return await this.newWorkflowService.process(data);\n    } else {\n      return await this.legacyWorkflowService.process(data);\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// レガシーAPI互換性ラッパー\nclass LegacyWorkflowAPIWrapper {\n  constructor(\n    private newWorkflowServices: {\n      types: WorkflowTypesService;\n      requests: WorkflowRequestsService;\n      emergency: EmergencyApprovalService;\n      // ... 他のサービス\n    }\n  ) {}\n\n  // レガシーエンドポイント: POST /api/workflow/create\n  async legacyCreateWorkflow(req: Request, res: Response) {\n    try {\n      // 新しいマイクロサービスへのマッピング\n      const workflowType = await this.newWorkflowServices.types.findById(req.body.typeId);\n      const request = await this.newWorkflowServices.requests.create({\n        ...req.body,\n        workflowType\n      });\n\n      // レガシー形式でレスポンス\n      res.json(this.toLegacyFormat(request));\n    } catch (error) {\n      res.status(500).json({ error: 'Internal Server Error' });\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// API契約テスト（Consumer-Driven Contracts）\ndescribe('Workflow API Contracts', () => {\n  test('POST /api/workflow/create maintains legacy contract', async () => {\n    const legacyRequest = {\n      typeId: 1,\n      title: 'Test Workflow',\n      description: 'Test Description'\n    };\n\n    const response = await request(app)\n      .post('/api/workflow/create')\n      .send(legacyRequest)\n      .expect(201);\n\n    // レガシー形式の検証\n    expect(response.body).toMatchObject({\n      id: expect.any(Number),\n      typeId: 1,\n      title: 'Test Workflow',\n      status: 'PENDING',\n      createdAt: expect.any(String)\n    });\n  });\n});"
            ],
            [
              "typescript",
              "// 性能監視ミドルウェア\nclass PerformanceMonitor {\n  middleware() {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      const startTime = Date.now();\n\n      res.on('finish', () => {\n        const duration = Date.now() - startTime;\n\n        // SLA違反チェック\n        if (duration > 1000) { // 1秒超過\n          this.alertManager.sendAlert({\n            type: 'SLA_VIOLATION',\n            endpoint: req.path,\n            duration,\n            threshold: 1000\n          });\n        }\n\n        // メトリクス記録\n        this.metricsCollector.record({\n          endpoint: req.path,\n          method: req.method,\n          duration,\n          statusCode: res.statusCode\n        });\n      });\n\n      next();\n    };\n  }\n}"
            ],
            [
              "typescript",
              "// 分散キャッシュ実装\nclass WorkflowCache {\n  private redis = new Redis(process.env.REDIS_URL);\n\n  async getWorkflowTypes(companyId: number) {\n    const cacheKey = `workflow_types:${companyId}`;\n    const cached = await this.redis.get(cacheKey);\n\n    if (cached) {\n      return JSON.parse(cached);\n    }\n\n    const types = await workflowTypesService.findByCompany(companyId);\n    await this.redis.setex(cacheKey, 300, JSON.stringify(types)); // 5分キャッシュ\n\n    return types;\n  }\n}"
            ],
            [
              "typescript",
              "// 分散トレーシング実装\nclass DistributedTracing {\n  generateTraceId(): string {\n    return `trace_${Date.now()}_${Math.random().toString(36)}`;\n  }\n\n  middleware() {\n    return (req: Request, res: Response, next: NextFunction) => {\n      req.traceId = req.headers['x-trace-id'] || this.generateTraceId();\n      res.setHeader('x-trace-id', req.traceId);\n\n      logger.info('Request started', {\n        traceId: req.traceId,\n        method: req.method,\n        path: req.path,\n        service: 'workflow-service'\n      });\n\n      next();\n    };\n  }\n}"
            ],
            [
              "bash",
              "# 開発用統合スクリプト\n#!/bin/bash\n# dev-workflow.sh\n\necho \"🚀 Workflow マイクロサービス開発環境起動\"\n\n# 各サービスの並行起動\nnpm run dev:workflow-types &\nnpm run dev:workflow-requests &\nnpm run dev:emergency-approval &\nnpm run dev:delegation-approval &\n\n# ヘルスチェック\necho \"⏳ サービス起動待機中...\"\nsleep 10\n\necho \"🔍 ヘルスチェック実行\"\ncurl -f http://localhost:8001/health || echo \"❌ workflow-types サービス異常\"\ncurl -f http://localhost:8002/health || echo \"❌ workflow-requests サービス異常\"\n\necho \"✅ 開発環境準備完了\""
            ],
            [
              "bash",
              "# 緊急データ修復スクリプト\n./scripts/emergency-data-repair.sh\n# → 自動ロールバック実行\n# → 緊急通知送信\n# → 調査開始"
            ],
            [
              "bash",
              "# サービス健全性チェック\n./scripts/health-check-all.sh\n# → 異常サービス特定\n# → フェイルオーバー実行\n# → 復旧作業開始"
            ],
            [
              "bash",
              "# 性能診断実行\n./scripts/performance-diagnosis.sh\n# → ボトルネック特定\n# → キャッシュクリア\n# → スケールアウト実行"
            ],
            [
              "",
              "🚨 障害検出\n    ↓\n📞 テックリード通知（即座）\n    ↓\n⚡ 初期対応実施（5分以内）\n    ↓\n📋 PM・関係者報告（15分以内）\n    ↓\n🔧 本格復旧作業\n    ↓\n📊 事後分析・改善"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 7
        }
      },
      "readability": {
        "score": 96.09,
        "sentences": 115,
        "avg_words_per_sentence": 9.32,
        "long_sentences": 15,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 56,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.73
    },
    "docs/38-レスポンシブ共通コンポーネント化による対策量削減案.md": {
      "basic_metrics": {
        "lines": 435,
        "words": 823,
        "characters": 8272,
        "avg_line_length": 19.01609195402299
      },
      "structure_analysis": {
        "headers": {
          "total": 29,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブ共通コンポーネント化による対策量削減案",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. 現状分析結果",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "1.1 共通UIパターンの使用状況",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "1.2 画面構成の共通性",
              "line_number": 23
            },
            {
              "level": 2,
              "text": "2. 共通コンポーネント化戦略",
              "line_number": 41
            },
            {
              "level": 3,
              "text": "2.1 提案する5つの共通コンポーネント",
              "line_number": 43
            },
            {
              "level": 4,
              "text": "1. **ResponsiveCrudPage** (最重要)",
              "line_number": 45
            },
            {
              "level": 4,
              "text": "2. **ResponsiveTable**",
              "line_number": 77
            },
            {
              "level": 4,
              "text": "3. **ResponsiveDialog**",
              "line_number": 98
            },
            {
              "level": 4,
              "text": "4. **ResponsiveForm**",
              "line_number": 115
            },
            {
              "level": 4,
              "text": "5. **ResponsiveGrid**",
              "line_number": 133
            },
            {
              "level": 2,
              "text": "3. 実装による削減効果",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "3.1 作業量比較",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "3.2 移行の容易さ",
              "line_number": 155
            },
            {
              "level": 2,
              "text": "4. 段階的実装計画",
              "line_number": 183
            },
            {
              "level": 3,
              "text": "Phase 1: コンポーネント開発（3日）",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "Phase 2: パイロット適用（2日）",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "Phase 3: 全面展開（5日）",
              "line_number": 198
            },
            {
              "level": 2,
              "text": "5. 技術実装詳細",
              "line_number": 209
            },
            {
              "level": 3,
              "text": "5.1 ResponsiveCrudPage実装例",
              "line_number": 211
            },
            {
              "level": 2,
              "text": "6. 導入メリット",
              "line_number": 391
            },
            {
              "level": 3,
              "text": "6.1 開発効率",
              "line_number": 393
            },
            {
              "level": 3,
              "text": "6.2 保守性",
              "line_number": 398
            },
            {
              "level": 3,
              "text": "6.3 品質",
              "line_number": 403
            },
            {
              "level": 2,
              "text": "7. 推奨事項",
              "line_number": 410
            },
            {
              "level": 3,
              "text": "即座に実行すべきアクション",
              "line_number": 412
            },
            {
              "level": 3,
              "text": "段階的移行戦略",
              "line_number": 417
            },
            {
              "level": 2,
              "text": "8. まとめ",
              "line_number": 424
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 21,
          "languages": {
            "vue": 7
          },
          "details": [
            [
              "",
              "典型的な管理画面構成（10画面で共通）:\n┌─────────────────────────────┐\n│ el-card (ヘッダー + 新規追加ボタン)  │\n├─────────────────────────────┤\n│ el-form inline (検索フォーム)       │\n├─────────────────────────────┤\n│ el-table (データ一覧)              │\n├─────────────────────────────┤\n│ el-pagination (ページネーション)     │\n└─────────────────────────────┘\n+ el-dialog (新規作成/編集用)"
            ],
            [
              "vue",
              "<!-- 10画面を1コンポーネントで対応 -->\n<ResponsiveCrudPage\n  :title=\"ユーザー管理\"\n  :columns=\"tableColumns\"\n  :data=\"tableData\"\n  :dialog-width=\"500\"\n  @add=\"handleAdd\"\n  @edit=\"handleEdit\"\n  @delete=\"handleDelete\"\n>\n  <template #search>\n    <!-- カスタム検索フォーム -->\n  </template>\n  <template #dialog-content>\n    <!-- カスタムフォーム内容 -->\n  </template>\n</ResponsiveCrudPage>"
            ],
            [
              "vue",
              "<!-- テーブルのレスポンシブ対応を一元化 -->\n<ResponsiveTable\n  :columns=\"columns\"\n  :data=\"data\"\n  :show-selection=\"true\"\n  :show-actions=\"true\"\n>\n  <template #action=\"{ row }\">\n    <el-button @click=\"edit(row)\">編集</el-button>\n  </template>\n</ResponsiveTable>"
            ],
            [
              "vue",
              "<!-- ダイアログの幅を自動調整 -->\n<ResponsiveDialog\n  v-model=\"visible\"\n  :title=\"title\"\n  :desktop-width=\"600\"\n>\n  <!-- 内容 -->\n</ResponsiveDialog>"
            ],
            [
              "vue",
              "<!-- フォームレイアウトの自動調整 -->\n<ResponsiveForm\n  :model=\"form\"\n  :rules=\"rules\"\n>\n  <ResponsiveFormItem label=\"名前\" prop=\"name\">\n    <el-input v-model=\"form.name\" />\n  </ResponsiveFormItem>\n</ResponsiveForm>"
            ],
            [
              "vue",
              "<!-- グリッドレイアウトの簡略化 -->\n<ResponsiveGrid>\n  <ResponsiveCol :desktop=\"8\" :tablet=\"12\" :mobile=\"24\">\n    <!-- コンテンツ -->\n  </ResponsiveCol>\n</ResponsiveGrid>"
            ],
            [
              "vue",
              "<!-- Before: Users.vue (54行のテンプレート) -->\n<el-card>\n  <template #header>...\n  <el-form :inline=\"true\">...\n  <el-table :data=\"tableData\">...\n  <el-pagination>...\n</el-card>\n<el-dialog>...\n\n<!-- After: Users.vue (15行に削減) -->\n<ResponsiveCrudPage\n  title=\"ユーザー管理\"\n  :columns=\"userColumns\"\n  :data=\"users\"\n  @add=\"addUser\"\n  @edit=\"editUser\"\n>\n  <template #search>\n    <el-input v-model=\"search\" placeholder=\"検索...\" />\n  </template>\n</ResponsiveCrudPage>"
            ],
            [
              "",
              "Day 1: ResponsiveTable + ResponsiveDialog\nDay 2: ResponsiveCrudPage\nDay 3: ResponsiveForm + ResponsiveGrid"
            ],
            [
              "",
              "Day 4: Users.vue を ResponsiveCrudPage に移行\nDay 5: テスト・調整"
            ],
            [
              "",
              "Day 6-7: CRUD画面10個を一括移行\nDay 8-9: 特殊画面の個別対応\nDay 10: 統合テスト"
            ],
            [
              "vue",
              "<!-- components/ResponsiveCrudPage.vue -->\n<template>\n  <div class=\"responsive-crud-page\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>{{ title }}</span>\n          <el-button\n            type=\"primary\"\n            @click=\"$emit('add')\"\n            :size=\"isMobile ? 'small' : 'default'\"\n          >\n            <el-icon><Plus /></el-icon>\n            {{ isMobile ? '' : '新規追加' }}\n          </el-button>\n        </div>\n      </template>\n\n      <!-- 検索フォーム -->\n      <div class=\"search-section\" v-if=\"$slots.search\">\n        <slot name=\"search\"></slot>\n      </div>\n\n      <!-- レスポンシブテーブル -->\n      <div class=\"table-container\">\n        <el-table\n          :data=\"data\"\n          v-bind=\"tableProps\"\n          :style=\"{ minWidth: tableMinWidth }\"\n        >\n          <el-table-column\n            v-for=\"column in visibleColumns\"\n            :key=\"column.prop\"\n            v-bind=\"getColumnProps(column)\"\n          />\n          <el-table-column\n            label=\"操作\"\n            :width=\"actionWidth\"\n            :fixed=\"!isMobile && 'right'\"\n          >\n            <template #default=\"{ row }\">\n              <slot name=\"actions\" :row=\"row\">\n                <el-button\n                  size=\"small\"\n                  @click=\"$emit('edit', row)\"\n                >\n                  編集\n                </el-button>\n                <el-button\n                  size=\"small\"\n                  type=\"danger\"\n                  @click=\"$emit('delete', row)\"\n                >\n                  削除\n                </el-button>\n              </slot>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <!-- ページネーション -->\n      <el-pagination\n        v-if=\"showPagination\"\n        v-model:current-page=\"currentPage\"\n        v-model:page-size=\"pageSize\"\n        :page-sizes=\"pageSizes\"\n        :layout=\"paginationLayout\"\n        :total=\"total\"\n        @size-change=\"$emit('size-change', $event)\"\n        @current-change=\"$emit('page-change', $event)\"\n      />\n    </el-card>\n\n    <!-- 編集ダイアログ -->\n    <ResponsiveDialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogTitle\"\n      :width=\"dialogWidth\"\n    >\n      <slot name=\"dialog-content\"></slot>\n    </ResponsiveDialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { useResponsive } from '@/composables/useResponsive'\nimport ResponsiveDialog from './ResponsiveDialog.vue'\n\nconst props = defineProps<{\n  title: string\n  columns: Array<any>\n  data: Array<any>\n  total?: number\n  dialogWidth?: number\n  showPagination?: boolean\n}>()\n\nconst { isMobile, isTablet } = useResponsive()\n\n// モバイル時は重要な列のみ表示\nconst visibleColumns = computed(() => {\n  if (isMobile.value) {\n    return props.columns.filter(col => col.important !== false)\n  }\n  return props.columns\n})\n\n// レスポンシブなレイアウト設定\nconst paginationLayout = computed(() => {\n  if (isMobile.value) return 'prev, pager, next'\n  if (isTablet.value) return 'total, prev, pager, next'\n  return 'total, sizes, prev, pager, next, jumper'\n})\n\nconst tableMinWidth = computed(() => {\n  if (isMobile.value) return '600px'\n  if (isTablet.value) return '800px'\n  return '100%'\n})\n\nconst actionWidth = computed(() => {\n  return isMobile.value ? 100 : 150\n})\n\nconst getColumnProps = (column: any) => {\n  const props = { ...column }\n  // 固定幅を最小幅に変換\n  if (props.width && !props.minWidth) {\n    props.minWidth = props.width\n    delete props.width\n  }\n  return props\n}\n</script>\n\n<style scoped>\n.responsive-crud-page {\n  width: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.table-container {\n  width: 100%;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 768px) {\n  .table-container {\n    margin: 0 -12px;\n    padding: 0 12px;\n  }\n\n  :deep(.el-table) {\n    font-size: 12px;\n  }\n\n  :deep(.el-button) {\n    padding: 5px 10px;\n  }\n}\n\n.search-section {\n  margin-bottom: 16px;\n}\n</style>"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 12
        }
      },
      "readability": {
        "score": 97.38,
        "sentences": 103,
        "avg_words_per_sentence": 7.99,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60.46,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.9
    },
    "docs/35-権限継承可視化機能完成報告書.md": {
      "basic_metrics": {
        "lines": 232,
        "words": 493,
        "characters": 4281,
        "avg_line_length": 18.45258620689655
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "📊 権限継承可視化機能完成報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🚀 実装成果",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1. フロントエンド可視化実装",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2. バックエンド分析API実装",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "3. 可視化タイプ詳細",
              "line_number": 30
            },
            {
              "level": 4,
              "text": "🌳 部署階層ツリー表示",
              "line_number": 32
            },
            {
              "level": 4,
              "text": "🔄 継承フロー表示",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "📊 権限マトリクス表示",
              "line_number": 53
            },
            {
              "level": 2,
              "text": "📊 技術実装詳細",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "API エンドポイント",
              "line_number": 64
            },
            {
              "level": 3,
              "text": "フロントエンドコンポーネント",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "データ構造",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "🎯 主要機能",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "1. インタラクティブ操作",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "2. 詳細情報表示",
              "line_number": 100
            },
            {
              "level": 3,
              "text": "3. パフォーマンス最適化",
              "line_number": 106
            },
            {
              "level": 2,
              "text": "🧪 実装検証結果",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "フロントエンド検証",
              "line_number": 114
            },
            {
              "level": 3,
              "text": "バックエンド検証",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "統合テスト",
              "line_number": 132
            },
            {
              "level": 2,
              "text": "🎨 UI/UX設計",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "デザイン原則",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "レスポンシブ対応",
              "line_number": 149
            },
            {
              "level": 2,
              "text": "📈 期待される効果",
              "line_number": 163
            },
            {
              "level": 3,
              "text": "1. 管理効率向上",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "2. コンプライアンス強化",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "3. 意思決定支援",
              "line_number": 175
            },
            {
              "level": 2,
              "text": "🔮 今後の拡張可能性",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "短期拡張",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "長期拡張",
              "line_number": 187
            },
            {
              "level": 2,
              "text": "📝 使用方法",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "基本操作手順",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "高度な活用方法",
              "line_number": 204
            },
            {
              "level": 2,
              "text": "🏆 技術的成果",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "革新的要素",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "品質指標",
              "line_number": 220
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 12,
          "inline_code": 25,
          "languages": {
            "typescript": 7,
            "vue": 1,
            "css": 1
          },
          "details": [
            [
              "typescript",
              "// D3.js Tree Layout実装\nconst tree = d3.tree<VisualizationNode>()\n  .size([containerWidth - 100, height - 100])"
            ],
            [
              "typescript",
              "// Force Layout + 矢印による関係表示\nconst simulation = d3.forceSimulation<VisualizationNode>()\n  .force('link', d3.forceLink().distance(100))\n  .force('charge', d3.forceManyBody().strength(-300))"
            ],
            [
              "typescript",
              "// ヒートマップ形式の権限一覧\n.style('fill', d => getPermissionColor(d.permissions))"
            ],
            [
              "",
              "GET /api/permissions/inheritance/visualization/:companyId"
            ],
            [
              "vue",
              "<InheritanceVisualization\n  :initial-company-id=\"1\"\n  :initial-feature-id=\"selectedFeature\"\n/>"
            ],
            [
              "typescript",
              "interface VisualizationNode {\n  id: string\n  name: string\n  level: number\n  parentId?: string\n  permissions: any[]\n  inheritanceRules: any[]\n  x?: number\n  y?: number\n  children?: VisualizationNode[]\n}"
            ],
            [
              "typescript",
              "✅ Vue 3 Composition API: 正しい実装パターン\n✅ TypeScript型安全性: 完全な型定義\n✅ D3.js統合: 適切なライフサイクル管理\n✅ Element Plus統合: UIコンポーネント連携\n✅ レスポンシブ対応: 全ブレークポイント対応"
            ],
            [
              "typescript",
              "✅ 継承分析ロジック: 正確な権限計算\n✅ 競合検出アルゴリズム: 矛盾する権限の特定\n✅ API設計: RESTful・適切なエラーハンドリング\n✅ データベース最適化: 効率的クエリ実行\n✅ 認証・認可: 管理者権限チェック完備"
            ],
            [
              "typescript",
              "✅ API通信: 正常なデータ送受信\n✅ エラーハンドリング: 適切なエラー表示\n✅ ローディング状態: UX考慮した状態管理\n✅ データ整合性: フロント・バック間の型一致\n✅ セキュリティ: 認証済みユーザーのみアクセス可能"
            ],
            [
              "css",
              ".visualization-container {\n  width: 100%;\n  height: 600px;\n  overflow: auto;\n}\n\n@media (max-width: 768px) {\n  .chart-container { height: 400px; }\n  .controls { flex-direction: column; }\n}"
            ],
            [
              "",
              "1. ダッシュボード → 権限継承管理ページ\n2. 部署を選択 → 「継承関係の可視化」ボタンクリック\n3. 可視化タイプ選択（ツリー・フロー・マトリクス）\n4. 会社・機能でフィルタリング\n5. ノードクリックで詳細表示\n6. ズーム・パンで詳細確認"
            ],
            [
              "",
              "- 継承競合の発見: フロー表示での矛盾箇所特定\n- 権限設計: ツリー表示での階層構造確認\n- 全体把握: マトリクス表示での一覧確認\n- 分析・報告: PNG出力での資料作成"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.96,
        "sentences": 52,
        "avg_words_per_sentence": 9.48,
        "long_sentences": 7,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 49.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.23
    },
    "docs/32-不具合管理更新報告書.md": {
      "basic_metrics": {
        "lines": 182,
        "words": 600,
        "characters": 4071,
        "avg_line_length": 22.36813186813187
      },
      "structure_analysis": {
        "headers": {
          "total": 29,
          "hierarchy": [
            {
              "level": 1,
              "text": "🐛 不具合管理更新報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "🚨 緊急修正実施項目",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "🔥 BUG #011: APIエンドポイント404エラー (緊急修正完了)",
              "line_number": 17
            },
            {
              "level": 4,
              "text": "根本原因",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "修正内容",
              "line_number": 29
            },
            {
              "level": 4,
              "text": "水平展開修正",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "📊 BUG修正状況一覧",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "修正統計",
              "line_number": 69
            },
            {
              "level": 2,
              "text": "🔧 今回の修正による品質向上",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "1. システム安定性向上",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "2. 開発プロセス改善",
              "line_number": 83
            },
            {
              "level": 3,
              "text": "3. 水平展開効果",
              "line_number": 88
            },
            {
              "level": 2,
              "text": "🧪 品質保証結果",
              "line_number": 93
            },
            {
              "level": 3,
              "text": "動作確認済み機能",
              "line_number": 95
            },
            {
              "level": 1,
              "text": "APIエンドポイント確認",
              "line_number": 97
            },
            {
              "level": 1,
              "text": "認証・権限",
              "line_number": 104
            },
            {
              "level": 1,
              "text": "システム全体",
              "line_number": 109
            },
            {
              "level": 3,
              "text": "テスト実行結果",
              "line_number": 115
            },
            {
              "level": 2,
              "text": "📈 システム完成度更新",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "機能完成度",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "完成度詳細",
              "line_number": 132
            },
            {
              "level": 2,
              "text": "🎯 今後の対応計画",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "短期対応 (1週間以内)",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "中期対応 (1ヶ月以内)",
              "line_number": 152
            },
            {
              "level": 3,
              "text": "継続的改善",
              "line_number": 157
            },
            {
              "level": 2,
              "text": "🏆 達成成果",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "技術的成果",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "プロセス改善",
              "line_number": 170
            }
          ],
          "hierarchy_issues": [
            {
              "line": 115,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 3,
          "inline_code": 10,
          "languages": {
            "diff": 1,
            "bash": 1,
            "json": 1
          },
          "details": [
            [
              "diff",
              "// フロントエンド修正 (frontend/src/api/logs.ts)\n- const response = await api.get('/api/logs/search')\n+ const response = await api.get('/logs/search')\n\n// バックエンド修正 (backend/src/routes/features.ts)\n- router.get('/:id', ...)      // 最初に定義\n- router.get('/categories', ...)\n+ router.get('/categories', ...) // 特定ルートを先に定義\n+ router.get('/:id', ...)\n\n// Prismaモデル名修正\n- departmentFeaturePermissions\n+ department_feature_permissions\n\n// ログカテゴリ処理修正 (backend/src/services/LogService.ts)\n- category: log.category  // 直接代入（エラー）\n+ categoryId: categoryId  // 関連テーブル経由"
            ],
            [
              "bash",
              "# APIエンドポイント確認\n✅ POST /api/logs           - ログ収集 (100%動作)\n✅ GET  /api/logs/search    - ログ検索 (100%動作)\n✅ GET  /api/logs/realtime  - リアルタイム統計 (100%動作)\n✅ GET  /api/features/categories - 機能カテゴリ取得 (100%動作)\n✅ GET  /api/features/:id   - 機能詳細取得 (100%動作)\n\n# 認証・権限\n✅ JWT認証システム        - 正常動作\n✅ 権限テンプレート機能   - 完全復旧\n✅ WebSocketリアルタイム  - 正常動作\n\n# システム全体\n✅ フロントエンド (3000)  - 正常稼働\n✅ バックエンド (8000)    - 正常稼働\n✅ データベース (5433)    - 正常稼働"
            ],
            [
              "json",
              "{\n  \"単体テスト\": \"63項目実行 - 全て成功\",\n  \"統合テスト\": \"API連携確認完了\",\n  \"リグレッションテスト\": \"既存機能への影響なし\",\n  \"性能テスト\": \"レスポンス時間 < 50ms\",\n  \"セキュリティテスト\": \"認証・認可正常動作\"\n}"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 21
        }
      },
      "readability": {
        "score": 93.33,
        "sentences": 36,
        "avg_words_per_sentence": 16.67,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 47.0,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.3
    },
    "docs/26-単体試験実装完了報告書.md": {
      "basic_metrics": {
        "lines": 276,
        "words": 570,
        "characters": 4948,
        "avg_line_length": 17.92753623188406
      },
      "structure_analysis": {
        "headers": {
          "total": 38,
          "hierarchy": [
            {
              "level": 1,
              "text": "権限テンプレート機能 単体試験実装完了報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. 実装完了項目",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "1.1 ✅ 単体試験仕様書作成",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "1.2 ✅ バックエンド単体試験実装",
              "line_number": 32
            },
            {
              "level": 3,
              "text": "1.3 ✅ フロントエンド単体試験実装",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "1.4 ✅ 設計書差異分析",
              "line_number": 81
            },
            {
              "level": 2,
              "text": "2. 発見された設計書との差異",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "2.1 未記載API機能",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "2.2 未記載データベーステーブル",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "2.3 未記載フロントエンド画面",
              "line_number": 113
            },
            {
              "level": 2,
              "text": "3. 試験実装の特徴",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "3.1 バックエンドAPI試験の特徴",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "3.2 フロントエンド試験の特徴",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "4. 品質保証結果",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "4.1 テストカバレッジ",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "4.2 セキュリティテスト",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "4.3 パフォーマンステスト準備",
              "line_number": 169
            },
            {
              "level": 2,
              "text": "5. 実行可能なテストコマンド",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "5.1 バックエンドテスト",
              "line_number": 177
            },
            {
              "level": 1,
              "text": "全テスト実行",
              "line_number": 181
            },
            {
              "level": 1,
              "text": "カバレッジ付きテスト実行",
              "line_number": 184
            },
            {
              "level": 1,
              "text": "特定テストファイルの実行",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "5.2 フロントエンドテスト",
              "line_number": 191
            },
            {
              "level": 1,
              "text": "全テスト実行",
              "line_number": 195
            },
            {
              "level": 1,
              "text": "カバレッジ付きテスト実行",
              "line_number": 198
            },
            {
              "level": 1,
              "text": "特定テストファイルの実行",
              "line_number": 201
            },
            {
              "level": 2,
              "text": "6. 今後の改善提案",
              "line_number": 207
            },
            {
              "level": 3,
              "text": "6.1 短期対応（1週間以内）",
              "line_number": 209
            },
            {
              "level": 3,
              "text": "6.2 中期対応（1ヶ月以内）",
              "line_number": 218
            },
            {
              "level": 3,
              "text": "6.3 長期対応（3ヶ月以内）",
              "line_number": 227
            },
            {
              "level": 2,
              "text": "7. レビューと承認",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "7.1 レビューチェックポイント",
              "line_number": 240
            },
            {
              "level": 3,
              "text": "7.2 承認プロセス",
              "line_number": 247
            },
            {
              "level": 2,
              "text": "8. 参考資料",
              "line_number": 254
            },
            {
              "level": 3,
              "text": "8.1 作成ドキュメント",
              "line_number": 256
            },
            {
              "level": 3,
              "text": "8.2 実装ファイル",
              "line_number": 261
            },
            {
              "level": 3,
              "text": "8.3 設定ファイル",
              "line_number": 267
            }
          ],
          "hierarchy_issues": [
            {
              "line": 191,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 34,
          "languages": {
            "json": 2,
            "bash": 2
          },
          "details": [
            [
              "json",
              "{\n  \"@types/jest\": \"^29.5.12\",\n  \"@types/supertest\": \"^6.0.2\",\n  \"jest\": \"^29.7.0\",\n  \"supertest\": \"^6.3.4\",\n  \"ts-jest\": \"^29.1.2\"\n}"
            ],
            [
              "json",
              "{\n  \"@vue/test-utils\": \"^2.4.4\",\n  \"happy-dom\": \"^13.3.1\",\n  \"vitest\": \"^1.2.2\"\n}"
            ],
            [
              "bash",
              "cd /home/typho/src/elementplus/websys/workspace/backend\n\n# 全テスト実行\nnpm test\n\n# カバレッジ付きテスト実行\nnpm run test:coverage\n\n# 特定テストファイルの実行\nnpm test -- __tests__/permissionTemplate.test.ts"
            ],
            [
              "bash",
              "cd /home/typho/src/elementplus/websys/workspace/frontend\n\n# 全テスト実行\nnpm test\n\n# カバレッジ付きテスト実行\nnpm run test:coverage\n\n# 特定テストファイルの実行\nnpm test -- src/views/__tests__/PermissionTemplate.test.ts"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 16
        }
      },
      "readability": {
        "score": 98.06,
        "sentences": 93,
        "avg_words_per_sentence": 6.13,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 50.4,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.08
    },
    "docs/31-企業システム共通機能仕様.md": {
      "basic_metrics": {
        "lines": 475,
        "words": 1248,
        "characters": 11483,
        "avg_line_length": 24.174736842105265
      },
      "structure_analysis": {
        "headers": {
          "total": 42,
          "hierarchy": [
            {
              "level": 1,
              "text": "企業システム共通機能仕様",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "設計方針",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "実装予定機能一覧",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "Phase 1: 基盤機能（必須）",
              "line_number": 19
            },
            {
              "level": 4,
              "text": "1. 認証・認可システム",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "2. マスタデータ管理システム",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "3. ログ・監査システム",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "Phase 2: 業務支援機能",
              "line_number": 116
            },
            {
              "level": 4,
              "text": "4. ワークフローエンジン",
              "line_number": 118
            },
            {
              "level": 4,
              "text": "5. ファイル管理システム",
              "line_number": 148
            },
            {
              "level": 4,
              "text": "6. レポート・帳票システム",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "Phase 3: 高度機能",
              "line_number": 205
            },
            {
              "level": 4,
              "text": "7. 全文検索システム",
              "line_number": 207
            },
            {
              "level": 4,
              "text": "8. 通知システム",
              "line_number": 229
            },
            {
              "level": 4,
              "text": "9. データ分析システム",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "Phase 4: 運用・保守機能",
              "line_number": 273
            },
            {
              "level": 4,
              "text": "10. システム監視",
              "line_number": 275
            },
            {
              "level": 4,
              "text": "11. バックアップ・復旧",
              "line_number": 297
            },
            {
              "level": 2,
              "text": "技術スタック",
              "line_number": 317
            },
            {
              "level": 3,
              "text": "フロントエンド",
              "line_number": 319
            },
            {
              "level": 3,
              "text": "バックエンド",
              "line_number": 338
            },
            {
              "level": 3,
              "text": "インフラ",
              "line_number": 358
            },
            {
              "level": 2,
              "text": "開発スケジュール",
              "line_number": 372
            },
            {
              "level": 3,
              "text": "Phase 1: 基盤機能（3ヶ月）",
              "line_number": 374
            },
            {
              "level": 3,
              "text": "Phase 2: 業務支援機能（4ヶ月）",
              "line_number": 380
            },
            {
              "level": 3,
              "text": "Phase 3: 高度機能（3ヶ月）",
              "line_number": 386
            },
            {
              "level": 3,
              "text": "Phase 4: 運用・保守機能（2ヶ月）",
              "line_number": 392
            },
            {
              "level": 2,
              "text": "品質管理",
              "line_number": 397
            },
            {
              "level": 3,
              "text": "テスト要件",
              "line_number": 399
            },
            {
              "level": 3,
              "text": "非機能要件",
              "line_number": 407
            },
            {
              "level": 2,
              "text": "運用要件",
              "line_number": 414
            },
            {
              "level": 3,
              "text": "監視項目",
              "line_number": 416
            },
            {
              "level": 3,
              "text": "SLA（Service Level Agreement）",
              "line_number": 423
            },
            {
              "level": 2,
              "text": "セキュリティ要件",
              "line_number": 430
            },
            {
              "level": 3,
              "text": "認証・認可",
              "line_number": 432
            },
            {
              "level": 3,
              "text": "データ保護",
              "line_number": 438
            },
            {
              "level": 3,
              "text": "アクセス制御",
              "line_number": 444
            },
            {
              "level": 2,
              "text": "国際化対応",
              "line_number": 450
            },
            {
              "level": 3,
              "text": "多言語サポート",
              "line_number": 452
            },
            {
              "level": 3,
              "text": "ローカライゼーション",
              "line_number": 459
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 465
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 14,
          "inline_code": 27,
          "languages": {
            "typescript": 14
          },
          "details": [
            [
              "typescript",
              "// 基本仕様\ninterface AuthSystem {\n  // ユーザー管理\n  userManagement: {\n    create: UserCreateDto => Promise<User>\n    update: (id: string, dto: UserUpdateDto) => Promise<User>\n    delete: (id: string) => Promise<void>\n    activate: (id: string) => Promise<User>\n    deactivate: (id: string) => Promise<User>\n    resetPassword: (id: string) => Promise<void>\n  }\n\n  // 認証\n  authentication: {\n    login: (credentials: LoginDto) => Promise<AuthResult>\n    logout: (token: string) => Promise<void>\n    refreshToken: (refreshToken: string) => Promise<AuthResult>\n    verifyMFA: (token: string, code: string) => Promise<AuthResult>\n  }\n\n  // 認可\n  authorization: {\n    checkPermission: (userId: string, resource: string, action: string) => Promise<boolean>\n    assignRole: (userId: string, roleId: string) => Promise<void>\n    revokeRole: (userId: string, roleId: string) => Promise<void>\n  }\n}"
            ],
            [
              "typescript",
              "interface MasterDataSystem {\n  // 組織管理\n  organization: {\n    departments: CRUDOperations<Department>\n    positions: CRUDOperations<Position>\n    locations: CRUDOperations<Location>\n    hierarchy: {\n      getTree: () => Promise<OrganizationTree>\n      updateStructure: (structure: OrganizationStructure) => Promise<void>\n    }\n  }\n\n  // 分類管理\n  classification: {\n    categories: CRUDOperations<Category>\n    tags: CRUDOperations<Tag>\n    codeValues: CRUDOperations<CodeValue>\n  }\n\n  // システム設定\n  systemConfig: {\n    getConfig: (key: string) => Promise<ConfigValue>\n    updateConfig: (updates: ConfigUpdateDto[]) => Promise<void>\n    validateConfig: (config: ConfigDto) => Promise<ValidationResult>\n  }\n}"
            ],
            [
              "typescript",
              "interface AuditSystem {\n  // ログ記録\n  logging: {\n    recordAccess: (request: AccessLogDto) => Promise<void>\n    recordOperation: (operation: OperationLogDto) => Promise<void>\n    recordError: (error: ErrorLogDto) => Promise<void>\n    recordSecurity: (event: SecurityLogDto) => Promise<void>\n  }\n\n  // ログ検索・分析\n  analysis: {\n    searchLogs: (criteria: LogSearchCriteria) => Promise<LogSearchResult>\n    generateReport: (reportType: AuditReportType, period: DateRange) => Promise<AuditReport>\n    exportLogs: (criteria: ExportCriteria) => Promise<ExportResult>\n  }\n}"
            ],
            [
              "typescript",
              "interface WorkflowEngine {\n  // ワークフロー定義\n  definition: {\n    createWorkflow: (definition: WorkflowDefinition) => Promise<Workflow>\n    updateWorkflow: (id: string, definition: WorkflowDefinition) => Promise<Workflow>\n    activateWorkflow: (id: string) => Promise<void>\n    deactivateWorkflow: (id: string) => Promise<void>\n  }\n\n  // インスタンス管理\n  instance: {\n    startProcess: (workflowId: string, data: ProcessData) => Promise<ProcessInstance>\n    completeTask: (taskId: string, result: TaskResult) => Promise<ProcessInstance>\n    abortProcess: (instanceId: string, reason: string) => Promise<void>\n  }\n\n  // 承認機能\n  approval: {\n    getPendingTasks: (userId: string) => Promise<Task[]>\n    approve: (taskId: string, comment?: string) => Promise<void>\n    reject: (taskId: string, reason: string) => Promise<void>\n    delegate: (taskId: string, delegateeTo: string) => Promise<void>\n  }\n}"
            ],
            [
              "typescript",
              "interface FileManagementSystem {\n  // ファイル操作\n  fileOperations: {\n    upload: (file: FileUploadDto) => Promise<FileMetadata>\n    download: (fileId: string) => Promise<FileStream>\n    delete: (fileId: string) => Promise<void>\n    move: (fileId: string, newPath: string) => Promise<FileMetadata>\n    copy: (fileId: string, targetPath: string) => Promise<FileMetadata>\n  }\n\n  // バージョン管理\n  versioning: {\n    createVersion: (fileId: string, file: File) => Promise<FileVersion>\n    getVersionHistory: (fileId: string) => Promise<FileVersion[]>\n    restoreVersion: (fileId: string, versionId: string) => Promise<FileMetadata>\n  }\n\n  // プレビュー\n  preview: {\n    generatePreview: (fileId: string) => Promise<PreviewResult>\n    getThumbnail: (fileId: string, size: ThumbnailSize) => Promise<Blob>\n  }\n}"
            ],
            [
              "typescript",
              "interface ReportSystem {\n  // レポート作成\n  generation: {\n    createReport: (template: ReportTemplate, data: ReportData) => Promise<Report>\n    scheduleReport: (config: ScheduledReportConfig) => Promise<ScheduledReport>\n    exportReport: (reportId: string, format: ExportFormat) => Promise<ExportResult>\n  }\n\n  // テンプレート管理\n  template: {\n    createTemplate: (template: ReportTemplateDto) => Promise<ReportTemplate>\n    updateTemplate: (id: string, updates: Partial<ReportTemplateDto>) => Promise<ReportTemplate>\n    previewTemplate: (template: ReportTemplateDto, sampleData: any) => Promise<PreviewResult>\n  }\n\n  // データ可視化\n  visualization: {\n    createChart: (config: ChartConfig, data: ChartData) => Promise<Chart>\n    createDashboard: (widgets: DashboardWidget[]) => Promise<Dashboard>\n    updateDashboard: (id: string, updates: DashboardUpdate) => Promise<Dashboard>\n  }\n}"
            ],
            [
              "typescript",
              "interface SearchSystem {\n  // 検索機能\n  search: {\n    fullTextSearch: (query: SearchQuery) => Promise<SearchResult>\n    facetedSearch: (facets: SearchFacet[]) => Promise<FacetedSearchResult>\n    autocomplete: (input: string, scope?: string) => Promise<Suggestion[]>\n  }\n\n  // インデックス管理\n  indexing: {\n    indexDocument: (document: SearchDocument) => Promise<void>\n    updateDocument: (id: string, updates: Partial<SearchDocument>) => Promise<void>\n    deleteDocument: (id: string) => Promise<void>\n    reindexAll: () => Promise<IndexingProgress>\n  }\n}"
            ],
            [
              "typescript",
              "interface NotificationSystem {\n  // 通知送信\n  delivery: {\n    sendEmail: (notification: EmailNotification) => Promise<DeliveryResult>\n    sendPush: (notification: PushNotification) => Promise<DeliveryResult>\n    sendInApp: (notification: InAppNotification) => Promise<DeliveryResult>\n    sendSMS: (notification: SMSNotification) => Promise<DeliveryResult>\n  }\n\n  // 通知管理\n  management: {\n    createTemplate: (template: NotificationTemplate) => Promise<NotificationTemplate>\n    scheduleNotification: (schedule: NotificationSchedule) => Promise<ScheduledNotification>\n    getUserPreferences: (userId: string) => Promise<NotificationPreferences>\n    updatePreferences: (userId: string, preferences: NotificationPreferences) => Promise<void>\n  }\n}"
            ],
            [
              "typescript",
              "interface AnalyticsSystem {\n  // データ収集\n  collection: {\n    trackEvent: (event: AnalyticsEvent) => Promise<void>\n    trackPageView: (pageView: PageViewEvent) => Promise<void>\n    trackUserAction: (action: UserActionEvent) => Promise<void>\n  }\n\n  // 分析\n  analysis: {\n    generateInsights: (dataset: string, period: DateRange) => Promise<Insights>\n    createReport: (metrics: AnalyticsMetric[], dimensions: string[]) => Promise<AnalyticsReport>\n    predictTrend: (metric: string, period: DateRange) => Promise<TrendPrediction>\n  }\n}"
            ],
            [
              "typescript",
              "interface MonitoringSystem {\n  // ヘルスチェック\n  health: {\n    checkSystem: () => Promise<HealthStatus>\n    checkService: (serviceName: string) => Promise<ServiceHealth>\n    checkDatabase: () => Promise<DatabaseHealth>\n    checkExternalDependencies: () => Promise<DependencyHealth[]>\n  }\n\n  // メトリクス\n  metrics: {\n    recordMetric: (metric: SystemMetric) => Promise<void>\n    getMetrics: (query: MetricsQuery) => Promise<MetricsResult>\n    createAlert: (alertConfig: AlertConfig) => Promise<Alert>\n  }\n}"
            ],
            [
              "typescript",
              "interface BackupSystem {\n  // バックアップ\n  backup: {\n    createBackup: (config: BackupConfig) => Promise<BackupResult>\n    scheduleBackup: (schedule: BackupSchedule) => Promise<ScheduledBackup>\n    verifyBackup: (backupId: string) => Promise<BackupVerification>\n  }\n\n  // 復旧\n  restore: {\n    restoreFromBackup: (backupId: string, options: RestoreOptions) => Promise<RestoreResult>\n    pointInTimeRestore: (timestamp: Date, options: RestoreOptions) => Promise<RestoreResult>\n  }\n}"
            ],
            [
              "typescript",
              "// 推奨技術スタック\nconst frontendStack = {\n  framework: 'Vue 3 + TypeScript',\n  uiLibrary: 'Element Plus',\n  stateManagement: 'Pinia',\n  routing: 'Vue Router 4',\n  build: 'Vite',\n  testing: 'Vitest + Cypress',\n  pwa: 'Vite PWA Plugin',\n  i18n: 'Vue I18n',\n  charts: 'ECharts',\n  forms: 'VeeValidate',\n  dates: 'Day.js',\n  utils: 'VueUse'\n}"
            ],
            [
              "typescript",
              "// 推奨技術スタック\nconst backendStack = {\n  runtime: 'Node.js 18+',\n  framework: 'Express.js',\n  database: 'PostgreSQL 15+',\n  orm: 'Prisma',\n  authentication: 'JWT + Passport.js',\n  validation: 'Joi',\n  fileStorage: 'AWS S3 / MinIO',\n  search: 'Elasticsearch',\n  queue: 'Redis + Bull',\n  monitoring: 'Prometheus + Grafana',\n  logging: 'Winston + ELK Stack',\n  testing: 'Jest + Supertest',\n  documentation: 'Swagger/OpenAPI'\n}"
            ],
            [
              "typescript",
              "// 推奨インフラ\nconst infrastructureStack = {\n  containerization: 'Docker + Docker Compose',\n  orchestration: 'Kubernetes',\n  cicd: 'GitHub Actions',\n  monitoring: 'Prometheus + Grafana + Jaeger',\n  logging: 'ELK Stack (Elasticsearch + Logstash + Kibana)',\n  backup: 'Velero + Restic',\n  security: 'HTTPS + OWASP ZAP + SonarQube'\n}"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 21.57,
        "sentences": 28,
        "avg_words_per_sentence": 44.57,
        "long_sentences": 18,
        "readability_level": "読みにくい"
      },
      "structure_score": 60,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 52.97
    },
    "docs/31-プロジェクト総合サマリー.md": {
      "basic_metrics": {
        "lines": 242,
        "words": 597,
        "characters": 5117,
        "avg_line_length": 21.144628099173552
      },
      "structure_analysis": {
        "headers": {
          "total": 45,
          "hierarchy": [
            {
              "level": 1,
              "text": "プロジェクト総合サマリー - 2025年9月25日",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 プロジェクト概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 達成成果",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "✅ システム完成度: 98%",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "✅ 主要技術実装完了",
              "line_number": 21
            },
            {
              "level": 3,
              "text": "✅ 開発環境・品質管理完成",
              "line_number": 29
            },
            {
              "level": 2,
              "text": "🚀 実装完了機能一覧",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "🔐 セキュリティ・認証 (100%完成)",
              "line_number": 39
            },
            {
              "level": 3,
              "text": "👥 ユーザー・組織管理 (100%完成)",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "📊 監視・分析システム (98%完成)",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "🛠️ システム基盤 (100%完成)",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "🎨 フロントエンド (100%完成)",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "🧪 開発・テスト環境 (100%完成)",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "🔄 実装進行中",
              "line_number": 66
            },
            {
              "level": 2,
              "text": "📈 2025年9月25日の成果",
              "line_number": 71
            },
            {
              "level": 3,
              "text": "🎉 権限テンプレート機能完全実装",
              "line_number": 73
            },
            {
              "level": 3,
              "text": "🧪 単体試験実装完了",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "📋 設計書整備完了",
              "line_number": 84
            },
            {
              "level": 2,
              "text": "🐛 品質管理実績",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "BUG解決実績 (90%解決率)",
              "line_number": 93
            },
            {
              "level": 4,
              "text": "高優先度BUG解決 (83%解決率)",
              "line_number": 98
            },
            {
              "level": 4,
              "text": "水平展開チェック効果",
              "line_number": 105
            },
            {
              "level": 2,
              "text": "🛠️ 技術アーキテクチャ",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "フロントエンド",
              "line_number": 114
            },
            {
              "level": 3,
              "text": "バックエンド",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "インフラ",
              "line_number": 124
            },
            {
              "level": 3,
              "text": "品質保証",
              "line_number": 129
            },
            {
              "level": 2,
              "text": "📊 実装統計",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "コード規模",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "機能統計",
              "line_number": 145
            },
            {
              "level": 2,
              "text": "🎯 残り作業 (2%分)",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "短期対応 (1週間以内)",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "最終完成目標",
              "line_number": 166
            },
            {
              "level": 2,
              "text": "🏆 プロジェクト成功要因",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "技術的成功要因",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "開発プロセス成功要因",
              "line_number": 181
            },
            {
              "level": 2,
              "text": "🚀 次世代システムへの基盤",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "拡張可能性",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "運用準備度",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "📞 次のアクション",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "即座対応 (本週内)",
              "line_number": 205
            },
            {
              "level": 3,
              "text": "運用準備 (来週)",
              "line_number": 210
            },
            {
              "level": 2,
              "text": "🎉 総括",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "主要達成項目",
              "line_number": 221
            },
            {
              "level": 3,
              "text": "特筆すべき品質",
              "line_number": 229
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.88,
        "sentences": 51,
        "avg_words_per_sentence": 11.71,
        "long_sentences": 7,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 36.94,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.04
    },
    "docs/25-実装設計差異分析報告書.md": {
      "basic_metrics": {
        "lines": 368,
        "words": 1082,
        "characters": 8669,
        "avg_line_length": 23.557065217391305
      },
      "structure_analysis": {
        "headers": {
          "total": 43,
          "hierarchy": [
            {
              "level": 1,
              "text": "実装設計差異分析報告書 - 権限テンプレート機能",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. 発見された未記載ルート・機能",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1.1 バックエンドAPIルート",
              "line_number": 18
            },
            {
              "level": 4,
              "text": "新たに実装されたエンドポイント",
              "line_number": 20
            },
            {
              "level": 4,
              "text": "既存の権限関連エンドポイント（設計済み）",
              "line_number": 30
            },
            {
              "level": 3,
              "text": "1.2 フロントエンドルート",
              "line_number": 42
            },
            {
              "level": 3,
              "text": "1.3 データベーステーブル",
              "line_number": 49
            },
            {
              "level": 2,
              "text": "2. 設計書更新提案",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "2.1 API設計書への追加内容",
              "line_number": 61
            },
            {
              "level": 4,
              "text": "権限テンプレート管理API",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "3.8 権限テンプレート管理API",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "3.8.1 権限テンプレート一覧取得",
              "line_number": 67
            },
            {
              "level": 4,
              "text": "3.8.2 権限テンプレート作成",
              "line_number": 75
            },
            {
              "level": 4,
              "text": "3.8.3 権限テンプレート更新",
              "line_number": 97
            },
            {
              "level": 4,
              "text": "3.8.4 権限テンプレート削除",
              "line_number": 103
            },
            {
              "level": 4,
              "text": "3.8.5 権限テンプレート適用",
              "line_number": 109
            },
            {
              "level": 4,
              "text": "3.8.6 権限マトリクス取得",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "2.2 データベース設計書への追加内容",
              "line_number": 131
            },
            {
              "level": 3,
              "text": "2.3 フロントエンド画面設計への追加",
              "line_number": 174
            },
            {
              "level": 4,
              "text": "権限テンプレート管理画面",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "3. 仕様見直し提案",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "3.1 権限管理の整合性確保",
              "line_number": 192
            },
            {
              "level": 4,
              "text": "現状の課題",
              "line_number": 194
            },
            {
              "level": 4,
              "text": "提案",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "3.2 セキュリティ考慮事項の追加",
              "line_number": 218
            },
            {
              "level": 4,
              "text": "権限チェック強化",
              "line_number": 220
            },
            {
              "level": 3,
              "text": "3.3 バリデーション強化",
              "line_number": 255
            },
            {
              "level": 4,
              "text": "テンプレート作成時のバリデーション",
              "line_number": 257
            },
            {
              "level": 2,
              "text": "4. 想定されていなかった機能の影響分析",
              "line_number": 285
            },
            {
              "level": 3,
              "text": "4.1 権限マトリクス機能",
              "line_number": 287
            },
            {
              "level": 3,
              "text": "4.2 一括権限設定機能",
              "line_number": 292
            },
            {
              "level": 3,
              "text": "4.3 監査ログ機能",
              "line_number": 297
            },
            {
              "level": 2,
              "text": "5. 推奨対応アクション",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "5.1 即座対応（Priority 1）",
              "line_number": 305
            },
            {
              "level": 3,
              "text": "5.2 今後対応（Priority 2）",
              "line_number": 315
            },
            {
              "level": 3,
              "text": "5.3 長期対応（Priority 3）",
              "line_number": 324
            },
            {
              "level": 2,
              "text": "6. 更新された設計書リスト",
              "line_number": 335
            },
            {
              "level": 3,
              "text": "6.1 更新対象ドキュメント",
              "line_number": 337
            },
            {
              "level": 3,
              "text": "6.2 新規作成対象ドキュメント",
              "line_number": 343
            },
            {
              "level": 2,
              "text": "7. 品質保証",
              "line_number": 349
            },
            {
              "level": 3,
              "text": "7.1 レビューチェックポイント",
              "line_number": 351
            },
            {
              "level": 3,
              "text": "7.2 試験実施項目",
              "line_number": 358
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 51,
          "languages": {
            "markdown": 1,
            "sql": 1,
            "typescript": 1
          },
          "details": [
            [
              "markdown",
              "### 3.8 権限テンプレート管理API\n\n#### 3.8.1 権限テンプレート一覧取得\n- **エンドポイント**: `GET /api/permissions/templates`\n- **認証**: 必須\n- **パラメータ**:\n  - `companyId` (required): 会社ID\n- **レスポンス**: 権限テンプレート配列\n- **権限要件**: ADMIN または MANAGER\n\n#### 3.8.2 権限テンプレート作成\n- **エンドポイント**: `POST /api/permissions/templates`\n- **認証**: 必須\n- **リクエストボディ**:\n  ```json\n  {\n    \"companyId\": 1,\n    \"name\": \"テンプレート名\",\n    \"description\": \"説明\",\n    \"category\": \"CUSTOM|ADMIN|GENERAL|READONLY\",\n    \"features\": [\n      {\n        \"featureId\": 1,\n        \"canView\": true,\n        \"canCreate\": false,\n        ...\n      }\n    ]\n  }\n  ```\n- **権限要件**: ADMIN のみ\n\n#### 3.8.3 権限テンプレート更新\n- **エンドポイント**: `PUT /api/permissions/templates/:templateId`\n- **認証**: 必須\n- **制約**: プリセットテンプレートは編集不可\n- **権限要件**: ADMIN のみ\n\n#### 3.8.4 権限テンプレート削除\n- **エンドポイント**: `DELETE /api/permissions/templates/:templateId`\n- **認証**: 必須\n- **制約**: プリセットテンプレートは削除不可\n- **権限要件**: ADMIN のみ\n\n#### 3.8.5 権限テンプレート適用\n- **エンドポイント**: `POST /api/permissions/templates/:templateId/apply`\n- **認証**: 必須\n- **リクエストボディ**:\n  ```json\n  {\n    \"departmentIds\": [1, 2, 3]\n  }\n  ```\n- **処理**: 指定部署の権限設定を上書き\n- **監査ログ**: 権限変更の記録\n- **権限要件**: ADMIN のみ\n\n#### 3.8.6 権限マトリクス取得\n- **エンドポイント**: `GET /api/permissions/matrix`\n- **認証**: 必須\n- **パラメータ**:\n  - `companyId` (required): 会社ID\n  - `departmentIds` (optional): 部署ID配列\n- **権限要件**: ADMIN または MANAGER"
            ],
            [
              "sql",
              "-- 権限テンプレート\nCREATE TABLE permission_templates (\n    id SERIAL PRIMARY KEY,\n    company_id INTEGER NOT NULL REFERENCES companies(id),\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    category VARCHAR(50) DEFAULT 'CUSTOM', -- CUSTOM, ADMIN, GENERAL, READONLY\n    is_preset BOOLEAN DEFAULT false,\n    is_active BOOLEAN DEFAULT true,\n    display_order INTEGER DEFAULT 0,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES users(id),\n    updated_by INTEGER REFERENCES users(id),\n\n    UNIQUE(company_id, name, is_active)\n);\n\n-- 権限テンプレート機能設定\nCREATE TABLE permission_template_features (\n    id SERIAL PRIMARY KEY,\n    template_id INTEGER NOT NULL REFERENCES permission_templates(id) ON DELETE CASCADE,\n    feature_id INTEGER NOT NULL REFERENCES features(id),\n    can_view BOOLEAN DEFAULT false,\n    can_create BOOLEAN DEFAULT false,\n    can_edit BOOLEAN DEFAULT false,\n    can_delete BOOLEAN DEFAULT false,\n    can_approve BOOLEAN DEFAULT false,\n    can_export BOOLEAN DEFAULT false,\n\n    UNIQUE(template_id, feature_id)\n);\n\n-- インデックス\nCREATE INDEX idx_permission_templates_company ON permission_templates(company_id);\nCREATE INDEX idx_permission_templates_category ON permission_templates(category);\nCREATE INDEX idx_permission_template_features_template ON permission_template_features(template_id);\nCREATE INDEX idx_permission_template_features_feature ON permission_template_features(feature_id);"
            ],
            [
              "typescript",
              "   // 適用時の監査ログ強化\n   interface TemplateApplicationLog {\n     templateId: number;\n     templateName: string;\n     departmentIds: number[];\n     appliedBy: number;\n     applicationTime: Date;\n     previousPermissions: Record<string, any>;\n     newPermissions: Record<string, any>;\n   }\n   ```\n\n### 3.2 セキュリティ考慮事項の追加\n\n#### 権限チェック強化"
            ],
            [
              "",
              "\n### 3.3 バリデーション強化\n\n#### テンプレート作成時のバリデーション"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 25
        }
      },
      "readability": {
        "score": 94.0,
        "sentences": 75,
        "avg_words_per_sentence": 14.43,
        "long_sentences": 15,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.5
    },
    "docs/07-API仕様書.md": {
      "basic_metrics": {
        "lines": 638,
        "words": 1103,
        "characters": 9819,
        "avg_line_length": 15.390282131661442
      },
      "structure_analysis": {
        "headers": {
          "total": 62,
          "hierarchy": [
            {
              "level": 1,
              "text": "API リファレンス",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "Base URL",
              "line_number": 7
            },
            {
              "level": 2,
              "text": "認証",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "JWT Bearer Token",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "トークン取得",
              "line_number": 23
            },
            {
              "level": 2,
              "text": "エラーレスポンス",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "エラーフォーマット",
              "line_number": 39
            },
            {
              "level": 3,
              "text": "HTTPステータスコード",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "認証 API",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "ログイン",
              "line_number": 67
            },
            {
              "level": 4,
              "text": "リクエスト",
              "line_number": 75
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 84
            },
            {
              "level": 4,
              "text": "バリデーションルール",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "エラーレスポンス",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "ユーザー登録",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "リクエスト",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 144
            },
            {
              "level": 4,
              "text": "バリデーションルール",
              "line_number": 160
            },
            {
              "level": 2,
              "text": "ユーザー管理 API",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "ユーザー一覧取得",
              "line_number": 170
            },
            {
              "level": 4,
              "text": "クエリパラメータ",
              "line_number": 179
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "ユーザー詳細取得",
              "line_number": 216
            },
            {
              "level": 4,
              "text": "パスパラメータ",
              "line_number": 225
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 229
            },
            {
              "level": 4,
              "text": "エラーレスポンス",
              "line_number": 245
            },
            {
              "level": 3,
              "text": "ユーザー作成",
              "line_number": 254
            },
            {
              "level": 4,
              "text": "権限要件",
              "line_number": 264
            },
            {
              "level": 4,
              "text": "リクエスト",
              "line_number": 268
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 281
            },
            {
              "level": 3,
              "text": "ユーザー更新",
              "line_number": 295
            },
            {
              "level": 4,
              "text": "権限要件",
              "line_number": 305
            },
            {
              "level": 4,
              "text": "パスパラメータ",
              "line_number": 309
            },
            {
              "level": 4,
              "text": "リクエスト",
              "line_number": 313
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 326
            },
            {
              "level": 3,
              "text": "ユーザー削除",
              "line_number": 340
            },
            {
              "level": 4,
              "text": "権限要件",
              "line_number": 349
            },
            {
              "level": 4,
              "text": "パスパラメータ",
              "line_number": 353
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 357
            },
            {
              "level": 2,
              "text": "システム API",
              "line_number": 365
            },
            {
              "level": 3,
              "text": "ヘルスチェック",
              "line_number": 367
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 375
            },
            {
              "level": 3,
              "text": "システム情報",
              "line_number": 386
            },
            {
              "level": 4,
              "text": "権限要件",
              "line_number": 395
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 399
            },
            {
              "level": 2,
              "text": "データモデル",
              "line_number": 417
            },
            {
              "level": 3,
              "text": "User",
              "line_number": 419
            },
            {
              "level": 3,
              "text": "JWTペイロード",
              "line_number": 438
            },
            {
              "level": 2,
              "text": "SDKとサンプルコード",
              "line_number": 452
            },
            {
              "level": 3,
              "text": "JavaScript/TypeScript",
              "line_number": 454
            },
            {
              "level": 3,
              "text": "curl コマンド例",
              "line_number": 563
            },
            {
              "level": 1,
              "text": "ログイン",
              "line_number": 566
            },
            {
              "level": 1,
              "text": "ユーザー一覧取得",
              "line_number": 571
            },
            {
              "level": 1,
              "text": "ユーザー作成",
              "line_number": 575
            },
            {
              "level": 1,
              "text": "ユーザー更新",
              "line_number": 587
            },
            {
              "level": 1,
              "text": "ユーザー削除",
              "line_number": 596
            },
            {
              "level": 2,
              "text": "レート制限",
              "line_number": 601
            },
            {
              "level": 2,
              "text": "OpenAPI仕様",
              "line_number": 618
            },
            {
              "level": 2,
              "text": "変更履歴",
              "line_number": 625
            },
            {
              "level": 3,
              "text": "v1.0.0 (2024-01-19)",
              "line_number": 627
            },
            {
              "level": 3,
              "text": "今後の予定",
              "line_number": 633
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 32,
          "inline_code": 96,
          "languages": {
            "bash": 3,
            "json": 17,
            "http": 9,
            "typescript": 3
          },
          "details": [
            [
              "bash",
              "Authorization: Bearer <jwt_token>"
            ],
            [
              "bash",
              "POST /api/auth/login\nContent-Type: application/json\n\n{\n  \"username\": \"admin\",\n  \"password\": \"password\"\n}"
            ],
            [
              "json",
              "{\n  \"message\": \"エラーメッセージ\",\n  \"errors\": [\n    {\n      \"field\": \"username\",\n      \"message\": \"ユーザー名は必須です\"\n    }\n  ],\n  \"stack\": \"Error stack trace (development only)\"\n}"
            ],
            [
              "http",
              "POST /api/auth/login"
            ],
            [
              "json",
              "{\n  \"username\": \"admin\",\n  \"password\": \"password\"\n}"
            ],
            [
              "json",
              "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"email\": \"admin@example.com\",\n    \"name\": \"管理者\",\n    \"department\": \"IT\",\n    \"role\": \"ADMIN\"\n  }\n}"
            ],
            [
              "json",
              "// 認証失敗\n{\n  \"message\": \"ユーザー名またはパスワードが正しくありません\"\n}\n\n// バリデーションエラー\n{\n  \"errors\": [\n    {\n      \"field\": \"username\",\n      \"message\": \"ユーザー名は必須です\"\n    }\n  ]\n}"
            ],
            [
              "http",
              "POST /api/auth/register"
            ],
            [
              "json",
              "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"新規ユーザー\",\n  \"department\": \"営業部\"\n}"
            ],
            [
              "json",
              "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 2,\n    \"username\": \"newuser\",\n    \"email\": \"newuser@example.com\",\n    \"name\": \"新規ユーザー\",\n    \"department\": \"営業部\",\n    \"role\": \"USER\"\n  }\n}"
            ],
            [
              "http",
              "GET /api/users\nAuthorization: Bearer <token>"
            ],
            [
              "json",
              "{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"email\": \"admin@example.com\",\n      \"name\": \"管理者\",\n      \"department\": \"IT\",\n      \"role\": \"ADMIN\",\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-19T10:30:00.000Z\",\n      \"updatedAt\": \"2024-01-19T10:30:00.000Z\"\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"limit\": 20,\n    \"total\": 1,\n    \"totalPages\": 1\n  }\n}"
            ],
            [
              "http",
              "GET /api/users/:id\nAuthorization: Bearer <token>"
            ],
            [
              "json",
              "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"email\": \"admin@example.com\",\n  \"name\": \"管理者\",\n  \"department\": \"IT\",\n  \"role\": \"ADMIN\",\n  \"isActive\": true,\n  \"createdAt\": \"2024-01-19T10:30:00.000Z\",\n  \"updatedAt\": \"2024-01-19T10:30:00.000Z\"\n}"
            ],
            [
              "json",
              "// ユーザーが見つからない場合\n{\n  \"message\": \"ユーザーが見つかりません\"\n}"
            ],
            [
              "http",
              "POST /api/users\nAuthorization: Bearer <token>\nContent-Type: application/json"
            ],
            [
              "json",
              "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"新規ユーザー\",\n  \"department\": \"営業部\",\n  \"role\": \"USER\"\n}"
            ],
            [
              "json",
              "{\n  \"id\": 2,\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"name\": \"新規ユーザー\",\n  \"department\": \"営業部\",\n  \"role\": \"USER\",\n  \"isActive\": true\n}"
            ],
            [
              "http",
              "PUT /api/users/:id\nAuthorization: Bearer <token>\nContent-Type: application/json"
            ],
            [
              "json",
              "{\n  \"username\": \"updateduser\",\n  \"email\": \"updated@example.com\",\n  \"name\": \"更新されたユーザー\",\n  \"department\": \"開発部\",\n  \"role\": \"USER\",\n  \"isActive\": true\n}"
            ],
            [
              "json",
              "{\n  \"id\": 2,\n  \"username\": \"updateduser\",\n  \"email\": \"updated@example.com\",\n  \"name\": \"更新されたユーザー\",\n  \"department\": \"開発部\",\n  \"role\": \"USER\",\n  \"isActive\": true\n}"
            ],
            [
              "http",
              "DELETE /api/users/:id\nAuthorization: Bearer <token>"
            ],
            [
              "json",
              "{\n  \"message\": \"ユーザーを削除しました\"\n}"
            ],
            [
              "http",
              "GET /health"
            ],
            [
              "json",
              "{\n  \"status\": \"OK\",\n  \"message\": \"Server is running\",\n  \"timestamp\": \"2024-01-19T10:30:00.000Z\",\n  \"version\": \"1.0.0\"\n}"
            ],
            [
              "http",
              "GET /api/system/info\nAuthorization: Bearer <token>"
            ],
            [
              "json",
              "{\n  \"version\": \"1.0.0\",\n  \"environment\": \"development\",\n  \"database\": {\n    \"status\": \"connected\",\n    \"version\": \"PostgreSQL 15.1\"\n  },\n  \"uptime\": 3600,\n  \"memory\": {\n    \"used\": \"125 MB\",\n    \"total\": \"512 MB\"\n  }\n}"
            ],
            [
              "typescript",
              "interface User {\n  id: number                    // ユーザーID\n  username: string              // ユーザー名（一意）\n  email: string                 // メールアドレス（一意）\n  password: string              // パスワード（ハッシュ化）\n  name: string                  // 表示名\n  department?: string           // 部署名\n  role: 'ADMIN' | 'USER' | 'GUEST'  // 権限\n  isActive: boolean             // アクティブ状態\n  createdAt: Date               // 作成日時\n  updatedAt: Date               // 更新日時\n}"
            ],
            [
              "typescript",
              "interface JWTPayload {\n  userId: number                // ユーザーID\n  username: string              // ユーザー名\n  role: 'ADMIN' | 'USER' | 'GUEST'  // 権限\n  iat: number                   // 発行時刻\n  exp: number                   // 有効期限\n}"
            ],
            [
              "typescript",
              "// API クライアント\nclass WebSysAPI {\n  private baseURL: string\n  private token?: string\n\n  constructor(baseURL: string) {\n    this.baseURL = baseURL\n  }\n\n  // 認証\n  async login(username: string, password: string) {\n    const response = await fetch(`${this.baseURL}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username, password })\n    })\n\n    if (!response.ok) {\n      throw new Error('Login failed')\n    }\n\n    const data = await response.json()\n    this.token = data.token\n    return data\n  }\n\n  // ユーザー一覧取得\n  async getUsers(params?: {\n    page?: number\n    limit?: number\n    search?: string\n    role?: string\n  }) {\n    const url = new URL(`${this.baseURL}/api/users`)\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined) {\n          url.searchParams.append(key, value.toString())\n        }\n      })\n    }\n\n    const response = await fetch(url.toString(), {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    })\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch users')\n    }\n\n    return response.json()\n  }\n\n  // ユーザー作成\n  async createUser(userData: {\n    username: string\n    email: string\n    password: string\n    name: string\n    department?: string\n    role?: string\n  }) {\n    const response = await fetch(`${this.baseURL}/api/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.token}`\n      },\n      body: JSON.stringify(userData)\n    })\n\n    if (!response.ok) {\n      throw new Error('Failed to create user')\n    }\n\n    return response.json()\n  }\n}\n\n// 使用例\nconst api = new WebSysAPI('http://localhost:8000')\n\n// ログイン\nawait api.login('admin', 'password')\n\n// ユーザー一覧取得\nconst users = await api.getUsers({\n  page: 1,\n  limit: 20,\n  search: 'admin'\n})\n\n// ユーザー作成\nconst newUser = await api.createUser({\n  username: 'newuser',\n  email: 'newuser@example.com',\n  password: 'password123',\n  name: '新規ユーザー',\n  department: '営業部'\n})"
            ],
            [
              "bash",
              "# ログイン\ncurl -X POST http://localhost:8000/api/auth/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"admin\",\"password\":\"password\"}'\n\n# ユーザー一覧取得\ncurl -X GET http://localhost:8000/api/users \\\n  -H \"Authorization: Bearer <token>\"\n\n# ユーザー作成\ncurl -X POST http://localhost:8000/api/users \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer <token>\" \\\n  -d '{\n    \"username\": \"newuser\",\n    \"email\": \"newuser@example.com\",\n    \"password\": \"password123\",\n    \"name\": \"新規ユーザー\",\n    \"department\": \"営業部\"\n  }'\n\n# ユーザー更新\ncurl -X PUT http://localhost:8000/api/users/2 \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer <token>\" \\\n  -d '{\n    \"name\": \"更新されたユーザー\",\n    \"department\": \"開発部\"\n  }'\n\n# ユーザー削除\ncurl -X DELETE http://localhost:8000/api/users/2 \\\n  -H \"Authorization: Bearer <token>\""
            ],
            [
              "json",
              "{\n  \"message\": \"Too many requests\",\n  \"retryAfter\": 900\n}"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 95.0,
        "sentences": 96,
        "avg_words_per_sentence": 11.49,
        "long_sentences": 16,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.8
    },
    "docs/15-ドキュメントレビュー結果.md": {
      "basic_metrics": {
        "lines": 264,
        "words": 798,
        "characters": 5341,
        "avg_line_length": 20.231060606060606
      },
      "structure_analysis": {
        "headers": {
          "total": 48,
          "hierarchy": [
            {
              "level": 1,
              "text": "ドキュメントレビュー結果",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "レビュー概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "レビュー対象ドキュメント一覧",
              "line_number": 7
            },
            {
              "level": 2,
              "text": "品質評価結果",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "✅ **優秀な点（90点以上）**",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "1. **体系性・網羅性** - 95点",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "2. **実践性・実用性** - 93点",
              "line_number": 38
            },
            {
              "level": 1,
              "text": "具体的で実行可能なコマンド例",
              "line_number": 40
            },
            {
              "level": 4,
              "text": "3. **専門性・技術深度** - 92点",
              "line_number": 47
            },
            {
              "level": 4,
              "text": "4. **日本語品質** - 94点",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "⭐ **特に優秀なドキュメント**",
              "line_number": 57
            },
            {
              "level": 4,
              "text": "1. **12-ユニバーサルデザインガイドライン.md** - 98点",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "2. **05-デプロイ手順.md** - 96点",
              "line_number": 71
            },
            {
              "level": 4,
              "text": "3. **13-環境チェック結果と修正提案.md** - 95点",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "🔄 **改善が必要な点**",
              "line_number": 81
            },
            {
              "level": 4,
              "text": "1. **相互参照の不足** - 82点",
              "line_number": 83
            },
            {
              "level": 4,
              "text": "2. **図表の不足** - 78点",
              "line_number": 95
            },
            {
              "level": 4,
              "text": "3. **バージョン管理情報の欠如** - 75点",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "⚠️ **軽微な問題点**",
              "line_number": 118
            },
            {
              "level": 4,
              "text": "1. **02-環境構築手順.md** - 85点",
              "line_number": 120
            },
            {
              "level": 4,
              "text": "2. **07-API仕様書.md** - 87点",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "品質基準との比較",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "企業ドキュメント品質基準",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "技術ドキュメント品質基準",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "対象読者別評価",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "👥 **新規参加開発者向け** - 92点",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "👔 **プロジェクトマネージャー向け** - 89点",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "🔧 **DevOps/インフラ担当者向け** - 96点",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "🏗️ **アーキテクト/上級開発者向け** - 94点",
              "line_number": 175
            },
            {
              "level": 2,
              "text": "競合比較",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "他社ドキュメントとの比較",
              "line_number": 183
            },
            {
              "level": 2,
              "text": "推奨改善事項",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "🚀 **即座に実装すべき改善（Priority 1）**",
              "line_number": 193
            },
            {
              "level": 4,
              "text": "1. **相互参照リンクの追加**",
              "line_number": 195
            },
            {
              "level": 2,
              "text": "関連ドキュメント",
              "line_number": 198
            },
            {
              "level": 4,
              "text": "2. **図表の追加**",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "📈 **中期改善項目（Priority 2）**",
              "line_number": 209
            },
            {
              "level": 4,
              "text": "1. **メタデータの追加**",
              "line_number": 211
            },
            {
              "level": 4,
              "text": "2. **用語集の作成**",
              "line_number": 222
            },
            {
              "level": 2,
              "text": "用語集",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "🔄 **長期改善項目（Priority 3）**",
              "line_number": 230
            },
            {
              "level": 4,
              "text": "1. **多言語対応**",
              "line_number": 232
            },
            {
              "level": 4,
              "text": "2. **動画コンテンツ**",
              "line_number": 235
            },
            {
              "level": 2,
              "text": "総合評価",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "🏆 **総合スコア: 92/100点**",
              "line_number": 240
            },
            {
              "level": 4,
              "text": "内訳:",
              "line_number": 242
            },
            {
              "level": 3,
              "text": "🌟 **特筆すべき成果**",
              "line_number": 250
            },
            {
              "level": 3,
              "text": "🎯 **結論**",
              "line_number": 258
            }
          ],
          "hierarchy_issues": [
            {
              "line": 47,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 203,
              "issue": "見出しレベル4が2から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 3,
          "internal": 3,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "10-共通コンポーネント仕様.md",
              "10-共通コンポーネント仕様.md"
            ],
            [
              "09-開発ガイドライン.md",
              "09-開発ガイドライン.md"
            ],
            [
              "12-ユニバーサルデザインガイドライン.md",
              "12-ユニバーサルデザインガイドライン.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 17,
          "languages": {
            "bash": 1,
            "scss": 1,
            "markdown": 5,
            "mermaid": 1,
            "yaml": 1
          },
          "details": [
            [
              "bash",
              "# 具体的で実行可能なコマンド例\nnpm run component-check:strict\ndocker-compose --env-file ../../../environments/staging/.env up -d"
            ],
            [
              "scss",
              "// 具体的で実用的なCSS実装例\n:root {\n  --font-family-primary: \"BIZ UDPゴシック\", \"UD デジタル 教科書体\"...\n  --font-size-accessible-min: 1.125rem; /* 18px最小推奨 */\n}"
            ],
            [
              "markdown",
              "// 09-開発ガイドライン.md内で\n「詳細は10-共通コンポーネント仕様.mdを参照」← このような明示的リンクが少ない"
            ],
            [
              "markdown",
              "詳細は [10-共通コンポーネント仕様.md](./10-共通コンポーネント仕様.md) を参照してください。"
            ],
            [
              "mermaid",
              "graph TB\n    A[フロントエンド] --> B[共通コンポーネント]\n    B --> C[Element Plus]\n    A --> D[共通テーマ]"
            ],
            [
              "markdown",
              "---\nversion: 1.0.0\nlast-updated: 2024-01-19\nauthor: Company Dev Team\n---"
            ],
            [
              "markdown",
              "<!-- 各ドキュメントに追加 -->\n## 関連ドキュメント\n- [09-開発ガイドライン.md](./09-開発ガイドライン.md) - 品質基準\n- [12-ユニバーサルデザインガイドライン.md](./12-ユニバーサルデザインガイドライン.md) - アクセシビリティ"
            ],
            [
              "yaml",
              "---\ntitle: \"ユニバーサルデザインガイドライン\"\nversion: 1.0.0\nlast-updated: 2024-01-19\ntags: [\"accessibility\", \"UD\", \"font\"]\n---"
            ],
            [
              "markdown",
              "## 用語集\n- **UDゴシック**: ユニバーサルデザインに配慮したフォント\n- **WCAG**: Web Content Accessibility Guidelines\n- **Tree-shaking**: 未使用コードの除去技術"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 36
        }
      },
      "readability": {
        "score": 98.6,
        "sentences": 86,
        "avg_words_per_sentence": 9.28,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60.96,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.46
    },
    "docs/11-レスポンシブデザインガイドライン.md": {
      "basic_metrics": {
        "lines": 616,
        "words": 1247,
        "characters": 12255,
        "avg_line_length": 19.89448051948052
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブデザインガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "基本原則",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "1. モバイルファースト設計",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "2. フレキシブルレイアウト",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "3. タッチフレンドリー",
              "line_number": 20
            },
            {
              "level": 2,
              "text": "ブレークポイント定義",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "標準ブレークポイント",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "デバイス分類",
              "line_number": 56
            },
            {
              "level": 2,
              "text": "レイアウトパターン",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "1. グリッドシステム",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "2. ナビゲーションパターン",
              "line_number": 99
            },
            {
              "level": 4,
              "text": "モバイルナビゲーション",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "3. コンテンツ配置パターン",
              "line_number": 141
            },
            {
              "level": 2,
              "text": "コンポーネント別ガイドライン",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "テーブルコンポーネント",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "フォームコンポーネント",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "モーダル・ダイアログ",
              "line_number": 289
            },
            {
              "level": 2,
              "text": "タッチインタラクション",
              "line_number": 356
            },
            {
              "level": 3,
              "text": "ジェスチャー対応",
              "line_number": 358
            },
            {
              "level": 3,
              "text": "タップ領域の最適化",
              "line_number": 378
            },
            {
              "level": 2,
              "text": "パフォーマンス最適化",
              "line_number": 412
            },
            {
              "level": 3,
              "text": "画像の最適化",
              "line_number": 414
            },
            {
              "level": 3,
              "text": "コード分割と遅延読み込み",
              "line_number": 457
            },
            {
              "level": 2,
              "text": "アクセシビリティ",
              "line_number": 470
            },
            {
              "level": 3,
              "text": "キーボードナビゲーション",
              "line_number": 472
            },
            {
              "level": 3,
              "text": "スクリーンリーダー対応",
              "line_number": 509
            },
            {
              "level": 2,
              "text": "テスト要件",
              "line_number": 538
            },
            {
              "level": 3,
              "text": "デバイステスト",
              "line_number": 540
            },
            {
              "level": 3,
              "text": "レスポンシブテストツール",
              "line_number": 548
            },
            {
              "level": 2,
              "text": "チェックリスト",
              "line_number": 579
            },
            {
              "level": 3,
              "text": "開発時確認事項",
              "line_number": 581
            },
            {
              "level": 3,
              "text": "リリース前確認事項",
              "line_number": 594
            },
            {
              "level": 2,
              "text": "参考リソース",
              "line_number": 604
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 611
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 4,
          "internal": 0,
          "external": 4,
          "empty": 0,
          "internal_details": [],
          "external_details": [
            [
              "Google Mobile-Friendly Test",
              "https://search.google.com/test/mobile-friendly"
            ],
            [
              "Chrome DevTools Device Mode",
              "https://developer.chrome.com/docs/devtools/device-mode/"
            ],
            [
              "Can I Use",
              "https://caniuse.com/"
            ],
            [
              "Web Content Accessibility Guidelines (WCAG)",
              "https://www.w3.org/WAI/WCAG21/quickref/"
            ]
          ]
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 14,
          "inline_code": 34,
          "languages": {
            "scss": 4,
            "vue": 7,
            "javascript": 3
          },
          "details": [
            [
              "scss",
              "// ブレークポイント変数\n$breakpoint-xs: 320px;   // スマートフォン（小）\n$breakpoint-sm: 576px;   // スマートフォン（大）\n$breakpoint-md: 768px;   // タブレット（縦向き）\n$breakpoint-lg: 992px;   // タブレット（横向き）/ ノートPC\n$breakpoint-xl: 1200px;  // デスクトップ\n$breakpoint-xxl: 1920px; // 大型ディスプレイ\n\n// メディアクエリミックスイン\n@mixin mobile-only {\n  @media (max-width: #{$breakpoint-sm - 1px}) { @content; }\n}\n\n@mixin tablet-up {\n  @media (min-width: #{$breakpoint-md}) { @content; }\n}\n\n@mixin desktop-up {\n  @media (min-width: #{$breakpoint-lg}) { @content; }\n}\n\n@mixin large-desktop-up {\n  @media (min-width: #{$breakpoint-xl}) { @content; }\n}"
            ],
            [
              "vue",
              "<template>\n  <el-row :gutter=\"spacing\" class=\"responsive-grid\">\n    <el-col\n      :xs=\"24\"\n      :sm=\"12\"\n      :md=\"8\"\n      :lg=\"6\"\n      :xl=\"4\"\n    >\n      <div class=\"grid-content\">コンテンツ</div>\n    </el-col>\n  </el-row>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useWindowSize } from '@/composables/useWindowSize'\n\nconst { width } = useWindowSize()\nconst spacing = computed(() => {\n  if (width.value < 768) return 8\n  if (width.value < 1200) return 16\n  return 24\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <!-- モバイル: ハンバーガーメニュー -->\n  <div v-if=\"isMobile\" class=\"mobile-nav\">\n    <el-button @click=\"drawerVisible = true\" class=\"menu-trigger\">\n      <el-icon><Menu /></el-icon>\n    </el-button>\n\n    <el-drawer\n      v-model=\"drawerVisible\"\n      direction=\"ltr\"\n      size=\"280px\"\n      :with-header=\"false\"\n    >\n      <nav class=\"mobile-menu\">\n        <ul>\n          <li v-for=\"item in menuItems\" :key=\"item.id\">\n            <router-link :to=\"item.path\">{{ item.label }}</router-link>\n          </li>\n        </ul>\n      </nav>\n    </el-drawer>\n  </div>\n\n  <!-- デスクトップ: 水平メニュー -->\n  <nav v-else class=\"desktop-nav\">\n    <el-menu mode=\"horizontal\" :default-active=\"activeIndex\">\n      <el-menu-item\n        v-for=\"item in menuItems\"\n        :key=\"item.id\"\n        :index=\"item.id\"\n      >\n        {{ item.label }}\n      </el-menu-item>\n    </el-menu>\n  </nav>\n</template>"
            ],
            [
              "scss",
              "// モバイルファーストの段階的レイアウト\n.content-container {\n  padding: 16px;\n  max-width: 100%;\n\n  // モバイル: 縦積み\n  .content-grid {\n    display: grid;\n    gap: 16px;\n    grid-template-columns: 1fr;\n  }\n\n  // タブレット: 2カラム\n  @include tablet-up {\n    padding: 24px;\n\n    .content-grid {\n      grid-template-columns: repeat(2, 1fr);\n      gap: 24px;\n    }\n  }\n\n  // デスクトップ: 3カラム + サイドバー\n  @include desktop-up {\n    padding: 32px;\n    max-width: 1200px;\n    margin: 0 auto;\n\n    .content-grid {\n      grid-template-columns: repeat(3, 1fr);\n      gap: 32px;\n    }\n  }\n}"
            ],
            [
              "vue",
              "<template>\n  <!-- モバイル: カード形式 -->\n  <div v-if=\"isMobile\" class=\"mobile-table\">\n    <div v-for=\"row in data\" :key=\"row.id\" class=\"table-card\">\n      <div v-for=\"col in columns\" :key=\"col.prop\" class=\"card-row\">\n        <span class=\"label\">{{ col.label }}:</span>\n        <span class=\"value\">{{ row[col.prop] }}</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- デスクトップ: 通常のテーブル -->\n  <el-table v-else :data=\"data\" class=\"desktop-table\">\n    <el-table-column\n      v-for=\"col in columns\"\n      :key=\"col.prop\"\n      :prop=\"col.prop\"\n      :label=\"col.label\"\n      :width=\"col.width\"\n    />\n  </el-table>\n</template>\n\n<style lang=\"scss\" scoped>\n.mobile-table {\n  .table-card {\n    background: white;\n    border-radius: 8px;\n    padding: 12px;\n    margin-bottom: 12px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n    .card-row {\n      display: flex;\n      justify-content: space-between;\n      padding: 8px 0;\n      border-bottom: 1px solid #f0f0f0;\n\n      &:last-child {\n        border-bottom: none;\n      }\n\n      .label {\n        font-weight: 600;\n        color: #666;\n        flex-shrink: 0;\n      }\n\n      .value {\n        text-align: right;\n        color: #333;\n      }\n    }\n  }\n}\n</style>"
            ],
            [
              "vue",
              "<template>\n  <el-form\n    :model=\"formData\"\n    :label-position=\"labelPosition\"\n    :label-width=\"labelWidth\"\n    class=\"responsive-form\"\n  >\n    <el-row :gutter=\"formGutter\">\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"8\">\n        <el-form-item label=\"ユーザー名\" required>\n          <el-input v-model=\"formData.username\" />\n        </el-form-item>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"8\">\n        <el-form-item label=\"メールアドレス\" required>\n          <el-input v-model=\"formData.email\" type=\"email\" />\n        </el-form-item>\n      </el-col>\n    </el-row>\n  </el-form>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useWindowSize } from '@/composables/useWindowSize'\n\nconst { width } = useWindowSize()\n\nconst labelPosition = computed(() =>\n  width.value < 768 ? 'top' : 'right'\n)\n\nconst labelWidth = computed(() =>\n  width.value < 768 ? 'auto' : '120px'\n)\n\nconst formGutter = computed(() =>\n  width.value < 768 ? 0 : 20\n)\n</script>"
            ],
            [
              "vue",
              "<template>\n  <el-dialog\n    v-model=\"dialogVisible\"\n    :width=\"dialogWidth\"\n    :fullscreen=\"isFullscreen\"\n    :close-on-click-modal=\"false\"\n    class=\"responsive-dialog\"\n  >\n    <template #header>\n      <div class=\"dialog-header\">\n        <h3>{{ title }}</h3>\n        <el-button\n          v-if=\"isMobile\"\n          type=\"text\"\n          @click=\"dialogVisible = false\"\n        >\n          <el-icon><Close /></el-icon>\n        </el-button>\n      </div>\n    </template>\n\n    <div class=\"dialog-content\">\n      <slot />\n    </div>\n\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button\n          @click=\"dialogVisible = false\"\n          :size=\"buttonSize\"\n        >\n          キャンセル\n        </el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"handleConfirm\"\n          :size=\"buttonSize\"\n        >\n          確認\n        </el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useWindowSize } from '@/composables/useWindowSize'\n\nconst { width } = useWindowSize()\n\nconst dialogWidth = computed(() => {\n  if (width.value < 576) return '95%'\n  if (width.value < 768) return '90%'\n  if (width.value < 992) return '70%'\n  return '50%'\n})\n\nconst isFullscreen = computed(() => width.value < 576)\nconst buttonSize = computed(() => width.value < 768 ? 'small' : 'default')\nconst isMobile = computed(() => width.value < 768)\n</script>"
            ],
            [
              "javascript",
              "// スワイプ操作の実装\nimport { useSwipe } from '@vueuse/core'\n\nconst { direction, lengthX, lengthY } = useSwipe(target, {\n  threshold: 50,\n  onSwipeEnd(e, direction) {\n    if (direction === 'left') {\n      // 左スワイプ: 次のページ\n      nextPage()\n    } else if (direction === 'right') {\n      // 右スワイプ: 前のページ\n      prevPage()\n    }\n  }\n})"
            ],
            [
              "scss",
              "// タップしやすいボタンサイズ\n.touch-button {\n  min-height: 44px;  // iOS推奨\n  min-width: 44px;\n  padding: 12px 16px;\n\n  @include desktop-up {\n    min-height: 36px;\n    min-width: auto;\n    padding: 8px 16px;\n  }\n}\n\n// リンクの間隔確保\n.touch-list {\n  li {\n    padding: 12px 0;\n\n    a {\n      display: block;\n      padding: 8px;\n\n      @include desktop-up {\n        display: inline;\n        padding: 0;\n      }\n    }\n  }\n}"
            ],
            [
              "vue",
              "<template>\n  <picture>\n    <!-- モバイル用: 軽量版 -->\n    <source\n      media=\"(max-width: 767px)\"\n      :srcset=\"`${imagePath}-mobile.webp`\"\n      type=\"image/webp\"\n    >\n    <source\n      media=\"(max-width: 767px)\"\n      :srcset=\"`${imagePath}-mobile.jpg`\"\n    >\n\n    <!-- タブレット用: 中解像度 -->\n    <source\n      media=\"(max-width: 1199px)\"\n      :srcset=\"`${imagePath}-tablet.webp`\"\n      type=\"image/webp\"\n    >\n    <source\n      media=\"(max-width: 1199px)\"\n      :srcset=\"`${imagePath}-tablet.jpg`\"\n    >\n\n    <!-- デスクトップ用: 高解像度 -->\n    <source\n      :srcset=\"`${imagePath}-desktop.webp`\"\n      type=\"image/webp\"\n    >\n\n    <!-- フォールバック -->\n    <img\n      :src=\"`${imagePath}.jpg`\"\n      :alt=\"altText\"\n      loading=\"lazy\"\n    >\n  </picture>\n</template>"
            ],
            [
              "javascript",
              "// デバイス別コンポーネントの遅延読み込み\nconst MobileTable = () => import('@/components/mobile/MobileTable.vue')\nconst DesktopTable = () => import('@/components/desktop/DesktopTable.vue')\n\n// 条件付きインポート\nconst component = computed(() => {\n  return isMobile.value ? MobileTable : DesktopTable\n})"
            ],
            [
              "vue",
              "<template>\n  <nav\n    role=\"navigation\"\n    :aria-label=\"navLabel\"\n  >\n    <button\n      v-if=\"isMobile\"\n      :aria-expanded=\"menuOpen\"\n      aria-controls=\"mobile-menu\"\n      @click=\"toggleMenu\"\n      @keydown.enter=\"toggleMenu\"\n      @keydown.space.prevent=\"toggleMenu\"\n    >\n      <span class=\"sr-only\">メニューを開く</span>\n      <el-icon><Menu /></el-icon>\n    </button>\n\n    <ul\n      :id=\"isMobile ? 'mobile-menu' : 'desktop-menu'\"\n      :hidden=\"isMobile && !menuOpen\"\n    >\n      <li v-for=\"item in menuItems\" :key=\"item.id\">\n        <a\n          :href=\"item.path\"\n          :aria-current=\"item.active ? 'page' : undefined\"\n        >\n          {{ item.label }}\n        </a>\n      </li>\n    </ul>\n  </nav>\n</template>"
            ],
            [
              "scss",
              "// スクリーンリーダー専用テキスト\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n// フォーカス時に表示\n.sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  padding: inherit;\n  margin: inherit;\n  overflow: visible;\n  clip: auto;\n  white-space: normal;\n}"
            ],
            [
              "javascript",
              "// Cypress でのレスポンシブテスト\ndescribe('レスポンシブデザインテスト', () => {\n  const viewports = [\n    { name: 'iPhone SE', width: 375, height: 667 },\n    { name: 'iPhone 12', width: 390, height: 844 },\n    { name: 'iPad', width: 768, height: 1024 },\n    { name: 'Desktop', width: 1920, height: 1080 }\n  ]\n\n  viewports.forEach(viewport => {\n    it(`${viewport.name}での表示確認`, () => {\n      cy.viewport(viewport.width, viewport.height)\n      cy.visit('/')\n\n      if (viewport.width < 768) {\n        // モバイル用のテスト\n        cy.get('[data-testid=\"mobile-menu-trigger\"]').should('be.visible')\n        cy.get('[data-testid=\"desktop-menu\"]').should('not.be.visible')\n      } else {\n        // デスクトップ用のテスト\n        cy.get('[data-testid=\"desktop-menu\"]').should('be.visible')\n        cy.get('[data-testid=\"mobile-menu-trigger\"]').should('not.exist')\n      }\n    })\n  })\n})"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 96.22,
        "sentences": 111,
        "avg_words_per_sentence": 11.23,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 70,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 79.37
    },
    "docs/40-プロジェクト完成報告書.md": {
      "basic_metrics": {
        "lines": 367,
        "words": 1083,
        "characters": 7464,
        "avg_line_length": 20.337874659400544
      },
      "structure_analysis": {
        "headers": {
          "total": 58,
          "hierarchy": [
            {
              "level": 1,
              "text": "🎉 プロジェクト完成報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 実行概要",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "🎯 プロジェクト目標",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "✅ 達成成果",
              "line_number": 15
            },
            {
              "level": 2,
              "text": "🚀 実装完了機能一覧",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "✅ 認証・権限システム（100%完成）",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "✅ システム管理機能（100%完成）",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "✅ 監視・ログ機能（100%完成）",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "✅ UI・基盤機能（100%完成）",
              "line_number": 51
            },
            {
              "level": 2,
              "text": "🐛 BUG修正実績",
              "line_number": 60
            },
            {
              "level": 3,
              "text": "📊 修正統計",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "🔥 重要BUG修正実績",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "🌊 水平展開チェック効果",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "🧪 品質保証実績",
              "line_number": 84
            },
            {
              "level": 3,
              "text": "📝 単体試験実装",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "🛡️ セキュリティ実装",
              "line_number": 93
            },
            {
              "level": 3,
              "text": "🎨 UI/UX品質",
              "line_number": 100
            },
            {
              "level": 2,
              "text": "📊 技術スタック詳細",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "🎯 フロントエンド",
              "line_number": 110
            },
            {
              "level": 3,
              "text": "⚙️ バックエンド",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "🐳 システム基盤",
              "line_number": 133
            },
            {
              "level": 2,
              "text": "📈 パフォーマンス指標",
              "line_number": 144
            },
            {
              "level": 3,
              "text": "⚡ システム性能",
              "line_number": 146
            },
            {
              "level": 3,
              "text": "📱 レスポンシブ対応",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "🔍 監視機能",
              "line_number": 160
            },
            {
              "level": 2,
              "text": "📚 ドキュメント完成状況",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "✅ 設計書（100%完成）",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "✅ 運用ドキュメント（95%完成）",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "✅ 技術ドキュメント（100%完成）",
              "line_number": 184
            },
            {
              "level": 2,
              "text": "🏆 プロジェクト成果",
              "line_number": 193
            },
            {
              "level": 3,
              "text": "🎯 目標達成率",
              "line_number": 195
            },
            {
              "level": 3,
              "text": "📊 開発効率",
              "line_number": 202
            },
            {
              "level": 3,
              "text": "🌟 技術的成果",
              "line_number": 208
            },
            {
              "level": 2,
              "text": "🔮 システムの特徴・強み",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "💪 技術的優位性",
              "line_number": 219
            },
            {
              "level": 3,
              "text": "🎨 UI/UX優位性",
              "line_number": 226
            },
            {
              "level": 3,
              "text": "🛡️ セキュリティ優位性",
              "line_number": 233
            },
            {
              "level": 2,
              "text": "🚀 運用準備状況",
              "line_number": 242
            },
            {
              "level": 3,
              "text": "✅ 本番環境対応",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "✅ 運用手順書",
              "line_number": 251
            },
            {
              "level": 3,
              "text": "✅ 保守体制",
              "line_number": 258
            },
            {
              "level": 2,
              "text": "📞 推奨次期アクション",
              "line_number": 267
            },
            {
              "level": 3,
              "text": "🎯 運用開始準備（1-2週間）",
              "line_number": 269
            },
            {
              "level": 3,
              "text": "🔄 継続改善項目（任意）",
              "line_number": 275
            },
            {
              "level": 3,
              "text": "📈 長期発展計画（任意）",
              "line_number": 281
            },
            {
              "level": 2,
              "text": "🎉 プロジェクト完了宣言",
              "line_number": 289
            },
            {
              "level": 3,
              "text": "✅ 完了確認項目",
              "line_number": 291
            },
            {
              "level": 3,
              "text": "🏆 最終成果",
              "line_number": 298
            },
            {
              "level": 3,
              "text": "🌟 特筆すべき成果",
              "line_number": 306
            },
            {
              "level": 2,
              "text": "📋 引き継ぎ情報",
              "line_number": 315
            },
            {
              "level": 3,
              "text": "🔑 重要ファイル・ディレクトリ",
              "line_number": 317
            },
            {
              "level": 3,
              "text": "🚀 起動コマンド",
              "line_number": 331
            },
            {
              "level": 1,
              "text": "環境起動",
              "line_number": 333
            },
            {
              "level": 1,
              "text": "アクセス",
              "line_number": 337
            },
            {
              "level": 3,
              "text": "📞 トラブルシューティング",
              "line_number": 343
            },
            {
              "level": 1,
              "text": "システム状態確認",
              "line_number": 345
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 348
            },
            {
              "level": 1,
              "text": "データベース接続確認",
              "line_number": 353
            }
          ],
          "hierarchy_issues": [
            {
              "line": 343,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 6,
          "inline_code": 11,
          "languages": {
            "typescript": 2,
            "yaml": 1,
            "bash": 2
          },
          "details": [
            [
              "typescript",
              "Vue.js 3.4.29          // Composition API\nElement Plus 2.8.0     // UI コンポーネント\nTypeScript 5.4.5       // 型安全性\nVite 5.4.20            // ビルドツール\nVue Router 4.4.3       // ルーティング\nPinia 2.2.2            // 状態管理\nD3.js 7.9.0            // データ可視化\nWebSocket               // リアルタイム通信"
            ],
            [
              "typescript",
              "Express 4.19.2          // Webフレームワーク\nPrisma 5.18.0           // ORM\nPostgreSQL 15           // データベース\nJWT                     // 認証\nbcrypt                  // パスワードハッシュ化\nWebSocket               // リアルタイム通信\nJest                    // 単体試験"
            ],
            [
              "yaml",
              "Docker 24.0.7           # コンテナ化\nDocker Compose 2.29.2   # オーケストレーション\nNode.js 20.17.0         # ランタイム\nPostgreSQL 15-alpine    # データベース\nNginx (Proxy)           # リバースプロキシ"
            ],
            [
              "",
              "workspace/\n├── frontend/           # Vue.js フロントエンド\n├── backend/            # Express バックエンド\n├── infrastructure/     # Docker環境設定\n└── docs/              # 全ドキュメント\n\n重要設定ファイル:\n- CLAUDE.md            # 開発ガイドライン\n- docker-compose.yml   # 環境設定\n- prisma/schema.prisma # DB設計"
            ],
            [
              "bash",
              "# 環境起動\ncd workspace/infrastructure/docker/development\ndocker compose up -d\n\n# アクセス\nFrontend: http://localhost:3000\nBackend:  http://localhost:8000\nDatabase: localhost:5433"
            ],
            [
              "bash",
              "# システム状態確認\ncurl http://localhost:8000/health\n\n# ログ確認\ndocker compose logs frontend\ndocker compose logs backend\ndocker compose logs postgres\n\n# データベース接続確認\nnpx prisma studio"
            ]
          ]
        },
        "tables": {
          "total": 6,
          "total_rows": 36
        }
      },
      "readability": {
        "score": 95.38,
        "sentences": 78,
        "avg_words_per_sentence": 13.88,
        "long_sentences": 12,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.91
    },
    "docs/63-性能テスト詳細計画書.md": {
      "basic_metrics": {
        "lines": 596,
        "words": 1258,
        "characters": 12097,
        "avg_line_length": 20.296979865771814
      },
      "structure_analysis": {
        "headers": {
          "total": 56,
          "hierarchy": [
            {
              "level": 1,
              "text": "workflow.ts分割 性能テスト詳細計画書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 テスト計画概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 性能テスト目標・KPI",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "主要KPI",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "Core Web Vitals基準",
              "line_number": 43
            },
            {
              "level": 2,
              "text": "🧪 テストシナリオ設計",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "シナリオ1: 初回読み込み性能テスト",
              "line_number": 71
            },
            {
              "level": 4,
              "text": "テスト内容",
              "line_number": 73
            },
            {
              "level": 4,
              "text": "実装例",
              "line_number": 78
            },
            {
              "level": 4,
              "text": "測定項目",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "シナリオ2: API応答時間テスト",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "テスト内容",
              "line_number": 126
            },
            {
              "level": 4,
              "text": "実装例",
              "line_number": 131
            },
            {
              "level": 3,
              "text": "シナリオ3: メモリ使用量テスト",
              "line_number": 178
            },
            {
              "level": 4,
              "text": "テスト内容",
              "line_number": 180
            },
            {
              "level": 4,
              "text": "実装例",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "シナリオ4: 同時接続数テスト",
              "line_number": 223
            },
            {
              "level": 4,
              "text": "テスト内容",
              "line_number": 225
            },
            {
              "level": 4,
              "text": "実装例",
              "line_number": 230
            },
            {
              "level": 2,
              "text": "📊 テスト実行計画",
              "line_number": 284
            },
            {
              "level": 3,
              "text": "Phase 1: ベースライン測定（Day 1）",
              "line_number": 286
            },
            {
              "level": 4,
              "text": "分割前性能測定",
              "line_number": 288
            },
            {
              "level": 1,
              "text": "ベースライン測定スクリプト",
              "line_number": 290
            },
            {
              "level": 1,
              "text": "実行内容",
              "line_number": 293
            },
            {
              "level": 4,
              "text": "測定結果例",
              "line_number": 300
            },
            {
              "level": 3,
              "text": "Phase 2: 分割後性能測定（Day 2-4）",
              "line_number": 317
            },
            {
              "level": 4,
              "text": "各マイクロサービス個別測定",
              "line_number": 319
            },
            {
              "level": 3,
              "text": "Phase 3: 統合性能測定（Day 5-7）",
              "line_number": 334
            },
            {
              "level": 4,
              "text": "フルスタック統合テスト",
              "line_number": 336
            },
            {
              "level": 1,
              "text": "統合性能テスト",
              "line_number": 338
            },
            {
              "level": 1,
              "text": "実行内容",
              "line_number": 341
            },
            {
              "level": 3,
              "text": "Phase 4: 本番環境性能検証（Day 8-9）",
              "line_number": 348
            },
            {
              "level": 4,
              "text": "本番レプリカ環境テスト",
              "line_number": 350
            },
            {
              "level": 2,
              "text": "🔍 監視・アラート設定",
              "line_number": 372
            },
            {
              "level": 3,
              "text": "リアルタイム監視ダッシュボード",
              "line_number": 374
            },
            {
              "level": 4,
              "text": "Grafana監視設定",
              "line_number": 376
            },
            {
              "level": 4,
              "text": "アラート設定",
              "line_number": 417
            },
            {
              "level": 2,
              "text": "📈 継続的性能監視",
              "line_number": 458
            },
            {
              "level": 3,
              "text": "自動性能回帰テスト",
              "line_number": 460
            },
            {
              "level": 4,
              "text": "GitHub Actions統合",
              "line_number": 462
            },
            {
              "level": 1,
              "text": ".github/workflows/performance-regression.yml",
              "line_number": 464
            },
            {
              "level": 3,
              "text": "性能トレンド分析",
              "line_number": 505
            },
            {
              "level": 4,
              "text": "長期トレンド監視",
              "line_number": 507
            },
            {
              "level": 2,
              "text": "📋 テスト成功基準",
              "line_number": 541
            },
            {
              "level": 3,
              "text": "必須達成項目",
              "line_number": 543
            },
            {
              "level": 3,
              "text": "品質保証項目",
              "line_number": 549
            },
            {
              "level": 3,
              "text": "運用準備項目",
              "line_number": 555
            },
            {
              "level": 2,
              "text": "🚀 テスト実行コマンド",
              "line_number": 563
            },
            {
              "level": 3,
              "text": "開発環境テスト",
              "line_number": 565
            },
            {
              "level": 1,
              "text": "全性能テスト実行",
              "line_number": 567
            },
            {
              "level": 1,
              "text": "特定シナリオテスト",
              "line_number": 570
            },
            {
              "level": 1,
              "text": "継続監視開始",
              "line_number": 576
            },
            {
              "level": 3,
              "text": "本番環境テスト",
              "line_number": 580
            },
            {
              "level": 1,
              "text": "本番レプリカテスト",
              "line_number": 582
            },
            {
              "level": 1,
              "text": "負荷テスト",
              "line_number": 585
            },
            {
              "level": 1,
              "text": "監視ダッシュボード起動",
              "line_number": 588
            }
          ],
          "hierarchy_issues": [
            {
              "line": 300,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 348,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 505,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 580,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 18,
          "inline_code": 39,
          "languages": {
            "json": 5,
            "typescript": 8,
            "bash": 4,
            "yaml": 1
          },
          "details": [
            [
              "json",
              "{\n  \"initial_load_reduction\": {\n    \"target\": \"95%\",\n    \"baseline\": \"56KB\",\n    \"target_size\": \"3KB\",\n    \"tolerance\": \"±5%\"\n  },\n  \"api_response_time\": {\n    \"target\": \"40% improvement\",\n    \"baseline\": \"200ms\",\n    \"target_time\": \"120ms\",\n    \"sla_limit\": \"100ms\"\n  },\n  \"memory_usage\": {\n    \"target\": \"60% reduction\",\n    \"baseline\": \"267MB\",\n    \"target_usage\": \"107MB\",\n    \"critical_limit\": \"150MB\"\n  },\n  \"concurrent_users\": {\n    \"target\": \"1000 users\",\n    \"baseline\": \"500 users\",\n    \"degradation_limit\": \"10%\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"LCP\": {\n    \"excellent\": \"< 2.5s\",\n    \"needs_improvement\": \"2.5s - 4.0s\",\n    \"poor\": \"> 4.0s\",\n    \"target\": \"< 2.0s\"\n  },\n  \"FID\": {\n    \"excellent\": \"< 100ms\",\n    \"needs_improvement\": \"100ms - 300ms\",\n    \"poor\": \"> 300ms\",\n    \"target\": \"< 50ms\"\n  },\n  \"CLS\": {\n    \"excellent\": \"< 0.1\",\n    \"needs_improvement\": \"0.1 - 0.25\",\n    \"poor\": \"> 0.25\",\n    \"target\": \"< 0.05\"\n  }\n}"
            ],
            [
              "typescript",
              "// 性能測定スクリプト\nclass BundleSizeAnalyzer {\n  async measureBundleSize() {\n    const analyzer = new BundleAnalyzerPlugin({\n      analyzerMode: 'json',\n      openAnalyzer: false,\n      generateStatsFile: true\n    });\n\n    const stats = await this.buildWithAnalyzer();\n\n    return {\n      legacyWorkflowSize: this.extractModuleSize(stats, 'workflow.ts'),\n      newWorkflowSize: this.extractModuleSize(stats, 'workflow/index.ts'),\n      reductionPercentage: this.calculateReduction(legacy, newSize)\n    };\n  }\n\n  private calculateReduction(before: number, after: number): number {\n    return ((before - after) / before) * 100;\n  }\n}"
            ],
            [
              "json",
              "{\n  \"bundle_analysis\": {\n    \"legacy_workflow_size\": \"56KB\",\n    \"new_main_router_size\": \"3KB\",\n    \"individual_services\": {\n      \"workflow_types\": \"7KB\",\n      \"workflow_requests\": \"9KB\",\n      \"emergency_approval\": \"6KB\"\n    }\n  },\n  \"network_conditions\": {\n    \"fast_3g\": \"750ms\",\n    \"slow_3g\": \"2000ms\",\n    \"regular_4g\": \"300ms\"\n  }\n}"
            ],
            [
              "typescript",
              "// API負荷テストスイート\nclass WorkflowAPILoadTest {\n  private readonly endpoints = [\n    '/api/workflow/types',\n    '/api/workflow/requests',\n    '/api/workflow/emergency/request',\n    // ... 51個のエンドポイント\n  ];\n\n  async runLoadTest() {\n    const results = [];\n\n    for (const endpoint of this.endpoints) {\n      const result = await this.testEndpoint(endpoint);\n      results.push(result);\n    }\n\n    return this.analyzeResults(results);\n  }\n\n  private async testEndpoint(endpoint: string) {\n    const autocannon = require('autocannon');\n\n    return new Promise((resolve) => {\n      autocannon({\n        url: `http://localhost:8000${endpoint}`,\n        connections: 100,\n        duration: 30,\n        headers: {\n          'Authorization': 'Bearer test-token'\n        }\n      }, (err, result) => {\n        resolve({\n          endpoint,\n          avgLatency: result.latency.average,\n          p95Latency: result.latency.p95,\n          throughput: result.requests.average,\n          errors: result.errors\n        });\n      });\n    });\n  }\n}"
            ],
            [
              "typescript",
              "// メモリ使用量監視\nclass MemoryProfiler {\n  private memorySnapshots: MemorySnapshot[] = [];\n\n  startMonitoring() {\n    setInterval(() => {\n      const usage = process.memoryUsage();\n      const snapshot: MemorySnapshot = {\n        timestamp: new Date(),\n        heapUsed: usage.heapUsed,\n        heapTotal: usage.heapTotal,\n        external: usage.external,\n        rss: usage.rss,\n        activeServices: this.getActiveServices()\n      };\n\n      this.memorySnapshots.push(snapshot);\n      this.checkMemoryThresholds(snapshot);\n    }, 10000); // 10秒間隔\n  }\n\n  private checkMemoryThresholds(snapshot: MemorySnapshot) {\n    const heapUsageMB = snapshot.heapUsed / 1024 / 1024;\n\n    if (heapUsageMB > 150) { // 150MB閾値\n      this.alertManager.sendAlert({\n        type: 'MEMORY_THRESHOLD_EXCEEDED',\n        usage: heapUsageMB,\n        threshold: 150,\n        services: snapshot.activeServices\n      });\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// 同時接続テスト\nclass ConcurrentUserTest {\n  async runConcurrencyTest() {\n    const testPlan = [\n      { users: 100, duration: 300 },  // 5分\n      { users: 500, duration: 600 },  // 10分\n      { users: 1000, duration: 900 }, // 15分\n      { users: 1500, duration: 300 }  // 限界テスト\n    ];\n\n    const results = [];\n\n    for (const phase of testPlan) {\n      console.log(`🚀 Testing ${phase.users} concurrent users`);\n      const result = await this.testConcurrentUsers(phase.users, phase.duration);\n      results.push(result);\n\n      // 性能劣化チェック\n      if (result.avgResponseTime > 500) { // 500ms超過\n        console.log(`⚠️ Performance degradation at ${phase.users} users`);\n        break;\n      }\n    }\n\n    return results;\n  }\n\n  private async testConcurrentUsers(userCount: number, duration: number) {\n    const users = Array.from({ length: userCount }, (_, i) =>\n      new VirtualUser(`user_${i}`)\n    );\n\n    const startTime = Date.now();\n    const promises = users.map(user => user.simulateWorkflow(duration));\n\n    const results = await Promise.allSettled(promises);\n    const endTime = Date.now();\n\n    return {\n      userCount,\n      duration,\n      totalTime: endTime - startTime,\n      successRate: this.calculateSuccessRate(results),\n      avgResponseTime: this.calculateAvgResponseTime(results),\n      errorCount: this.countErrors(results)\n    };\n  }\n}"
            ],
            [
              "bash",
              "# ベースライン測定スクリプト\n./scripts/baseline-measurement.sh\n\n# 実行内容\n- バンドルサイズ分析\n- API応答時間測定 (51エンドポイント)\n- メモリ使用量プロファイリング\n- 同時接続数限界測定"
            ],
            [
              "json",
              "{\n  \"baseline\": {\n    \"bundle_size\": \"56KB\",\n    \"avg_api_response\": \"200ms\",\n    \"memory_usage\": \"267MB\",\n    \"max_concurrent_users\": \"500\",\n    \"core_web_vitals\": {\n      \"LCP\": \"3.2s\",\n      \"FID\": \"150ms\",\n      \"CLS\": \"0.15\"\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// 個別サービステスト実行\nconst serviceTests = [\n  { name: 'workflow-types', port: 8001 },\n  { name: 'workflow-requests', port: 8002 },\n  { name: 'emergency-approval', port: 8003 },\n  // ... 9サービス全て\n];\n\nfor (const service of serviceTests) {\n  await this.testIndividualService(service);\n}"
            ],
            [
              "bash",
              "# 統合性能テスト\n./scripts/integrated-performance-test.sh\n\n# 実行内容\n- 全マイクロサービス同時稼働\n- エンドツーエンド性能測定\n- 実ユーザーシナリオ再現\n- 性能回帰テスト"
            ],
            [
              "typescript",
              "// 本番環境レプリカでの検証\nclass ProductionReplicaTest {\n  async runProductionTest() {\n    // 本番データレプリケーション\n    await this.replicateProductionData();\n\n    // 実トラフィックパターン再現\n    await this.simulateRealTraffic();\n\n    // 24時間連続稼働テスト\n    await this.run24HourStressTest();\n\n    // 結果分析・レポート生成\n    return await this.generatePerformanceReport();\n  }\n}"
            ],
            [
              "json",
              "{\n  \"dashboards\": {\n    \"workflow_performance\": {\n      \"panels\": [\n        {\n          \"title\": \"API Response Time\",\n          \"type\": \"graph\",\n          \"targets\": [\n            \"avg(api_response_time{service=~'workflow.*'})\"\n          ],\n          \"alert\": {\n            \"condition\": \"> 100ms\",\n            \"frequency\": \"10s\"\n          }\n        },\n        {\n          \"title\": \"Memory Usage\",\n          \"type\": \"singlestat\",\n          \"targets\": [\n            \"sum(nodejs_heap_size_used_bytes{service=~'workflow.*'})\"\n          ],\n          \"alert\": {\n            \"condition\": \"> 150MB\",\n            \"frequency\": \"30s\"\n          }\n        },\n        {\n          \"title\": \"Bundle Size Trend\",\n          \"type\": \"graph\",\n          \"targets\": [\n            \"bundle_size{module='workflow'}\"\n          ]\n        }\n      ]\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// アラート管理システム\nclass PerformanceAlertManager {\n  private readonly thresholds = {\n    api_response_time: 100, // ms\n    memory_usage: 150,      // MB\n    error_rate: 1,          // %\n    cpu_usage: 80           // %\n  };\n\n  async checkPerformanceMetrics() {\n    const metrics = await this.collectMetrics();\n\n    for (const [metric, value] of Object.entries(metrics)) {\n      if (value > this.thresholds[metric]) {\n        await this.sendAlert({\n          metric,\n          value,\n          threshold: this.thresholds[metric],\n          severity: this.calculateSeverity(metric, value),\n          timestamp: new Date()\n        });\n      }\n    }\n  }\n\n  private calculateSeverity(metric: string, value: number): string {\n    const threshold = this.thresholds[metric];\n    const ratio = value / threshold;\n\n    if (ratio > 2.0) return 'CRITICAL';\n    if (ratio > 1.5) return 'HIGH';\n    if (ratio > 1.2) return 'MEDIUM';\n    return 'LOW';\n  }\n}"
            ],
            [
              "yaml",
              "# .github/workflows/performance-regression.yml\nname: Performance Regression Test\n\non:\n  pull_request:\n    paths:\n      - 'src/routes/workflow/**'\n  schedule:\n    - cron: '0 2 * * *' # 毎日午前2時\n\njobs:\n  performance-test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: 18\n\n      - name: Install dependencies\n        run: npm install\n\n      - name: Run performance tests\n        run: npm run test:performance\n\n      - name: Compare with baseline\n        run: |\n          node scripts/compare-performance.js \\\n            --baseline ./performance/baseline.json \\\n            --current ./performance/current.json \\\n            --threshold 10\n\n      - name: Upload performance report\n        uses: actions/upload-artifact@v3\n        with:\n          name: performance-report\n          path: performance-report.html"
            ],
            [
              "typescript",
              "// 性能トレンド分析\nclass PerformanceTrendAnalyzer {\n  async analyzePerformanceTrend(days: number = 30) {\n    const data = await this.getPerformanceData(days);\n\n    const trends = {\n      bundle_size: this.calculateTrend(data.map(d => d.bundleSize)),\n      response_time: this.calculateTrend(data.map(d => d.avgResponseTime)),\n      memory_usage: this.calculateTrend(data.map(d => d.memoryUsage)),\n      error_rate: this.calculateTrend(data.map(d => d.errorRate))\n    };\n\n    // 悪化トレンド検出\n    const deteriorating = Object.entries(trends)\n      .filter(([_, trend]) => trend.slope > 0.1) // 10%以上の悪化\n      .map(([metric, trend]) => ({ metric, trend }));\n\n    if (deteriorating.length > 0) {\n      await this.alertManager.sendTrendAlert({\n        type: 'PERFORMANCE_DETERIORATION',\n        metrics: deteriorating,\n        timeframe: days\n      });\n    }\n\n    return trends;\n  }\n}"
            ],
            [
              "bash",
              "# 全性能テスト実行\nnpm run test:performance\n\n# 特定シナリオテスト\nnpm run test:bundle-size\nnpm run test:api-response\nnpm run test:memory-usage\nnpm run test:concurrent-users\n\n# 継続監視開始\nnpm run monitor:performance"
            ],
            [
              "bash",
              "# 本番レプリカテスト\nnpm run test:production-replica\n\n# 負荷テスト\nnpm run test:load\n\n# 監視ダッシュボード起動\nnpm run dashboard:performance"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.71,
        "sentences": 119,
        "avg_words_per_sentence": 10.57,
        "long_sentences": 17,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 48,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.41
    },
    "docs/16-残りの作業一覧.md": {
      "basic_metrics": {
        "lines": 300,
        "words": 879,
        "characters": 6460,
        "avg_line_length": 21.533333333333335
      },
      "structure_analysis": {
        "headers": {
          "total": 44,
          "hierarchy": [
            {
              "level": 1,
              "text": "残りの作業一覧",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 完了済み項目（2025-09-25まで）",
              "line_number": 21
            },
            {
              "level": 3,
              "text": "✅ 2025-09-23実装分",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "✅ 2025-09-25追加実装分",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "🔧 中優先度タスク（次に取り組むべき項目）",
              "line_number": 71
            },
            {
              "level": 3,
              "text": "1. ~~未コミットファイルの整理とコミット~~ ✅ 完了",
              "line_number": 73
            },
            {
              "level": 3,
              "text": "2. ~~BUG #003修正 - IPv6 Rate Limiting警告~~ ✅ 完了",
              "line_number": 84
            },
            {
              "level": 3,
              "text": "3. ~~ログ監視システム基本実装~~ ✅ 完了",
              "line_number": 91
            },
            {
              "level": 2,
              "text": "✅ 完了済み最終項目（2025-09-27）",
              "line_number": 103
            },
            {
              "level": 3,
              "text": "1. BUG #004修正 - JWT認証エラーハンドリング ✅ 完了",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "2. BUG #012修正 - レスポンシブデザイン対応 ✅ 完了",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "3. BUG #013修正 - システム監視ページ表示エラー ✅ 完了",
              "line_number": 117
            },
            {
              "level": 2,
              "text": "🟡 長期拡張項目（システム完成により任意対応）",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "1. 権限継承システム実装 ✅ 完了",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "2. レポート機能実装 ✅ 完了",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "3. 権限キャッシュシステム",
              "line_number": 143
            },
            {
              "level": 2,
              "text": "📚 ドキュメント整備",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "1. API仕様書更新",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "2. 運用マニュアル作成",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "3. テストケース追加",
              "line_number": 159
            },
            {
              "level": 2,
              "text": "🚀 推奨実装順序",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "Phase 1: 即座対応（本日中） ✅ 完了",
              "line_number": 164
            },
            {
              "level": 1,
              "text": "✅ 完了 - 最新コミット",
              "line_number": 167
            },
            {
              "level": 1,
              "text": "コミットID: 9b7effc",
              "line_number": 171
            },
            {
              "level": 3,
              "text": "Phase 2: 今週中",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "Phase 3: 来週以降",
              "line_number": 181
            },
            {
              "level": 2,
              "text": "🛠️ 技術的考慮事項",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "パフォーマンス最適化",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "セキュリティ強化",
              "line_number": 193
            },
            {
              "level": 3,
              "text": "スケーラビリティ",
              "line_number": 198
            },
            {
              "level": 2,
              "text": "📊 現在の実装状況",
              "line_number": 203
            },
            {
              "level": 2,
              "text": "🎯 最終目標達成状況（2025-09-27）",
              "line_number": 217
            },
            {
              "level": 2,
              "text": "🎯 短期目標（1週間） - 更新版",
              "line_number": 242
            },
            {
              "level": 2,
              "text": "📞 次のアクション",
              "line_number": 251
            },
            {
              "level": 3,
              "text": "即座に実行すべき内容",
              "line_number": 253
            },
            {
              "level": 1,
              "text": "1. 権限管理機能のコミット ✅ 完了 (過去のコミットで実装済み)",
              "line_number": 255
            },
            {
              "level": 1,
              "text": "過去のコミットで permissions.ts, PermissionMatrix.vue 等は既にコミット済み",
              "line_number": 256
            },
            {
              "level": 1,
              "text": "2. BUG #003修正 ✅ 完了",
              "line_number": 258
            },
            {
              "level": 1,
              "text": "auth.tsのrate limitingコード修正済み",
              "line_number": 259
            },
            {
              "level": 1,
              "text": "3. ログ監視基本機能の実装 ✅ 完了",
              "line_number": 261
            },
            {
              "level": 1,
              "text": "LogMonitoring.vue完全実装、動作確認済み",
              "line_number": 262
            },
            {
              "level": 1,
              "text": "4. 最新コミット ✅ 完了 (9b7effc)",
              "line_number": 264
            },
            {
              "level": 3,
              "text": "確認すべき動作 - 全て完了 ✅",
              "line_number": 270
            }
          ],
          "hierarchy_issues": [
            {
              "line": 177,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 270,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 1,
          "inline_code": 6,
          "languages": {
            "bash": 1
          },
          "details": [
            [
              "bash",
              "   # ✅ 完了 - 最新コミット\n   cd /home/typho/src/elementplus/websys/workspace\n   git add backend/src/services/LogService.ts backend/prisma/schema.prisma\n   git commit -m \"feat: ログ監視システム完全実装とスキーマ修正\"\n   # コミットID: 9b7effc\n   ```\n\n2. ✅ **BUG #003修正** (15分)\n   - IPv6 Rate Limiting警告の解決\n\n### Phase 2: 今週中\n1. ~~**ログ監視システム基本実装** (2-3時間)~~ ✅ 完了\n2. **API仕様書更新** (1時間)\n\n### Phase 3: 来週以降\n1. **権限継承システム** (4-6時間)\n2. **権限キャッシュシステム** (3-4時間)\n3. **運用マニュアル作成** (2-3時間)\n\n## 🛠️ 技術的考慮事項\n\n### パフォーマンス最適化\n- データベースクエリの最適化\n- フロントエンド遅延読み込み\n- キャッシュ戦略の実装\n\n### セキュリティ強化\n- Rate Limiting の完全対応\n- 権限チェックの厳密化\n- ログ監査機能の強化\n\n### スケーラビリティ\n- 大規模データ対応\n- マルチテナント対応\n- API レスポンス時間の監視\n\n## 📊 現在の実装状況\n\n| 機能カテゴリ | 完成度 | 状態 | 備考 |\n|-------------|--------|------|------|\n| 認証機能 | 100% | ✅ | IPv6警告修正済み・JWT完全実装 |\n<<<<<<< HEAD\n| ユーザー管理 | 100% | ✅ | CRUD・権限管理完全実装 |\n| 権限管理 | 100% | ✅ | テンプレート・継承・RBAC完成 |\n| ダッシュボード | 100% | ✅ | WebSocketリアルタイム統計実装済み |\n| ログ監視 | 100% | ✅ | 完全実装済み（WebSocket・統計・アラート） |\n| レポート機能 | 100% | ✅ | 全レポートAPI・UI実装完成 |\n| システム基盤 | 100% | ✅ | Docker環境・レスポンシブUI完成 |\n| 共通コンポーネント | 100% | ✅ | 15コンポーネント・レスポンシブ対応完成 |\n\n## 🎯 最終目標達成状況（2025-09-27）\n\n1. ✅ **システム完成度 100%達成** 🎉\n2. ✅ **全BUG修正完了**（13件/13件解決済み）\n3. ✅ **ログ監視システム完全実装完成**\n4. ✅ **ドキュメント整備完了**\n5. ✅ **レスポンシブデザイン対応完了**\n6. ✅ **権限継承システム実装完了**\n7. ✅ **レポート機能実装完了**\n=======\n| ユーザー管理 | 95% | ✅ | CRUD・権限管理完全実装 |\n| 権限管理システム | 98% | ✅ | **権限テンプレート・RBAC・監査ログ完成** |\n| ダッシュボード | 95% | ✅ | WebSocketリアルタイム統計実装済み |\n| ログ監視 | 98% | ✅ | 完全実装済み（WebSocket・統計・アラート） |\n| アラート機能 | 100% | ✅ | WebSocketリアルタイム通知完成 |\n| 組織管理機能 | 100% | ✅ | 会社・部署管理・階層構造完成 |\n| 共通コンポーネント | 98% | ✅ | 15コンポーネント実装済み |\n| レスポンシブUI | 100% | ✅ | 全ブレークポイント・BIZ UDゴシック対応 |\n| データベース設計 | 100% | ✅ | PostgreSQL・Prisma統合完成 |\n| システム基盤 | 100% | ✅ | Docker・CI/CD環境完成 |\n| テスト機能 | 100% | ✅ | API接続・CodePreview完成 |\n| メッセージ管理 | 100% | ✅ | MessageService・コード管理完成 |\n| **単体試験** | **100%** | **✅** | **Jest/Vitest完全実装・63項目テスト** |\n| レポート機能 | 80% | 🟡 | CSV/JSON出力・権限制御実装中 |\n\n## 🎯 短期目標（1週間） - 更新版\n\n1. ✅ **システム完成度 98%達成** - **目標超過達成**\n2. ✅ **主要BUG修正完了**（#002, #003, #005, #006完了、#004は低優先度）\n3. ✅ **権限テンプレート機能完全実装完成**\n4. ✅ **単体試験実装完了**（Jest/Vitest・63項目）\n5. ✅ **設計書差異分析・ドキュメント整備完了**\n>>>>>>> 91bf5f90115483722eaa25ed642b38393ddf1764\n\n## 📞 次のアクション\n\n### 即座に実行すべき内容"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 24
        }
      },
      "readability": {
        "score": 97.86,
        "sentences": 70,
        "avg_words_per_sentence": 12.56,
        "long_sentences": 5,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 44.58,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.69
    },
    "docs/52-継続的改善プロセス運用ガイドライン.md": {
      "basic_metrics": {
        "lines": 356,
        "words": 1047,
        "characters": 5444,
        "avg_line_length": 15.292134831460674
      },
      "structure_analysis": {
        "headers": {
          "total": 64,
          "hierarchy": [
            {
              "level": 1,
              "text": "継続的改善プロセス運用ガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 目的",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "2. 適用範囲",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "2.1 対象となる変更",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "2.2 チェック対象外",
              "line_number": 22
            },
            {
              "level": 2,
              "text": "3. チェックプロセス",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "3.1 プロセスフロー",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "3.2 各フェーズの実施事項",
              "line_number": 39
            },
            {
              "level": 4,
              "text": "Phase 1: 事前影響分析",
              "line_number": 41
            },
            {
              "level": 4,
              "text": "Phase 2: 実装後チェック",
              "line_number": 46
            },
            {
              "level": 4,
              "text": "Phase 3: 問題管理",
              "line_number": 51
            },
            {
              "level": 4,
              "text": "Phase 4: 継続的モニタリング",
              "line_number": 56
            },
            {
              "level": 2,
              "text": "4. チェックリスト",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "4.1 ユーザータイプ別チェック項目",
              "line_number": 63
            },
            {
              "level": 4,
              "text": "一般ユーザー（USER）視点",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "管理者（ADMIN）視点",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "マネージャー（MANAGER）視点",
              "line_number": 83
            },
            {
              "level": 4,
              "text": "ゲスト視点",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "4.2 技術的チェック項目",
              "line_number": 97
            },
            {
              "level": 4,
              "text": "セキュリティ",
              "line_number": 99
            },
            {
              "level": 4,
              "text": "パフォーマンス",
              "line_number": 107
            },
            {
              "level": 4,
              "text": "ユーザビリティ",
              "line_number": 115
            },
            {
              "level": 2,
              "text": "5. 問題管理",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "5.1 問題分類",
              "line_number": 125
            },
            {
              "level": 4,
              "text": "重要度分類",
              "line_number": 127
            },
            {
              "level": 4,
              "text": "影響範囲分類",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "5.2 問題記録テンプレート",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "問題ID: P-YYYY-MM-DD-XXX",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "問題概要",
              "line_number": 144
            },
            {
              "level": 3,
              "text": "問題詳細",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "再現手順",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "期待される動作",
              "line_number": 158
            },
            {
              "level": 3,
              "text": "実際の動作",
              "line_number": 161
            },
            {
              "level": 3,
              "text": "影響分析",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "改善案",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "対応状況",
              "line_number": 172
            },
            {
              "level": 2,
              "text": "6. 改善タスク管理",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "6.1 タスク作成基準",
              "line_number": 183
            },
            {
              "level": 3,
              "text": "6.2 タスク管理項目",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "7. KPI管理",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "7.1 品質指標",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "7.2 改善指標",
              "line_number": 219
            },
            {
              "level": 2,
              "text": "8. レビュープロセス",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "8.1 定期レビュー",
              "line_number": 229
            },
            {
              "level": 4,
              "text": "週次レビュー",
              "line_number": 231
            },
            {
              "level": 4,
              "text": "月次レビュー",
              "line_number": 236
            },
            {
              "level": 4,
              "text": "四半期レビュー",
              "line_number": 241
            },
            {
              "level": 3,
              "text": "8.2 レビュー参加者",
              "line_number": 246
            },
            {
              "level": 2,
              "text": "9. ツールと自動化",
              "line_number": 254
            },
            {
              "level": 3,
              "text": "9.1 推奨ツール",
              "line_number": 256
            },
            {
              "level": 4,
              "text": "問題管理",
              "line_number": 258
            },
            {
              "level": 4,
              "text": "監視",
              "line_number": 263
            },
            {
              "level": 4,
              "text": "テスト自動化",
              "line_number": 268
            },
            {
              "level": 3,
              "text": "9.2 自動化対象",
              "line_number": 273
            },
            {
              "level": 2,
              "text": "10. エスカレーション",
              "line_number": 281
            },
            {
              "level": 3,
              "text": "10.1 エスカレーション基準",
              "line_number": 283
            },
            {
              "level": 3,
              "text": "10.2 緊急対応フロー",
              "line_number": 291
            },
            {
              "level": 2,
              "text": "11. 継続的改善",
              "line_number": 299
            },
            {
              "level": 3,
              "text": "11.1 改善サイクル",
              "line_number": 301
            },
            {
              "level": 3,
              "text": "11.2 ベストプラクティス",
              "line_number": 315
            },
            {
              "level": 2,
              "text": "12. 付録",
              "line_number": 333
            },
            {
              "level": 3,
              "text": "12.1 関連文書",
              "line_number": 335
            },
            {
              "level": 3,
              "text": "12.2 テンプレート",
              "line_number": 341
            },
            {
              "level": 3,
              "text": "12.3 更新履歴",
              "line_number": 347
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 3,
          "inline_code": 5,
          "languages": {
            "markdown": 1
          },
          "details": [
            [
              "",
              "[機能追加/改善] → [事前影響分析] → [実装] → [品質チェック]\n                                                      ↓\n[問題なし] ← [改善実施] ← [問題管理登録] ← [問題発見]\n     ↓\n[リリース] → [事後モニタリング] → [完了]"
            ],
            [
              "markdown",
              "## 問題ID: P-YYYY-MM-DD-XXX\n\n### 問題概要\n- **発見日**: YYYY-MM-DD\n- **発見者**:\n- **重要度**: CRITICAL / HIGH / MEDIUM / LOW\n- **影響範囲**: 全ユーザー / 特定ロール / 特定機能 / 限定的\n\n### 問題詳細\n[問題の詳細説明]\n\n### 再現手順\n1. [手順1]\n2. [手順2]\n3. [手順3]\n\n### 期待される動作\n[正しい動作の説明]\n\n### 実際の動作\n[問題のある動作の説明]\n\n### 影響分析\n- **影響を受けるユーザー**:\n- **業務への影響**:\n- **回避策の有無**:\n\n### 改善案\n[改善案の記載]\n\n### 対応状況\n- [ ] 問題確認\n- [ ] 影響分析完了\n- [ ] 改善タスク作成\n- [ ] 実装完了\n- [ ] テスト完了\n- [ ] リリース完了"
            ],
            [
              "",
              "Plan（計画）\n↓\nDo（実行）\n↓\nCheck（評価）\n↓\nAct（改善）\n↓\nPlan（計画）へ戻る"
            ]
          ]
        },
        "tables": {
          "total": 12,
          "total_rows": 69
        }
      },
      "readability": {
        "score": 94.0,
        "sentences": 70,
        "avg_words_per_sentence": 14.96,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 59,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.3
    },
    "docs/30-複数プロジェクト共有機能設計書.md": {
      "basic_metrics": {
        "lines": 586,
        "words": 1054,
        "characters": 10620,
        "avg_line_length": 18.12286689419795
      },
      "structure_analysis": {
        "headers": {
          "total": 49,
          "hierarchy": [
            {
              "level": 1,
              "text": "複数プロジェクト共有機能基本設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "共有機能アーキテクチャ",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "全体構成",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "1. UI・フロントエンド共通機能",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "1.1 共通コンポーネントライブラリ",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "1.2 状態管理共通パターン",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "1.3 多言語対応（i18n）",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "2. バックエンド・ビジネスロジック共通機能",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "2.1 認証・認可システム",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "2.2 ユーザー管理システム",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "2.3 監査ログシステム",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "2.4 通知システム",
              "line_number": 278
            },
            {
              "level": 3,
              "text": "2.5 ファイル管理システム",
              "line_number": 304
            },
            {
              "level": 2,
              "text": "3. データベース・データ共通機能",
              "line_number": 330
            },
            {
              "level": 3,
              "text": "3.1 共通データベーススキーマ",
              "line_number": 332
            },
            {
              "level": 3,
              "text": "3.2 データアクセス共通層",
              "line_number": 359
            },
            {
              "level": 2,
              "text": "4. インフラ・運用共通機能",
              "line_number": 385
            },
            {
              "level": 3,
              "text": "4.1 Docker環境テンプレート",
              "line_number": 387
            },
            {
              "level": 3,
              "text": "4.2 CI/CDパイプラインテンプレート",
              "line_number": 398
            },
            {
              "level": 3,
              "text": "4.3 モニタリング・ログ共通設定",
              "line_number": 409
            },
            {
              "level": 2,
              "text": "5. 開発支援共通機能",
              "line_number": 434
            },
            {
              "level": 3,
              "text": "5.1 コード生成ツール",
              "line_number": 436
            },
            {
              "level": 1,
              "text": "CRUD生成",
              "line_number": 441
            },
            {
              "level": 1,
              "text": "API生成",
              "line_number": 444
            },
            {
              "level": 1,
              "text": "フロントエンド画面生成",
              "line_number": 447
            },
            {
              "level": 1,
              "text": "共通コンポーネント生成",
              "line_number": 450
            },
            {
              "level": 3,
              "text": "5.2 テストユーティリティ",
              "line_number": 454
            },
            {
              "level": 2,
              "text": "実装優先順位",
              "line_number": 479
            },
            {
              "level": 3,
              "text": "フェーズ1（基盤構築）",
              "line_number": 481
            },
            {
              "level": 3,
              "text": "フェーズ2（機能拡張）",
              "line_number": 487
            },
            {
              "level": 3,
              "text": "フェーズ3（最適化）",
              "line_number": 493
            },
            {
              "level": 3,
              "text": "フェーズ4（開発支援）",
              "line_number": 499
            },
            {
              "level": 2,
              "text": "プロジェクト間連携方式",
              "line_number": 505
            },
            {
              "level": 3,
              "text": "1. パッケージベース連携",
              "line_number": 507
            },
            {
              "level": 3,
              "text": "2. サービスベース連携",
              "line_number": 518
            },
            {
              "level": 3,
              "text": "3. データベース共有",
              "line_number": 527
            },
            {
              "level": 2,
              "text": "セキュリティ・ガバナンス",
              "line_number": 533
            },
            {
              "level": 3,
              "text": "バージョン管理",
              "line_number": 535
            },
            {
              "level": 3,
              "text": "アクセス制御",
              "line_number": 540
            },
            {
              "level": 3,
              "text": "品質保証",
              "line_number": 545
            },
            {
              "level": 2,
              "text": "運用・保守方針",
              "line_number": 550
            },
            {
              "level": 3,
              "text": "1. 中央集権管理",
              "line_number": 552
            },
            {
              "level": 3,
              "text": "2. 段階的展開",
              "line_number": 557
            },
            {
              "level": 3,
              "text": "3. 監視・メンテナンス",
              "line_number": 562
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 567
            },
            {
              "level": 3,
              "text": "開発効率向上",
              "line_number": 571
            },
            {
              "level": 3,
              "text": "品質向上",
              "line_number": 576
            },
            {
              "level": 3,
              "text": "保守性向上",
              "line_number": 581
            }
          ],
          "hierarchy_issues": [
            {
              "line": 454,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 20,
          "inline_code": 53,
          "languages": {
            "mermaid": 1,
            "typescript": 13,
            "sql": 2,
            "bash": 1,
            "json": 1
          },
          "details": [
            [
              "mermaid",
              "graph TB\n    subgraph \"プロジェクトA\"\n        PA[Project A Frontend]\n        PAB[Project A Backend]\n    end\n\n    subgraph \"プロジェクトB\"\n        PB[Project B Frontend]\n        PBB[Project B Backend]\n    end\n\n    subgraph \"プロジェクトC\"\n        PC[Project C Frontend]\n        PCB[Project C Backend]\n    end\n\n    subgraph \"共有ライブラリ層\"\n        UI[UI共通ライブラリ]\n        BL[ビジネスロジック共通]\n        DB[データ共通層]\n        INFRA[インフラ共通層]\n    end\n\n    subgraph \"共有サービス層\"\n        AUTH[認証サービス]\n        NOTIFY[通知サービス]\n        FILE[ファイル管理]\n        LOG[ログ管理]\n    end\n\n    PA --> UI\n    PB --> UI\n    PC --> UI\n    PAB --> BL\n    PBB --> BL\n    PCB --> BL\n\n    BL --> AUTH\n    BL --> NOTIFY\n    BL --> FILE\n    BL --> LOG\n\n    AUTH --> DB\n    NOTIFY --> DB\n    FILE --> DB\n    LOG --> DB\n\n    DB --> INFRA"
            ],
            [
              "typescript",
              "// 提供機能\ninterface UISharedFeatures {\n  components: {\n    basic: ['CommonButton', 'CommonInput', 'CommonSelect', 'CommonTable']\n    layout: ['CommonHeader', 'CommonSidebar', 'CommonFooter', 'CommonBreadcrumb']\n    form: ['CommonForm', 'CommonFormField', 'CommonValidator']\n    data: ['CommonDataTable', 'CommonChart', 'CommonPagination']\n    feedback: ['CommonDialog', 'CommonMessage', 'CommonNotification']\n  }\n\n  theming: {\n    colors: ColorPalette\n    typography: TypographyScale\n    spacing: SpacingScale\n    breakpoints: ResponsiveBreakpoints\n  }\n\n  utilities: {\n    validators: ValidationRules\n    formatters: DataFormatters\n    helpers: UIHelpers\n  }\n}"
            ],
            [
              "typescript",
              "// 共通ストア定義\ninterface SharedStores {\n  auth: AuthStore           // 認証状態管理\n  user: UserProfileStore    // ユーザープロファイル\n  app: AppConfigStore      // アプリケーション設定\n  notification: NotificationStore // 通知管理\n  theme: ThemeStore        // テーマ設定\n}\n\n// 使用例\nimport { useAuthStore, useUserStore } from '@company/shared-stores'"
            ],
            [
              "typescript",
              "interface I18nResources {\n  common: {\n    ja: CommonJaTranslations\n    en: CommonEnTranslations\n  }\n\n  validation: {\n    ja: ValidationJaMessages\n    en: ValidationEnMessages\n  }\n\n  business: {\n    ja: BusinessJaTerms\n    en: BusinessEnTerms\n  }\n}"
            ],
            [
              "typescript",
              "interface AuthSharedFeatures {\n  authentication: {\n    jwt: JWTAuthProvider\n    oauth: OAuthProvider\n    session: SessionManager\n    mfa: MultifactorAuth\n  }\n\n  authorization: {\n    rbac: RoleBasedAccessControl\n    abac: AttributeBasedAccessControl\n    permissions: PermissionManager\n  }\n\n  middleware: {\n    authenticateToken: AuthMiddleware\n    requireRole: RoleMiddleware\n    requirePermission: PermissionMiddleware\n  }\n}\n\n// 使用例\nimport { authenticateToken, requireRole } from '@company/shared-auth'\n\napp.use('/api/admin', authenticateToken, requireRole('admin'))"
            ],
            [
              "typescript",
              "interface UserManagementFeatures {\n  models: {\n    User: UserModel\n    Role: RoleModel\n    Permission: PermissionModel\n    UserProfile: UserProfileModel\n  }\n\n  services: {\n    userService: UserCRUDService\n    profileService: ProfileManagementService\n    roleService: RoleManagementService\n  }\n\n  validation: {\n    userValidation: UserValidationRules\n    passwordPolicy: PasswordPolicyRules\n  }\n}"
            ],
            [
              "sql",
              "-- 共通ユーザーテーブル\nCREATE TABLE users (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  username VARCHAR(50) UNIQUE NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255) NOT NULL,\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE roles (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  name VARCHAR(50) UNIQUE NOT NULL,\n  description TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE permissions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  resource VARCHAR(100) NOT NULL,\n  action VARCHAR(50) NOT NULL,\n  description TEXT,\n  UNIQUE(resource, action)\n);"
            ],
            [
              "typescript",
              "interface AuditLogFeatures {\n  logger: {\n    logAction: (action: AuditAction) => Promise<void>\n    logDataChange: (changes: DataChange) => Promise<void>\n    logSecurityEvent: (event: SecurityEvent) => Promise<void>\n  }\n\n  query: {\n    getAuditLogs: (filters: AuditFilters) => Promise<AuditLog[]>\n    exportAuditReport: (period: DateRange) => Promise<Report>\n  }\n\n  middleware: {\n    auditMiddleware: ExpressMiddleware\n    dataChangeTracker: PrismaMiddleware\n  }\n}\n\n// 使用例\nimport { auditMiddleware, logAction } from '@company/shared-audit'\n\napp.use(auditMiddleware)\nawait logAction({\n  userId: user.id,\n  action: 'USER_CREATED',\n  resource: 'users',\n  details: { userId: newUser.id }\n})"
            ],
            [
              "typescript",
              "interface NotificationFeatures {\n  channels: {\n    email: EmailNotificationService\n    inApp: InAppNotificationService\n    push: PushNotificationService\n    sms: SMSNotificationService\n  }\n\n  templates: {\n    welcome: NotificationTemplate\n    passwordReset: NotificationTemplate\n    systemAlert: NotificationTemplate\n  }\n\n  queue: {\n    sendNotification: (notification: Notification) => Promise<void>\n    scheduleNotification: (notification: Notification, schedule: Schedule) => Promise<void>\n  }\n}"
            ],
            [
              "typescript",
              "interface FileManagementFeatures {\n  storage: {\n    local: LocalStorageProvider\n    s3: S3StorageProvider\n    azure: AzureStorageProvider\n  }\n\n  processing: {\n    imageResize: ImageProcessor\n    documentConverter: DocumentProcessor\n    virusScanner: SecurityScanner\n  }\n\n  api: {\n    uploadFile: FileUploadHandler\n    downloadFile: FileDownloadHandler\n    deleteFile: FileDeleteHandler\n  }\n}"
            ],
            [
              "sql",
              "-- 共通テーブル群\nCREATE SCHEMA shared;\n\n-- ユーザー関連\nCREATE TABLE shared.users (...);\nCREATE TABLE shared.roles (...);\nCREATE TABLE shared.permissions (...);\nCREATE TABLE shared.user_roles (...);\nCREATE TABLE shared.role_permissions (...);\n\n-- システム関連\nCREATE TABLE shared.audit_logs (...);\nCREATE TABLE shared.notifications (...);\nCREATE TABLE shared.system_settings (...);\nCREATE TABLE shared.file_attachments (...);\n\n-- 共通マスタ\nCREATE TABLE shared.countries (...);\nCREATE TABLE shared.timezones (...);\nCREATE TABLE shared.currencies (...);"
            ],
            [
              "typescript",
              "interface DataAccessFeatures {\n  repositories: {\n    BaseRepository: BaseRepositoryClass\n    UserRepository: UserRepositoryClass\n    AuditRepository: AuditRepositoryClass\n  }\n\n  utilities: {\n    pagination: PaginationUtility\n    filtering: FilteringUtility\n    sorting: SortingUtility\n    validation: DataValidationUtility\n  }\n\n  migrations: {\n    baseMigrations: PrismaMigration[]\n    seedData: SeedDataScript[]\n  }\n}"
            ],
            [
              "",
              "/infrastructure/templates/\n├── docker-compose.base.yml      # 基本構成\n├── docker-compose.monitoring.yml # 監視機能\n├── docker-compose.cache.yml     # キャッシュ層\n└── docker-compose.security.yml  # セキュリティ機能"
            ],
            [
              "",
              "/.github/workflows/\n├── base-ci.yml          # 基本CI\n├── security-scan.yml    # セキュリティスキャン\n├── performance-test.yml # パフォーマンステスト\n└── deploy-staging.yml   # ステージングデプロイ"
            ],
            [
              "typescript",
              "interface MonitoringFeatures {\n  metrics: {\n    prometheus: PrometheusConfig\n    grafana: GrafanaDashboards\n    alerts: AlertRules\n  }\n\n  logging: {\n    winston: LoggerConfig\n    elasticsearch: LogAggregation\n    kibana: LogVisualization\n  }\n\n  tracing: {\n    jaeger: TracingConfig\n    opentelemetry: TracingSDK\n  }\n}"
            ],
            [
              "bash",
              "# CRUD生成\nwebsys-cli generate crud User --table=users\n\n# API生成\nwebsys-cli generate api UserManagement\n\n# フロントエンド画面生成\nwebsys-cli generate page UserList --crud\n\n# 共通コンポーネント生成\nwebsys-cli generate component CustomButton --shared"
            ],
            [
              "typescript",
              "interface TestingUtilities {\n  fixtures: {\n    userFixtures: TestUserData\n    roleFixtures: TestRoleData\n    apiFixtures: TestAPIResponses\n  }\n\n  helpers: {\n    authHelper: AuthTestHelper\n    dbHelper: DatabaseTestHelper\n    apiHelper: APITestHelper\n  }\n\n  mocks: {\n    authMock: AuthServiceMock\n    notificationMock: NotificationServiceMock\n  }\n}"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-components\": \"^1.0.0\",\n    \"@company/shared-auth\": \"^1.0.0\",\n    \"@company/shared-user\": \"^1.0.0\"\n  }\n}"
            ],
            [
              "typescript",
              "// 認証サービスとの連携\nconst authService = new AuthService({\n  endpoint: process.env.AUTH_SERVICE_URL,\n  apiKey: process.env.AUTH_API_KEY\n})"
            ],
            [
              "typescript",
              "// 共通スキーマの利用\nimport { users, roles, permissions } from '@company/shared-schema'"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.31,
        "sentences": 96,
        "avg_words_per_sentence": 10.98,
        "long_sentences": 15,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.89
    },
    "docs/37-レスポンシブデザイン改善提案書.md": {
      "basic_metrics": {
        "lines": 417,
        "words": 902,
        "characters": 6840,
        "avg_line_length": 16.402877697841728
      },
      "structure_analysis": {
        "headers": {
          "total": 44,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブデザイン改善提案書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. 現状分析",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "1.1 問題の重大性",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "1.2 主要な問題点",
              "line_number": 19
            },
            {
              "level": 4,
              "text": "テーブル表示問題",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "ダイアログ問題",
              "line_number": 28
            },
            {
              "level": 4,
              "text": "グリッドシステム問題",
              "line_number": 32
            },
            {
              "level": 2,
              "text": "2. 対策案",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "2.1 共通コンポーザブル関数の作成",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "2.2 テーブルコンポーネントの改善",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "2.3 各画面の修正例",
              "line_number": 133
            },
            {
              "level": 4,
              "text": "Users.vue の改善",
              "line_number": 135
            },
            {
              "level": 2,
              "text": "3. レスポンシブデザインガイドライン",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "3.1 ブレークポイント定義",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "3.2 設計原則",
              "line_number": 227
            },
            {
              "level": 4,
              "text": "モバイルファースト",
              "line_number": 229
            },
            {
              "level": 4,
              "text": "コンテンツ優先度",
              "line_number": 234
            },
            {
              "level": 4,
              "text": "タッチフレンドリー",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "3.3 コンポーネント別ガイドライン",
              "line_number": 244
            },
            {
              "level": 4,
              "text": "テーブル",
              "line_number": 246
            },
            {
              "level": 4,
              "text": "ダイアログ",
              "line_number": 263
            },
            {
              "level": 4,
              "text": "グリッドシステム",
              "line_number": 274
            },
            {
              "level": 4,
              "text": "フォーム",
              "line_number": 283
            },
            {
              "level": 2,
              "text": "4. 実装計画",
              "line_number": 295
            },
            {
              "level": 3,
              "text": "4.1 フェーズ1: 基盤整備（1週間）",
              "line_number": 297
            },
            {
              "level": 3,
              "text": "4.2 フェーズ2: 高優先画面対応（2週間）",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "4.3 フェーズ3: 中優先画面対応（2週間）",
              "line_number": 309
            },
            {
              "level": 3,
              "text": "4.4 フェーズ4: 低優先画面対応（1週間）",
              "line_number": 315
            },
            {
              "level": 3,
              "text": "4.5 フェーズ5: 品質保証（1週間）",
              "line_number": 320
            },
            {
              "level": 2,
              "text": "5. テスト計画",
              "line_number": 328
            },
            {
              "level": 3,
              "text": "5.1 デバイステスト",
              "line_number": 330
            },
            {
              "level": 3,
              "text": "5.2 ブラウザテスト",
              "line_number": 339
            },
            {
              "level": 3,
              "text": "5.3 テストシナリオ",
              "line_number": 345
            },
            {
              "level": 2,
              "text": "6. 期待効果",
              "line_number": 363
            },
            {
              "level": 3,
              "text": "6.1 定量的効果",
              "line_number": 365
            },
            {
              "level": 3,
              "text": "6.2 定性的効果",
              "line_number": 370
            },
            {
              "level": 2,
              "text": "7. リスクと対策",
              "line_number": 377
            },
            {
              "level": 3,
              "text": "7.1 技術的リスク",
              "line_number": 379
            },
            {
              "level": 3,
              "text": "7.2 運用リスク",
              "line_number": 386
            },
            {
              "level": 2,
              "text": "8. 成功指標",
              "line_number": 392
            },
            {
              "level": 3,
              "text": "8.1 技術指標",
              "line_number": 394
            },
            {
              "level": 3,
              "text": "8.2 ビジネス指標",
              "line_number": 399
            },
            {
              "level": 2,
              "text": "9. まとめ",
              "line_number": 406
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 8,
          "inline_code": 16,
          "languages": {
            "typescript": 1,
            "vue": 6,
            "scss": 1
          },
          "details": [
            [
              "typescript",
              "// composables/useResponsive.ts\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\n\nexport const useResponsive = () => {\n  const windowWidth = ref(window.innerWidth)\n\n  const updateWidth = () => {\n    windowWidth.value = window.innerWidth\n  }\n\n  onMounted(() => {\n    window.addEventListener('resize', updateWidth)\n  })\n\n  onUnmounted(() => {\n    window.removeEventListener('resize', updateWidth)\n  })\n\n  const isMobile = computed(() => windowWidth.value <= 768)\n  const isTablet = computed(() => windowWidth.value <= 1024)\n  const isDesktop = computed(() => windowWidth.value > 1024)\n\n  const getDialogWidth = (desktopWidth: string) => {\n    if (isMobile.value) return '95%'\n    if (isTablet.value) return '80%'\n    return desktopWidth\n  }\n\n  const getTableFixed = (position: string) => {\n    return isMobile.value ? false : position\n  }\n\n  return {\n    windowWidth,\n    isMobile,\n    isTablet,\n    isDesktop,\n    getDialogWidth,\n    getTableFixed\n  }\n}"
            ],
            [
              "vue",
              "<!-- components/ResponsiveTable.vue -->\n<template>\n  <div class=\"responsive-table-container\">\n    <el-table\n      :data=\"data\"\n      :style=\"{ minWidth: minWidth }\"\n      v-bind=\"$attrs\"\n    >\n      <slot></slot>\n    </el-table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\ndefineProps<{\n  data: any[]\n  minWidth?: string\n}>()\n</script>\n\n<style scoped>\n.responsive-table-container {\n  width: 100%;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 768px) {\n  .responsive-table-container {\n    margin: 0 -16px;\n    padding: 0 16px;\n  }\n\n  :deep(.el-table) {\n    font-size: 12px;\n  }\n\n  :deep(.el-table__cell) {\n    padding: 8px 4px;\n  }\n}\n</style>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"users-page\">\n    <!-- ダイアログのレスポンシブ対応 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogTitle\"\n      :width=\"getDialogWidth('500px')\"\n    >\n      <!-- フォーム内容 -->\n    </el-dialog>\n\n    <!-- テーブルのレスポンシブ対応 -->\n    <div class=\"table-container\">\n      <el-table :data=\"tableData\" style=\"min-width: 800px\">\n        <!-- 固定幅から最小幅へ変更 -->\n        <el-table-column prop=\"username\" label=\"ユーザー名\" min-width=\"150\" />\n        <el-table-column prop=\"name\" label=\"氏名\" min-width=\"150\" />\n\n        <!-- モバイルでは非表示にする列 -->\n        <el-table-column\n          v-if=\"!isMobile\"\n          prop=\"employeeCode\"\n          label=\"社員番号\"\n          min-width=\"120\"\n        />\n\n        <!-- 操作列の条件付きfixed -->\n        <el-table-column\n          label=\"操作\"\n          width=\"150\"\n          :fixed=\"getTableFixed('right')\"\n        >\n          <!-- 操作ボタン -->\n        </el-table-column>\n      </el-table>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useResponsive } from '@/composables/useResponsive'\n\nconst { isMobile, getDialogWidth, getTableFixed } = useResponsive()\n</script>\n\n<style scoped>\n.table-container {\n  width: 100%;\n  overflow-x: auto;\n}\n\n@media (max-width: 768px) {\n  .table-container {\n    margin: 0 -12px;\n  }\n}\n</style>"
            ],
            [
              "scss",
              "// styles/breakpoints.scss\n$mobile: 768px;\n$tablet: 1024px;\n$desktop: 1280px;\n$wide: 1920px;\n\n@mixin mobile {\n  @media (max-width: $mobile) {\n    @content;\n  }\n}\n\n@mixin tablet {\n  @media (min-width: #{$mobile + 1px}) and (max-width: $tablet) {\n    @content;\n  }\n}\n\n@mixin desktop {\n  @media (min-width: #{$tablet + 1px}) {\n    @content;\n  }\n}"
            ],
            [
              "vue",
              "<!-- 必須実装 -->\n1. overflow-x: auto でスクロール可能に\n2. min-widthで最小幅確保\n3. 操作列は条件付きfixed\n4. モバイルでは一部列を非表示\n\n<!-- 推奨実装 -->\n<el-table-column\n  prop=\"name\"\n  label=\"名前\"\n  :min-width=\"isMobile ? 100 : 150\"\n  :show-overflow-tooltip=\"true\"\n/>"
            ],
            [
              "vue",
              "<!-- 必須実装 -->\n<el-dialog :width=\"getDialogWidth('600px')\">\n\n<!-- 幅の基準 -->\n- モバイル: 95%\n- タブレット: 80%\n- デスクトップ: 指定幅"
            ],
            [
              "vue",
              "<!-- 必須実装 -->\n<el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" :xl=\"4\">\n\n<!-- 使用禁止 -->\n<el-col :span=\"8\"> <!-- ブレークポイント未設定 -->"
            ],
            [
              "vue",
              "<!-- モバイル対応 -->\n<el-form :label-position=\"isMobile ? 'top' : 'right'\">\n  <el-form-item>\n    <el-input :size=\"isMobile ? 'default' : 'large'\" />\n  </el-form-item>\n</el-form>"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 17
        }
      },
      "readability": {
        "score": 97.48,
        "sentences": 107,
        "avg_words_per_sentence": 8.43,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 63.04,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.96
    },
    "docs/61-ドキュメント更新多角的レビュー結果.md": {
      "basic_metrics": {
        "lines": 242,
        "words": 460,
        "characters": 3340,
        "avg_line_length": 13.801652892561984
      },
      "structure_analysis": {
        "headers": {
          "total": 51,
          "hierarchy": [
            {
              "level": 1,
              "text": "ドキュメント更新結果 - 多角的レビュー報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 レビュー概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "👨‍💻 技術担当者観点レビュー",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "✅ 優秀な点",
              "line_number": 14
            },
            {
              "level": 4,
              "text": "1. アーキテクチャ設計の明確性",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "2. 実装完了との対比",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "3. 技術的詳細度",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "⚠️ 改善提案",
              "line_number": 34
            },
            {
              "level": 4,
              "text": "1. 実装リスク分析不足",
              "line_number": 36
            },
            {
              "level": 4,
              "text": "2. 性能測定基準",
              "line_number": 41
            },
            {
              "level": 3,
              "text": "🎯 技術評価: **8.5/10**",
              "line_number": 46
            },
            {
              "level": 2,
              "text": "📊 プロジェクトマネージャー観点レビュー",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "✅ 優秀な点",
              "line_number": 52
            },
            {
              "level": 4,
              "text": "1. 実装計画の具体性",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "2. 進捗可視化",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "3. ROI明確化",
              "line_number": 66
            },
            {
              "level": 3,
              "text": "⚠️ 改善提案",
              "line_number": 71
            },
            {
              "level": 4,
              "text": "1. リソース計画",
              "line_number": 73
            },
            {
              "level": 4,
              "text": "2. ステークホルダー管理",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "🎯 PM評価: **9.0/10**",
              "line_number": 83
            },
            {
              "level": 2,
              "text": "🔍 品質保証担当者観点レビュー",
              "line_number": 87
            },
            {
              "level": 3,
              "text": "✅ 優秀な点",
              "line_number": 89
            },
            {
              "level": 4,
              "text": "1. テスト容易性向上",
              "line_number": 91
            },
            {
              "level": 4,
              "text": "2. 品質指標設定",
              "line_number": 96
            },
            {
              "level": 4,
              "text": "3. 実装検証済み事例",
              "line_number": 103
            },
            {
              "level": 3,
              "text": "⚠️ 改善提案",
              "line_number": 107
            },
            {
              "level": 4,
              "text": "1. テスト戦略詳細化",
              "line_number": 109
            },
            {
              "level": 4,
              "text": "2. 品質基準明確化",
              "line_number": 114
            },
            {
              "level": 3,
              "text": "🎯 QA評価: **8.0/10**",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "⚙️ 運用担当者観点レビュー",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "✅ 優秀な点",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "1. 運用性向上",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "2. 監視・ログ設計",
              "line_number": 137
            },
            {
              "level": 4,
              "text": "3. 保守性",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "⚠️ 改善提案",
              "line_number": 148
            },
            {
              "level": 4,
              "text": "1. 運用手順書",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "2. モニタリング強化",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "🎯 運用評価: **8.5/10**",
              "line_number": 160
            },
            {
              "level": 2,
              "text": "📈 統合評価・総合所見",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "🏆 総合評価: **8.5/10** (優秀)",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "主要成果",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "重要な改善事項",
              "line_number": 174
            },
            {
              "level": 4,
              "text": "1. 実装リスク管理強化 🔴",
              "line_number": 176
            },
            {
              "level": 4,
              "text": "2. 性能テスト計画詳細化 🟡",
              "line_number": 183
            },
            {
              "level": 4,
              "text": "3. 運用手順書整備 🟡",
              "line_number": 190
            },
            {
              "level": 2,
              "text": "🎯 各担当者推奨アクション",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "技術担当者",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "プロジェクトマネージャー",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "品質保証担当者",
              "line_number": 211
            },
            {
              "level": 3,
              "text": "運用担当者",
              "line_number": 216
            },
            {
              "level": 2,
              "text": "📋 結論",
              "line_number": 223
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 8,
          "inline_code": 15,
          "languages": {
            "json": 1
          },
          "details": [
            [
              "",
              "routes/workflow/\n├── index.ts (80行) → 各ファイル100-350行\n├── 9個の独立ファイル → 機能別責任分離\n└── レイジーローディング → パフォーマンス最適化"
            ],
            [
              "",
              "✅ LogMonitoring.vue分割 (完了)\n🔄 workflow.ts分割 (設計済み)\n⬜ PermissionMatrix.vue分割 (次期)"
            ],
            [
              "",
              "- API応答時間: 40%高速化\n- メモリ使用量: 60%削減\n- 初回読み込み: 95%削減"
            ],
            [
              "json",
              "{\n  \"response_time\": \"< 100ms\",\n  \"memory_usage\": \"< 150MB\",\n  \"error_rate\": \"< 0.1%\",\n  \"uptime\": \"> 99.9%\"\n}"
            ],
            [
              "",
              "Before: 1ファイル1,616行 → 全体修正リスク\nAfter:  9ファイル各200-350行 → 局所修正"
            ],
            [
              "",
              "優先度: 高\n対応: データ整合性・API互換性検証計画策定\n期限: 実装開始前"
            ],
            [
              "",
              "優先度: 中\n対応: Core Web Vitals基準テスト設計\n期限: Phase 1完了時"
            ],
            [
              "",
              "優先度: 中\n対応: デプロイ・障害対応手順策定\n期限: Phase 4完了時"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 99.4,
        "sentences": 50,
        "avg_words_per_sentence": 9.2,
        "long_sentences": 1,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 49.2,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.0
    },
    "docs/30-修正チェックリスト.md": {
      "basic_metrics": {
        "lines": 161,
        "words": 393,
        "characters": 2683,
        "avg_line_length": 16.664596273291924
      },
      "structure_analysis": {
        "headers": {
          "total": 28,
          "hierarchy": [
            {
              "level": 1,
              "text": "修正・水平展開チェックリスト",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "修正プロセス (必須手順)",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "Phase 1: 不具合発見・記録",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "Phase 2: 原因調査・修正",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "Phase 3: 水平展開チェック（必須）",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "Phase 4: 最終確認・記録更新",
              "line_number": 24
            },
            {
              "level": 2,
              "text": "水平展開チェックマトリックス",
              "line_number": 32
            },
            {
              "level": 3,
              "text": "A. Prismaモデル名関連チェック",
              "line_number": 34
            },
            {
              "level": 1,
              "text": "モデル名のタイポチェック",
              "line_number": 49
            },
            {
              "level": 1,
              "text": "リレーション名の一貫性チェック",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "B. 認証・セッション関連チェック",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "C. API エンドポイント関連チェック",
              "line_number": 69
            },
            {
              "level": 2,
              "text": "品質チェック自動化コマンド",
              "line_number": 83
            },
            {
              "level": 3,
              "text": "1. Prismaモデル名チェック",
              "line_number": 85
            },
            {
              "level": 1,
              "text": "全ファイルでのPrismaモデル参照をチェック",
              "line_number": 87
            },
            {
              "level": 3,
              "text": "2. TypeScriptコンパイルチェック",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "3. ESLintチェック",
              "line_number": 96
            },
            {
              "level": 3,
              "text": "4. API疎通テスト",
              "line_number": 101
            },
            {
              "level": 1,
              "text": "主要エンドポイントの疎通確認",
              "line_number": 103
            },
            {
              "level": 2,
              "text": "プロジェクト固有のチェック項目",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "1. Prisma関連",
              "line_number": 113
            },
            {
              "level": 3,
              "text": "2. 認証システム",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "3. API設計",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "4. データベース",
              "line_number": 128
            },
            {
              "level": 2,
              "text": "緊急時対応手順",
              "line_number": 135
            },
            {
              "level": 3,
              "text": "1. 本番環境で問題発生時",
              "line_number": 137
            },
            {
              "level": 3,
              "text": "2. データベース関連問題",
              "line_number": 143
            },
            {
              "level": 2,
              "text": "月次レビュー項目",
              "line_number": 151
            }
          ],
          "hierarchy_issues": [
            {
              "line": 56,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 91,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 19,
          "languages": {
            "bash": 5
          },
          "details": [
            [
              "bash",
              "# モデル名のタイポチェック\ngrep -rn \"prisma\\.[a-zA-Z_]*[sS]\\.find\\|prisma\\.[a-zA-Z_]*[sS]\\.count\" --include=\"*.ts\" src/\n\n# リレーション名の一貫性チェック\ngrep -rn \"\\.(company|department|primaryDepartment):\" --include=\"*.ts\" src/"
            ],
            [
              "bash",
              "# 全ファイルでのPrismaモデル参照をチェック\nfind src -name \"*.ts\" -exec grep -l \"prisma\\.\" {} \\; | xargs -I {} sh -c 'echo \"=== {} ===\"; grep -n \"prisma\\.\" \"{}\"'"
            ],
            [
              "bash",
              "npx tsc --noEmit"
            ],
            [
              "bash",
              "npm run lint"
            ],
            [
              "bash",
              "# 主要エンドポイントの疎通確認\ncurl -X POST http://localhost:8000/api/auth/login -H \"Content-Type: application/json\" -d '{\"username\": \"admin\", \"password\": \"password123\"}'\ncurl -H \"Authorization: Bearer {TOKEN}\" http://localhost:8000/api/users\ncurl -H \"Authorization: Bearer {TOKEN}\" http://localhost:8000/api/companies"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.14,
        "sentences": 42,
        "avg_words_per_sentence": 9.36,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 41.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 68.39
    },
    "docs/17-即座実行アクションプラン.md": {
      "basic_metrics": {
        "lines": 223,
        "words": 538,
        "characters": 5195,
        "avg_line_length": 23.295964125560538
      },
      "structure_analysis": {
        "headers": {
          "total": 31,
          "hierarchy": [
            {
              "level": 1,
              "text": "即座実行アクションプラン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "🚨 Priority 1: 今すぐ実行（30分以内）",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1. 未コミットファイルの整理とコミット",
              "line_number": 5
            },
            {
              "level": 4,
              "text": "📁 対象ファイル選別",
              "line_number": 7
            },
            {
              "level": 1,
              "text": "権限管理システム核心ファイル",
              "line_number": 9
            },
            {
              "level": 1,
              "text": "機能管理システム",
              "line_number": 13
            },
            {
              "level": 1,
              "text": "組織管理システム",
              "line_number": 17
            },
            {
              "level": 4,
              "text": "🔧 実行コマンド",
              "line_number": 24
            },
            {
              "level": 1,
              "text": "フェーズ1: 権限管理システム",
              "line_number": 28
            },
            {
              "level": 1,
              "text": "フェーズ2: 機能・組織管理システム",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "2. BUG #003修正 - IPv6 Rate Limiting",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "📍 修正箇所",
              "line_number": 56
            },
            {
              "level": 4,
              "text": "🔧 修正内容",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "🧪 テスト確認",
              "line_number": 82
            },
            {
              "level": 1,
              "text": "修正後、IPv6警告が消えることを確認",
              "line_number": 84
            },
            {
              "level": 1,
              "text": "警告が出力されないことを確認",
              "line_number": 86
            },
            {
              "level": 2,
              "text": "⚡ Priority 2: 今日中に実行（2-3時間）",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "3. ログ監視システム基本実装",
              "line_number": 91
            },
            {
              "level": 4,
              "text": "📝 実装ファイル構成",
              "line_number": 93
            },
            {
              "level": 4,
              "text": "🎯 実装優先順位",
              "line_number": 105
            },
            {
              "level": 4,
              "text": "📊 LogDashboard.vue 基本構造",
              "line_number": 111
            },
            {
              "level": 2,
              "text": "📋 今日の完了チェックリスト",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "✅ 完了確認項目",
              "line_number": 167
            },
            {
              "level": 3,
              "text": "🧪 動作確認テスト",
              "line_number": 188
            },
            {
              "level": 1,
              "text": "1. 権限管理システム",
              "line_number": 190
            },
            {
              "level": 1,
              "text": "2. 統計API",
              "line_number": 194
            },
            {
              "level": 1,
              "text": "3. フロントエンドアクセス",
              "line_number": 198
            },
            {
              "level": 1,
              "text": "4. ログAPI",
              "line_number": 201
            },
            {
              "level": 2,
              "text": "🎯 期待する成果",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "完了後の状況",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "次期対応準備",
              "line_number": 214
            }
          ],
          "hierarchy_issues": [
            {
              "line": 24,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 54,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 2,
          "internal": 0,
          "external": 2,
          "empty": 0,
          "internal_details": [],
          "external_details": [
            [
              "Claude Code",
              "https://claude.ai/code"
            ],
            [
              "Claude Code",
              "https://claude.ai/code"
            ]
          ]
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 7,
          "inline_code": 14,
          "languages": {
            "bash": 4,
            "typescript": 1,
            "vue": 1
          },
          "details": [
            [
              "bash",
              "# 権限管理システム核心ファイル\nbackend/src/routes/permissions.ts    # 権限API完全実装\nfrontend/src/views/PermissionMatrix.vue  # 権限マトリクス表示\n\n# 機能管理システム\nbackend/src/routes/features.ts       # 機能管理API\nfrontend/src/views/FeatureManagement.vue # 機能管理画面\n\n# 組織管理システム\nbackend/src/routes/companies.ts      # 会社管理API\nbackend/src/routes/departments.ts    # 部署管理API\nfrontend/src/views/Companies.vue     # 会社管理画面\nfrontend/src/views/Departments.vue   # 部署管理画面"
            ],
            [
              "bash",
              "cd /home/typho/src/elementplus/websys/workspace\n\n# フェーズ1: 権限管理システム\ngit add backend/src/routes/permissions.ts frontend/src/views/PermissionMatrix.vue\ngit commit -m \"feat: 権限マトリクス表示とテンプレート管理機能完成\n\n- 権限マトリクス動的表示実装\n- 権限テンプレートCRUD完全実装\n- 部署×機能権限可視化\n- リアルタイム権限更新機能\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\nCo-Authored-By: Claude <noreply@anthropic.com>\"\n\n# フェーズ2: 機能・組織管理システム\ngit add backend/src/routes/features.ts backend/src/routes/companies.ts backend/src/routes/departments.ts\ngit add frontend/src/views/FeatureManagement.vue frontend/src/views/Companies.vue frontend/src/views/Departments.vue\ngit commit -m \"feat: 機能管理・組織管理システム完成\n\n- 機能マスタ管理CRUD実装\n- 会社・部署管理システム\n- 階層構造対応部署管理\n- 機能カテゴリ管理\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\nCo-Authored-By: Claude <noreply@anthropic.com>\""
            ],
            [
              "typescript",
              "// 修正前\nimport rateLimit from 'express-rate-limit';\n\nconst loginRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000,\n  max: 5,\n  keyGenerator: (req) => req.ip,  // ← 問題箇所\n  message: { /* ... */ }\n});\n\n// 修正後\nimport rateLimit, { ipKeyGenerator } from 'express-rate-limit';\n\nconst loginRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000,\n  max: 5,\n  keyGenerator: ipKeyGenerator,  // ← 修正\n  message: { /* ... */ }\n});"
            ],
            [
              "bash",
              "# 修正後、IPv6警告が消えることを確認\ndocker compose logs backend | grep -i \"ipv6\"\n# 警告が出力されないことを確認"
            ],
            [
              "",
              "backend/src/routes/logs.ts           # 既存拡張\n  ├── GET /api/logs/search           # ログ検索API拡張\n  ├── GET /api/logs/statistics       # 統計API拡張\n  └── GET /api/logs/realtime         # リアルタイム監視\n\nfrontend/src/views/LogDashboard.vue  # 新規作成\nfrontend/src/views/LogSearch.vue     # 新規作成\nfrontend/src/components/LogChart.vue # 新規作成"
            ],
            [
              "vue",
              "<template>\n  <div class=\"log-dashboard\">\n    <!-- 統計カード -->\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card>\n          <el-statistic title=\"今日のログ\" :value=\"stats.todayCount\" />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card>\n          <el-statistic title=\"エラー数\" :value=\"stats.errorCount\" />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card>\n          <el-statistic title=\"警告数\" :value=\"stats.warnCount\" />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card>\n          <el-statistic title=\"エラー率\" :value=\"stats.errorRate\" suffix=\"%\" />\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- ログレベル別チャート -->\n    <el-card class=\"chart-card\">\n      <template #header>ログレベル別統計</template>\n      <LogChart :data=\"chartData\" />\n    </el-card>\n\n    <!-- リアルタイムログ -->\n    <el-card class=\"log-table-card\">\n      <template #header>リアルタイムログ</template>\n      <el-table :data=\"realtimeLogs\" v-loading=\"loading\">\n        <el-table-column prop=\"timestamp\" label=\"時刻\" width=\"180\" />\n        <el-table-column prop=\"level\" label=\"レベル\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getLogLevelType(scope.row.level)\">\n              {{ scope.row.level }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"message\" label=\"メッセージ\" />\n        <el-table-column prop=\"source\" label=\"ソース\" width=\"120\" />\n      </el-table>\n    </el-card>\n  </div>\n</template>"
            ],
            [
              "bash",
              "# 1. 権限管理システム\ncurl -X GET \"http://localhost:8000/api/permissions/matrix?companyId=1\" \\\n  -H \"Authorization: Bearer $TOKEN\"\n\n# 2. 統計API\ncurl -X GET \"http://localhost:8000/api/statistics/dashboard\" \\\n  -H \"Authorization: Bearer $TOKEN\"\n\n# 3. フロントエンドアクセス\ncurl -s http://localhost:3000 | head -1\n\n# 4. ログAPI\ncurl -X GET \"http://localhost:8000/api/logs/search?level=ERROR\" \\\n  -H \"Authorization: Bearer $TOKEN\""
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.1,
        "sentences": 62,
        "avg_words_per_sentence": 8.68,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 48.76,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.13
    },
    "docs/59-LogMonitoring分割実装完了レポート.md": {
      "basic_metrics": {
        "lines": 214,
        "words": 559,
        "characters": 4565,
        "avg_line_length": 21.33177570093458
      },
      "structure_analysis": {
        "headers": {
          "total": 33,
          "hierarchy": [
            {
              "level": 1,
              "text": "LogMonitoring.vue マイクロフロントエンド分割実装完了レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📊 実装概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 分割結果",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "ファイルサイズの変化",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "作成されたコンポーネント",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "8つのメインコンポーネント",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "6つのサブコンポーネント",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "共通コンポーネント",
              "line_number": 41
            },
            {
              "level": 2,
              "text": "🚀 パフォーマンス改善効果",
              "line_number": 46
            },
            {
              "level": 3,
              "text": "測定可能な改善",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "開発効率の改善",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "🏗️ 実装されたアーキテクチャ",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "マイクロフロントエンド構造",
              "line_number": 64
            },
            {
              "level": 3,
              "text": "コンポーネント設計原則",
              "line_number": 83
            },
            {
              "level": 2,
              "text": "🔧 技術実装詳細",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "遅延読み込み実装例",
              "line_number": 93
            },
            {
              "level": 3,
              "text": "イベント駆動アーキテクチャ",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "性能最適化技術",
              "line_number": 118
            },
            {
              "level": 2,
              "text": "📈 品質指標達成状況",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "設計目標との比較",
              "line_number": 127
            },
            {
              "level": 3,
              "text": "テスト状況",
              "line_number": 136
            },
            {
              "level": 2,
              "text": "🎉 実装完了項目",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "✅ 完了した作業",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "🔄 実装された機能の維持",
              "line_number": 153
            },
            {
              "level": 2,
              "text": "🚀 期待される運用効果",
              "line_number": 163
            },
            {
              "level": 3,
              "text": "ユーザー体験の向上",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "開発・保守性の向上",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "システム拡張性",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "📋 今後の発展計画",
              "line_number": 183
            },
            {
              "level": 3,
              "text": "Phase 2: さらなる最適化",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "Phase 3: 他コンポーネントへの適用",
              "line_number": 190
            },
            {
              "level": 2,
              "text": "🎯 結論",
              "line_number": 197
            },
            {
              "level": 3,
              "text": "主要成果",
              "line_number": 201
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 3,
          "inline_code": 5,
          "languages": {
            "typescript": 2
          },
          "details": [
            [
              "",
              "LogMonitoring.vue (メインコンテナ: 227行)\n├── LogMonitoringHeader (80行)\n│   └── WebSocketStatus (35行)\n├── LogStatsDashboard (120行)\n│   └── StatCard (40行)\n├── LogRealtimePanel (150行)\n│   └── LogItem (45行)\n├── LogSearchPanel (200行)\n│   ├── AdvancedSearchOptions (50行)\n│   └── SearchResults (105行)\n├── LogDetailDialog (100行)\n├── LogAlertPanel (120行)\n├── LogExportDialog (80行)\n└── LogSidebar (100行)\n    └── LogTestForm (65行)"
            ],
            [
              "typescript",
              "// メインコンポーネントでの静的インポート（初回ロード）\nimport LogMonitoringHeader from '@/components/log-monitoring/LogMonitoringHeader.vue'\n\n// 必要に応じた動的インポート（遅延ロード）\nconst LogExportDialog = defineAsyncComponent(() =>\n  import('@/components/log-monitoring/LogExportDialog.vue')\n)"
            ],
            [
              "typescript",
              "// 親コンポーネント（LogMonitoring.vue）\nconst showLogDetail = (log: LogEntry) => {\n  selectedLog.value = log\n  logDetailVisible.value = true\n}\n\n// 子コンポーネント（LogSearchPanel.vue）\ndefineEmits<{\n  'show-detail': [log: LogEntry]\n}>()"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 11
        }
      },
      "readability": {
        "score": 97.39,
        "sentences": 69,
        "avg_words_per_sentence": 8.1,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 49.18,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.39
    },
    "docs/32-API設計書テンプレート.md": {
      "basic_metrics": {
        "lines": 580,
        "words": 1221,
        "characters": 10209,
        "avg_line_length": 17.601724137931033
      },
      "structure_analysis": {
        "headers": {
          "total": 50,
          "hierarchy": [
            {
              "level": 1,
              "text": "API設計書テンプレート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "API設計原則",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "1. RESTful設計",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "2. レスポンシブ対応",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "3. セキュリティファースト",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "4. 性能重視",
              "line_number": 28
            },
            {
              "level": 1,
              "text": "[機能名] API設計書",
              "line_number": 36
            },
            {
              "level": 2,
              "text": "基本情報",
              "line_number": 38
            },
            {
              "level": 2,
              "text": "認証・認可",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "JWT Token仕様",
              "line_number": 51
            },
            {
              "level": 3,
              "text": "認証ヘッダー",
              "line_number": 65
            },
            {
              "level": 2,
              "text": "共通レスポンス形式",
              "line_number": 70
            },
            {
              "level": 3,
              "text": "成功レスポンス",
              "line_number": 72
            },
            {
              "level": 3,
              "text": "エラーレスポンス",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "ページネーション",
              "line_number": 102
            },
            {
              "level": 2,
              "text": "API エンドポイント一覧",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "[リソース名] APIs",
              "line_number": 121
            },
            {
              "level": 4,
              "text": "1. [リソース]一覧取得",
              "line_number": 123
            },
            {
              "level": 4,
              "text": "2. [リソース]詳細取得",
              "line_number": 163
            },
            {
              "level": 4,
              "text": "3. [リソース]作成",
              "line_number": 196
            },
            {
              "level": 4,
              "text": "4. [リソース]更新",
              "line_number": 228
            },
            {
              "level": 4,
              "text": "5. [リソース]削除",
              "line_number": 251
            },
            {
              "level": 2,
              "text": "モバイル最適化API",
              "line_number": 269
            },
            {
              "level": 3,
              "text": "軽量版一覧取得",
              "line_number": 271
            },
            {
              "level": 3,
              "text": "段階的詳細取得",
              "line_number": 307
            },
            {
              "level": 2,
              "text": "バリデーション",
              "line_number": 316
            },
            {
              "level": 3,
              "text": "共通バリデーションルール",
              "line_number": 318
            },
            {
              "level": 3,
              "text": "バリデーションエラーレスポンス",
              "line_number": 355
            },
            {
              "level": 2,
              "text": "エラーコード一覧",
              "line_number": 378
            },
            {
              "level": 3,
              "text": "システムエラー",
              "line_number": 380
            },
            {
              "level": 3,
              "text": "認証・認可エラー",
              "line_number": 387
            },
            {
              "level": 3,
              "text": "リクエストエラー",
              "line_number": 395
            },
            {
              "level": 3,
              "text": "業務エラー",
              "line_number": 404
            },
            {
              "level": 2,
              "text": "レート制限",
              "line_number": 411
            },
            {
              "level": 3,
              "text": "制限内容",
              "line_number": 413
            },
            {
              "level": 3,
              "text": "レート制限ヘッダー",
              "line_number": 420
            },
            {
              "level": 2,
              "text": "キャッシュ戦略",
              "line_number": 428
            },
            {
              "level": 3,
              "text": "キャッシュ対象",
              "line_number": 430
            },
            {
              "level": 3,
              "text": "キャッシュヘッダー",
              "line_number": 435
            },
            {
              "level": 2,
              "text": "OpenAPI仕様書",
              "line_number": 442
            },
            {
              "level": 3,
              "text": "Swagger定義例",
              "line_number": 444
            },
            {
              "level": 2,
              "text": "テスト仕様",
              "line_number": 527
            },
            {
              "level": 3,
              "text": "単体テスト",
              "line_number": 529
            },
            {
              "level": 3,
              "text": "統合テスト",
              "line_number": 535
            },
            {
              "level": 3,
              "text": "パフォーマンステスト",
              "line_number": 540
            },
            {
              "level": 2,
              "text": "監視・ログ",
              "line_number": 545
            },
            {
              "level": 3,
              "text": "メトリクス",
              "line_number": 547
            },
            {
              "level": 3,
              "text": "ログ出力",
              "line_number": 553
            },
            {
              "level": 2,
              "text": "変更履歴",
              "line_number": 568
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 25,
          "inline_code": 50,
          "languages": {
            "typescript": 7,
            "http": 10,
            "json": 7,
            "yaml": 1
          },
          "details": [
            [
              "typescript",
              "interface JWTPayload {\n  sub: string              // ユーザーID\n  iss: string              // 発行者\n  aud: string              // 対象者\n  exp: number              // 有効期限\n  iat: number              // 発行時刻\n  roles: string[]          // ユーザーロール\n  permissions: string[]    // 権限一覧\n  organizationId: string   // 組織ID\n}"
            ],
            [
              "http",
              "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            ],
            [
              "typescript",
              "interface SuccessResponse<T> {\n  success: true\n  data: T\n  message?: string\n  meta?: {\n    pagination?: PaginationMeta\n    filters?: FilterMeta\n    sort?: SortMeta\n  }\n}"
            ],
            [
              "typescript",
              "interface ErrorResponse {\n  success: false\n  error: {\n    code: string              // エラーコード\n    message: string           // エラーメッセージ\n    details?: any             // 詳細情報\n    field?: string            // エラー対象フィールド\n  }\n  timestamp: string           // エラー発生時刻\n  path: string               // リクエストパス\n  method: string             // HTTPメソッド\n}"
            ],
            [
              "typescript",
              "interface PaginationMeta {\n  page: number               // 現在のページ番号（1から開始）\n  limit: number              // 1ページあたりの件数\n  total: number              // 総件数\n  totalPages: number         // 総ページ数\n  hasNext: boolean           // 次ページの存在\n  hasPrev: boolean           // 前ページの存在\n}\n\n// モバイル推奨設定\nconst MOBILE_DEFAULT_LIMIT = 10    // モバイル用デフォルト\nconst DESKTOP_DEFAULT_LIMIT = 20   // デスクトップ用デフォルト\nconst MAX_LIMIT = 100              // 最大件数制限"
            ],
            [
              "http",
              "GET /api/v1/[resources]"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n      \"name\": \"サンプルデータ\",\n      \"status\": \"active\",\n      \"createdAt\": \"2024-01-15T10:30:00Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"page\": 1,\n      \"limit\": 20,\n      \"total\": 150,\n      \"totalPages\": 8,\n      \"hasNext\": true,\n      \"hasPrev\": false\n    }\n  }\n}"
            ],
            [
              "http",
              "GET /api/v1/[resources]/{id}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"サンプルデータ\",\n    \"description\": \"詳細説明\",\n    \"status\": \"active\",\n    \"metadata\": {\n      \"category\": \"important\",\n      \"tags\": [\"tag1\", \"tag2\"]\n    },\n    \"createdAt\": \"2024-01-15T10:30:00Z\",\n    \"updatedAt\": \"2024-01-15T10:30:00Z\",\n    \"createdBy\": {\n      \"id\": \"user-123\",\n      \"name\": \"山田太郎\"\n    }\n  }\n}"
            ],
            [
              "http",
              "POST /api/v1/[resources]"
            ],
            [
              "typescript",
              "interface CreateResourceDto {\n  name: string                    // 必須: 名前\n  description?: string            // 任意: 説明\n  status?: 'active' | 'inactive' // 任意: ステータス（デフォルト: active）\n  metadata?: {                    // 任意: メタデータ\n    category?: string\n    tags?: string[]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"新規データ\",\n    \"status\": \"active\",\n    \"createdAt\": \"2024-01-15T10:30:00Z\"\n  },\n  \"message\": \"リソースが正常に作成されました\"\n}"
            ],
            [
              "http",
              "PUT /api/v1/[resources]/{id}"
            ],
            [
              "typescript",
              "interface UpdateResourceDto {\n  name?: string                   // 任意: 名前\n  description?: string            // 任意: 説明\n  status?: 'active' | 'inactive' // 任意: ステータス\n  metadata?: {                    // 任意: メタデータ\n    category?: string\n    tags?: string[]\n  }\n}"
            ],
            [
              "http",
              "DELETE /api/v1/[resources]/{id}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"message\": \"リソースが正常に削除されました\"\n}"
            ],
            [
              "http",
              "GET /api/v1/[resources]/mobile"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n      \"name\": \"サンプル\",\n      \"status\": \"active\",\n      \"thumbnail\": \"https://cdn.company.com/thumbs/sample_200x200.jpg\"\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"page\": 1,\n      \"limit\": 10,\n      \"total\": 150,\n      \"hasNext\": true\n    }\n  }\n}"
            ],
            [
              "http",
              "GET /api/v1/[resources]/{id}/summary\nGET /api/v1/[resources]/{id}/details\nGET /api/v1/[resources]/{id}/related"
            ],
            [
              "typescript",
              "interface ValidationRules {\n  // 文字列\n  name: {\n    required: true\n    minLength: 1\n    maxLength: 100\n    pattern: /^[a-zA-Z0-9\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF\\s-_]+$/\n  }\n\n  // メールアドレス\n  email: {\n    required: true\n    format: 'email'\n    maxLength: 255\n  }\n\n  // 日時\n  datetime: {\n    format: 'iso8601'  // YYYY-MM-DDTHH:mm:ssZ\n  }\n\n  // UUID\n  id: {\n    format: 'uuid'\n    version: 4\n  }\n\n  // ページネーション\n  pagination: {\n    page: { min: 1, max: 10000 }\n    limit: { min: 1, max: 100 }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"入力値に誤りがあります\",\n    \"details\": [\n      {\n        \"field\": \"name\",\n        \"message\": \"名前は必須です\",\n        \"code\": \"REQUIRED\"\n      },\n      {\n        \"field\": \"email\",\n        \"message\": \"正しいメールアドレス形式で入力してください\",\n        \"code\": \"INVALID_FORMAT\"\n      }\n    ]\n  }\n}"
            ],
            [
              "http",
              "X-RateLimit-Limit: 60\nX-RateLimit-Remaining: 59\nX-RateLimit-Reset: 1640995200\nX-RateLimit-RetryAfter: 60"
            ],
            [
              "http",
              "Cache-Control: public, max-age=3600\nETag: \"abc123\"\nLast-Modified: Tue, 15 Jan 2024 10:30:00 GMT"
            ],
            [
              "yaml",
              "openapi: 3.0.3\ninfo:\n  title: [機能名] API\n  description: [機能の説明]\n  version: 1.0.0\n  contact:\n    name: API Support\n    email: api-support@company.com\n\nservers:\n  - url: https://api.company.com/v1\n    description: 本番環境\n  - url: https://staging-api.company.com/v1\n    description: ステージング環境\n\nsecurity:\n  - bearerAuth: []\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  schemas:\n    Resource:\n      type: object\n      required:\n        - id\n        - name\n        - status\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: リソースID\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n          description: リソース名\n        status:\n          type: string\n          enum: [active, inactive]\n          description: ステータス\n\n    ErrorResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        error:\n          type: object\n          properties:\n            code:\n              type: string\n            message:\n              type: string\n\npaths:\n  /[resources]:\n    get:\n      summary: [リソース]一覧取得\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n            minimum: 1\n            default: 1\n      responses:\n        '200':\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceListResponse'"
            ],
            [
              "json",
              "{\n  \"timestamp\": \"2024-01-15T10:30:00Z\",\n  \"level\": \"info\",\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/resources\",\n  \"statusCode\": 200,\n  \"responseTime\": 150,\n  \"userId\": \"user-123\",\n  \"userAgent\": \"Mozilla/5.0...\",\n  \"ip\": \"192.168.1.100\"\n}"
            ]
          ]
        },
        "tables": {
          "total": 11,
          "total_rows": 55
        }
      },
      "readability": {
        "score": 80.32,
        "sentences": 57,
        "avg_words_per_sentence": 21.42,
        "long_sentences": 13,
        "readability_level": "読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.6
    },
    "docs/66-水平展開実装計画.md": {
      "basic_metrics": {
        "lines": 263,
        "words": 683,
        "characters": 5610,
        "avg_line_length": 21.330798479087452
      },
      "structure_analysis": {
        "headers": {
          "total": 45,
          "hierarchy": [
            {
              "level": 1,
              "text": "分割実装水平展開計画書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 水平展開概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 水平展開対象・優先順位",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "基準実装の成功要因",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "水平展開対象ファイル",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "🔴 CRITICAL優先度（即座実装）",
              "line_number": 23
            },
            {
              "level": 5,
              "text": "1. PermissionMatrix.vue ★★★",
              "line_number": 25
            },
            {
              "level": 5,
              "text": "2. permissions.ts ★★★",
              "line_number": 32
            },
            {
              "level": 4,
              "text": "🟡 HIGH優先度（次期実装）",
              "line_number": 39
            },
            {
              "level": 5,
              "text": "3. InheritanceVisualization.vue ★★",
              "line_number": 41
            },
            {
              "level": 5,
              "text": "4. validation.ts ★★",
              "line_number": 48
            },
            {
              "level": 5,
              "text": "5. messageDefinitions.ts ★★",
              "line_number": 55
            },
            {
              "level": 2,
              "text": "🛠️ 水平展開実装戦略",
              "line_number": 64
            },
            {
              "level": 3,
              "text": "Phase 1: PermissionMatrix.vue マイクロフロントエンド分割（2日間）",
              "line_number": 66
            },
            {
              "level": 4,
              "text": "分割設計",
              "line_number": 68
            },
            {
              "level": 4,
              "text": "実装手順",
              "line_number": 81
            },
            {
              "level": 4,
              "text": "期待効果",
              "line_number": 85
            },
            {
              "level": 3,
              "text": "Phase 2: permissions.ts マイクロサービス型API分割（3日間）",
              "line_number": 91
            },
            {
              "level": 4,
              "text": "分割設計",
              "line_number": 93
            },
            {
              "level": 4,
              "text": "実装手順",
              "line_number": 106
            },
            {
              "level": 4,
              "text": "期待効果",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "Phase 3: InheritanceVisualization.vue 可視化最適化（2日間）",
              "line_number": 117
            },
            {
              "level": 4,
              "text": "分割設計",
              "line_number": 119
            },
            {
              "level": 4,
              "text": "最適化手法",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "Phase 4-5: その他ファイル分割（各1日間）",
              "line_number": 136
            },
            {
              "level": 2,
              "text": "📊 水平展開全体効果予測",
              "line_number": 140
            },
            {
              "level": 3,
              "text": "削減効果サマリー",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "ファイル別削減効果",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "システム全体改善効果",
              "line_number": 170
            },
            {
              "level": 4,
              "text": "性能改善",
              "line_number": 172
            },
            {
              "level": 4,
              "text": "開発・運用改善",
              "line_number": 178
            },
            {
              "level": 4,
              "text": "技術的負債解消",
              "line_number": 184
            },
            {
              "level": 2,
              "text": "🚀 実装スケジュール",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "総実装期間: 9日間（1.5週間）",
              "line_number": 193
            },
            {
              "level": 4,
              "text": "Week 1 (Day 1-5)",
              "line_number": 195
            },
            {
              "level": 4,
              "text": "Week 2 (Day 6-9)",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "並行実装オプション",
              "line_number": 204
            },
            {
              "level": 2,
              "text": "📋 成功基準・KPI",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "技術KPI",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "ビジネスKPI",
              "line_number": 220
            },
            {
              "level": 2,
              "text": "🎯 リスク管理・対策",
              "line_number": 228
            },
            {
              "level": 3,
              "text": "主要リスク",
              "line_number": 230
            },
            {
              "level": 3,
              "text": "対策",
              "line_number": 235
            },
            {
              "level": 2,
              "text": "🏆 期待される最終効果",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "システム全体変革",
              "line_number": 245
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 5
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 9,
          "languages": {
            "json": 1
          },
          "details": [
            [
              "",
              "PermissionMatrix.vue (メインコンテナ: 150行)\n├── PermissionMatrixHeader (80行) - フィルター・検索・操作ボタン\n├── PermissionMatrixGrid (200行) - 権限マトリクス表示・編集\n├── PermissionRolePanel (120行) - 役職権限設定\n├── PermissionUserPanel (100行) - ユーザー権限設定\n├── PermissionTemplatePanel (150行) - 権限テンプレート管理\n├── PermissionInheritancePanel (100行) - 権限継承設定\n├── PermissionAuditPanel (120行) - 権限変更履歴\n└── PermissionExportDialog (80行) - 権限情報エクスポート"
            ],
            [
              "",
              "routes/permissions/\n├── index.ts                     # 統合ルーター (100行)\n├── permission-roles.ts          # 役職権限管理 (200行, 8EP)\n├── permission-users.ts          # ユーザー権限管理 (250行, 10EP)\n├── permission-templates.ts      # 権限テンプレート (300行, 12EP)\n├── permission-inheritance.ts    # 権限継承管理 (180行, 7EP)\n├── permission-matrix.ts         # 権限マトリクス (200行, 8EP)\n├── permission-audit.ts          # 権限監査ログ (150行, 6EP)\n└── permission-validation.ts     # 権限検証 (120行, 5EP)"
            ],
            [
              "",
              "InheritanceVisualization.vue (メインコンテナ: 200行)\n├── InheritanceDataProvider (100行) - データ取得・整形\n├── InheritanceD3Renderer (150行) - D3.js可視化専用\n├── InheritanceControls (80行) - 操作パネル・設定\n├── InheritanceTooltip (60行) - ツールチップ・詳細表示\n├── InheritanceLegend (50行) - 凡例・説明\n└── InheritanceExport (80行) - 画像・データエクスポート"
            ],
            [
              "json",
              "{\n  \"before\": {\n    \"total_size\": \"150KB\",\n    \"large_files\": 5,\n    \"maintenance_difficulty\": \"HIGH\"\n  },\n  \"after\": {\n    \"total_size\": \"45KB\",\n    \"reduction\": \"70%\",\n    \"microservices\": 25,\n    \"maintenance_difficulty\": \"LOW\"\n  }\n}"
            ],
            [
              "",
              "Before: 6つのモノリス（150KB）→ After: 25のマイクロサービス（34KB）"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 9
        }
      },
      "readability": {
        "score": 94.11,
        "sentences": 56,
        "avg_words_per_sentence": 12.2,
        "long_sentences": 11,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 55.66,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.0
    },
    "docs/23-ドキュメント整合性チェック結果.md": {
      "basic_metrics": {
        "lines": 240,
        "words": 626,
        "characters": 4357,
        "avg_line_length": 18.154166666666665
      },
      "structure_analysis": {
        "headers": {
          "total": 46,
          "hierarchy": [
            {
              "level": 1,
              "text": "ドキュメント整合性チェック結果",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 チェック概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🔍 発見した主要問題と修正内容",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "1. **ログ監視システム完成度の重大な誤認**",
              "line_number": 15
            },
            {
              "level": 4,
              "text": "問題内容",
              "line_number": 17
            },
            {
              "level": 4,
              "text": "実際の実装状況（検証済み）",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "修正内容",
              "line_number": 30
            },
            {
              "level": 1,
              "text": "修正前",
              "line_number": 32
            },
            {
              "level": 1,
              "text": "修正後",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "2. **BUG修正状況の時間的ずれ**",
              "line_number": 39
            },
            {
              "level": 4,
              "text": "問題内容",
              "line_number": 41
            },
            {
              "level": 4,
              "text": "修正内容",
              "line_number": 47
            },
            {
              "level": 1,
              "text": "修正前",
              "line_number": 49
            },
            {
              "level": 1,
              "text": "修正後",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "3. **認証機能完成度の微細な不一致**",
              "line_number": 58
            },
            {
              "level": 4,
              "text": "問題内容",
              "line_number": 60
            },
            {
              "level": 4,
              "text": "修正内容",
              "line_number": 63
            },
            {
              "level": 1,
              "text": "修正前",
              "line_number": 65
            },
            {
              "level": 1,
              "text": "修正後",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "4. **重複ドキュメントの統合**",
              "line_number": 72
            },
            {
              "level": 4,
              "text": "削除対象",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "統合効果",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "✅ 修正完了ファイル一覧",
              "line_number": 84
            },
            {
              "level": 3,
              "text": "Priority 1: 緊急修正（完了）",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "Priority 2: 重複削除（完了）",
              "line_number": 101
            },
            {
              "level": 2,
              "text": "🔧 技術的な整合性チェック",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "ソースコードとの整合性検証",
              "line_number": 110
            },
            {
              "level": 4,
              "text": "1. ログ監視システム実装状況",
              "line_number": 112
            },
            {
              "level": 4,
              "text": "2. WebSocket機能",
              "line_number": 127
            },
            {
              "level": 4,
              "text": "3. BUG修正状況",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "📊 修正効果",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "修正前後の比較",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "ドキュメント信頼性向上",
              "line_number": 159
            },
            {
              "level": 2,
              "text": "⚠️ 残存問題（低優先度）",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "1. 権限テンプレート機能のスキーマ不整合",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "2. ドキュメント番号体系の不統一",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "3. 更新日時の自動管理不足",
              "line_number": 180
            },
            {
              "level": 2,
              "text": "🎯 今後の改善計画",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "Phase 3: 構造改善（予定）",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "Phase 4: 長期改善（予定）",
              "line_number": 198
            },
            {
              "level": 2,
              "text": "📞 推奨アクション",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "即座に実行すべき内容",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "次期対応",
              "line_number": 213
            },
            {
              "level": 2,
              "text": "📋 修正済みドキュメント最終状況",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "主要ドキュメントの現在状況",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "全体の整合性",
              "line_number": 233
            }
          ],
          "hierarchy_issues": [
            {
              "line": 39,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 58,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 72,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 6,
          "inline_code": 20,
          "languages": {
            "markdown": 3,
            "typescript": 1,
            "vue": 1,
            "bash": 1
          },
          "details": [
            [
              "markdown",
              "# 修正前\n| ログ監視システム | ✅ | ❌ | ❌ | 20% | 設計完了・実装予定 |\n\n# 修正後\n| ログ監視システム | ✅ | ✅ | ✅ | 95% | **完全実装済み・WebSocket・統計機能完成** |"
            ],
            [
              "markdown",
              "# 修正前\n| BUG #002 | 権限テンプレートAPI不整合 | High | 未修正 | 必要 |\n| BUG #003 | IPv6 Rate Limiting警告 | Medium | 継続発生 | 推奨 |\n\n# 修正後\n| BUG #002 | 権限テンプレートAPI不整合 | High | **✅ 修正済み** | 完了 |\n| BUG #003 | IPv6 Rate Limiting警告 | Medium | **✅ 修正済み** | 完了 |"
            ],
            [
              "markdown",
              "# 修正前\n| 認証機能 | ✅ | ✅ | ✅ | 95% | JWT・API連携完了 |\n\n# 修正後\n| 認証機能 | ✅ | ✅ | ✅ | 100% | **IPv6警告修正・完全実装済み** |"
            ],
            [
              "typescript",
              "// 484行の完全実装確認\nexport class LogService {\n  async saveLogs(logs: LogEntry[]): Promise<{ saved: number; errors: string[] }>\n  async searchLogs(params: LogSearchParams): Promise<LogSearchResult>\n  async getStatistics(params: LogStatisticsParams): Promise<LogStatisticsResult>\n  async getRealtimeStatistics(): Promise<{...}>\n  async cleanupOldLogs(): Promise<void>\n  // + 15以上のprivateメソッド\n}"
            ],
            [
              "vue",
              "// 1,223行の高度なUI実装確認\n- リアルタイムログ表示\n- WebSocketアラート機能\n- 高度な検索・フィルタリング\n- CSV/JSONエクスポート\n- 統計チャート表示"
            ],
            [
              "bash",
              "9b606e3 fix: BUG #003修正 - IPv6 Rate Limiting警告解消\n23c3009 feat: 高優先度機能実装 - 権限テンプレート修復とダッシュボード統計機能"
            ]
          ]
        },
        "tables": {
          "total": 9,
          "total_rows": 22
        }
      },
      "readability": {
        "score": 83.38,
        "sentences": 32,
        "avg_words_per_sentence": 19.56,
        "long_sentences": 8,
        "readability_level": "読みやすい"
      },
      "structure_score": 48.519999999999996,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.92
    },
    "docs/04-システム設計.md": {
      "basic_metrics": {
        "lines": 227,
        "words": 742,
        "characters": 6104,
        "avg_line_length": 26.889867841409693
      },
      "structure_analysis": {
        "headers": {
          "total": 33,
          "hierarchy": [
            {
              "level": 1,
              "text": "WebSys システム設計",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "🎯 アーキテクチャ概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "全体アーキテクチャ",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "🛠️ 技術スタック概要",
              "line_number": 30
            },
            {
              "level": 3,
              "text": "主要コンポーネント",
              "line_number": 32
            },
            {
              "level": 2,
              "text": "コンポーネント詳細",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "Frontend (Vue.js + Element Plus)",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "構成",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "特徴",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "Backend (Express + Prisma)",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "構成",
              "line_number": 76
            },
            {
              "level": 4,
              "text": "特徴",
              "line_number": 96
            },
            {
              "level": 3,
              "text": "Database (PostgreSQL)",
              "line_number": 104
            },
            {
              "level": 4,
              "text": "構成",
              "line_number": 106
            },
            {
              "level": 4,
              "text": "スキーマ",
              "line_number": 116
            },
            {
              "level": 2,
              "text": "データフロー",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "認証フロー",
              "line_number": 135
            },
            {
              "level": 3,
              "text": "API通信フロー",
              "line_number": 145
            },
            {
              "level": 2,
              "text": "セキュリティ",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "認証・認可",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "データ保護",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "運用セキュリティ",
              "line_number": 171
            },
            {
              "level": 2,
              "text": "パフォーマンス",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "フロントエンド最適化",
              "line_number": 179
            },
            {
              "level": 3,
              "text": "バックエンド最適化",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "インフラ最適化",
              "line_number": 191
            },
            {
              "level": 2,
              "text": "監視・ログ",
              "line_number": 197
            },
            {
              "level": 3,
              "text": "ログ戦略",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "ヘルスチェック",
              "line_number": 205
            },
            {
              "level": 2,
              "text": "拡張性",
              "line_number": 211
            },
            {
              "level": 3,
              "text": "水平スケーリング",
              "line_number": 213
            },
            {
              "level": 3,
              "text": "垂直スケーリング",
              "line_number": 218
            },
            {
              "level": 3,
              "text": "マイクロサービス化",
              "line_number": 223
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 2,
          "internal": 2,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "MASTER_REFERENCE.md",
              "MASTER_REFERENCE.md"
            ],
            [
              "MASTER_REFERENCE.md - 技術スタック",
              "MASTER_REFERENCE.md#-技術スタック確定版"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 7,
          "inline_code": 13,
          "languages": {
            "sql": 1
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────────────────┐\n│                    WebSys Development Platform              │\n├─────────────────────────────────────────────────────────────┤\n│                                                             │\n│  ┌─────────────┐    ┌─────────────┐    ┌─────────────┐     │\n│  │  Frontend   │────│   Backend   │────│  PostgreSQL │     │\n│  │  (Vue.js)   │    │  (Express)  │    │     DB      │     │\n│  │  Port: 3000 │    │  Port: 8000 │    │  Port: 5432 │     │\n│  └─────────────┘    └─────────────┘    └─────────────┘     │\n│                                                             │\n├─────────────────────────────────────────────────────────────┤\n│                    Docker Network Layer                     │\n├─────────────────────────────────────────────────────────────┤\n│                     Host Environment                        │\n└─────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "frontend/\n├── src/\n│   ├── main.ts              # アプリケーションエントリーポイント\n│   ├── App.vue              # ルートコンポーネント\n│   ├── components/          # 再利用可能コンポーネント\n│   ├── views/               # ページコンポーネント\n│   │   ├── Layout.vue       # レイアウトコンポーネント\n│   │   ├── Login.vue        # ログイン画面\n│   │   ├── Dashboard.vue    # ダッシュボード\n│   │   └── Users.vue        # ユーザー管理\n│   ├── router/              # ルーティング設定\n│   ├── stores/              # 状態管理 (Pinia)\n│   ├── api/                 # API通信層\n│   └── assets/              # 静的資源\n├── public/                  # 公開ファイル\n├── package.json             # 依存関係定義\n├── vite.config.ts           # Vite設定\n├── tsconfig.json            # TypeScript設定\n└── index.html               # HTMLテンプレート"
            ],
            [
              "",
              "backend/\n├── src/\n│   ├── index.ts             # サーバーエントリーポイント\n│   ├── routes/              # APIルート定義\n│   │   ├── auth.ts          # 認証関連API\n│   │   └── users.ts         # ユーザー管理API\n│   ├── middleware/          # ミドルウェア\n│   │   ├── auth.ts          # 認証ミドルウェア\n│   │   └── errorHandler.ts # エラーハンドリング\n│   ├── controllers/         # コントローラー層\n│   ├── services/            # ビジネスロジック層\n│   └── utils/               # ユーティリティ\n├── prisma/\n│   └── schema.prisma        # データベーススキーマ\n├── package.json             # 依存関係定義\n└── tsconfig.json            # TypeScript設定"
            ],
            [
              "",
              "PostgreSQL 15\n├── データベース: websys_db_{environment}\n├── ユーザー: admin\n├── 接続プール: Prisma管理\n├── マイグレーション: Prisma Migrate\n└── バックアップ: Docker Volume"
            ],
            [
              "sql",
              "-- ユーザーテーブル\nUser {\n  id: int (PK, Auto Increment)\n  username: string (Unique)\n  email: string (Unique)\n  password: string (bcrypt)\n  name: string\n  department: string (Optional)\n  role: UserRole (ADMIN|USER|GUEST)\n  isActive: boolean (Default: true)\n  createdAt: DateTime\n  updatedAt: DateTime\n}"
            ],
            [
              "",
              "1. Client → POST /api/auth/login (username, password)\n2. Backend → bcrypt.compare(password, hashedPassword)\n3. Backend → jwt.sign({userId, username, role})\n4. Backend → Response {token, user}\n5. Client → localStorage.setItem('token', token)\n6. Client → All requests include Authorization: Bearer <token>"
            ],
            [
              "",
              "1. Frontend (axios) → API Request with JWT\n2. Backend Middleware → JWT Verification\n3. Backend Controller → Request Processing\n4. Backend Service → Business Logic\n5. Prisma ORM → Database Query\n6. Database → Query Result\n7. Backend → JSON Response\n8. Frontend → UI Update"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.0,
        "sentences": 54,
        "avg_words_per_sentence": 13.74,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 58.84,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.54
    },
    "docs/51-改善実装タスク管理表.md": {
      "basic_metrics": {
        "lines": 164,
        "words": 953,
        "characters": 4706,
        "avg_line_length": 28.695121951219512
      },
      "structure_analysis": {
        "headers": {
          "total": 24,
          "hierarchy": [
            {
              "level": 1,
              "text": "改善実装タスク管理表",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📊 全体進捗サマリー",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "🚨 Phase 1: 緊急改善タスク（1-2週間）",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "認証・初期設定の改善",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "権限ベースメニュー表示",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "🔧 Phase 2: 中期改善タスク（3-4週間）",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "ワークフロー設計の柔軟化",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "役職・権限体系の再設計",
              "line_number": 48
            },
            {
              "level": 2,
              "text": "🎨 Phase 3: 長期改善タスク（5-8週間）",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "ユーザー体験の統一",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "高度な管理機能",
              "line_number": 67
            },
            {
              "level": 2,
              "text": "📈 タスク優先度分布",
              "line_number": 75
            },
            {
              "level": 2,
              "text": "🔄 ステータス凡例",
              "line_number": 84
            },
            {
              "level": 2,
              "text": "📝 変更履歴",
              "line_number": 94
            },
            {
              "level": 2,
              "text": "🎯 次回マイルストーン",
              "line_number": 100
            },
            {
              "level": 3,
              "text": "2025年10月第1週",
              "line_number": 102
            },
            {
              "level": 3,
              "text": "2025年10月第2週",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "2025年10月第4週",
              "line_number": 112
            },
            {
              "level": 2,
              "text": "📊 成功指標（完了基準）",
              "line_number": 117
            },
            {
              "level": 3,
              "text": "Phase 1完了基準",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "Phase 2完了基準",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "Phase 3完了基準",
              "line_number": 131
            },
            {
              "level": 2,
              "text": "🚀 実装優先順位ガイドライン",
              "line_number": 137
            },
            {
              "level": 2,
              "text": "📞 連絡先・エスカレーション",
              "line_number": 155
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 9,
          "total_rows": 49
        }
      },
      "readability": {
        "score": 0,
        "sentences": 6,
        "avg_words_per_sentence": 158.83,
        "long_sentences": 2,
        "readability_level": "読みにくい"
      },
      "structure_score": 49.06,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 42.12
    },
    "docs/01-システム概要.md": {
      "basic_metrics": {
        "lines": 202,
        "words": 507,
        "characters": 5628,
        "avg_line_length": 27.861386138613863
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "WebSys システム概要",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 プロジェクト概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "主要特徴",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "🎯 現在の完成度（2025-09-30）",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "📋 ドキュメント構成",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "🏗️ アーキテクチャ・設計",
              "line_number": 28
            },
            {
              "level": 3,
              "text": "🚀 セットアップ・開発",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "🚢 デプロイ・運用",
              "line_number": 42
            },
            {
              "level": 3,
              "text": "📖 リファレンス",
              "line_number": 49
            },
            {
              "level": 2,
              "text": "🎯 読者別ガイド",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "👨‍💻 新規開発者",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "🏗️ システムアーキテクト",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "🔧 DevOps・運用担当者",
              "line_number": 71
            },
            {
              "level": 3,
              "text": "🎨 フロントエンド開発者",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "⚙️ バックエンド開発者",
              "line_number": 83
            },
            {
              "level": 2,
              "text": "🔍 トピック別索引",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "🏁 環境構築・セットアップ",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "💻 開発・コーディング",
              "line_number": 98
            },
            {
              "level": 3,
              "text": "🌐 API・データベース",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "🚀 デプロイ・運用",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "🔧 トラブルシューティング",
              "line_number": 119
            },
            {
              "level": 2,
              "text": "🛠️ 技術スタック概要",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "主要技術",
              "line_number": 128
            },
            {
              "level": 2,
              "text": "📈 プロジェクト実績",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "現在バージョン: v1.0.0 (2025-09-30)",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "進行中プロジェクト",
              "line_number": 145
            },
            {
              "level": 2,
              "text": "🤝 コントリビューション",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "ドキュメント改善",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "ドキュメント更新ガイドライン",
              "line_number": 161
            },
            {
              "level": 2,
              "text": "📞 サポート・お問い合わせ",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "技術サポート",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "緊急時連絡先",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "🔗 関連リンク",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "開発環境アクセス",
              "line_number": 184
            },
            {
              "level": 3,
              "text": "外部技術ドキュメント",
              "line_number": 191
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 15,
          "internal": 5,
          "external": 10,
          "empty": 0,
          "internal_details": [
            [
              "MASTER_REFERENCE.md",
              "MASTER_REFERENCE.md"
            ],
            [
              "MASTER_REFERENCE.md - 技術スタック",
              "MASTER_REFERENCE.md#-技術スタック確定版"
            ],
            [
              "水平展開実装計画",
              "66-水平展開実装計画.md"
            ],
            [
              "ドキュメント改善計画",
              "72-ドキュメント総合レビュー結果・改善計画書.md"
            ],
            [
              "MASTER_REFERENCE.md",
              "MASTER_REFERENCE.md"
            ]
          ],
          "external_details": [
            [
              "http://localhost:3000",
              "http://localhost:3000"
            ],
            [
              "http://localhost:8000",
              "http://localhost:8000"
            ],
            [
              "http://localhost:5555",
              "http://localhost:5555"
            ],
            [
              "http://localhost:3000/log-monitoring",
              "http://localhost:3000/log-monitoring"
            ],
            [
              "Vue.js 公式",
              "https://vuejs.org/guide/"
            ],
            [
              "Element Plus",
              "https://element-plus.org/"
            ],
            [
              "Express.js",
              "https://expressjs.com/en/guide/"
            ],
            [
              "Prisma ORM",
              "https://www.prisma.io/docs"
            ],
            [
              "Docker",
              "https://docs.docker.com/"
            ],
            [
              "PostgreSQL",
              "https://www.postgresql.org/docs/"
            ]
          ]
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 1,
          "inline_code": 1,
          "languages": {
            "yaml": 1
          },
          "details": [
            [
              "yaml",
              "システム完成度: 100%\nBUG解決率: 100% (19/19件完了)\n水平展開効果: 657% (52件予防修正)\nテストカバレッジ: 95%\nAPI稼働率: 100%"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 16
        }
      },
      "readability": {
        "score": 98.35,
        "sentences": 109,
        "avg_words_per_sentence": 4.65,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 63.14,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 77.26
    },
    "docs/60-workflow.ts分割対策案.md": {
      "basic_metrics": {
        "lines": 280,
        "words": 798,
        "characters": 7090,
        "avg_line_length": 25.321428571428573
      },
      "structure_analysis": {
        "headers": {
          "total": 32,
          "hierarchy": [
            {
              "level": 1,
              "text": "workflow.ts APIモノリス分割対策案",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📊 現状分析",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "深刻なAPIモノリス問題",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "現在の機能構成",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🎯 分割戦略",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "方針",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "分割構造",
              "line_number": 30
            },
            {
              "level": 2,
              "text": "📦 分割後のファイル詳細",
              "line_number": 46
            },
            {
              "level": 3,
              "text": "1. routes/workflow/index.ts (統合ルーター)",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "2. workflow-types.ts (ワークフロータイプ管理)",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "3. emergency-approval.ts (緊急承認)",
              "line_number": 115
            },
            {
              "level": 2,
              "text": "🔧 実装手順",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "Phase 1: 準備・設計（1日）",
              "line_number": 144
            },
            {
              "level": 3,
              "text": "Phase 2: 基盤ファイル作成（2日）",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "Phase 3: 承認機能ファイル（3日）",
              "line_number": 156
            },
            {
              "level": 3,
              "text": "Phase 4: 高度承認機能（2日）",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "Phase 5: 移行・検証（1日）",
              "line_number": 167
            },
            {
              "level": 2,
              "text": "📈 期待される改善効果",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "サイズ削減",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "パフォーマンス改善",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "開発効率",
              "line_number": 188
            },
            {
              "level": 2,
              "text": "🚀 追加の最適化案",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "1. レイジーローディング実装",
              "line_number": 196
            },
            {
              "level": 3,
              "text": "2. APIキャッシュ最適化",
              "line_number": 207
            },
            {
              "level": 3,
              "text": "3. 非同期処理最適化",
              "line_number": 222
            },
            {
              "level": 2,
              "text": "📊 測定指標",
              "line_number": 237
            },
            {
              "level": 3,
              "text": "KPI",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "成功基準",
              "line_number": 245
            },
            {
              "level": 2,
              "text": "🔗 関連システムへの影響",
              "line_number": 251
            },
            {
              "level": 3,
              "text": "フロントエンド",
              "line_number": 253
            },
            {
              "level": 3,
              "text": "データベース",
              "line_number": 258
            },
            {
              "level": 2,
              "text": "📋 実装優先度",
              "line_number": 265
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 8,
          "inline_code": 17,
          "languages": {
            "typescript": 6
          },
          "details": [
            [
              "",
              "workflow.ts (1,616行, 51エンドポイント)\n├── ワークフロータイプ管理     (147行, 7エンドポイント)\n├── ワークフロー申請管理       (187行, 9エンドポイント)\n├── ダッシュボード統計         (49行, 2エンドポイント)\n├── 緊急承認機能              (138行, 6エンドポイント)\n├── 承認委任管理              (250行, 10エンドポイント)\n├── 承認代理管理              (226行, 8エンドポイント)\n├── 並列承認管理              (156行, 6エンドポイント)\n├── 直列承認管理              (154行, 6エンドポイント)\n└── 自動承認管理              (309行, 7エンドポイント)"
            ],
            [
              "",
              "routes/workflow/\n├── index.ts                     # メインルーター統合 (80行)\n├── workflow-types.ts            # ワークフロータイプ管理 (200行, 7EP)\n├── workflow-requests.ts         # 申請管理 (250行, 9EP)\n├── workflow-dashboard.ts        # 統計ダッシュボード (100行, 2EP)\n├── emergency-approval.ts        # 緊急承認 (180行, 6EP)\n├── delegation-approval.ts       # 承認委任 (300行, 10EP)\n├── proxy-approval.ts           # 承認代理 (280行, 8EP)\n├── parallel-approval.ts        # 並列承認 (200行, 6EP)\n├── sequential-approval.ts      # 直列承認 (200行, 6EP)\n└── auto-approval.ts            # 自動承認 (350行, 7EP)"
            ],
            [
              "typescript",
              "import { Router } from 'express';\nimport workflowTypesRouter from './workflow-types';\nimport workflowRequestsRouter from './workflow-requests';\nimport workflowDashboardRouter from './workflow-dashboard';\nimport emergencyApprovalRouter from './emergency-approval';\nimport delegationApprovalRouter from './delegation-approval';\nimport proxyApprovalRouter from './proxy-approval';\nimport parallelApprovalRouter from './parallel-approval';\nimport sequentialApprovalRouter from './sequential-approval';\nimport autoApprovalRouter from './auto-approval';\n\nconst router = Router();\n\n// マイクロサービス型ルーター統合\nrouter.use('/types', workflowTypesRouter);\nrouter.use('/requests', workflowRequestsRouter);\nrouter.use('/dashboard', workflowDashboardRouter);\nrouter.use('/emergency', emergencyApprovalRouter);\nrouter.use('/delegation', delegationApprovalRouter);\nrouter.use('/proxy', proxyApprovalRouter);\nrouter.use('/parallel', parallelApprovalRouter);\nrouter.use('/sequential', sequentialApprovalRouter);\nrouter.use('/auto', autoApprovalRouter);\n\nexport default router;"
            ],
            [
              "typescript",
              "import { Router } from 'express';\nimport { WorkflowService } from '../../services/WorkflowService';\nimport { authenticate, requireRole } from '../../middleware/auth';\nimport { validateCreateWorkflowType, validateUpdateWorkflowType } from '../../utils/validation';\n\nconst router = Router();\nconst workflowService = new WorkflowService();\n\n// GET /api/workflow/types - ワークフロータイプ一覧\nrouter.get('/', authenticate, async (req, res) => {\n  // 実装詳細\n});\n\n// GET /api/workflow/types/:id - ワークフロータイプ詳細\nrouter.get('/:id', authenticate, async (req, res) => {\n  // 実装詳細\n});\n\n// POST /api/workflow/types - ワークフロータイプ作成\nrouter.post('/', authenticate, requireRole(['ADMIN']), async (req, res) => {\n  // 実装詳細\n});\n\n// PUT /api/workflow/types/:id - ワークフロータイプ更新\nrouter.put('/:id', authenticate, requireRole(['ADMIN']), async (req, res) => {\n  // 実装詳細\n});\n\n// DELETE /api/workflow/types/:id - ワークフロータイプ削除\nrouter.delete('/:id', authenticate, requireRole(['ADMIN']), async (req, res) => {\n  // 実装詳細\n});\n\nexport default router;"
            ],
            [
              "typescript",
              "import { Router } from 'express';\nimport { EmergencyApprovalService } from '../../services/EmergencyApprovalService';\nimport { authenticate, requireRole } from '../../middleware/auth';\n\nconst router = Router();\nconst emergencyApprovalService = new EmergencyApprovalService();\n\n// POST /api/workflow/emergency/request - 緊急承認申請\nrouter.post('/request', authenticate, async (req, res) => {\n  // 緊急承認申請ロジック\n});\n\n// POST /api/workflow/emergency/approve/:id - 緊急承認実行\nrouter.post('/approve/:id', authenticate, requireRole(['ADMIN']), async (req, res) => {\n  // 緊急承認実行ロジック\n});\n\n// GET /api/workflow/emergency/history - 緊急承認履歴\nrouter.get('/history', authenticate, requireRole(['ADMIN']), async (req, res) => {\n  // 緊急承認履歴取得\n});\n\nexport default router;"
            ],
            [
              "typescript",
              "// 必要時のみサービスインスタンス作成\nconst getEmergencyApprovalService = () => {\n  if (!emergencyApprovalService) {\n    emergencyApprovalService = new EmergencyApprovalService();\n  }\n  return emergencyApprovalService;\n};"
            ],
            [
              "typescript",
              "// 頻繁にアクセスされるデータのキャッシュ\nconst workflowTypesCache = new Map();\nconst getCachedWorkflowTypes = async (companyId) => {\n  const cacheKey = `workflow_types_${companyId}`;\n  if (workflowTypesCache.has(cacheKey)) {\n    return workflowTypesCache.get(cacheKey);\n  }\n  const data = await workflowService.getWorkflowTypes(companyId);\n  workflowTypesCache.set(cacheKey, data);\n  return data;\n};"
            ],
            [
              "typescript",
              "// 重い処理をWorkerスレッドで実行\nimport { Worker } from 'worker_threads';\n\nconst processComplexApproval = async (approvalData) => {\n  return new Promise((resolve, reject) => {\n    const worker = new Worker('./workers/approval-processor.js');\n    worker.postMessage(approvalData);\n    worker.on('message', resolve);\n    worker.on('error', reject);\n  });\n};"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 7
        }
      },
      "readability": {
        "score": 98.16,
        "sentences": 98,
        "avg_words_per_sentence": 8.14,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.96,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.13
    },
    "docs/73-ドキュメント改善実施進捗レポート.md": {
      "basic_metrics": {
        "lines": 310,
        "words": 637,
        "characters": 5178,
        "avg_line_length": 16.703225806451613
      },
      "structure_analysis": {
        "headers": {
          "total": 34,
          "hierarchy": [
            {
              "level": 1,
              "text": "ドキュメント改善実施進捗レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 実施概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施完了項目",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "✅ Phase 1: 緊急改善対策 (100%完了)",
              "line_number": 14
            },
            {
              "level": 4,
              "text": "1. マスタードキュメント作成 ✅",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "2. メインナビゲーション改善 ✅",
              "line_number": 38
            },
            {
              "level": 4,
              "text": "3. 重複ドキュメント統合 ✅",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "4. 自動化スクリプト導入 ✅",
              "line_number": 83
            },
            {
              "level": 2,
              "text": "📊 定量的改善効果",
              "line_number": 117
            },
            {
              "level": 3,
              "text": "Before (改善前) vs After (改善後)",
              "line_number": 119
            },
            {
              "level": 4,
              "text": "ドキュメント構造",
              "line_number": 121
            },
            {
              "level": 4,
              "text": "利用者体験指標",
              "line_number": 134
            },
            {
              "level": 4,
              "text": "保守効率",
              "line_number": 147
            },
            {
              "level": 2,
              "text": "🎯 Phase 2 準備完了状況",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "実装準備済み項目",
              "line_number": 164
            },
            {
              "level": 4,
              "text": "1. CI/CD統合基盤 ✅",
              "line_number": 166
            },
            {
              "level": 4,
              "text": "2. 品質チェック体制 ✅",
              "line_number": 172
            },
            {
              "level": 4,
              "text": "3. 自動化インフラ ✅",
              "line_number": 178
            },
            {
              "level": 2,
              "text": "🚀 次期Phase 2実装計画",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "実装予定項目（準備完了）",
              "line_number": 188
            },
            {
              "level": 4,
              "text": "1. 高度な品質保証機能",
              "line_number": 190
            },
            {
              "level": 4,
              "text": "2. 動的ドキュメント生成",
              "line_number": 196
            },
            {
              "level": 4,
              "text": "3. 国際化・多言語対応",
              "line_number": 202
            },
            {
              "level": 2,
              "text": "📈 ROI分析・投資対効果",
              "line_number": 210
            },
            {
              "level": 3,
              "text": "改善投資",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "投資回収効果",
              "line_number": 226
            },
            {
              "level": 2,
              "text": "🏆 Phase 1総合評価",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "成功指標達成状況",
              "line_number": 245
            },
            {
              "level": 3,
              "text": "ステークホルダー別効果",
              "line_number": 256
            },
            {
              "level": 2,
              "text": "🎉 結論",
              "line_number": 281
            },
            {
              "level": 3,
              "text": "Phase 1完全成功",
              "line_number": 283
            },
            {
              "level": 3,
              "text": "実装効果の即座発現",
              "line_number": 287
            },
            {
              "level": 3,
              "text": "Phase 2基盤完成",
              "line_number": 293
            },
            {
              "level": 3,
              "text": "投資対効果",
              "line_number": 297
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 21,
          "languages": {
            "yaml": 11
          },
          "details": [
            [
              "yaml",
              "作成ファイル: docs/MASTER_REFERENCE.md\n規模: 完全統合版（200+行）\n内容:\n  - 技術スタック確定版（全バージョン明記）\n  - システム概要統一版\n  - プロジェクト指標（100%完成達成状況）\n  - 主要リンク集（目的別ナビゲーション）\n  - バージョン管理・互換性情報\n  - 利用開始ガイド（役割別30-60分）"
            ],
            [
              "yaml",
              "改訂規模: 完全リニューアル（131行 → 180行）\n新機能:\n  - 目的別クイックナビゲーション（30-60分ガイド）\n  - 緊急時・問題解決専用セクション\n  - プロジェクト状況リアルタイム表示\n  - 実装中プロジェクト進捗表示\n  - 開発環境直接アクセスリンク\n構成変更:\n  - 管理ルール → 付録セクションに移動\n  - 利用者ナビゲーション → メイン表示\n  - カテゴリ別整理 → 目的別整理"
            ],
            [
              "yaml",
              "対象ファイル:\n  - docs/01-システム概要.md: 完全改訂\n  - docs/04-システム設計.md: 技術スタック部分簡略化\n改訂内容:\n  - 重複技術仕様 → MASTER_REFERENCE.md参照に変更\n  - プロジェクト実績・完成度情報を最新化\n  - 2025-09-30時点の100%完成状況反映\n  - アクセスリンク・連絡先情報を現在環境に更新"
            ],
            [
              "yaml",
              "作成スクリプト:\n  1. scripts/quality-check.sh (320行)\n     - 内部リンクチェック\n     - MASTER_REFERENCE.md参照チェック\n     - 日付形式統一チェック\n     - 重複ファイル名検出\n     - 文字コード検証\n     - 品質スコア算出\n\n  2. scripts/link-check.sh (280行)\n     - 詳細リンク検証\n     - 外部リンクチェック（オプション）\n     - 複数出力形式（console/json/html）\n     - 高度なエラー分析\n\n  3. CI/CD統合:\n     - .github/workflows/docs-quality.yml\n     - .markdownlint.json (Markdown構文規則)\n     - .cspell.json (スペルチェック設定)"
            ],
            [
              "yaml",
              "Before:\n  - 技術仕様分散: 6ファイル（重複・不整合あり）\n  - ナビゲーション: 管理者向け（開発者・利用者困難）\n  - 品質管理: 手動チェック（見落としあり）\n\nAfter:\n  - 技術仕様統一: 1ファイル統合（MASTER_REFERENCE.md）\n  - ナビゲーション: 目的別・役割別（30-60分ガイド）\n  - 品質管理: 完全自動化（CI/CD統合）"
            ],
            [
              "yaml",
              "情報発見速度:\n  - 技術仕様確認: 5-10分 → 30秒 (95%短縮)\n  - 目的別アクセス: 3-5分 → 1分 (80%短縮)\n  - トラブル解決: 10-15分 → 2-3分 (85%短縮)\n\n品質保証効果:\n  - エラー検出: 手動60% → 自動95% (+35%向上)\n  - チェック時間: 30分 → 5分 (83%短縮)\n  - 継続性: 不定期 → 毎commit自動実行"
            ],
            [
              "yaml",
              "技術仕様更新:\n  - 更新箇所: 6ファイル → 1ファイル (83%削減)\n  - 整合性確保: 手動確認 → 自動参照\n  - 更新時間: 30分 → 5分 (83%短縮)\n\nドキュメント品質:\n  - 品質スコア: 72/100 → 95/100 (+23点向上)\n  - 不整合発生: 月2-3件 → 0件 (100%削減)\n  - リンク切れ: 定期発生 → 自動検出・防止"
            ],
            [
              "yaml",
              "Phase 1投資:\n  - 開発時間: 6時間\n  - 品質向上効果: 即座発現\n  - 継続的効果: 永続的\n\n投資内訳:\n  - マスタードキュメント作成: 2時間\n  - ナビゲーション改善: 1.5時間\n  - 重複統合: 1時間\n  - 自動化スクリプト: 1.5時間"
            ],
            [
              "yaml",
              "月間効果算出:\n  - 技術仕様確認時間削減: 5時間/月\n  - ドキュメント保守時間削減: 3時間/月\n  - 品質チェック自動化: 2時間/月\n  - 総効果: 10時間/月\n\n年間ROI:\n  - 時間削減効果: 120時間/年\n  - 品質向上効果: 計測不能（継続的価値）\n  - 投資回収期間: 0.6ヶ月\n  - 年間ROI: 2000%"
            ],
            [
              "yaml",
              "目標設定 vs 実績:\n  ✅ 技術仕様統一: 目標100% → 実績100%\n  ✅ ナビゲーション改善: 目標80% → 実績95%\n  ✅ 自動化導入: 目標90% → 実績100%\n  ✅ 品質向上: 目標+20点 → 実績+23点\n\n総合達成率: 105% (目標超過達成)"
            ],
            [
              "yaml",
              "開発者:\n  - 技術仕様アクセス: 95%高速化\n  - 情報整合性: 100%保証\n  - 作業効率: 85%向上\n\nプロジェクトマネージャー:\n  - プロジェクト状況把握: リアルタイム化\n  - 品質管理: 完全自動化\n  - リスク管理: 予防的品質保証\n\nシステム管理者:\n  - 運用ドキュメント: 最新状況反映\n  - 緊急時対応: 2-3分アクセス\n  - 保守効率: 70%向上\n\n利用者・学習者:\n  - 学習曲線: 30-60分ガイド提供\n  - 目的別アクセス: 90%改善\n  - 理解しやすさ: 大幅向上"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 88.27,
        "sentences": 37,
        "avg_words_per_sentence": 17.22,
        "long_sentences": 9,
        "readability_level": "読みやすい"
      },
      "structure_score": 52.74,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.08
    },
    "docs/41-申請承認ワークフロー機能設計書.md": {
      "basic_metrics": {
        "lines": 1154,
        "words": 2701,
        "characters": 30195,
        "avg_line_length": 26.165511265164646
      },
      "structure_analysis": {
        "headers": {
          "total": 78,
          "hierarchy": [
            {
              "level": 1,
              "text": "申請・承認ワークフロー機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 目次",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "📖 機能概要",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "🎯 目的",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "🔄 基本フロー",
              "line_number": 28
            },
            {
              "level": 3,
              "text": "🌟 主要価値",
              "line_number": 37
            },
            {
              "level": 2,
              "text": "📝 要件定義",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "🎯 機能要件",
              "line_number": 47
            },
            {
              "level": 4,
              "text": "1. 申請機能",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "2. 承認機能",
              "line_number": 58
            },
            {
              "level": 4,
              "text": "3. ワークフロー管理",
              "line_number": 67
            },
            {
              "level": 4,
              "text": "4. 管理機能",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "🎨 非機能要件",
              "line_number": 83
            },
            {
              "level": 4,
              "text": "性能要件",
              "line_number": 85
            },
            {
              "level": 4,
              "text": "セキュリティ要件",
              "line_number": 90
            },
            {
              "level": 4,
              "text": "運用要件",
              "line_number": 96
            },
            {
              "level": 2,
              "text": "🏗️ システム設計",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "📐 アーキテクチャ",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "🔧 技術スタック",
              "line_number": 125
            },
            {
              "level": 4,
              "text": "フロントエンド",
              "line_number": 127
            },
            {
              "level": 4,
              "text": "バックエンド",
              "line_number": 136
            },
            {
              "level": 4,
              "text": "新規追加ライブラリ",
              "line_number": 144
            },
            {
              "level": 2,
              "text": "🗄️ データベース設計",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "📊 ER図",
              "line_number": 161
            },
            {
              "level": 3,
              "text": "📋 テーブル定義",
              "line_number": 200
            },
            {
              "level": 4,
              "text": "1. workflow_types（申請種別マスタ）",
              "line_number": 202
            },
            {
              "level": 4,
              "text": "2. approval_routes（承認ルートマスタ）",
              "line_number": 232
            },
            {
              "level": 4,
              "text": "3. workflow_requests（申請書）",
              "line_number": 257
            },
            {
              "level": 4,
              "text": "4. approval_history（承認履歴）",
              "line_number": 296
            },
            {
              "level": 4,
              "text": "5. approval_delegates（代理承認設定）",
              "line_number": 325
            },
            {
              "level": 4,
              "text": "6. workflow_notifications（通知管理）",
              "line_number": 353
            },
            {
              "level": 2,
              "text": "🔗 API設計",
              "line_number": 381
            },
            {
              "level": 3,
              "text": "📋 APIエンドポイント一覧",
              "line_number": 383
            },
            {
              "level": 4,
              "text": "申請管理API",
              "line_number": 385
            },
            {
              "level": 4,
              "text": "承認管理API",
              "line_number": 402
            },
            {
              "level": 4,
              "text": "管理API",
              "line_number": 419
            },
            {
              "level": 3,
              "text": "📝 API詳細仕様",
              "line_number": 440
            },
            {
              "level": 4,
              "text": "申請書作成API",
              "line_number": 442
            },
            {
              "level": 4,
              "text": "承認実行API",
              "line_number": 484
            },
            {
              "level": 2,
              "text": "🎨 画面設計",
              "line_number": 517
            },
            {
              "level": 3,
              "text": "📱 画面一覧",
              "line_number": 519
            },
            {
              "level": 4,
              "text": "メイン画面",
              "line_number": 521
            },
            {
              "level": 4,
              "text": "管理画面",
              "line_number": 528
            },
            {
              "level": 3,
              "text": "🖼️ 画面設計詳細",
              "line_number": 534
            },
            {
              "level": 4,
              "text": "1. ワークフローダッシュボード",
              "line_number": 536
            },
            {
              "level": 4,
              "text": "2. 申請書作成画面",
              "line_number": 606
            },
            {
              "level": 4,
              "text": "3. 承認画面",
              "line_number": 711
            },
            {
              "level": 2,
              "text": "🔐 セキュリティ設計",
              "line_number": 854
            },
            {
              "level": 3,
              "text": "🛡️ 認証・認可",
              "line_number": 856
            },
            {
              "level": 4,
              "text": "JWT認証連携",
              "line_number": 858
            },
            {
              "level": 4,
              "text": "RBAC権限制御",
              "line_number": 872
            },
            {
              "level": 3,
              "text": "🔒 データ保護",
              "line_number": 894
            },
            {
              "level": 4,
              "text": "暗号化",
              "line_number": 896
            },
            {
              "level": 4,
              "text": "ファイルセキュリティ",
              "line_number": 913
            },
            {
              "level": 3,
              "text": "📊 監査ログ",
              "line_number": 932
            },
            {
              "level": 4,
              "text": "完全操作記録",
              "line_number": 934
            },
            {
              "level": 2,
              "text": "📅 実装計画",
              "line_number": 961
            },
            {
              "level": 3,
              "text": "🎯 開発フェーズ",
              "line_number": 963
            },
            {
              "level": 4,
              "text": "Phase 1: 基盤実装（3-4日）",
              "line_number": 965
            },
            {
              "level": 4,
              "text": "Phase 2: コア機能実装（4-5日）",
              "line_number": 989
            },
            {
              "level": 4,
              "text": "Phase 3: 高度機能実装（3-4日）",
              "line_number": 1013
            },
            {
              "level": 4,
              "text": "Phase 4: 最適化・テスト（2-3日）",
              "line_number": 1032
            },
            {
              "level": 3,
              "text": "📊 実装優先度",
              "line_number": 1056
            },
            {
              "level": 3,
              "text": "🎯 成功指標",
              "line_number": 1069
            },
            {
              "level": 4,
              "text": "技術指標",
              "line_number": 1071
            },
            {
              "level": 4,
              "text": "業務指標",
              "line_number": 1077
            },
            {
              "level": 2,
              "text": "📝 補足事項",
              "line_number": 1085
            },
            {
              "level": 3,
              "text": "🔄 既存システムとの連携",
              "line_number": 1087
            },
            {
              "level": 4,
              "text": "ユーザー・組織マスタ連携",
              "line_number": 1089
            },
            {
              "level": 4,
              "text": "権限システム連携",
              "line_number": 1097
            },
            {
              "level": 3,
              "text": "📈 将来拡張計画",
              "line_number": 1108
            },
            {
              "level": 4,
              "text": "1. AI機能統合",
              "line_number": 1110
            },
            {
              "level": 4,
              "text": "2. 外部システム連携",
              "line_number": 1115
            },
            {
              "level": 4,
              "text": "3. モバイル対応",
              "line_number": 1120
            },
            {
              "level": 3,
              "text": "🛠️ 技術的考慮事項",
              "line_number": 1125
            },
            {
              "level": 4,
              "text": "パフォーマンス",
              "line_number": 1127
            },
            {
              "level": 4,
              "text": "可用性",
              "line_number": 1132
            },
            {
              "level": 4,
              "text": "拡張性",
              "line_number": 1137
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 27,
          "inline_code": 54,
          "languages": {
            "typescript": 15,
            "sql": 6,
            "vue": 3
          },
          "details": [
            [
              "",
              "[申請者] → [直属上司] → [部門長] → [最終承認者] → [完了]\n    ↓         ↓           ↓           ↓\n  [下書き]   [差戻し]    [差戻し]    [却下]\n    ↓         ↓           ↓           ↓\n  [修正]    [修正]      [修正]      [終了]"
            ],
            [
              "",
              "┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   フロントエンド   │    │   バックエンド    │    │   データベース    │\n│   Vue.js 3      │◄──►│   Express       │◄──►│   PostgreSQL    │\n│   Element Plus  │    │   Prisma ORM    │    │   + 既存テーブル  │\n└─────────────────┘    └─────────────────┘    └─────────────────┘\n         │                       │                       │\n         ▼                       ▼                       ▼\n┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│  ワークフロー画面  │    │  ワークフローAPI  │    │ ワークフロー関連  │\n│  - 申請画面     │    │  - 申請管理      │    │     テーブル     │\n│  - 承認画面     │    │  - 承認処理      │    │  - requests     │\n│  - 管理画面     │    │  - ルート管理     │    │  - approvals    │\n│  - ダッシュボード │    │  - 通知送信      │    │  - workflows    │\n└─────────────────┘    └─────────────────┘    └─────────────────┘"
            ],
            [
              "typescript",
              "Vue.js 3.4.29          // Composition API\nElement Plus 2.8.0     // UI コンポーネント\nTypeScript 5.4.5       // 型安全性\nPinia 2.2.2            // 状態管理\nVue Router 4.4.3       // ルーティング"
            ],
            [
              "typescript",
              "Express 4.19.2         // Webフレームワーク\nPrisma 5.18.0          // ORM（既存統合）\nPostgreSQL 15          // データベース\nJWT                    // 認証（既存連携）"
            ],
            [
              "typescript",
              "// フロントエンド\nvue-flow              // フロー図可視化\nfile-saver            // ファイルダウンロード\nxlsx                  // Excel出力\n\n// バックエンド\nmulter                // ファイルアップロード\nsharp                 // 画像処理\narchiver              // ZIP圧縮"
            ],
            [
              "",
              "┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   users         │    │   companies     │    │  departments    │\n│   (既存)        │    │   (既存)        │    │   (既存)        │\n└─────────────────┘    └─────────────────┘    └─────────────────┘\n         │                       │                       │\n         └───────────────────────┼───────────────────────┘\n                                 │\n         ┌───────────────────────▼───────────────────────┐\n         │            workflow_types                     │\n         │  - id, name, description                     │\n         │  - form_schema (JSONB)                       │\n         │  - company_id                                │\n         └───────────────────┬───────────────────────────┘\n                             │\n         ┌───────────────────▼───────────────────────────┐\n         │           approval_routes                     │\n         │  - id, workflow_type_id                      │\n         │  - department_id                             │\n         │  - route_definition (JSONB)                  │\n         └───────────────────┬───────────────────────────┘\n                             │\n         ┌───────────────────▼───────────────────────────┐\n         │          workflow_requests                    │\n         │  - id, workflow_type_id, requester_id        │\n         │  - title, form_data (JSONB)                  │\n         │  - current_step, status                      │\n         └───────────────────┬───────────────────────────┘\n                             │\n         ┌───────────────────▼───────────────────────────┐\n         │          approval_history                     │\n         │  - id, request_id, step_number               │\n         │  - approver_id, action, comment              │\n         │  - approved_at                               │\n         └─────────────────────────────────────────────────┘"
            ],
            [
              "sql",
              "CREATE TABLE workflow_types (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,                    -- 申請種別名\n  display_name VARCHAR(100) NOT NULL,            -- 表示名\n  description TEXT,                              -- 説明\n  form_schema JSONB NOT NULL,                    -- 動的フォーム定義\n  icon VARCHAR(50),                              -- アイコン名\n  color VARCHAR(20),                             -- テーマカラー\n  is_file_required BOOLEAN DEFAULT false,        -- ファイル添付必須\n  max_file_size INTEGER DEFAULT 10485760,       -- 最大ファイルサイズ(10MB)\n  allowed_file_types VARCHAR(200),               -- 許可ファイル形式\n  auto_approval_amount DECIMAL(15,2),            -- 自動承認金額上限\n  estimated_days INTEGER DEFAULT 3,              -- 標準処理日数\n  is_active BOOLEAN DEFAULT true,\n  company_id INTEGER NOT NULL REFERENCES companies(id),\n  created_by INTEGER REFERENCES users(id),\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT workflow_types_company_name_unique\n    UNIQUE(company_id, name)\n);\n\n-- インデックス\nCREATE INDEX idx_workflow_types_company_active\n  ON workflow_types(company_id, is_active);"
            ],
            [
              "sql",
              "CREATE TABLE approval_routes (\n  id SERIAL PRIMARY KEY,\n  workflow_type_id INTEGER NOT NULL REFERENCES workflow_types(id),\n  department_id INTEGER REFERENCES departments(id),  -- NULL = 全部署共通\n  route_name VARCHAR(100) NOT NULL,                  -- ルート名\n  route_definition JSONB NOT NULL,                   -- ルート定義\n  condition_rules JSONB,                             -- 条件分岐ルール\n  is_default BOOLEAN DEFAULT false,                  -- デフォルトルート\n  priority INTEGER DEFAULT 0,                       -- 優先度（高い順）\n  is_active BOOLEAN DEFAULT true,\n  created_by INTEGER REFERENCES users(id),\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT approval_routes_type_dept_unique\n    UNIQUE(workflow_type_id, department_id, route_name)\n);\n\n-- インデックス\nCREATE INDEX idx_approval_routes_workflow_dept\n  ON approval_routes(workflow_type_id, department_id);"
            ],
            [
              "sql",
              "CREATE TABLE workflow_requests (\n  id SERIAL PRIMARY KEY,\n  request_number VARCHAR(50) UNIQUE NOT NULL,       -- 申請番号\n  workflow_type_id INTEGER NOT NULL REFERENCES workflow_types(id),\n  requester_id INTEGER NOT NULL REFERENCES users(id),\n  title VARCHAR(200) NOT NULL,                      -- 申請タイトル\n  description TEXT,                                 -- 申請概要\n  form_data JSONB NOT NULL,                         -- 申請データ\n  attachments JSONB,                                -- 添付ファイル情報\n  current_step INTEGER DEFAULT 1,                   -- 現在のステップ\n  total_steps INTEGER NOT NULL,                     -- 総ステップ数\n  status VARCHAR(20) DEFAULT 'DRAFT',               -- ステータス\n  urgency VARCHAR(10) DEFAULT 'NORMAL',             -- 緊急度\n  estimated_amount DECIMAL(15,2),                   -- 概算金額\n  due_date DATE,                                    -- 希望完了日\n  actual_start_date TIMESTAMP,                      -- 承認開始日時\n  actual_end_date TIMESTAMP,                        -- 承認完了日時\n  cancel_reason TEXT,                               -- キャンセル理由\n  final_comment TEXT,                               -- 最終コメント\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT workflow_requests_status_check\n    CHECK (status IN ('DRAFT', 'SUBMITTED', 'IN_PROGRESS', 'APPROVED', 'REJECTED', 'CANCELLED')),\n  CONSTRAINT workflow_requests_urgency_check\n    CHECK (urgency IN ('LOW', 'NORMAL', 'HIGH', 'URGENT'))\n);\n\n-- インデックス\nCREATE INDEX idx_workflow_requests_requester_status\n  ON workflow_requests(requester_id, status);\nCREATE INDEX idx_workflow_requests_status_created\n  ON workflow_requests(status, created_at DESC);\nCREATE INDEX idx_workflow_requests_number\n  ON workflow_requests(request_number);"
            ],
            [
              "sql",
              "CREATE TABLE approval_history (\n  id SERIAL PRIMARY KEY,\n  request_id INTEGER NOT NULL REFERENCES workflow_requests(id),\n  step_number INTEGER NOT NULL,                     -- ステップ番号\n  step_name VARCHAR(100),                           -- ステップ名\n  approver_id INTEGER NOT NULL REFERENCES users(id),\n  proxy_approver_id INTEGER REFERENCES users(id),   -- 代理承認者\n  action VARCHAR(20) NOT NULL,                      -- アクション\n  comment TEXT,                                     -- 承認・却下理由\n  attachments JSONB,                                -- 追加添付ファイル\n  ip_address INET,                                  -- IPアドレス\n  user_agent TEXT,                                  -- ユーザーエージェント\n  processing_time INTERVAL,                         -- 処理時間\n  approved_at TIMESTAMP,                            -- 承認日時\n  created_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT approval_history_action_check\n    CHECK (action IN ('APPROVE', 'REJECT', 'RETURN', 'DELEGATE', 'CANCEL', 'TIMEOUT'))\n);\n\n-- インデックス\nCREATE INDEX idx_approval_history_request_step\n  ON approval_history(request_id, step_number);\nCREATE INDEX idx_approval_history_approver\n  ON approval_history(approver_id, approved_at DESC);"
            ],
            [
              "sql",
              "CREATE TABLE approval_delegates (\n  id SERIAL PRIMARY KEY,\n  user_id INTEGER NOT NULL REFERENCES users(id),        -- 本人\n  delegate_id INTEGER NOT NULL REFERENCES users(id),    -- 代理人\n  workflow_type_ids INTEGER[],                          -- 対象申請種別\n  start_date DATE NOT NULL,                             -- 開始日\n  end_date DATE NOT NULL,                               -- 終了日\n  reason TEXT,                                          -- 代理理由\n  max_amount DECIMAL(15,2),                             -- 代理承認上限金額\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT approval_delegates_date_check\n    CHECK (end_date >= start_date),\n  CONSTRAINT approval_delegates_different_users\n    CHECK (user_id != delegate_id)\n);\n\n-- インデックス\nCREATE INDEX idx_approval_delegates_user_period\n  ON approval_delegates(user_id, start_date, end_date);\nCREATE INDEX idx_approval_delegates_delegate_active\n  ON approval_delegates(delegate_id, is_active);"
            ],
            [
              "sql",
              "CREATE TABLE workflow_notifications (\n  id SERIAL PRIMARY KEY,\n  request_id INTEGER NOT NULL REFERENCES workflow_requests(id),\n  user_id INTEGER NOT NULL REFERENCES users(id),\n  notification_type VARCHAR(30) NOT NULL,              -- 通知種別\n  title VARCHAR(200) NOT NULL,                         -- 通知タイトル\n  message TEXT NOT NULL,                               -- 通知内容\n  is_read BOOLEAN DEFAULT false,                       -- 既読フラグ\n  read_at TIMESTAMP,                                   -- 既読日時\n  sent_email BOOLEAN DEFAULT false,                    -- メール送信済み\n  email_sent_at TIMESTAMP,                             -- メール送信日時\n  created_at TIMESTAMP DEFAULT NOW(),\n\n  CONSTRAINT workflow_notifications_type_check\n    CHECK (notification_type IN ('SUBMITTED', 'APPROVAL_REQUIRED', 'APPROVED', 'REJECTED', 'RETURNED', 'CANCELLED', 'REMINDER'))\n);\n\n-- インデックス\nCREATE INDEX idx_workflow_notifications_user_unread\n  ON workflow_notifications(user_id, is_read);\nCREATE INDEX idx_workflow_notifications_request\n  ON workflow_notifications(request_id);"
            ],
            [
              "typescript",
              "// 申請書関連\nGET    /api/workflow/requests                   // 申請一覧取得\nPOST   /api/workflow/requests                   // 申請書作成\nGET    /api/workflow/requests/:id               // 申請詳細取得\nPUT    /api/workflow/requests/:id               // 申請書更新\nDELETE /api/workflow/requests/:id               // 申請キャンセル\nPOST   /api/workflow/requests/:id/submit        // 申請提出\nPOST   /api/workflow/requests/:id/duplicate     // 申請複製\n\n// ファイル管理\nPOST   /api/workflow/requests/:id/attachments   // ファイルアップロード\nGET    /api/workflow/requests/:id/attachments/:fileId  // ファイルダウンロード\nDELETE /api/workflow/requests/:id/attachments/:fileId  // ファイル削除"
            ],
            [
              "typescript",
              "// 承認処理\nGET    /api/workflow/approvals/pending          // 承認待ち一覧\nGET    /api/workflow/approvals/history          // 承認履歴\nPOST   /api/workflow/approvals/:requestId/approve    // 承認\nPOST   /api/workflow/approvals/:requestId/reject     // 却下\nPOST   /api/workflow/approvals/:requestId/return     // 差戻し\nPOST   /api/workflow/approvals/batch             // 一括承認\n\n// 代理承認\nGET    /api/workflow/delegates                   // 代理設定一覧\nPOST   /api/workflow/delegates                   // 代理設定作成\nPUT    /api/workflow/delegates/:id               // 代理設定更新\nDELETE /api/workflow/delegates/:id               // 代理設定削除"
            ],
            [
              "typescript",
              "// ワークフロー種別\nGET    /api/workflow/types                       // 申請種別一覧\nPOST   /api/workflow/types                       // 申請種別作成\nPUT    /api/workflow/types/:id                   // 申請種別更新\nDELETE /api/workflow/types/:id                   // 申請種別削除\n\n// 承認ルート\nGET    /api/workflow/routes                      // 承認ルート一覧\nPOST   /api/workflow/routes                      // 承認ルート作成\nPUT    /api/workflow/routes/:id                  // 承認ルート更新\nDELETE /api/workflow/routes/:id                  // 承認ルート削除\n\n// 統計・レポート\nGET    /api/workflow/statistics/dashboard        // ダッシュボード統計\nGET    /api/workflow/statistics/approver         // 承認者別統計\nGET    /api/workflow/statistics/department       // 部署別統計\nGET    /api/workflow/reports/export              // レポートエクスポート"
            ],
            [
              "typescript",
              "POST /api/workflow/requests\nContent-Type: application/json\n\n// リクエスト\n{\n  workflowTypeId: number,\n  title: string,\n  description?: string,\n  formData: {\n    [key: string]: any\n  },\n  urgency?: 'LOW' | 'NORMAL' | 'HIGH' | 'URGENT',\n  estimatedAmount?: number,\n  dueDate?: string,  // ISO date\n  isDraft?: boolean\n}\n\n// レスポンス\n{\n  success: true,\n  data: {\n    id: number,\n    requestNumber: string,\n    status: string,\n    currentStep: number,\n    totalSteps: number,\n    approvalRoute: [\n      {\n        stepNumber: number,\n        stepName: string,\n        approverIds: number[],\n        approverNames: string[],\n        isParallel: boolean\n      }\n    ],\n    createdAt: string\n  }\n}"
            ],
            [
              "typescript",
              "POST /api/workflow/approvals/:requestId/approve\nContent-Type: application/json\n\n// リクエスト\n{\n  action: 'APPROVE' | 'REJECT' | 'RETURN',\n  comment: string,\n  attachments?: FileInfo[],\n  nextApprovers?: number[]  // 差戻し時の指定承認者\n}\n\n// レスポンス\n{\n  success: true,\n  data: {\n    requestId: number,\n    newStatus: string,\n    nextStep: number,\n    nextApprovers: {\n      userId: number,\n      userName: string,\n      departmentName: string\n    }[],\n    isCompleted: boolean,\n    processingTime: string\n  }\n}"
            ],
            [
              "vue",
              "<template>\n  <div class=\"workflow-dashboard\">\n    <!-- 統計カード -->\n    <el-row :gutter=\"20\" class=\"statistics-cards\">\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <el-statistic\n            title=\"承認待ち\"\n            :value=\"pendingCount\"\n            suffix=\"件\"\n            value-style=\"color: #f56c6c\"\n          />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <el-statistic\n            title=\"今月申請\"\n            :value=\"monthlyRequests\"\n            suffix=\"件\"\n            value-style=\"color: #409eff\"\n          />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <el-statistic\n            title=\"今月承認\"\n            :value=\"monthlyApprovals\"\n            suffix=\"件\"\n            value-style=\"color: #67c23a\"\n          />\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card shadow=\"hover\">\n          <el-statistic\n            title=\"平均処理時間\"\n            :value=\"avgProcessingTime\"\n            suffix=\"時間\"\n            value-style=\"color: #e6a23c\"\n          />\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- チャート -->\n    <el-row :gutter=\"20\" class=\"charts\">\n      <el-col :span=\"12\">\n        <el-card title=\"申請種別別統計\">\n          <workflow-chart type=\"doughnut\" :data=\"typeStatistics\" />\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card title=\"月別申請推移\">\n          <workflow-chart type=\"line\" :data=\"monthlyTrends\" />\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 最近の活動 -->\n    <el-card title=\"最近の活動\">\n      <workflow-activity-timeline :activities=\"recentActivities\" />\n    </el-card>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"request-creation\">\n    <el-form\n      ref=\"requestForm\"\n      :model=\"request\"\n      :rules=\"validationRules\"\n      label-width=\"120px\"\n    >\n      <!-- 基本情報 -->\n      <el-card title=\"基本情報\" class=\"form-section\">\n        <el-form-item label=\"申請種別\" prop=\"workflowTypeId\" required>\n          <el-select\n            v-model=\"request.workflowTypeId\"\n            placeholder=\"申請種別を選択\"\n            @change=\"onWorkflowTypeChange\"\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"type in workflowTypes\"\n              :key=\"type.id\"\n              :label=\"type.displayName\"\n              :value=\"type.id\"\n            >\n              <span style=\"float: left\">\n                <el-icon :color=\"type.color\">\n                  <component :is=\"type.icon\" />\n                </el-icon>\n                {{ type.displayName }}\n              </span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\n                {{ type.estimatedDays }}日\n              </span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"申請タイトル\" prop=\"title\" required>\n          <el-input\n            v-model=\"request.title\"\n            placeholder=\"申請内容を簡潔に入力\"\n            maxlength=\"200\"\n            show-word-limit\n          />\n        </el-form-item>\n\n        <el-form-item label=\"緊急度\" prop=\"urgency\">\n          <el-radio-group v-model=\"request.urgency\">\n            <el-radio-button label=\"LOW\">低</el-radio-button>\n            <el-radio-button label=\"NORMAL\">普通</el-radio-button>\n            <el-radio-button label=\"HIGH\">高</el-radio-button>\n            <el-radio-button label=\"URGENT\">緊急</el-radio-button>\n          </el-radio-group>\n        </el-form-item>\n      </el-card>\n\n      <!-- 動的フォーム -->\n      <el-card title=\"申請内容\" class=\"form-section\" v-if=\"formSchema\">\n        <dynamic-workflow-form\n          :schema=\"formSchema\"\n          v-model=\"request.formData\"\n          :validation-rules=\"dynamicValidationRules\"\n        />\n      </el-card>\n\n      <!-- ファイル添付 -->\n      <el-card title=\"添付ファイル\" class=\"form-section\">\n        <workflow-file-upload\n          v-model=\"request.attachments\"\n          :max-size=\"selectedType?.maxFileSize\"\n          :allowed-types=\"selectedType?.allowedFileTypes\"\n          :required=\"selectedType?.isFileRequired\"\n        />\n      </el-card>\n\n      <!-- 承認ルートプレビュー -->\n      <el-card title=\"承認ルート\" class=\"form-section\" v-if=\"approvalRoute\">\n        <approval-route-preview\n          :route=\"approvalRoute\"\n          :estimated-days=\"selectedType?.estimatedDays\"\n        />\n      </el-card>\n    </el-form>\n\n    <!-- アクションボタン -->\n    <div class=\"form-actions\">\n      <el-button @click=\"saveDraft\" :loading=\"saving\">\n        下書き保存\n      </el-button>\n      <el-button\n        type=\"primary\"\n        @click=\"submitRequest\"\n        :loading=\"submitting\"\n      >\n        申請する\n      </el-button>\n      <el-button @click=\"previewRequest\">\n        プレビュー\n      </el-button>\n    </div>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"approval-management\">\n    <!-- フィルタ・検索 -->\n    <el-card class=\"filter-card\">\n      <el-form :model=\"filters\" inline>\n        <el-form-item label=\"申請種別\">\n          <el-select v-model=\"filters.workflowTypeId\" clearable>\n            <el-option\n              v-for=\"type in workflowTypes\"\n              :key=\"type.id\"\n              :label=\"type.displayName\"\n              :value=\"type.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"緊急度\">\n          <el-select v-model=\"filters.urgency\" clearable>\n            <el-option label=\"緊急\" value=\"URGENT\" />\n            <el-option label=\"高\" value=\"HIGH\" />\n            <el-option label=\"普通\" value=\"NORMAL\" />\n            <el-option label=\"低\" value=\"LOW\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"申請者\">\n          <user-select v-model=\"filters.requesterId\" clearable />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"searchApprovals\">\n            検索\n          </el-button>\n          <el-button @click=\"resetFilters\">\n            リセット\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 承認待ち一覧 -->\n    <el-card title=\"承認待ち一覧\">\n      <el-table\n        :data=\"pendingApprovals\"\n        row-key=\"id\"\n        @selection-change=\"onSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\" />\n\n        <el-table-column label=\"緊急度\" width=\"80\">\n          <template #default=\"{ row }\">\n            <el-tag\n              :type=\"getUrgencyType(row.urgency)\"\n              size=\"small\"\n            >\n              {{ getUrgencyLabel(row.urgency) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n\n        <el-table-column prop=\"requestNumber\" label=\"申請番号\" width=\"120\" />\n\n        <el-table-column label=\"申請内容\" min-width=\"200\">\n          <template #default=\"{ row }\">\n            <div class=\"request-summary\">\n              <div class=\"title\">{{ row.title }}</div>\n              <div class=\"type\">{{ row.workflowType.displayName }}</div>\n            </div>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"申請者\" width=\"120\">\n          <template #default=\"{ row }\">\n            <user-avatar\n              :user=\"row.requester\"\n              size=\"small\"\n              show-name\n            />\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"申請日\" width=\"120\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.createdAt) }}\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"待機時間\" width=\"100\">\n          <template #default=\"{ row }\">\n            <waiting-time-badge :created-at=\"row.createdAt\" />\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button-group>\n              <el-button\n                size=\"small\"\n                @click=\"viewDetail(row)\"\n              >\n                詳細\n              </el-button>\n              <el-button\n                size=\"small\"\n                type=\"success\"\n                @click=\"quickApprove(row)\"\n              >\n                承認\n              </el-button>\n              <el-button\n                size=\"small\"\n                type=\"danger\"\n                @click=\"quickReject(row)\"\n              >\n                却下\n              </el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 一括操作 -->\n      <div class=\"batch-operations\" v-if=\"selectedApprovals.length > 0\">\n        <el-alert\n          type=\"info\"\n          :title=\"`${selectedApprovals.length}件選択中`\"\n          show-icon\n        />\n        <el-button-group>\n          <el-button type=\"success\" @click=\"batchApprove\">\n            一括承認\n          </el-button>\n          <el-button type=\"danger\" @click=\"batchReject\">\n            一括却下\n          </el-button>\n        </el-button-group>\n      </div>\n    </el-card>\n  </div>\n</template>"
            ],
            [
              "typescript",
              "// 既存認証システムと完全連携\ninterface WorkflowJWTPayload extends JWTPayload {\n  workflowPermissions: {\n    canCreateRequest: boolean,\n    canApproveAnyRequest: boolean,\n    canManageWorkflow: boolean,\n    approvableTypes: number[],\n    maxApprovalAmount: number\n  }\n}"
            ],
            [
              "typescript",
              "// 権限レベル定義\nenum WorkflowPermission {\n  // 申請権限\n  CREATE_REQUEST = 'WORKFLOW_CREATE_REQUEST',\n  VIEW_OWN_REQUESTS = 'WORKFLOW_VIEW_OWN_REQUESTS',\n  CANCEL_OWN_REQUEST = 'WORKFLOW_CANCEL_OWN_REQUEST',\n\n  // 承認権限\n  APPROVE_REQUESTS = 'WORKFLOW_APPROVE_REQUESTS',\n  APPROVE_HIGH_AMOUNT = 'WORKFLOW_APPROVE_HIGH_AMOUNT',\n  DELEGATE_APPROVAL = 'WORKFLOW_DELEGATE_APPROVAL',\n\n  // 管理権限\n  MANAGE_WORKFLOW_TYPES = 'WORKFLOW_MANAGE_TYPES',\n  MANAGE_APPROVAL_ROUTES = 'WORKFLOW_MANAGE_ROUTES',\n  VIEW_ALL_REQUESTS = 'WORKFLOW_VIEW_ALL_REQUESTS',\n  EXPORT_REPORTS = 'WORKFLOW_EXPORT_REPORTS'\n}"
            ],
            [
              "typescript",
              "// 機密データの暗号化\nconst encryptSensitiveData = (data: any): string => {\n  const cipher = crypto.createCipher('aes-256-cbc', process.env.ENCRYPTION_KEY)\n  let encrypted = cipher.update(JSON.stringify(data), 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\n// 申請データの機密情報暗号化\nconst request = {\n  formData: encryptSensitiveData(request.formData),\n  // その他のフィールド\n}"
            ],
            [
              "typescript",
              "// ファイルアップロード制限\nconst fileSecurityConfig = {\n  maxFileSize: 10 * 1024 * 1024, // 10MB\n  allowedTypes: [\n    'application/pdf',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'image/jpeg',\n    'image/png'\n  ],\n  scanForMalware: true,\n  quarantineSuspicious: true\n}"
            ],
            [
              "typescript",
              "// 監査ログエントリ\ninterface WorkflowAuditLog {\n  id: string,\n  requestId: number,\n  userId: number,\n  action: string,\n  targetType: string,\n  targetId: string,\n  oldValue: any,\n  newValue: any,\n  ipAddress: string,\n  userAgent: string,\n  sessionId: string,\n  timestamp: Date,\n\n  // ワークフロー固有\n  stepNumber?: number,\n  approvalAction?: string,\n  processingTime?: number,\n  riskScore?: number\n}"
            ],
            [
              "typescript",
              "// 既存テーブルとの関連\nworkflow_requests.requester_id → users.id\napproval_routes.department_id → departments.id\nworkflow_types.company_id → companies.id"
            ],
            [
              "typescript",
              "// 既存RBAC権限システムの拡張\nconst workflowPermissions = [\n  'WORKFLOW_CREATE_REQUEST',\n  'WORKFLOW_APPROVE_REQUESTS',\n  'WORKFLOW_MANAGE_TYPES',\n  'WORKFLOW_VIEW_REPORTS'\n]"
            ]
          ]
        },
        "tables": {
          "total": 5,
          "total_rows": 36
        }
      },
      "readability": {
        "score": 90.86,
        "sentences": 161,
        "avg_words_per_sentence": 16.78,
        "long_sentences": 30,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.76
    },
    "docs/06-トラブルシューティング.md": {
      "basic_metrics": {
        "lines": 703,
        "words": 1577,
        "characters": 12672,
        "avg_line_length": 18.025604551920342
      },
      "structure_analysis": {
        "headers": {
          "total": 174,
          "hierarchy": [
            {
              "level": 1,
              "text": "トラブルシューティング・メンテナンスガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "環境診断",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "基本ヘルスチェック",
              "line_number": 9
            },
            {
              "level": 4,
              "text": "システム全体の状態確認",
              "line_number": 11
            },
            {
              "level": 1,
              "text": "サービス状態確認",
              "line_number": 13
            },
            {
              "level": 1,
              "text": "期待される出力:",
              "line_number": 17
            },
            {
              "level": 1,
              "text": "NAME                COMMAND                  SERVICE             STATUS              PORTS",
              "line_number": 18
            },
            {
              "level": 1,
              "text": "websys_backend_dev  \"sh -c 'npm install…\"   backend             Up 10 minutes       0.0.0.0:8000->8000/tcp",
              "line_number": 19
            },
            {
              "level": 1,
              "text": "websys_frontend_dev \"sh -c 'npm install…\"   frontend            Up 10 minutes       0.0.0.0:3000->3000/tcp",
              "line_number": 20
            },
            {
              "level": 1,
              "text": "websys_postgres_dev \"docker-entrypoint.s…\"   postgres            Up 10 minutes       0.0.0.0:5432->5432/tcp",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "個別サービス確認",
              "line_number": 24
            },
            {
              "level": 1,
              "text": "フロントエンド確認",
              "line_number": 26
            },
            {
              "level": 1,
              "text": "期待: HTTP/1.1 200 OK",
              "line_number": 28
            },
            {
              "level": 1,
              "text": "バックエンドAPI確認",
              "line_number": 30
            },
            {
              "level": 1,
              "text": "期待: {\"status\": \"OK\", \"message\": \"Server is running\"}",
              "line_number": 32
            },
            {
              "level": 1,
              "text": "データベース確認",
              "line_number": 34
            },
            {
              "level": 1,
              "text": "期待: postgres:5432 - accepting connections",
              "line_number": 36
            },
            {
              "level": 4,
              "text": "リソース使用状況",
              "line_number": 39
            },
            {
              "level": 1,
              "text": "Docker リソース使用量",
              "line_number": 41
            },
            {
              "level": 1,
              "text": "システムリソース",
              "line_number": 44
            },
            {
              "level": 2,
              "text": "よくある問題と解決策",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "1. 環境起動の問題",
              "line_number": 52
            },
            {
              "level": 4,
              "text": "問題: ポートが既に使用されている",
              "line_number": 54
            },
            {
              "level": 1,
              "text": "ポート使用状況確認",
              "line_number": 61
            },
            {
              "level": 1,
              "text": "プロセス確認",
              "line_number": 66
            },
            {
              "level": 1,
              "text": "使用中プロセスを停止",
              "line_number": 72
            },
            {
              "level": 1,
              "text": "または、別のポートを使用",
              "line_number": 75
            },
            {
              "level": 1,
              "text": "docker-compose.yml で ports を変更",
              "line_number": 76
            },
            {
              "level": 4,
              "text": "問題: Dockerデーモンが起動していない",
              "line_number": 81
            },
            {
              "level": 1,
              "text": "エラーが出る場合はDockerが起動していない",
              "line_number": 89
            },
            {
              "level": 1,
              "text": "Docker起動",
              "line_number": 94
            },
            {
              "level": 1,
              "text": "自動起動設定",
              "line_number": 97
            },
            {
              "level": 1,
              "text": "権限エラーの場合",
              "line_number": 100
            },
            {
              "level": 1,
              "text": "再ログインが必要",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "問題: workspace ディレクトリが存在しない",
              "line_number": 105
            },
            {
              "level": 1,
              "text": "ワークスペース初期化",
              "line_number": 112
            },
            {
              "level": 1,
              "text": "または手動で修復",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "2. フロントエンド関連の問題",
              "line_number": 120
            },
            {
              "level": 4,
              "text": "問題: npm install が失敗する",
              "line_number": 122
            },
            {
              "level": 1,
              "text": "コンテナ内でログ確認",
              "line_number": 129
            },
            {
              "level": 1,
              "text": "ネットワーク確認",
              "line_number": 132
            },
            {
              "level": 1,
              "text": "node_modules削除して再インストール",
              "line_number": 138
            },
            {
              "level": 1,
              "text": "または、キャッシュクリア",
              "line_number": 142
            },
            {
              "level": 4,
              "text": "問題: Vite dev server が起動しない",
              "line_number": 147
            },
            {
              "level": 1,
              "text": "Vite設定確認",
              "line_number": 154
            },
            {
              "level": 1,
              "text": "vite.config.ts",
              "line_number": 155
            },
            {
              "level": 1,
              "text": "コンテナ再起動",
              "line_number": 161
            },
            {
              "level": 4,
              "text": "問題: API呼び出しでCORSエラー",
              "line_number": 165
            },
            {
              "level": 1,
              "text": "バックエンドのCORS設定確認",
              "line_number": 172
            },
            {
              "level": 3,
              "text": "3. バックエンド関連の問題",
              "line_number": 189
            },
            {
              "level": 4,
              "text": "問題: Prisma接続エラー",
              "line_number": 191
            },
            {
              "level": 1,
              "text": "データベース接続確認",
              "line_number": 198
            },
            {
              "level": 1,
              "text": "環境変数確認",
              "line_number": 201
            },
            {
              "level": 1,
              "text": "データベース再起動",
              "line_number": 207
            },
            {
              "level": 1,
              "text": "Prismaクライアント再生成",
              "line_number": 210
            },
            {
              "level": 1,
              "text": "マイグレーション状態確認",
              "line_number": 213
            },
            {
              "level": 4,
              "text": "問題: JWT認証エラー",
              "line_number": 217
            },
            {
              "level": 1,
              "text": "JWT_SECRET確認",
              "line_number": 224
            },
            {
              "level": 1,
              "text": "トークンデコード（デバッグ用）",
              "line_number": 227
            },
            {
              "level": 1,
              "text": "新しいJWT_SECRET生成",
              "line_number": 233
            },
            {
              "level": 1,
              "text": "サーバー再起動",
              "line_number": 236
            },
            {
              "level": 4,
              "text": "問題: TypeScript コンパイルエラー",
              "line_number": 240
            },
            {
              "level": 1,
              "text": "TypeScript設定確認",
              "line_number": 247
            },
            {
              "level": 1,
              "text": "型定義確認",
              "line_number": 250
            },
            {
              "level": 1,
              "text": "型定義再インストール",
              "line_number": 256
            },
            {
              "level": 1,
              "text": "TypeScript キャッシュクリア",
              "line_number": 259
            },
            {
              "level": 3,
              "text": "4. データベース関連の問題",
              "line_number": 264
            },
            {
              "level": 4,
              "text": "問題: PostgreSQLに接続できない",
              "line_number": 266
            },
            {
              "level": 1,
              "text": "PostgreSQL状態確認",
              "line_number": 273
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 276
            },
            {
              "level": 1,
              "text": "ネットワーク確認",
              "line_number": 279
            },
            {
              "level": 1,
              "text": "PostgreSQL再起動",
              "line_number": 286
            },
            {
              "level": 1,
              "text": "データベース初期化（データ消失注意）",
              "line_number": 289
            },
            {
              "level": 1,
              "text": "接続テスト",
              "line_number": 293
            },
            {
              "level": 4,
              "text": "問題: マイグレーションエラー",
              "line_number": 297
            },
            {
              "level": 1,
              "text": "マイグレーション状態確認",
              "line_number": 304
            },
            {
              "level": 1,
              "text": "データベーススキーマ確認",
              "line_number": 307
            },
            {
              "level": 1,
              "text": "マイグレーション履歴リセット（開発環境のみ）",
              "line_number": 313
            },
            {
              "level": 1,
              "text": "または、手動で修正",
              "line_number": 316
            },
            {
              "level": 4,
              "text": "問題: データベース容量不足",
              "line_number": 320
            },
            {
              "level": 1,
              "text": "ディスク使用量確認",
              "line_number": 327
            },
            {
              "level": 1,
              "text": "PostgreSQL データサイズ確認",
              "line_number": 331
            },
            {
              "level": 1,
              "text": "不要なDockerオブジェクト削除",
              "line_number": 345
            },
            {
              "level": 1,
              "text": "ログファイル削除",
              "line_number": 348
            },
            {
              "level": 1,
              "text": "データベースクリーンアップ",
              "line_number": 351
            },
            {
              "level": 3,
              "text": "5. ネットワーク関連の問題",
              "line_number": 355
            },
            {
              "level": 4,
              "text": "問題: サービス間通信エラー",
              "line_number": 357
            },
            {
              "level": 1,
              "text": "Docker ネットワーク確認",
              "line_number": 364
            },
            {
              "level": 1,
              "text": "サービス名解決確認",
              "line_number": 368
            },
            {
              "level": 1,
              "text": "ネットワーク再作成",
              "line_number": 375
            },
            {
              "level": 1,
              "text": "または、明示的にネットワーク作成",
              "line_number": 379
            },
            {
              "level": 4,
              "text": "問題: SSL/TLS証明書エラー（本番環境）",
              "line_number": 383
            },
            {
              "level": 1,
              "text": "証明書確認",
              "line_number": 390
            },
            {
              "level": 1,
              "text": "証明書チェーン確認",
              "line_number": 393
            },
            {
              "level": 1,
              "text": "Let's Encrypt証明書更新",
              "line_number": 399
            },
            {
              "level": 1,
              "text": "手動更新",
              "line_number": 402
            },
            {
              "level": 2,
              "text": "パフォーマンス問題",
              "line_number": 406
            },
            {
              "level": 3,
              "text": "1. 応答速度の低下",
              "line_number": 408
            },
            {
              "level": 4,
              "text": "診断手順",
              "line_number": 410
            },
            {
              "level": 1,
              "text": "API応答時間測定",
              "line_number": 412
            },
            {
              "level": 1,
              "text": "curl-format.txt:",
              "line_number": 415
            },
            {
              "level": 1,
              "text": "time_namelookup:  %{time_namelookup}\\n",
              "line_number": 416
            },
            {
              "level": 1,
              "text": "time_connect:  %{time_connect}\\n",
              "line_number": 417
            },
            {
              "level": 1,
              "text": "time_appconnect:  %{time_appconnect}\\n",
              "line_number": 418
            },
            {
              "level": 1,
              "text": "time_pretransfer:  %{time_pretransfer}\\n",
              "line_number": 419
            },
            {
              "level": 1,
              "text": "time_redirect:  %{time_redirect}\\n",
              "line_number": 420
            },
            {
              "level": 1,
              "text": "time_starttransfer:  %{time_starttransfer}\\n",
              "line_number": 421
            },
            {
              "level": 1,
              "text": "----------\\n",
              "line_number": 422
            },
            {
              "level": 1,
              "text": "time_total:  %{time_total}\\n",
              "line_number": 423
            },
            {
              "level": 1,
              "text": "データベースクエリ分析",
              "line_number": 425
            },
            {
              "level": 4,
              "text": "最適化手順",
              "line_number": 434
            },
            {
              "level": 1,
              "text": "1. データベースインデックス作成",
              "line_number": 436
            },
            {
              "level": 1,
              "text": "2. アプリケーションレベルキャッシュ",
              "line_number": 441
            },
            {
              "level": 1,
              "text": "backend/src/services/cache.ts",
              "line_number": 442
            },
            {
              "level": 1,
              "text": "3. データベース統計更新",
              "line_number": 446
            },
            {
              "level": 3,
              "text": "2. メモリ使用量増加",
              "line_number": 450
            },
            {
              "level": 4,
              "text": "診断",
              "line_number": 452
            },
            {
              "level": 1,
              "text": "Node.js メモリプロファイル",
              "line_number": 454
            },
            {
              "level": 1,
              "text": "PostgreSQL メモリ使用量",
              "line_number": 457
            },
            {
              "level": 4,
              "text": "対策",
              "line_number": 467
            },
            {
              "level": 2,
              "text": "定期メンテナンス",
              "line_number": 481
            },
            {
              "level": 3,
              "text": "日次メンテナンス",
              "line_number": 483
            },
            {
              "level": 4,
              "text": "ログローテーション",
              "line_number": 485
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 487
            },
            {
              "level": 1,
              "text": "scripts/daily-maintenance.sh",
              "line_number": 488
            },
            {
              "level": 1,
              "text": "Docker ログクリア",
              "line_number": 490
            },
            {
              "level": 1,
              "text": "アプリケーションログアーカイブ",
              "line_number": 494
            },
            {
              "level": 4,
              "text": "データベースメンテナンス",
              "line_number": 499
            },
            {
              "level": 1,
              "text": "バキューム処理",
              "line_number": 501
            },
            {
              "level": 1,
              "text": "統計情報更新",
              "line_number": 504
            },
            {
              "level": 3,
              "text": "週次メンテナンス",
              "line_number": 510
            },
            {
              "level": 4,
              "text": "システムアップデート",
              "line_number": 512
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 514
            },
            {
              "level": 1,
              "text": "scripts/weekly-maintenance.sh",
              "line_number": 515
            },
            {
              "level": 1,
              "text": "セキュリティアップデート",
              "line_number": 517
            },
            {
              "level": 1,
              "text": "Docker イメージ更新",
              "line_number": 520
            },
            {
              "level": 1,
              "text": "不要ファイル削除",
              "line_number": 524
            },
            {
              "level": 4,
              "text": "バックアップ検証",
              "line_number": 529
            },
            {
              "level": 1,
              "text": "バックアップ復元テスト",
              "line_number": 531
            },
            {
              "level": 3,
              "text": "月次メンテナンス",
              "line_number": 538
            },
            {
              "level": 4,
              "text": "セキュリティ監査",
              "line_number": 540
            },
            {
              "level": 1,
              "text": "Docker イメージ脆弱性スキャン",
              "line_number": 542
            },
            {
              "level": 1,
              "text": "依存関係監査",
              "line_number": 546
            },
            {
              "level": 4,
              "text": "パフォーマンス分析",
              "line_number": 551
            },
            {
              "level": 2,
              "text": "緊急時対応",
              "line_number": 576
            },
            {
              "level": 3,
              "text": "1. サービス完全停止",
              "line_number": 578
            },
            {
              "level": 4,
              "text": "対応手順",
              "line_number": 580
            },
            {
              "level": 1,
              "text": "1. 状況確認",
              "line_number": 582
            },
            {
              "level": 1,
              "text": "2. 緊急再起動",
              "line_number": 586
            },
            {
              "level": 1,
              "text": "3. ログ確認",
              "line_number": 590
            },
            {
              "level": 1,
              "text": "4. ヘルスチェック",
              "line_number": 593
            },
            {
              "level": 3,
              "text": "2. データベース障害",
              "line_number": 597
            },
            {
              "level": 4,
              "text": "対応手順",
              "line_number": 599
            },
            {
              "level": 1,
              "text": "1. データベース状態確認",
              "line_number": 601
            },
            {
              "level": 1,
              "text": "2. バックアップから復旧",
              "line_number": 604
            },
            {
              "level": 1,
              "text": "3. 最新バックアップ復元",
              "line_number": 609
            },
            {
              "level": 1,
              "text": "4. アプリケーション再起動",
              "line_number": 612
            },
            {
              "level": 3,
              "text": "3. セキュリティインシデント",
              "line_number": 616
            },
            {
              "level": 4,
              "text": "対応手順",
              "line_number": 618
            },
            {
              "level": 1,
              "text": "1. 即座にサービス停止",
              "line_number": 620
            },
            {
              "level": 1,
              "text": "2. ログ保全",
              "line_number": 623
            },
            {
              "level": 1,
              "text": "3. ネットワーク遮断",
              "line_number": 627
            },
            {
              "level": 1,
              "text": "4. 管理者への通知",
              "line_number": 631
            },
            {
              "level": 2,
              "text": "監視・アラート設定",
              "line_number": 635
            },
            {
              "level": 3,
              "text": "Prometheus アラートルール",
              "line_number": 637
            },
            {
              "level": 1,
              "text": "monitoring/alert-rules.yml",
              "line_number": 639
            },
            {
              "level": 3,
              "text": "ログ監視",
              "line_number": 668
            },
            {
              "level": 1,
              "text": "journalctl でシステムログ監視",
              "line_number": 670
            },
            {
              "level": 1,
              "text": "アプリケーションログ監視",
              "line_number": 673
            },
            {
              "level": 1,
              "text": "リアルタイムエラー検出",
              "line_number": 676
            },
            {
              "level": 2,
              "text": "復旧チェックリスト",
              "line_number": 680
            },
            {
              "level": 3,
              "text": "サービス復旧後の確認項目",
              "line_number": 682
            },
            {
              "level": 3,
              "text": "文書化必須項目",
              "line_number": 695
            }
          ],
          "hierarchy_issues": [
            {
              "line": 24,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 39,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 81,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 105,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 120,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 147,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 165,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 189,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 217,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 240,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 264,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 297,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 320,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 355,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 383,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 434,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 450,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 467,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 499,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 510,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 529,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 538,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 551,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 597,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 616,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 668,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 58,
          "inline_code": 115,
          "languages": {
            "bash": 40,
            "typescript": 1,
            "javascript": 1,
            "sql": 1,
            "yaml": 1
          },
          "details": [
            [
              "bash",
              "# サービス状態確認\ncd infrastructure/docker/development\ndocker-compose ps\n\n# 期待される出力:\n# NAME                COMMAND                  SERVICE             STATUS              PORTS\n# websys_backend_dev  \"sh -c 'npm install…\"   backend             Up 10 minutes       0.0.0.0:8000->8000/tcp\n# websys_frontend_dev \"sh -c 'npm install…\"   frontend            Up 10 minutes       0.0.0.0:3000->3000/tcp\n# websys_postgres_dev \"docker-entrypoint.s…\"   postgres            Up 10 minutes       0.0.0.0:5432->5432/tcp"
            ],
            [
              "bash",
              "# フロントエンド確認\ncurl -I http://localhost:3000\n# 期待: HTTP/1.1 200 OK\n\n# バックエンドAPI確認\ncurl -s http://localhost:8000/health | jq\n# 期待: {\"status\": \"OK\", \"message\": \"Server is running\"}\n\n# データベース確認\ndocker-compose exec postgres pg_isready -U admin\n# 期待: postgres:5432 - accepting connections"
            ],
            [
              "bash",
              "# Docker リソース使用量\ndocker stats --no-stream\n\n# システムリソース\nhtop\ndf -h\nfree -h"
            ],
            [
              "",
              "Error: bind: address already in use"
            ],
            [
              "bash",
              "# ポート使用状況確認\nlsof -i :3000\nlsof -i :8000\nlsof -i :5432\n\n# プロセス確認\nnetstat -tulpn | grep :3000"
            ],
            [
              "bash",
              "# 使用中プロセスを停止\nsudo kill -9 <PID>\n\n# または、別のポートを使用\n# docker-compose.yml で ports を変更\nports:\n  - \"3001:3000\"  # 3001番ポートにマッピング"
            ],
            [
              "",
              "Cannot connect to the Docker daemon"
            ],
            [
              "bash",
              "docker info\n# エラーが出る場合はDockerが起動していない"
            ],
            [
              "bash",
              "# Docker起動\nsudo systemctl start docker\n\n# 自動起動設定\nsudo systemctl enable docker\n\n# 権限エラーの場合\nsudo usermod -aG docker $USER\n# 再ログインが必要"
            ],
            [
              "",
              "Error: workspace/frontend not found"
            ],
            [
              "bash",
              "# ワークスペース初期化\n./infrastructure/scripts/init-workspace.sh\n\n# または手動で修復\ncp -r templates/frontend-vue workspace/frontend\ncp -r templates/backend-express workspace/backend"
            ],
            [
              "",
              "npm ERR! network timeout"
            ],
            [
              "bash",
              "# コンテナ内でログ確認\ndocker-compose logs frontend\n\n# ネットワーク確認\ndocker-compose exec frontend ping google.com"
            ],
            [
              "bash",
              "# node_modules削除して再インストール\ndocker-compose exec frontend rm -rf node_modules\ndocker-compose restart frontend\n\n# または、キャッシュクリア\ndocker-compose exec frontend npm cache clean --force\ndocker-compose restart frontend"
            ],
            [
              "",
              "Error: EADDRINUSE: address already in use :::3000"
            ],
            [
              "bash",
              "# Vite設定確認\n# vite.config.ts\nserver: {\n  host: '0.0.0.0',\n  port: 3000\n}\n\n# コンテナ再起動\ndocker-compose restart frontend"
            ],
            [
              "",
              "Access to fetch blocked by CORS policy"
            ],
            [
              "bash",
              "# バックエンドのCORS設定確認\ndocker-compose exec backend cat src/index.ts | grep cors"
            ],
            [
              "typescript",
              "// backend/src/index.ts\nimport cors from 'cors'\n\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production'\n    ? 'https://your-domain.com'\n    : 'http://localhost:3000',\n  credentials: true\n}))"
            ],
            [
              "",
              "PrismaClientInitializationError: Can't reach database server"
            ],
            [
              "bash",
              "# データベース接続確認\ndocker-compose exec backend npx prisma db pull\n\n# 環境変数確認\ndocker-compose exec backend env | grep DATABASE_URL"
            ],
            [
              "bash",
              "# データベース再起動\ndocker-compose restart postgres\n\n# Prismaクライアント再生成\ndocker-compose exec backend npx prisma generate\n\n# マイグレーション状態確認\ndocker-compose exec backend npx prisma migrate status"
            ],
            [
              "",
              "JsonWebTokenError: invalid signature"
            ],
            [
              "bash",
              "# JWT_SECRET確認\ndocker-compose exec backend env | grep JWT_SECRET\n\n# トークンデコード（デバッグ用）\nnode -e \"console.log(require('jsonwebtoken').decode('YOUR_TOKEN_HERE'))\""
            ],
            [
              "bash",
              "# 新しいJWT_SECRET生成\n./infrastructure/scripts/generate-env.sh development\n\n# サーバー再起動\ndocker-compose restart backend"
            ],
            [
              "",
              "error TS2304: Cannot find name 'Express'"
            ],
            [
              "bash",
              "# TypeScript設定確認\ndocker-compose exec backend cat tsconfig.json\n\n# 型定義確認\ndocker-compose exec backend ls node_modules/@types/"
            ],
            [
              "bash",
              "# 型定義再インストール\ndocker-compose exec backend npm install @types/express @types/node\n\n# TypeScript キャッシュクリア\ndocker-compose exec backend npx tsc --build --clean\ndocker-compose restart backend"
            ],
            [
              "",
              "psql: error: connection to server failed"
            ],
            [
              "bash",
              "# PostgreSQL状態確認\ndocker-compose exec postgres pg_isready -U admin\n\n# ログ確認\ndocker-compose logs postgres\n\n# ネットワーク確認\ndocker network ls\ndocker network inspect websys_network_dev"
            ],
            [
              "bash",
              "# PostgreSQL再起動\ndocker-compose restart postgres\n\n# データベース初期化（データ消失注意）\ndocker-compose down -v\ndocker-compose up -d postgres\n\n# 接続テスト\ndocker-compose exec postgres psql -U admin -d websys_db -c \"SELECT 1;\""
            ],
            [
              "",
              "Migration failed: relation already exists"
            ],
            [
              "bash",
              "# マイグレーション状態確認\ndocker-compose exec backend npx prisma migrate status\n\n# データベーススキーマ確認\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\\dt\""
            ],
            [
              "bash",
              "# マイグレーション履歴リセット（開発環境のみ）\ndocker-compose exec backend npx prisma migrate reset\n\n# または、手動で修正\ndocker-compose exec backend npx prisma migrate resolve --applied <migration_name>"
            ],
            [
              "",
              "ERROR: could not extend file: No space left on device"
            ],
            [
              "bash",
              "# ディスク使用量確認\ndf -h\ndocker system df\n\n# PostgreSQL データサイズ確認\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\nSELECT\n    schemaname,\n    tablename,\n    pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables\nWHERE schemaname = 'public'\nORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;\n\""
            ],
            [
              "bash",
              "# 不要なDockerオブジェクト削除\ndocker system prune -a\n\n# ログファイル削除\ndocker-compose exec postgres find /var/log -name \"*.log\" -type f -delete\n\n# データベースクリーンアップ\ndocker-compose exec postgres psql -U admin -d websys_db -c \"VACUUM FULL;\""
            ],
            [
              "",
              "Error: connect ECONNREFUSED backend:8000"
            ],
            [
              "bash",
              "# Docker ネットワーク確認\ndocker network ls\ndocker network inspect websys_network_dev\n\n# サービス名解決確認\ndocker-compose exec frontend nslookup backend\ndocker-compose exec backend nslookup postgres"
            ],
            [
              "bash",
              "# ネットワーク再作成\ndocker-compose down\ndocker-compose up -d\n\n# または、明示的にネットワーク作成\ndocker network create websys_network_dev"
            ],
            [
              "",
              "SSL certificate problem: certificate verify failed"
            ],
            [
              "bash",
              "# 証明書確認\nopenssl x509 -in /path/to/cert.pem -text -noout\n\n# 証明書チェーン確認\nopenssl s_client -connect your-domain.com:443 -servername your-domain.com"
            ],
            [
              "bash",
              "# Let's Encrypt証明書更新\ncertbot renew\n\n# 手動更新\ncertbot certonly --nginx -d your-domain.com"
            ],
            [
              "bash",
              "# API応答時間測定\ncurl -w \"@curl-format.txt\" -s -o /dev/null http://localhost:8000/api/users\n\n# curl-format.txt:\n#      time_namelookup:  %{time_namelookup}\\n\n#         time_connect:  %{time_connect}\\n\n#      time_appconnect:  %{time_appconnect}\\n\n#     time_pretransfer:  %{time_pretransfer}\\n\n#        time_redirect:  %{time_redirect}\\n\n#   time_starttransfer:  %{time_starttransfer}\\n\n#                     ----------\\n\n#         time_total:  %{time_total}\\n\n\n# データベースクエリ分析\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\nSELECT query, calls, total_time, mean_time\nFROM pg_stat_statements\nORDER BY mean_time DESC\nLIMIT 10;\n\""
            ],
            [
              "bash",
              "# 1. データベースインデックス作成\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\nCREATE INDEX CONCURRENTLY idx_users_email ON users(email);\n\"\n\n# 2. アプリケーションレベルキャッシュ\n# backend/src/services/cache.ts\nimport NodeCache from 'node-cache'\nconst cache = new NodeCache({ stdTTL: 600 })\n\n# 3. データベース統計更新\ndocker-compose exec postgres psql -U admin -d websys_db -c \"ANALYZE;\""
            ],
            [
              "bash",
              "# Node.js メモリプロファイル\ndocker-compose exec backend node --inspect=0.0.0.0:9229 dist/index.js\n\n# PostgreSQL メモリ使用量\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\nSELECT\n    setting as max_connections,\n    unit\nFROM pg_settings\nWHERE name = 'max_connections';\n\""
            ],
            [
              "javascript",
              "// メモリリーク検出\n// backend/src/utils/memory-monitor.ts\nsetInterval(() => {\n  const usage = process.memoryUsage()\n  console.log('Memory usage:', {\n    rss: Math.round(usage.rss / 1024 / 1024) + ' MB',\n    heapTotal: Math.round(usage.heapTotal / 1024 / 1024) + ' MB',\n    heapUsed: Math.round(usage.heapUsed / 1024 / 1024) + ' MB'\n  })\n}, 30000)"
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/daily-maintenance.sh\n\n# Docker ログクリア\ndocker-compose logs --since 24h > /logs/docker-$(date +%Y%m%d).log\ndocker-compose logs --no-log-prefix -t > /dev/null\n\n# アプリケーションログアーカイブ\ntar -czf /logs/app-logs-$(date +%Y%m%d).tar.gz /var/log/websys/\nfind /var/log/websys/ -name \"*.log\" -mtime +1 -delete"
            ],
            [
              "bash",
              "# バキューム処理\ndocker-compose exec postgres psql -U admin -d websys_db -c \"VACUUM ANALYZE;\"\n\n# 統計情報更新\ndocker-compose exec postgres psql -U admin -d websys_db -c \"\nUPDATE pg_stat_user_tables SET n_tup_ins=0, n_tup_upd=0, n_tup_del=0;\n\""
            ],
            [
              "bash",
              "#!/bin/bash\n# scripts/weekly-maintenance.sh\n\n# セキュリティアップデート\napt update && apt upgrade -y\n\n# Docker イメージ更新\ndocker-compose pull\ndocker-compose up -d\n\n# 不要ファイル削除\ndocker system prune -f\ndocker volume prune -f"
            ],
            [
              "bash",
              "# バックアップ復元テスト\ncp /backups/latest_backup.sql /tmp/test_restore.sql\ndocker-compose exec postgres createdb -U admin test_restore_db\ndocker-compose exec postgres pg_restore -U admin -d test_restore_db /tmp/test_restore.sql\ndocker-compose exec postgres dropdb -U admin test_restore_db"
            ],
            [
              "bash",
              "# Docker イメージ脆弱性スキャン\ndocker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n  aquasec/trivy image websys_backend_dev:latest\n\n# 依存関係監査\ndocker-compose exec frontend npm audit\ndocker-compose exec backend npm audit"
            ],
            [
              "sql",
              "-- 長時間実行クエリ分析\nSELECT\n    query,\n    calls,\n    total_time,\n    mean_time,\n    stddev_time\nFROM pg_stat_statements\nWHERE mean_time > 1000\nORDER BY mean_time DESC;\n\n-- インデックス使用状況\nSELECT\n    t.tablename,\n    indexname,\n    idx_tup_read,\n    idx_tup_fetch\nFROM pg_stat_user_indexes i\nJOIN pg_stat_user_tables t ON i.relid = t.relid\nWHERE idx_tup_read > 0\nORDER BY idx_tup_read DESC;"
            ],
            [
              "bash",
              "# 1. 状況確認\ndocker-compose ps\ncurl -I http://localhost:8000/health\n\n# 2. 緊急再起動\ndocker-compose down\ndocker-compose up -d\n\n# 3. ログ確認\ndocker-compose logs --tail 100\n\n# 4. ヘルスチェック\n./infrastructure/scripts/health-check.sh"
            ],
            [
              "bash",
              "# 1. データベース状態確認\ndocker-compose exec postgres pg_isready -U admin\n\n# 2. バックアップから復旧\ndocker-compose down\ndocker volume rm websys_postgres_data_dev\ndocker-compose up -d postgres\n\n# 3. 最新バックアップ復元\ndocker-compose exec postgres pg_restore -U admin -d websys_db /backups/latest_backup.sql\n\n# 4. アプリケーション再起動\ndocker-compose up -d"
            ],
            [
              "bash",
              "# 1. 即座にサービス停止\ndocker-compose down\n\n# 2. ログ保全\ncp -r /var/log/websys/ /security-incident/logs-$(date +%Y%m%d_%H%M%S)/\ndocker-compose logs > /security-incident/docker-logs-$(date +%Y%m%d_%H%M%S).log\n\n# 3. ネットワーク遮断\niptables -A INPUT -j DROP\niptables -A OUTPUT -j DROP\n\n# 4. 管理者への通知\necho \"Security incident detected at $(date)\" | mail -s \"URGENT: Security Alert\" admin@company.com"
            ],
            [
              "yaml",
              "# monitoring/alert-rules.yml\ngroups:\n  - name: websys.rules\n    rules:\n      - alert: ServiceDown\n        expr: up == 0\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"Service {{ $labels.instance }} is down\"\n\n      - alert: HighMemoryUsage\n        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes > 0.9\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High memory usage on {{ $labels.instance }}\"\n\n      - alert: DatabaseConnectionError\n        expr: postgres_up == 0\n        for: 30s\n        labels:\n          severity: critical\n        annotations:\n          summary: \"Cannot connect to PostgreSQL\""
            ],
            [
              "bash",
              "# journalctl でシステムログ監視\njournalctl -f -u docker.service\n\n# アプリケーションログ監視\ntail -f /var/log/websys/application.log | grep -i error\n\n# リアルタイムエラー検出\ndocker-compose logs -f | grep -i \"error\\|exception\\|fatal\""
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 94.64,
        "sentences": 112,
        "avg_words_per_sentence": 14.08,
        "long_sentences": 20,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": -18,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 43.69
    },
    "docs/00-ドキュメント読み順.md": {
      "basic_metrics": {
        "lines": 134,
        "words": 297,
        "characters": 2822,
        "avg_line_length": 21.059701492537314
      },
      "structure_analysis": {
        "headers": {
          "total": 24,
          "hierarchy": [
            {
              "level": 1,
              "text": "ドキュメント読み順ガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "読み順",
              "line_number": 6
            },
            {
              "level": 3,
              "text": "1. 概要・準備（必読）",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "2. 開発・設計（開発者向け）",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "3. 運用・保守（DevOps・管理者向け）",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "4. 開発標準・ガイドライン（開発者必読）",
              "line_number": 20
            },
            {
              "level": 3,
              "text": "5. 設計・アーキテクチャ（アーキテクト・上級開発者向け）",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "6. 環境検証・品質管理（DevOps・管理者向け）",
              "line_number": 28
            },
            {
              "level": 3,
              "text": "7. プロジェクト管理・進捗状況（PM・開発リーダー向け）",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "8. テスト・品質保証（QA・テスター向け）",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "9. リファレンス（参照用）",
              "line_number": 44
            },
            {
              "level": 2,
              "text": "ファイル命名ルール",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "命名規則",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "連番ルール",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "今後のドキュメント追加ガイドライン",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "ファイル名の付け方",
              "line_number": 73
            },
            {
              "level": 2,
              "text": "対象読者別推奨読み順",
              "line_number": 79
            },
            {
              "level": 3,
              "text": "新規参加開発者",
              "line_number": 81
            },
            {
              "level": 3,
              "text": "プロジェクトマネージャー・開発リーダー",
              "line_number": 90
            },
            {
              "level": 3,
              "text": "DevOps/インフラ担当者",
              "line_number": 99
            },
            {
              "level": 3,
              "text": "API利用者・フロントエンド開発者",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "QA・テスター",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "アーキテクト・上級開発者",
              "line_number": 123
            },
            {
              "level": 2,
              "text": "注意事項",
              "line_number": 130
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 1,
          "inline_code": 1,
          "languages": {},
          "details": [
            [
              "",
              "[連番]-[日本語ファイル名].md"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 99.73,
        "sentences": 111,
        "avg_words_per_sentence": 2.68,
        "long_sentences": 1,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 33.94,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.0
    },
    "docs/02-環境構築手順.md": {
      "basic_metrics": {
        "lines": 129,
        "words": 287,
        "characters": 2443,
        "avg_line_length": 18.93798449612403
      },
      "structure_analysis": {
        "headers": {
          "total": 26,
          "hierarchy": [
            {
              "level": 1,
              "text": "セットアップガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "🚀 クイックスタート",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1. 前提条件",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "2. 環境構築",
              "line_number": 10
            },
            {
              "level": 1,
              "text": "1. リポジトリをクローン",
              "line_number": 13
            },
            {
              "level": 1,
              "text": "2. 開発環境セットアップ（ワンコマンド）",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "3. アクセス確認",
              "line_number": 21
            },
            {
              "level": 2,
              "text": "📁 ディレクトリ構造",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "🔄 開発フロー",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "日常の開発",
              "line_number": 52
            },
            {
              "level": 1,
              "text": "workspace/ で開発",
              "line_number": 55
            },
            {
              "level": 1,
              "text": "変更は自動でホットリロード",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "環境操作",
              "line_number": 62
            },
            {
              "level": 1,
              "text": "開発環境起動",
              "line_number": 65
            },
            {
              "level": 1,
              "text": "環境停止",
              "line_number": 68
            },
            {
              "level": 1,
              "text": "環境リセット（全データ削除）",
              "line_number": 72
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 75
            },
            {
              "level": 1,
              "text": "サービス個別の操作",
              "line_number": 79
            },
            {
              "level": 2,
              "text": "🔧 カスタマイズ",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "新しいテンプレート追加",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "新しい環境追加",
              "line_number": 94
            },
            {
              "level": 2,
              "text": "❓ トラブルシューティング",
              "line_number": 100
            },
            {
              "level": 3,
              "text": "よくある問題",
              "line_number": 102
            },
            {
              "level": 3,
              "text": "完全リセット",
              "line_number": 119
            },
            {
              "level": 1,
              "text": "専用スクリプトを使用",
              "line_number": 122
            },
            {
              "level": 1,
              "text": "または手動で実行",
              "line_number": 125
            }
          ],
          "hierarchy_issues": [
            {
              "line": 21,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 62,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 19,
          "languages": {
            "bash": 4
          },
          "details": [
            [
              "bash",
              "# 1. リポジトリをクローン\ngit clone <repository-url>\ncd websys\n\n# 2. 開発環境セットアップ（ワンコマンド）\n./infrastructure/scripts/setup-dev.sh"
            ],
            [
              "",
              "websys/\n├── 📋 templates/                 # テンプレート（読み取り専用）\n│   ├── frontend-vue/            # Vue.js + Element Plus\n│   └── backend-express/         # Express + Prisma\n├── ⚙️  infrastructure/           # インフラ・環境設定\n│   ├── docker/                  # Docker関連\n│   │   ├── development/         # 開発環境\n│   │   ├── staging/             # ステージング環境\n│   │   └── production/          # 本番環境\n│   └── scripts/                 # 運用スクリプト\n├── 🌱 environments/             # 環境別設定\n│   ├── development/             # 開発環境設定\n│   ├── staging/                 # ステージング設定\n│   └── production/              # 本番設定\n├── 👨‍💻 workspace/                # 開発ワークスペース\n│   ├── frontend/                # フロントエンド開発\n│   └── backend/                 # バックエンド開発\n└── 📚 docs/                     # ドキュメント"
            ],
            [
              "bash",
              "# workspace/ で開発\ncd workspace/frontend    # フロントエンド\ncd workspace/backend     # バックエンド\n\n# 変更は自動でホットリロード"
            ],
            [
              "bash",
              "# 開発環境起動\n./infrastructure/scripts/setup-dev.sh\n\n# 環境停止\ncd infrastructure/docker/development\ndocker compose down\n\n# 環境リセット（全データ削除）\n./infrastructure/scripts/reset-dev.sh\n\n# ログ確認\ncd infrastructure/docker/development\ndocker compose logs -f [service-name]\n\n# サービス個別の操作\ndocker compose restart backend    # バックエンド再起動\ndocker compose restart frontend   # フロントエンド再起動\ndocker compose exec backend sh    # バックエンドコンテナに入る\ndocker compose exec frontend sh   # フロントエンドコンテナに入る"
            ],
            [
              "bash",
              "   lsof -i :3000  # 使用中プロセス確認\n   ```\n\n2. **ワークスペースが作成されない**\n   ```bash\n   ./infrastructure/scripts/init-workspace.sh\n   ```\n\n3. **環境変数が読み込まれない**\n   ```bash\n   ./infrastructure/scripts/generate-env.sh development\n   ```\n\n### 完全リセット\n"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.27,
        "sentences": 33,
        "avg_words_per_sentence": 8.7,
        "long_sentences": 3,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 39.74,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 67.58
    },
    "docs/55-権限ベースメニュー表示機能検証レポート.md": {
      "basic_metrics": {
        "lines": 262,
        "words": 569,
        "characters": 4660,
        "avg_line_length": 17.786259541984734
      },
      "structure_analysis": {
        "headers": {
          "total": 47,
          "hierarchy": [
            {
              "level": 1,
              "text": "権限ベースメニュー表示機能検証レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 実装内容",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "1.1 バックエンド実装",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "1.2 フロントエンド実装",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1.3 権限ベースルーティング",
              "line_number": 23
            },
            {
              "level": 2,
              "text": "2. 検証結果",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "2.1 API動作確認",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "管理者(ADMIN)の場合",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "一般ユーザー(USER)の場合",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "2.2 メニュー表示制御",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "実装前の問題",
              "line_number": 56
            },
            {
              "level": 4,
              "text": "実装後の改善",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "2.3 テストデータ設定",
              "line_number": 68
            },
            {
              "level": 4,
              "text": "部署権限設定例",
              "line_number": 70
            },
            {
              "level": 2,
              "text": "3. 機能別検証詳細",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "3.1 メニュー表示ロジック",
              "line_number": 84
            },
            {
              "level": 4,
              "text": "サブメニュー表示制御",
              "line_number": 86
            },
            {
              "level": 4,
              "text": "個別メニューアイテム制御",
              "line_number": 98
            },
            {
              "level": 3,
              "text": "3.2 ルーティング保護",
              "line_number": 107
            },
            {
              "level": 4,
              "text": "権限チェック実装",
              "line_number": 109
            },
            {
              "level": 3,
              "text": "3.3 API権限マッピング",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "メニューと機能コードの対応",
              "line_number": 126
            },
            {
              "level": 2,
              "text": "4. セキュリティ強化効果",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "4.1 アクセス制御改善",
              "line_number": 138
            },
            {
              "level": 4,
              "text": "Before(実装前)",
              "line_number": 140
            },
            {
              "level": 4,
              "text": "After(実装後)",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "4.2 ユーザビリティ向上",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "改善効果測定",
              "line_number": 152
            },
            {
              "level": 2,
              "text": "5. 技術仕様",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "5.1 API仕様",
              "line_number": 161
            },
            {
              "level": 4,
              "text": "エンドポイント",
              "line_number": 163
            },
            {
              "level": 4,
              "text": "レスポンス形式",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "5.2 フロントエンド実装",
              "line_number": 187
            },
            {
              "level": 4,
              "text": "Auth Store拡張",
              "line_number": 189
            },
            {
              "level": 4,
              "text": "コンポーネント更新",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "6. 残課題と今後の改善",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "6.1 現在の制限事項",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "6.2 Phase 2改善計画",
              "line_number": 206
            },
            {
              "level": 2,
              "text": "7. 運用ガイドライン",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "7.1 権限設定手順",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "7.2 トラブルシューティング",
              "line_number": 223
            },
            {
              "level": 2,
              "text": "8. 総合評価",
              "line_number": 228
            },
            {
              "level": 3,
              "text": "8.1 実装完了度",
              "line_number": 230
            },
            {
              "level": 3,
              "text": "8.2 品質指標",
              "line_number": 235
            },
            {
              "level": 3,
              "text": "8.3 改善効果",
              "line_number": 241
            },
            {
              "level": 2,
              "text": "9. 結論",
              "line_number": 247
            },
            {
              "level": 3,
              "text": "主要成果",
              "line_number": 251
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 23,
          "languages": {
            "bash": 2,
            "sql": 2,
            "javascript": 2,
            "vue": 1,
            "json": 1
          },
          "details": [
            [
              "bash",
              "curl -X GET http://localhost:8000/api/permissions/menu \\\n  -H \"Authorization: Bearer [ADMIN_TOKEN]\""
            ],
            [
              "bash",
              "curl -X GET http://localhost:8000/api/permissions/menu \\\n  -H \"Authorization: Bearer [USER_TOKEN]\""
            ],
            [
              "sql",
              "-- 営業部(ID:2)にダッシュボードとレポートの権限付与\nINSERT INTO department_feature_permissions\n  (\"departmentId\", \"featureId\", \"canView\", ...)\nVALUES\n  (2, 5, true, ...), -- DASHBOARD\n  (2, 10, true, ...) -- REPORT"
            ],
            [
              "javascript",
              "// 組織管理サブメニュー\nconst hasAnyManagementAccess = computed(() => {\n  return hasMenuAccess('/users') ||\n         hasMenuAccess('/companies') ||\n         hasMenuAccess('/departments')\n})"
            ],
            [
              "vue",
              "<el-menu-item v-if=\"hasMenuAccess('/users')\" index=\"/users\">\n  <span>ユーザー管理</span>\n</el-menu-item>"
            ],
            [
              "javascript",
              "// 認証済みの場合、権限チェック\nif (to.meta.requiresPermission) {\n  const hasAccess = authStore.hasMenuAccess(to.path)\n  if (!hasAccess) {\n    console.warn(`Access denied to ${to.path}: insufficient permissions`)\n    next('/dashboard')\n    return\n  }\n}"
            ],
            [
              "",
              "GET /api/permissions/menu\nAuthorization: Bearer <token>"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"menuItems\": [\n      {\n        \"path\": \"/dashboard\",\n        \"featureCode\": \"DASHBOARD\",\n        \"hasAccess\": true\n      }\n    ],\n    \"userRole\": \"USER\",\n    \"departments\": [2]\n  }\n}"
            ],
            [
              "sql",
              "-- 部署権限設定例\nINSERT INTO department_feature_permissions\n  (\"departmentId\", \"featureId\", \"canView\", \"canCreate\", \"canEdit\")\nVALUES\n  (部署ID, 機能ID, true, false, false);"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 11
        }
      },
      "readability": {
        "score": 96.25,
        "sentences": 64,
        "avg_words_per_sentence": 8.89,
        "long_sentences": 8,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 55.38,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.53
    },
    "docs/03-開発ガイド.md": {
      "basic_metrics": {
        "lines": 602,
        "words": 1331,
        "characters": 11383,
        "avg_line_length": 18.908637873754152
      },
      "structure_analysis": {
        "headers": {
          "total": 61,
          "hierarchy": [
            {
              "level": 1,
              "text": "開発ガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "開発環境セットアップ",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "前提条件",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "初回セットアップ",
              "line_number": 15
            },
            {
              "level": 1,
              "text": "1. リポジトリクローン",
              "line_number": 17
            },
            {
              "level": 1,
              "text": "2. 開発環境起動",
              "line_number": 21
            },
            {
              "level": 1,
              "text": "3. アクセス確認",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "開発環境の確認",
              "line_number": 29
            },
            {
              "level": 1,
              "text": "サービス状態確認",
              "line_number": 31
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 35
            },
            {
              "level": 1,
              "text": "ヘルスチェック",
              "line_number": 40
            },
            {
              "level": 2,
              "text": "開発ワークフロー",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "日常の開発フロー",
              "line_number": 47
            },
            {
              "level": 1,
              "text": "フロントエンド開発",
              "line_number": 62
            },
            {
              "level": 1,
              "text": "ファイル編集 → 自動リロード",
              "line_number": 64
            },
            {
              "level": 1,
              "text": "バックエンド開発",
              "line_number": 66
            },
            {
              "level": 1,
              "text": "ファイル編集 → 自動再起動",
              "line_number": 68
            },
            {
              "level": 1,
              "text": "マイグレーション作成",
              "line_number": 73
            },
            {
              "level": 1,
              "text": "Prisma Studio起動",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "ブランチ戦略",
              "line_number": 89
            },
            {
              "level": 4,
              "text": "ブランチ命名規則",
              "line_number": 101
            },
            {
              "level": 2,
              "text": "コーディング規約",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "TypeScript/JavaScript",
              "line_number": 109
            },
            {
              "level": 4,
              "text": "命名規則",
              "line_number": 111
            },
            {
              "level": 4,
              "text": "型定義",
              "line_number": 129
            },
            {
              "level": 4,
              "text": "Import順序",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "Vue.js規約",
              "line_number": 165
            },
            {
              "level": 4,
              "text": "コンポーネント構造",
              "line_number": 167
            },
            {
              "level": 4,
              "text": "Props定義",
              "line_number": 188
            },
            {
              "level": 4,
              "text": "Events定義",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "Express.js規約",
              "line_number": 210
            },
            {
              "level": 4,
              "text": "API設計",
              "line_number": 212
            },
            {
              "level": 4,
              "text": "エラーハンドリング",
              "line_number": 222
            },
            {
              "level": 4,
              "text": "バリデーション",
              "line_number": 245
            },
            {
              "level": 2,
              "text": "データベース規約",
              "line_number": 272
            },
            {
              "level": 3,
              "text": "Prisma Schema",
              "line_number": 274
            },
            {
              "level": 3,
              "text": "マイグレーション",
              "line_number": 299
            },
            {
              "level": 1,
              "text": "マイグレーション作成",
              "line_number": 301
            },
            {
              "level": 1,
              "text": "マイグレーション適用",
              "line_number": 304
            },
            {
              "level": 1,
              "text": "スキーマリセット（開発環境のみ）",
              "line_number": 307
            },
            {
              "level": 2,
              "text": "テスト戦略",
              "line_number": 311
            },
            {
              "level": 3,
              "text": "フロントエンド テスト",
              "line_number": 313
            },
            {
              "level": 3,
              "text": "バックエンド テスト",
              "line_number": 342
            },
            {
              "level": 2,
              "text": "パフォーマンス最適化",
              "line_number": 387
            },
            {
              "level": 3,
              "text": "フロントエンド最適化",
              "line_number": 389
            },
            {
              "level": 4,
              "text": "コード分割",
              "line_number": 391
            },
            {
              "level": 4,
              "text": "状態管理最適化",
              "line_number": 403
            },
            {
              "level": 3,
              "text": "バックエンド最適化",
              "line_number": 432
            },
            {
              "level": 4,
              "text": "データベースクエリ最適化",
              "line_number": 434
            },
            {
              "level": 4,
              "text": "キャッシュ戦略",
              "line_number": 467
            },
            {
              "level": 2,
              "text": "セキュリティベストプラクティス",
              "line_number": 486
            },
            {
              "level": 3,
              "text": "認証・認可",
              "line_number": 488
            },
            {
              "level": 3,
              "text": "データバリデーション",
              "line_number": 517
            },
            {
              "level": 2,
              "text": "デプロイ準備",
              "line_number": 535
            },
            {
              "level": 3,
              "text": "環境変数管理",
              "line_number": 537
            },
            {
              "level": 1,
              "text": "development",
              "line_number": 539
            },
            {
              "level": 1,
              "text": "production",
              "line_number": 544
            },
            {
              "level": 3,
              "text": "ビルド最適化",
              "line_number": 550
            },
            {
              "level": 2,
              "text": "継続的インテグレーション",
              "line_number": 567
            },
            {
              "level": 3,
              "text": "GitHub Actions例",
              "line_number": 569
            }
          ],
          "hierarchy_issues": [
            {
              "line": 29,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 89,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 550,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 25,
          "inline_code": 64,
          "languages": {
            "bash": 3
          },
          "details": [
            [
              "bash",
              "# 1. リポジトリクローン\ngit clone <repository-url>\ncd websys-dev-platform\n\n# 2. 開発環境起動\n./infrastructure/scripts/setup-dev.sh\n\n# 3. アクセス確認\nopen http://localhost:3000  # Frontend\nopen http://localhost:8000  # Backend API"
            ],
            [
              "bash",
              "# サービス状態確認\ncd infrastructure/docker/development\ndocker-compose ps\n\n# ログ確認\ndocker-compose logs -f frontend\ndocker-compose logs -f backend\ndocker-compose logs -f postgres\n\n# ヘルスチェック\ncurl http://localhost:8000/health\ncurl http://localhost:3000"
            ],
            [
              "bash",
              "   ./infrastructure/scripts/setup-dev.sh\n   ```\n\n2. **ブランチ作成**\n   ```bash\n   cd workspace\n   git checkout -b feature/new-feature\n   ```\n\n3. **開発作業**\n   ```bash\n   # フロントエンド開発\n   cd workspace/frontend\n   # ファイル編集 → 自動リロード\n\n   # バックエンド開発\n   cd workspace/backend\n   # ファイル編集 → 自動再起動\n   ```\n\n4. **データベース操作**\n   ```bash\n   # マイグレーション作成\n   cd infrastructure/docker/development\n   docker-compose exec backend npx prisma migrate dev --name add-new-table\n\n   # Prisma Studio起動\n   docker-compose exec backend npx prisma studio\n   ```\n\n5. **コミット・プッシュ**\n   ```bash\n   cd workspace\n   git add .\n   git commit -m \"feat: implement new feature\"\n   git push origin feature/new-feature\n   ```\n\n### ブランチ戦略\n"
            ],
            [
              "",
              "\n#### ブランチ命名規則\n- **feature/**: 新機能開発 (`feature/user-authentication`)\n- **bugfix/**: バグ修正 (`bugfix/login-error`)\n- **hotfix/**: 緊急修正 (`hotfix/security-patch`)\n- **release/**: リリース準備 (`release/v1.0.0`)\n\n## コーディング規約\n\n### TypeScript/JavaScript\n\n#### 命名規則"
            ],
            [
              "",
              "\n#### 型定義"
            ],
            [
              "",
              "\n#### Import順序"
            ],
            [
              "",
              "\n### Vue.js規約\n\n#### コンポーネント構造"
            ],
            [
              "",
              "\n#### Props定義"
            ],
            [
              "",
              "\n#### Events定義"
            ],
            [
              "",
              "\n### Express.js規約\n\n#### API設計"
            ],
            [
              "",
              "\n#### エラーハンドリング"
            ],
            [
              "",
              "\n#### バリデーション"
            ],
            [
              "",
              "\n## データベース規約\n\n### Prisma Schema"
            ],
            [
              "",
              "\n### マイグレーション"
            ],
            [
              "",
              "\n## テスト戦略\n\n### フロントエンド テスト"
            ],
            [
              "",
              "\n### バックエンド テスト"
            ],
            [
              "",
              "\n## パフォーマンス最適化\n\n### フロントエンド最適化\n\n#### コード分割"
            ],
            [
              "",
              "\n#### 状態管理最適化"
            ],
            [
              "",
              "\n### バックエンド最適化\n\n#### データベースクエリ最適化"
            ],
            [
              "",
              "\n#### キャッシュ戦略"
            ],
            [
              "",
              "\n## セキュリティベストプラクティス\n\n### 認証・認可"
            ],
            [
              "",
              "\n### データバリデーション"
            ],
            [
              "",
              "\n## デプロイ準備\n\n### 環境変数管理"
            ],
            [
              "",
              "\n### ビルド最適化"
            ],
            [
              "",
              "\n## 継続的インテグレーション\n\n### GitHub Actions例"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 94.93,
        "sentences": 136,
        "avg_words_per_sentence": 9.79,
        "long_sentences": 23,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 51,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.38
    },
    "docs/20-テスト実行報告書.md": {
      "basic_metrics": {
        "lines": 214,
        "words": 597,
        "characters": 4371,
        "avg_line_length": 20.425233644859812
      },
      "structure_analysis": {
        "headers": {
          "total": 39,
          "hierarchy": [
            {
              "level": 1,
              "text": "テスト実行報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 実行概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実行結果サマリー",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "テストケース実行状況",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "機能別適合性",
              "line_number": 20
            },
            {
              "level": 2,
              "text": "📊 詳細テスト結果",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "✅ 成功テストケース",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "TC_F001: 機能一覧取得API（正常系）",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "TC_F002: 機能一覧取得API（認証エラー）",
              "line_number": 39
            },
            {
              "level": 4,
              "text": "TC_F003: 機能作成API（正常系）",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "TC_F004: 機能作成API（バリデーションエラー）",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "TC_P001: 権限マトリクス取得API",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "TC_C001: 権限チェックAPI",
              "line_number": 60
            },
            {
              "level": 4,
              "text": "フロントエンドアクセステスト",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "パフォーマンステスト（権限チェック）",
              "line_number": 70
            },
            {
              "level": 3,
              "text": "❌ 失敗テストケース",
              "line_number": 75
            },
            {
              "level": 4,
              "text": "TC_T001: 権限テンプレート一覧取得API",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "🔍 設計書適合性分析",
              "line_number": 83
            },
            {
              "level": 3,
              "text": "要件定義書適合性チェック",
              "line_number": 85
            },
            {
              "level": 4,
              "text": "✅ 適合項目",
              "line_number": 87
            },
            {
              "level": 4,
              "text": "❌ 不適合項目",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "データモデル適合性",
              "line_number": 122
            },
            {
              "level": 4,
              "text": "✅ 実装済みエンティティ",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "❌ 未完成エンティティ",
              "line_number": 131
            },
            {
              "level": 2,
              "text": "🐛 発見された問題",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "既知の問題",
              "line_number": 136
            },
            {
              "level": 4,
              "text": "BUG #002 - 権限テンプレート機能スキーマ不整合",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "新規発見事項",
              "line_number": 147
            },
            {
              "level": 4,
              "text": "BUG #003 - IPv6 Rate Limiting警告",
              "line_number": 149
            },
            {
              "level": 4,
              "text": "BUG #004 - JWTトークン解析エラー",
              "line_number": 156
            },
            {
              "level": 2,
              "text": "📈 品質評価",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "機能品質",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "セキュリティ",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "ユーザビリティ",
              "line_number": 174
            },
            {
              "level": 2,
              "text": "🚀 推奨対応アクション",
              "line_number": 179
            },
            {
              "level": 3,
              "text": "即座の対応（優先度: 高）",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "中期対応（優先度: 中）",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "長期対応（優先度: 低）",
              "line_number": 195
            },
            {
              "level": 2,
              "text": "📋 結論",
              "line_number": 203
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 6,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 2,
          "total_rows": 13
        }
      },
      "readability": {
        "score": 87.06,
        "sentences": 32,
        "avg_words_per_sentence": 18.66,
        "long_sentences": 6,
        "readability_level": "読みやすい"
      },
      "structure_score": 40.94,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 64.99
    },
    "docs/33-システム総合ステータスレポート2025-09-26.md": {
      "basic_metrics": {
        "lines": 244,
        "words": 846,
        "characters": 5516,
        "avg_line_length": 22.60655737704918
      },
      "structure_analysis": {
        "headers": {
          "total": 34,
          "hierarchy": [
            {
              "level": 1,
              "text": "🚀 システム総合ステータスレポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 エグゼクティブサマリー",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "🎯 主要成果",
              "line_number": 14
            },
            {
              "level": 2,
              "text": "🔥 緊急対応実績",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "BUG #011: APIエンドポイント404エラー",
              "line_number": 25
            },
            {
              "level": 4,
              "text": "根本原因と修正内容",
              "line_number": 32
            },
            {
              "level": 4,
              "text": "影響範囲と復旧状況",
              "line_number": 41
            },
            {
              "level": 2,
              "text": "📊 システム完成度分析",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "機能別完成度 (2025-09-26時点)",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "総合完成度推移",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "🐛 BUG管理状況",
              "line_number": 87
            },
            {
              "level": 3,
              "text": "解決済みBUG (修正完了率: 87.5%)",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "未解決BUG (1件)",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "BUG解決統計",
              "line_number": 106
            },
            {
              "level": 2,
              "text": "🧪 品質保証結果",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "システム稼働状況確認",
              "line_number": 117
            },
            {
              "level": 1,
              "text": "ヘルスチェック結果 (2025-09-26 22:00)",
              "line_number": 119
            },
            {
              "level": 3,
              "text": "API動作確認結果",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "テスト実行結果",
              "line_number": 153
            },
            {
              "level": 2,
              "text": "🚀 技術的成果",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "1. 迅速な問題解決能力",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "2. 水平展開による品質向上",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "3. システム安定性の向上",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "4. 開発プロセス改善",
              "line_number": 179
            },
            {
              "level": 2,
              "text": "📈 運用メトリクス",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "システム性能指標",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "開発効率指標",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "🎯 今後の展開",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "短期計画 (1週間以内)",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "中期計画 (1ヶ月以内)",
              "line_number": 213
            },
            {
              "level": 3,
              "text": "長期計画 (3ヶ月以内)",
              "line_number": 218
            },
            {
              "level": 2,
              "text": "🏆 総合評価",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "システム健全性: A+",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "特筆すべき成果",
              "line_number": 233
            }
          ],
          "hierarchy_issues": [
            {
              "line": 126,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 13,
          "languages": {
            "json": 2,
            "bash": 1
          },
          "details": [
            [
              "json",
              "{\n  \"影響機能\": \"ログ監視システム全機能\",\n  \"影響ユーザー\": \"全管理者ユーザー\",\n  \"復旧率\": \"100%\",\n  \"機能確認\": {\n    \"POST /api/logs\": \"✅ 正常\",\n    \"GET /api/logs/search\": \"✅ 正常\",\n    \"GET /api/logs/realtime\": \"✅ 正常\",\n    \"GET /api/features/categories\": \"✅ 正常\",\n    \"GET /api/features/:id\": \"✅ 正常\"\n  }\n}"
            ],
            [
              "",
              "2025-09-20: 90%  │████████████████████▒▒▒▒│\n2025-09-23: 95%  │███████████████████████▒▒│\n2025-09-25: 98%  │████████████████████████▒│\n2025-09-26: 99%  │█████████████████████████│ ← 過去最高達成"
            ],
            [
              "bash",
              "# ヘルスチェック結果 (2025-09-26 22:00)\n✅ Frontend (3000): 正常稼働 - <title>社内システム</title>\n✅ Backend (8000): 正常稼働 - {\"status\":\"OK\",\"message\":\"Server is running\",\"websocket\":{\"connections\":0}}\n✅ PostgreSQL (5433): 正常稼働 - 接続確認完了\n✅ WebSocket: 正常稼働 - リアルタイム通信確認"
            ],
            [
              "json",
              "{\n  \"認証系API\": {\n    \"POST /api/auth/login\": \"✅ 正常\",\n    \"GET /api/auth/verify\": \"✅ 正常\",\n    \"POST /api/auth/logout\": \"✅ 正常\"\n  },\n  \"ログ監視API\": {\n    \"POST /api/logs\": \"✅ 正常 (修正完了)\",\n    \"GET /api/logs/search\": \"✅ 正常 (修正完了)\",\n    \"GET /api/logs/realtime\": \"✅ 正常 (修正完了)\",\n    \"GET /api/logs/statistics\": \"✅ 正常\"\n  },\n  \"機能管理API\": {\n    \"GET /api/features\": \"✅ 正常\",\n    \"GET /api/features/categories\": \"✅ 正常 (修正完了)\",\n    \"GET /api/features/:id\": \"✅ 正常 (修正完了)\"\n  },\n  \"権限管理API\": {\n    \"GET /api/permissions/templates\": \"✅ 正常\",\n    \"POST /api/permissions/templates\": \"✅ 正常\",\n    \"GET /api/permissions/matrix\": \"✅ 正常\"\n  }\n}"
            ]
          ]
        },
        "tables": {
          "total": 6,
          "total_rows": 43
        }
      },
      "readability": {
        "score": 60.67,
        "sentences": 27,
        "avg_words_per_sentence": 31.33,
        "long_sentences": 6,
        "readability_level": "普通"
      },
      "structure_score": 55.92,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 63.07
    },
    "docs/10-共通コンポーネント仕様.md": {
      "basic_metrics": {
        "lines": 725,
        "words": 1567,
        "characters": 14830,
        "avg_line_length": 20.455172413793104
      },
      "structure_analysis": {
        "headers": {
          "total": 38,
          "hierarchy": [
            {
              "level": 1,
              "text": "共通コンポーネント仕様",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "レスポンシブ対応方針",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "使用可能コンポーネント一覧",
              "line_number": 20
            },
            {
              "level": 3,
              "text": "基本コンポーネント",
              "line_number": 22
            },
            {
              "level": 4,
              "text": "CommonButton",
              "line_number": 24
            },
            {
              "level": 4,
              "text": "CommonInput",
              "line_number": 69
            },
            {
              "level": 4,
              "text": "CommonSelect",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "データ表示コンポーネント",
              "line_number": 146
            },
            {
              "level": 4,
              "text": "CommonTable",
              "line_number": 148
            },
            {
              "level": 4,
              "text": "CommonCard",
              "line_number": 232
            },
            {
              "level": 3,
              "text": "フォームコンポーネント",
              "line_number": 270
            },
            {
              "level": 4,
              "text": "CommonForm",
              "line_number": 272
            },
            {
              "level": 3,
              "text": "ナビゲーションコンポーネント",
              "line_number": 314
            },
            {
              "level": 4,
              "text": "CommonMenu",
              "line_number": 316
            },
            {
              "level": 4,
              "text": "CommonBreadcrumb",
              "line_number": 355
            },
            {
              "level": 3,
              "text": "フィードバックコンポーネント",
              "line_number": 382
            },
            {
              "level": 4,
              "text": "CommonDialog",
              "line_number": 384
            },
            {
              "level": 4,
              "text": "CommonMessage（プログラマティック）",
              "line_number": 431
            },
            {
              "level": 2,
              "text": "禁止されているコンポーネント",
              "line_number": 467
            },
            {
              "level": 2,
              "text": "例外的に使用可能なコンポーネント",
              "line_number": 502
            },
            {
              "level": 2,
              "text": "カスタマイズ指針",
              "line_number": 524
            },
            {
              "level": 3,
              "text": "1. テーマカスタマイズ",
              "line_number": 526
            },
            {
              "level": 3,
              "text": "2. プロップス拡張ルール",
              "line_number": 569
            },
            {
              "level": 3,
              "text": "3. スロット使用ルール",
              "line_number": 588
            },
            {
              "level": 2,
              "text": "バージョン管理",
              "line_number": 606
            },
            {
              "level": 3,
              "text": "セマンティックバージョニング",
              "line_number": 608
            },
            {
              "level": 3,
              "text": "アップデート指針",
              "line_number": 619
            },
            {
              "level": 3,
              "text": "変更ログ管理",
              "line_number": 630
            },
            {
              "level": 2,
              "text": "[1.3.0] - 2024-01-15",
              "line_number": 633
            },
            {
              "level": 3,
              "text": "Added",
              "line_number": 635
            },
            {
              "level": 3,
              "text": "Changed",
              "line_number": 639
            },
            {
              "level": 3,
              "text": "Deprecated",
              "line_number": 642
            },
            {
              "level": 3,
              "text": "Fixed",
              "line_number": 645
            },
            {
              "level": 2,
              "text": "レスポンシブ実装ガイドライン",
              "line_number": 649
            },
            {
              "level": 3,
              "text": "共通composable",
              "line_number": 651
            },
            {
              "level": 3,
              "text": "レスポンシブテスト",
              "line_number": 684
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 712
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 2,
          "internal": 2,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "レスポンシブデザインガイドライン",
              "11-レスポンシブデザインガイドライン.md"
            ],
            [
              "レスポンシブデザインガイドライン",
              "11-レスポンシブデザインガイドライン.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 30,
          "inline_code": 62,
          "languages": {
            "typescript": 17,
            "vue": 10,
            "scss": 1,
            "markdown": 1
          },
          "details": [
            [
              "typescript",
              "interface CommonButtonProps {\n  variant: 'primary' | 'secondary' | 'success' | 'warning' | 'danger'\n  size: 'small' | 'medium' | 'large'\n  loading?: boolean\n  disabled?: boolean\n  icon?: Component\n  iconPosition?: 'left' | 'right'\n  htmlType?: 'button' | 'submit' | 'reset'\n  // レスポンシブ対応\n  responsive?: boolean  // 画面サイズに応じたサイズ変更\n  touchOptimized?: boolean  // タッチデバイス最適化\n  fullWidthMobile?: boolean  // モバイルで全幅表示\n}\n\ninterface CommonButtonEvents {\n  'on-click': (event: MouseEvent) => void\n}"
            ],
            [
              "vue",
              "<!-- 基本的な使用 -->\n<CommonButton\n  variant=\"primary\"\n  size=\"medium\"\n  :loading=\"isSubmitting\"\n  @on-click=\"handleSubmit\"\n>\n  送信\n</CommonButton>\n\n<!-- レスポンシブ対応の使用 -->\n<CommonButton\n  variant=\"primary\"\n  responsive\n  touch-optimized\n  full-width-mobile\n  @on-click=\"handleAction\"\n>\n  実行\n</CommonButton>"
            ],
            [
              "typescript",
              "interface CommonInputProps {\n  modelValue: string | number\n  type?: 'text' | 'password' | 'email' | 'number' | 'tel' | 'url'\n  placeholder?: string\n  disabled?: boolean\n  readonly?: boolean\n  clearable?: boolean\n  showPassword?: boolean\n  maxlength?: number\n  size?: 'small' | 'medium' | 'large'\n  status?: 'success' | 'warning' | 'error'\n  message?: string\n}\n\ninterface CommonInputEvents {\n  'update:modelValue': (value: string | number) => void\n  'on-change': (value: string | number) => void\n  'on-blur': (event: FocusEvent) => void\n  'on-focus': (event: FocusEvent) => void\n  'on-clear': () => void\n}"
            ],
            [
              "vue",
              "<CommonInput\n  v-model=\"form.username\"\n  type=\"text\"\n  placeholder=\"ユーザー名を入力\"\n  clearable\n  status=\"error\"\n  message=\"ユーザー名は必須です\"\n/>"
            ],
            [
              "typescript",
              "interface CommonSelectOption {\n  label: string\n  value: string | number\n  disabled?: boolean\n  children?: CommonSelectOption[]\n}\n\ninterface CommonSelectProps {\n  modelValue: string | number | Array<string | number>\n  options: CommonSelectOption[]\n  placeholder?: string\n  disabled?: boolean\n  clearable?: boolean\n  multiple?: boolean\n  filterable?: boolean\n  size?: 'small' | 'medium' | 'large'\n  status?: 'success' | 'warning' | 'error'\n  message?: string\n}\n\ninterface CommonSelectEvents {\n  'update:modelValue': (value: string | number | Array<string | number>) => void\n  'on-change': (value: string | number | Array<string | number>) => void\n  'on-clear': () => void\n}"
            ],
            [
              "vue",
              "<CommonSelect\n  v-model=\"form.department\"\n  :options=\"departmentOptions\"\n  placeholder=\"部署を選択\"\n  clearable\n  filterable\n/>"
            ],
            [
              "typescript",
              "interface CommonTableColumn {\n  prop: string\n  label: string\n  width?: string | number\n  minWidth?: string | number\n  fixed?: 'left' | 'right'\n  sortable?: boolean\n  formatter?: (row: any, column: any, cellValue: any) => string\n  type?: 'selection' | 'index' | 'expand'\n  slot?: string\n  // レスポンシブ対応\n  hideOnMobile?: boolean  // モバイルで非表示\n  priorityOrder?: number  // モバイル表示優先度\n}\n\ninterface CommonTableProps {\n  data: any[]\n  columns: CommonTableColumn[]\n  loading?: boolean\n  height?: string | number\n  maxHeight?: string | number\n  stripe?: boolean\n  border?: boolean\n  size?: 'small' | 'medium' | 'large'\n  selection?: boolean\n  pagination?: {\n    currentPage: number\n    pageSize: number\n    total: number\n    pageSizes?: number[]\n  }\n  // レスポンシブ対応\n  mobileLayout?: 'card' | 'table' | 'auto'  // モバイル表示形式\n  cardTemplate?: string  // カード表示時のテンプレート\n  horizontalScroll?: boolean  // 横スクロールの有効化\n}\n\ninterface CommonTableEvents {\n  'on-selection-change': (selection: any[]) => void\n  'on-sort-change': (column: any, prop: string, order: string) => void\n  'on-page-change': (page: number) => void\n  'on-size-change': (size: number) => void\n  'on-row-click': (row: any, column: any, event: Event) => void\n}"
            ],
            [
              "vue",
              "<!-- 基本的なテーブル -->\n<CommonTable\n  :data=\"tableData\"\n  :columns=\"tableColumns\"\n  :loading=\"loading\"\n  :pagination=\"pagination\"\n  selection\n  stripe\n  @on-selection-change=\"handleSelectionChange\"\n  @on-page-change=\"handlePageChange\"\n/>\n\n<!-- レスポンシブ対応テーブル -->\n<CommonTable\n  :data=\"tableData\"\n  :columns=\"responsiveColumns\"\n  mobile-layout=\"card\"\n  horizontal-scroll\n  :pagination=\"pagination\"\n  @on-page-change=\"handlePageChange\"\n/>\n\n<script setup>\n// カラム定義（レスポンシブ）\nconst responsiveColumns = [\n  { prop: 'name', label: '名前', priorityOrder: 1 },\n  { prop: 'email', label: 'メール', hideOnMobile: true },\n  { prop: 'role', label: '役割', priorityOrder: 2 },\n  { prop: 'status', label: 'ステータス', priorityOrder: 3 },\n  { prop: 'actions', label: '操作', hideOnMobile: false }\n]\n</script>"
            ],
            [
              "typescript",
              "interface CommonCardProps {\n  title?: string\n  shadow?: 'always' | 'hover' | 'never'\n  bodyPadding?: string\n  headerPadding?: string\n}\n\ninterface CommonCardSlots {\n  default: () => any\n  header: () => any\n  footer: () => any\n}"
            ],
            [
              "vue",
              "<CommonCard title=\"ユーザー情報\" shadow=\"hover\">\n  <template #header>\n    <div class=\"card-header\">\n      <span>詳細情報</span>\n      <CommonButton size=\"small\">編集</CommonButton>\n    </div>\n  </template>\n\n  <div class=\"card-content\">\n    コンテンツ内容\n  </div>\n\n  <template #footer>\n    <div class=\"card-footer\">\n      最終更新: 2024-01-01\n    </div>\n  </template>\n</CommonCard>"
            ],
            [
              "typescript",
              "interface CommonFormField {\n  prop: string\n  label: string\n  type: 'input' | 'select' | 'checkbox' | 'radio' | 'date' | 'textarea'\n  required?: boolean\n  rules?: any[]\n  options?: CommonSelectOption[]\n  placeholder?: string\n  disabled?: boolean\n  span?: number\n  offset?: number\n}\n\ninterface CommonFormProps {\n  model: Record<string, any>\n  schema: CommonFormField[]\n  labelWidth?: string\n  inline?: boolean\n  disabled?: boolean\n  columns?: 1 | 2 | 3 | 4\n}\n\ninterface CommonFormEvents {\n  'on-submit': (formData: Record<string, any>) => void\n  'on-reset': () => void\n  'on-field-change': (prop: string, value: any) => void\n}"
            ],
            [
              "vue",
              "<CommonForm\n  :model=\"formData\"\n  :schema=\"formSchema\"\n  :columns=\"2\"\n  @on-submit=\"handleSubmit\"\n  @on-reset=\"handleReset\"\n/>"
            ],
            [
              "typescript",
              "interface CommonMenuItem {\n  id: string\n  label: string\n  icon?: Component\n  path?: string\n  children?: CommonMenuItem[]\n  disabled?: boolean\n  badge?: string | number\n}\n\ninterface CommonMenuProps {\n  items: CommonMenuItem[]\n  mode?: 'horizontal' | 'vertical'\n  collapse?: boolean\n  activeId?: string\n  theme?: 'light' | 'dark'\n}\n\ninterface CommonMenuEvents {\n  'on-select': (menuId: string, menuPath: string[]) => void\n  'on-open': (menuId: string, menuPath: string[]) => void\n  'on-close': (menuId: string, menuPath: string[]) => void\n}"
            ],
            [
              "vue",
              "<CommonMenu\n  :items=\"menuItems\"\n  mode=\"vertical\"\n  :collapse=\"isCollapsed\"\n  :activeId=\"activeMenuId\"\n  theme=\"dark\"\n  @on-select=\"handleMenuSelect\"\n/>"
            ],
            [
              "typescript",
              "interface CommonBreadcrumbItem {\n  label: string\n  path?: string\n  icon?: Component\n}\n\ninterface CommonBreadcrumbProps {\n  items: CommonBreadcrumbItem[]\n  separator?: string\n}\n\ninterface CommonBreadcrumbEvents {\n  'on-click': (item: CommonBreadcrumbItem, index: number) => void\n}"
            ],
            [
              "vue",
              "<CommonBreadcrumb\n  :items=\"breadcrumbItems\"\n  separator=\"/\"\n  @on-click=\"handleBreadcrumbClick\"\n/>"
            ],
            [
              "typescript",
              "interface CommonDialogProps {\n  modelValue: boolean\n  title?: string\n  width?: string | number\n  fullscreen?: boolean\n  modal?: boolean\n  closeOnClickModal?: boolean\n  closeOnPressEscape?: boolean\n  showClose?: boolean\n  destroyOnClose?: boolean\n}\n\ninterface CommonDialogEvents {\n  'update:modelValue': (visible: boolean) => void\n  'on-open': () => void\n  'on-close': () => void\n  'on-confirm': () => void\n  'on-cancel': () => void\n}\n\ninterface CommonDialogSlots {\n  default: () => any\n  header: () => any\n  footer: () => any\n}"
            ],
            [
              "vue",
              "<CommonDialog\n  v-model=\"dialogVisible\"\n  title=\"確認\"\n  width=\"500px\"\n  @on-confirm=\"handleConfirm\"\n  @on-cancel=\"handleCancel\"\n>\n  <p>この操作を実行しますか？</p>\n\n  <template #footer>\n    <CommonButton @on-click=\"handleCancel\">キャンセル</CommonButton>\n    <CommonButton variant=\"primary\" @on-click=\"handleConfirm\">確認</CommonButton>\n  </template>\n</CommonDialog>"
            ],
            [
              "typescript",
              "interface CommonMessageOptions {\n  message: string\n  type?: 'success' | 'warning' | 'info' | 'error'\n  duration?: number\n  showClose?: boolean\n  center?: boolean\n  onClose?: () => void\n}\n\ninterface CommonMessage {\n  (options: CommonMessageOptions): void\n  success: (message: string, duration?: number) => void\n  warning: (message: string, duration?: number) => void\n  info: (message: string, duration?: number) => void\n  error: (message: string, duration?: number) => void\n}"
            ],
            [
              "typescript",
              "import { CommonMessage } from '@company/shared-components'\n\n// 基本使用\nCommonMessage({\n  message: '保存しました',\n  type: 'success',\n  duration: 3000\n})\n\n// ショートハンド\nCommonMessage.success('保存しました')\nCommonMessage.error('エラーが発生しました')"
            ],
            [
              "typescript",
              "// ❌ 使用禁止\nconst FORBIDDEN_COMPONENTS = [\n  'ElButton',        // → CommonButton\n  'ElInput',         // → CommonInput\n  'ElSelect',        // → CommonSelect\n  'ElTable',         // → CommonTable\n  'ElCard',          // → CommonCard\n  'ElForm',          // → CommonForm\n  'ElFormItem',      // → CommonFormに統合\n  'ElMenu',          // → CommonMenu\n  'ElMenuItem',      // → CommonMenuに統合\n  'ElSubMenu',       // → CommonMenuに統合\n  'ElBreadcrumb',    // → CommonBreadcrumb\n  'ElBreadcrumbItem', // → CommonBreadcrumbに統合\n  'ElDialog',        // → CommonDialog\n  'ElDrawer',        // → CommonDrawer\n  'ElMessage',       // → CommonMessage\n  'ElNotification',  // → CommonNotification\n  'ElMessageBox',    // → CommonMessageBox\n  'ElTabs',          // → CommonTabs\n  'ElTabPane',       // → CommonTabsに統合\n  'ElTag',           // → CommonTag\n  'ElBadge',         // → CommonBadge\n  'ElAvatar',        // → CommonAvatar\n  'ElTooltip',       // → CommonTooltip\n  'ElPopover',       // → CommonPopover\n  'ElPagination',    // → CommonTableに統合\n]"
            ],
            [
              "typescript",
              "// ✅ 直接使用OK\nconst ALLOWED_COMPONENTS = [\n  // レイアウト系\n  'ElContainer', 'ElHeader', 'ElMain', 'ElFooter', 'ElAside',\n  'ElRow', 'ElCol',\n\n  // ユーティリティ系\n  'ElScrollbar', 'ElDivider', 'ElSkeleton',\n\n  // 低レベルコンポーネント\n  'ElIcon', 'ElImage', 'ElProgress',\n\n  // 特殊用途\n  'ElWatermark', 'ElAffix', 'ElBackTop',\n]"
            ],
            [
              "scss",
              "// 共通テーマ変数\n$common-primary-color: #409eff;\n$common-success-color: #67c23a;\n$common-warning-color: #e6a23c;\n$common-danger-color: #f56c6c;\n$common-info-color: #909399;\n\n// サイズ系（レスポンシブ対応）\n$common-font-size-small: 12px;\n$common-font-size-medium: 14px;\n$common-font-size-large: 16px;\n\n// モバイル用フォントサイズ\n$common-font-size-mobile-small: 14px;  // モバイルでは大きめ\n$common-font-size-mobile-medium: 16px;\n$common-font-size-mobile-large: 18px;\n\n// スペーシング（レスポンシブ対応）\n$common-spacing-small: 8px;\n$common-spacing-medium: 16px;\n$common-spacing-large: 24px;\n\n// モバイル用スペーシング\n$common-spacing-mobile-small: 12px;\n$common-spacing-mobile-medium: 20px;\n$common-spacing-mobile-large: 32px;\n\n// タッチ対応\n$common-touch-target-size: 44px;  // 最小タップ領域\n$common-touch-spacing: 8px;       // タッチ要素間の最小間隔\n\n// ブレークポイント\n$breakpoint-xs: 320px;\n$breakpoint-sm: 576px;\n$breakpoint-md: 768px;\n$breakpoint-lg: 992px;\n$breakpoint-xl: 1200px;\n$breakpoint-xxl: 1920px;"
            ],
            [
              "typescript",
              "// ✅ 正しい拡張方法\ninterface ExtendedCommonButtonProps extends CommonButtonProps {\n  // 企業固有のプロップスを追加\n  trackingId?: string\n  permissionRequired?: string\n  analyticsEvent?: string\n}\n\n// ❌ 間違った拡張方法\ninterface WrongButtonProps {\n  // 既存のプロップス名を変更してはいけない\n  buttonType: string  // variant を変更してはいけない\n  click: () => void   // on-click を変更してはいけない\n}"
            ],
            [
              "vue",
              "<!-- ✅ 正しいスロット使用 -->\n<CommonButton>\n  <template #prefix>\n    <ElIcon><Plus /></ElIcon>\n  </template>\n  追加\n</CommonButton>\n\n<!-- ❌ 間違った使用 -->\n<CommonButton>\n  <!-- 構造を壊すような複雑なコンテンツは禁止 -->\n  <div class=\"complex-layout\">...</div>\n</CommonButton>"
            ],
            [
              "",
              "Major.Minor.Patch\n例: 1.2.3\n\nMajor: 破壊的変更（API変更）\nMinor: 新機能追加（後方互換性あり）\nPatch: バグ修正"
            ],
            [
              "typescript",
              "// package.json でのバージョン指定\n{\n  \"dependencies\": {\n    \"@company/shared-components\": \"^1.2.0\"  // Minor更新は自動適用\n  }\n}"
            ],
            [
              "markdown",
              "## [1.3.0] - 2024-01-15\n\n### Added\n- CommonDatePicker コンポーネント追加\n- CommonUpload ファイルアップロード機能\n\n### Changed\n- CommonTable のページネーション表示改善\n\n### Deprecated\n- CommonButton の `type` プロップス（`variant` に変更）\n\n### Fixed\n- CommonSelect の選択状態リセット問題修正"
            ],
            [
              "typescript",
              "// useResponsive.ts\nimport { computed, ref } from 'vue'\nimport { useWindowSize } from '@vueuse/core'\n\nexport function useResponsive() {\n  const { width } = useWindowSize()\n\n  const isMobile = computed(() => width.value < 768)\n  const isTablet = computed(() => width.value >= 768 && width.value < 992)\n  const isDesktop = computed(() => width.value >= 992)\n\n  const currentBreakpoint = computed(() => {\n    if (width.value < 576) return 'xs'\n    if (width.value < 768) return 'sm'\n    if (width.value < 992) return 'md'\n    if (width.value < 1200) return 'lg'\n    if (width.value < 1920) return 'xl'\n    return 'xxl'\n  })\n\n  return {\n    width,\n    isMobile,\n    isTablet,\n    isDesktop,\n    currentBreakpoint\n  }\n}"
            ],
            [
              "typescript",
              "// 各コンポーネントでのテスト例\ndescribe('CommonButton レスポンシブテスト', () => {\n  const viewports = [\n    { name: 'Mobile', width: 375 },\n    { name: 'Tablet', width: 768 },\n    { name: 'Desktop', width: 1024 }\n  ]\n\n  viewports.forEach(viewport => {\n    it(`${viewport.name}で適切に表示される`, () => {\n      cy.viewport(viewport.width, 600)\n      cy.mount(CommonButton, {\n        props: { responsive: true, touchOptimized: true }\n      })\n\n      if (viewport.width < 768) {\n        // モバイル固有のテスト\n        cy.get('[data-testid=\"button\"]')\n          .should('have.css', 'min-height', '44px')\n      }\n    })\n  })\n})"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 96.15,
        "sentences": 156,
        "avg_words_per_sentence": 10.04,
        "long_sentences": 20,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 64,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.94
    },
    "docs/70-共通機能保護戦略設計書.md": {
      "basic_metrics": {
        "lines": 420,
        "words": 1245,
        "characters": 8503,
        "avg_line_length": 20.245238095238093
      },
      "structure_analysis": {
        "headers": {
          "total": 48,
          "hierarchy": [
            {
              "level": 1,
              "text": "共通機能保護戦略設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "文書情報",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "1.1 背景と目的",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "1.2 スコープ",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1.3 想定される利用シーン",
              "line_number": 21
            },
            {
              "level": 2,
              "text": "2. 保護レベル定義",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "2.1 保護レベルマトリクス",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "2.2 保護対象機能一覧",
              "line_number": 38
            },
            {
              "level": 4,
              "text": "L1: CORE（完全保護）",
              "line_number": 40
            },
            {
              "level": 4,
              "text": "L2: PROTECTED（拡張可能）",
              "line_number": 48
            },
            {
              "level": 4,
              "text": "L3: EXTENSIBLE（上書き可能）",
              "line_number": 56
            },
            {
              "level": 4,
              "text": "L4: CUSTOMIZABLE（完全カスタマイズ可能）",
              "line_number": 64
            },
            {
              "level": 2,
              "text": "3. アーキテクチャ設計",
              "line_number": 72
            },
            {
              "level": 3,
              "text": "3.1 全体構成",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "3.2 技術スタック",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "3.3 保護メカニズム",
              "line_number": 115
            },
            {
              "level": 4,
              "text": "3.3.1 コンパイル時保護",
              "line_number": 117
            },
            {
              "level": 4,
              "text": "3.3.2 実行時保護",
              "line_number": 133
            },
            {
              "level": 2,
              "text": "4. 実装計画",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "4.1 フェーズ1: 基盤構築（2025年10月〜11月）",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "4.2 フェーズ2: 拡張機能実装（2025年12月）",
              "line_number": 156
            },
            {
              "level": 3,
              "text": "4.3 フェーズ3: カスタマイズ対応（2026年1月）",
              "line_number": 165
            },
            {
              "level": 2,
              "text": "5. 実装ガイドライン",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "5.1 コア機能の実装規則",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "5.2 拡張ポイントの定義",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "5.3 カスタマイズ設定",
              "line_number": 227
            },
            {
              "level": 2,
              "text": "6. テスト戦略",
              "line_number": 258
            },
            {
              "level": 3,
              "text": "6.1 テストレベル",
              "line_number": 260
            },
            {
              "level": 3,
              "text": "6.2 保護機能のテスト",
              "line_number": 270
            },
            {
              "level": 2,
              "text": "7. 運用・保守",
              "line_number": 293
            },
            {
              "level": 3,
              "text": "7.1 バージョン管理",
              "line_number": 295
            },
            {
              "level": 3,
              "text": "7.2 後方互換性ポリシー",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "7.3 移行支援",
              "line_number": 310
            },
            {
              "level": 2,
              "text": "8. セキュリティ考慮事項",
              "line_number": 325
            },
            {
              "level": 3,
              "text": "8.1 脅威モデル",
              "line_number": 327
            },
            {
              "level": 3,
              "text": "8.2 監査要件",
              "line_number": 336
            },
            {
              "level": 2,
              "text": "9. 成功指標（KPI）",
              "line_number": 352
            },
            {
              "level": 2,
              "text": "10. リスク管理",
              "line_number": 362
            },
            {
              "level": 3,
              "text": "10.1 技術的リスク",
              "line_number": 364
            },
            {
              "level": 3,
              "text": "10.2 ビジネスリスク",
              "line_number": 372
            },
            {
              "level": 2,
              "text": "11. 承認と改訂",
              "line_number": 380
            },
            {
              "level": 3,
              "text": "11.1 承認履歴",
              "line_number": 382
            },
            {
              "level": 3,
              "text": "11.2 レビュー計画",
              "line_number": 388
            },
            {
              "level": 2,
              "text": "12. 付録",
              "line_number": 394
            },
            {
              "level": 3,
              "text": "A. 用語集",
              "line_number": 396
            },
            {
              "level": 3,
              "text": "B. 参考資料",
              "line_number": 405
            },
            {
              "level": 3,
              "text": "C. 連絡先",
              "line_number": 411
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 3,
          "internal": 0,
          "external": 3,
          "empty": 0,
          "internal_details": [],
          "external_details": [
            [
              "プラグインアーキテクチャ設計パターン",
              "https://docs.example.com/plugin-architecture"
            ],
            [
              "セキュアコーディングガイドライン",
              "https://docs.example.com/secure-coding"
            ],
            [
              "npm workspaces公式ドキュメント",
              "https://docs.npmjs.com/cli/v7/using-npm/workspaces"
            ]
          ]
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 14,
          "inline_code": 27,
          "languages": {
            "typescript": 7,
            "json": 1
          },
          "details": [
            [
              "",
              "- 認証システム（JWT、セッション管理）\n- 監査ログ（改ざん防止）\n- セキュリティ機能（暗号化、XSS/CSRF対策）\n- システム基盤（データベース接続、キャッシュ）"
            ],
            [
              "",
              "- 権限管理（RBAC）\n- ユーザー管理\n- 基本API構造\n- ログ収集機能"
            ],
            [
              "",
              "- ワークフロー定義\n- 通知システム\n- レポート生成\n- データインポート/エクスポート"
            ],
            [
              "",
              "- UIコンポーネント\n- ダッシュボード\n- 業務固有機能\n- カスタムレポート"
            ],
            [
              "",
              "websys-platform/\n├── packages/\n│   ├── @websys/core/              # L1: 完全保護\n│   │   ├── auth/\n│   │   ├── security/\n│   │   └── audit/\n│   ├── @websys/protected/         # L2: 保護（拡張可能）\n│   │   ├── permissions/\n│   │   ├── users/\n│   │   └── api-base/\n│   ├── @websys/extensible/        # L3: 拡張可能\n│   │   ├── workflow/\n│   │   ├── notifications/\n│   │   └── reports/\n│   └── @websys/components/        # L4: カスタマイズ可能\n│       ├── ui/\n│       └── widgets/\n├── extensions/                     # 企業別拡張\n│   └── {company-id}/\n│       ├── overrides/\n│       ├── plugins/\n│       └── config/\n└── deployments/                    # デプロイメント設定\n    ├── standalone/\n    ├── multi-tenant/\n    └── enterprise/"
            ],
            [
              "typescript",
              "// core/decorators.ts\nexport function CoreFeature(options: { protected: boolean }) {\n  return function (constructor: Function) {\n    Object.freeze(constructor);\n    Object.freeze(constructor.prototype);\n  }\n}\n\n@CoreFeature({ protected: true })\nexport class AuthenticationService {\n  // 変更不可能なコア機能\n}"
            ],
            [
              "typescript",
              "// runtime/protection.ts\nexport class ProtectionManager {\n  validateExtension(extension: IExtension): void {\n    if (extension.overrides?.includes('core')) {\n      throw new SecurityError('Core features cannot be overridden');\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// ✅ 正しい実装\nimport { CoreFeature, sealed } from '@websys/core';\n\n@CoreFeature({ level: 'L1' })\n@sealed\nexport class JWTAuthService {\n  private readonly secret = process.env.JWT_SECRET;\n\n  // publicメソッドもfinalとして扱う\n  public async verifyToken(token: string): Promise<User> {\n    // 実装\n  }\n}\n\n// ❌ 避けるべき実装\nexport class JWTAuthService {\n  public secret = 'hardcoded'; // 設定値の露出\n  public verifyToken() { }     // 型定義なし\n}"
            ],
            [
              "typescript",
              "// extensible/interfaces.ts\nexport interface IWorkflowExtension {\n  // 必須実装\n  name: string;\n  version: string;\n\n  // 拡張ポイント（オプション）\n  beforeApprove?: (context: WorkflowContext) => Promise<void>;\n  afterApprove?: (context: WorkflowContext) => Promise<void>;\n  customValidation?: (data: any) => ValidationResult;\n}\n\n// 企業実装例\nexport class CompanyAWorkflow implements IWorkflowExtension {\n  name = 'company-a-workflow';\n  version = '1.0.0';\n\n  async beforeApprove(context: WorkflowContext) {\n    // 企業固有の承認前処理\n    await this.notifyManager(context);\n  }\n}"
            ],
            [
              "json",
              "// extensions/{company}/config/customization.json\n{\n  \"$schema\": \"../../../schemas/customization.schema.json\",\n  \"companyId\": \"company-a\",\n  \"features\": {\n    \"core\": {\n      \"protected\": true,\n      \"overrides\": [] // 上書き不可\n    },\n    \"extensible\": {\n      \"workflow\": {\n        \"extensions\": [\"company-a-workflow\"],\n        \"config\": {\n          \"approvalLevels\": 3,\n          \"timeoutHours\": 48\n        }\n      }\n    },\n    \"customizable\": {\n      \"ui\": {\n        \"theme\": \"company-a-theme\",\n        \"logo\": \"/assets/company-a/logo.png\"\n      }\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// tests/protection.test.ts\ndescribe('Core Protection Tests', () => {\n  test('Core機能の変更を防ぐ', () => {\n    const authService = new JWTAuthService();\n    expect(() => {\n      authService.verifyToken = jest.fn(); // 上書き試行\n    }).toThrow('Cannot assign to read only property');\n  });\n\n  test('不正な拡張を検出', () => {\n    const extension = {\n      overrides: ['core.auth']\n    };\n    expect(() => {\n      protectionManager.validateExtension(extension);\n    }).toThrow(SecurityError);\n  });\n});"
            ],
            [
              "",
              "@websys/core: 1.0.0     # メジャーバージョンは年1回\n@websys/protected: 1.x.x # マイナーは四半期ごと\n@websys/extensible: 1.x.x # パッチは随時"
            ],
            [
              "typescript",
              "// migration/v1-to-v2.ts\nexport class MigrationHelper {\n  async migrate(fromVersion: string, toVersion: string) {\n    // 自動移行スクリプト\n    const migrations = this.getMigrations(fromVersion, toVersion);\n    for (const migration of migrations) {\n      await migration.run();\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// audit/requirements.ts\nexport interface AuditRequirements {\n  // 全ての保護レベル変更を記録\n  logProtectionChange: boolean;\n  // 拡張機能のロードを記録\n  logExtensionLoad: boolean;\n  // 設定変更を記録\n  logConfigChange: boolean;\n  // 改ざん検知\n  integrityCheck: boolean;\n}"
            ]
          ]
        },
        "tables": {
          "total": 12,
          "total_rows": 70
        }
      },
      "readability": {
        "score": 95.1,
        "sentences": 104,
        "avg_words_per_sentence": 11.97,
        "long_sentences": 17,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 71,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 79.43
    },
    "docs/69-InheritanceVisualization分割実装効果レポート.md": {
      "basic_metrics": {
        "lines": 277,
        "words": 677,
        "characters": 6025,
        "avg_line_length": 21.750902527075812
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "InheritanceVisualization.vue 最適化実装効果レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 最適化実装概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 最適化前後の比較",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "最適化前（モノリシック構成）",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "最適化後（マイクロコンポーネント + 最適化構成）",
              "line_number": 24
            },
            {
              "level": 2,
              "text": "📊 最適化効果分析",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "ファイルサイズ最適化",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "パフォーマンス改善効果",
              "line_number": 55
            },
            {
              "level": 2,
              "text": "🛠️ 技術的実装詳細",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "1. D3.js動的インポート最適化",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "2. マイクロコンポーネント分割設計",
              "line_number": 98
            },
            {
              "level": 3,
              "text": "3. WebWorker並列処理実装",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "4. 遅延読み込みアーキテクチャ",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "🚀 性能改善効果",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "初期読み込み最適化",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "UI応答性向上",
              "line_number": 148
            },
            {
              "level": 3,
              "text": "ユーザー体験改善",
              "line_number": 153
            },
            {
              "level": 2,
              "text": "🔧 技術的な設計原則",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "マイクロコンポーネント設計",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "パフォーマンス最適化",
              "line_number": 172
            },
            {
              "level": 2,
              "text": "📈 水平展開への影響",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "適用可能な他コンポーネント",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "設計パターンの確立",
              "line_number": 188
            },
            {
              "level": 2,
              "text": "💡 学習・知見",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "成功要因",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "技術的改善点",
              "line_number": 207
            },
            {
              "level": 2,
              "text": "🎯 実装品質評価",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "コード品質指標",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "設計原則適用度",
              "line_number": 223
            },
            {
              "level": 2,
              "text": "🌟 ユーザー体験改善",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "体感速度向上",
              "line_number": 233
            },
            {
              "level": 3,
              "text": "機能アクセシビリティ",
              "line_number": 239
            },
            {
              "level": 2,
              "text": "🔗 関連技術スタック",
              "line_number": 250
            },
            {
              "level": 3,
              "text": "フロントエンド最適化",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "並列処理アーキテクチャ",
              "line_number": 258
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 18,
          "languages": {
            "json": 1,
            "typescript": 5,
            "vue": 1
          },
          "details": [
            [
              "",
              "InheritanceVisualization.vue: 1,077行（約34KB）\n├── D3.js: 静的インポート（初回読み込み）\n├── 3つの可視化機能: 直接実装\n├── 計算処理: UIスレッドで実行\n├── SVGエクスポート: インライン実装\n└── UI制御: 単一コンポーネント内集約"
            ],
            [
              "",
              "src/components/visualization/\n├── InheritanceVisualizationNew.vue (140行, 4KB) - メイン統合コンテナ\n├── VisualizationTypes.ts (60行, 2KB) - 型定義・インターフェース\n├── D3Loader.ts (250行, 8KB) - D3.js動的ローダー・SVGエクスポート\n├── VisualizationControls.vue (180行, 6KB) - UI制御・選択コンポーネント\n├── NodeDetailsPanel.vue (220行, 7KB) - 詳細情報表示パネル\n├── TreeVisualization.vue (230行, 8KB) - ツリー可視化専用\n├── FlowVisualization.vue (210行, 7KB) - フロー可視化専用\n└── MatrixVisualization.vue (230行, 8KB) - マトリクス可視化専用\n\nsrc/workers/\n├── visualizationWorker.ts (320行, 12KB) - 重い計算処理用WebWorker\n\nsrc/utils/\n└── workerManager.ts (200行, 7KB) - WebWorker管理ユーティリティ"
            ],
            [
              "json",
              "{\n  \"before\": {\n    \"initial_load\": \"34KB + D3.js\",\n    \"render_blocking\": \"UIスレッド\",\n    \"memory_usage\": \"高（全機能常駐）\",\n    \"component_complexity\": \"VERY_HIGH\"\n  },\n  \"after\": {\n    \"initial_load\": \"4KB\",\n    \"d3_loading\": \"動的（必要時のみ）\",\n    \"computation\": \"WebWorker（並列）\",\n    \"memory_usage\": \"最適化（按需読み込み）\",\n    \"component_complexity\": \"LOW\"\n  }\n}"
            ],
            [
              "typescript",
              "// D3Loader.ts - 遅延読み込み実装\nexport async function loadD3(): Promise<D3Module> {\n  if (d3Instance) {\n    return d3Instance // キャッシュ使用\n  }\n\n  console.log('[D3Loader] Loading D3.js dynamically...')\n\n  try {\n    d3Instance = await import('d3') // 動的インポート\n    console.log('[D3Loader] D3.js loaded successfully')\n    return d3Instance\n  } catch (error) {\n    throw new Error('D3.jsの読み込みに失敗しました')\n  }\n}"
            ],
            [
              "typescript",
              "// visualizationWorker.ts - 重い計算をバックグラウンド実行\nfunction buildTreeData(departments: Department[], selectedFeature?: number): VisualizationNode[] {\n  console.log(`[VisualizationWorker] Building tree data for ${departments.length} departments`)\n\n  const nodeMap = new Map<number, VisualizationNode>()\n\n  // 重いツリー構造計算\n  departments.forEach(dept => {\n    // 権限計算・継承ルール処理\n  })\n\n  return tree // UIスレッドをブロックしない\n}"
            ],
            [
              "vue",
              "<!-- InheritanceVisualizationNew.vue - 按需読み込み -->\n<Suspense>\n  <template #default>\n    <TreeVisualization v-if=\"controlsState.visualizationType === 'tree'\" />\n    <FlowVisualization v-else-if=\"controlsState.visualizationType === 'flow'\" />\n    <MatrixVisualization v-else-if=\"controlsState.visualizationType === 'matrix'\" />\n  </template>\n  <template #fallback>\n    <div class=\"loading-fallback\">可視化コンポーネントを読み込み中...</div>\n  </template>\n</Suspense>"
            ],
            [
              "typescript",
              "// 段階的読み込みによる体験向上\n1. 即座表示: コントロールUI（4KB）\n2. 按需読み込み: 選択された可視化コンポーネント\n3. バックグラウンド: D3.js + 計算処理\n4. 完了: 完全なインタラクティブ可視化"
            ],
            [
              "typescript",
              "// 汎用最適化パターン\n1. 重いライブラリ → 動的インポート\n2. 大きなコンポーネント → マイクロコンポーネント分割\n3. 重い計算 → WebWorker並列処理\n4. 複雑UI → Suspense + 遅延読み込み"
            ],
            [
              "typescript",
              "// 段階的機能提供\nPhase 1: コントロール表示（即座）\nPhase 2: 基本可視化（遅延読み込み）\nPhase 3: 高度機能（按需追加）\nPhase 4: エクスポート（最終機能）"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 13
        }
      },
      "readability": {
        "score": 96.76,
        "sentences": 74,
        "avg_words_per_sentence": 9.15,
        "long_sentences": 8,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.54,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.54
    },
    "docs/19-テスト仕様書.md": {
      "basic_metrics": {
        "lines": 393,
        "words": 1505,
        "characters": 10658,
        "avg_line_length": 27.119592875318066
      },
      "structure_analysis": {
        "headers": {
          "total": 51,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム テスト仕様書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 ドキュメント概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 テスト目的",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "テスト観点",
              "line_number": 15
            },
            {
              "level": 2,
              "text": "🏗️ テスト対象システム",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "システム構成",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "対象機能",
              "line_number": 31
            },
            {
              "level": 2,
              "text": "📊 テストレベル分類",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "L1: 単体テスト（Unit Test）",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "L2: 結合テスト（Integration Test）",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "L3: システムテスト（System Test）",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "L4: 受入テスト（Acceptance Test）",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "🧪 詳細テストケース",
              "line_number": 58
            },
            {
              "level": 2,
              "text": "1. 機能マスタ管理機能",
              "line_number": 60
            },
            {
              "level": 3,
              "text": "1.1 機能一覧取得 (GET /api/features)",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "1.2 機能作成 (POST /api/features)",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "1.3 機能更新 (PUT /api/features/:id)",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "1.4 機能削除 (DELETE /api/features/:id)",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "2. 権限マトリクス管理機能",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "2.1 権限マトリクス取得 (GET /api/permissions/matrix)",
              "line_number": 135
            },
            {
              "level": 3,
              "text": "2.2 部署権限取得 (GET /api/permissions/department/:departmentId)",
              "line_number": 146
            },
            {
              "level": 3,
              "text": "2.3 部署権限更新 (POST /api/permissions/department/:departmentId)",
              "line_number": 157
            },
            {
              "level": 2,
              "text": "3. 権限テンプレート機能",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "3.1 テンプレート一覧取得 (GET /api/permissions/templates)",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "3.2 テンプレート作成 (POST /api/permissions/templates)",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "3.3 テンプレート適用 (POST /api/permissions/templates/:templateId/apply)",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "4. 権限チェック機能",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "4.1 権限チェック (POST /api/permissions/check)",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "4.2 一括権限チェック (POST /api/permissions/check-bulk)",
              "line_number": 219
            },
            {
              "level": 2,
              "text": "5. フロントエンド機能テスト",
              "line_number": 230
            },
            {
              "level": 3,
              "text": "5.1 機能管理画面",
              "line_number": 232
            },
            {
              "level": 3,
              "text": "5.2 権限マトリクス画面",
              "line_number": 252
            },
            {
              "level": 2,
              "text": "6. セキュリティテスト",
              "line_number": 282
            },
            {
              "level": 3,
              "text": "6.1 認証テスト",
              "line_number": 284
            },
            {
              "level": 3,
              "text": "6.2 権限制御テスト",
              "line_number": 295
            },
            {
              "level": 2,
              "text": "7. パフォーマンステスト",
              "line_number": 306
            },
            {
              "level": 3,
              "text": "7.1 レスポンス時間テスト",
              "line_number": 308
            },
            {
              "level": 2,
              "text": "8. データ整合性テスト",
              "line_number": 319
            },
            {
              "level": 3,
              "text": "8.1 トランザクション整合性",
              "line_number": 321
            },
            {
              "level": 2,
              "text": "📋 テスト実行結果サマリー",
              "line_number": 332
            },
            {
              "level": 3,
              "text": "実行予定テストケース数",
              "line_number": 334
            },
            {
              "level": 3,
              "text": "既知の問題",
              "line_number": 340
            },
            {
              "level": 3,
              "text": "テスト環境",
              "line_number": 345
            },
            {
              "level": 3,
              "text": "前提条件",
              "line_number": 350
            },
            {
              "level": 2,
              "text": "🚀 テスト実行手順",
              "line_number": 358
            },
            {
              "level": 3,
              "text": "1. 環境準備",
              "line_number": 360
            },
            {
              "level": 3,
              "text": "2. APIテスト実行",
              "line_number": 367
            },
            {
              "level": 1,
              "text": "認証トークン取得",
              "line_number": 369
            },
            {
              "level": 1,
              "text": "各APIエンドポイントのテスト実行",
              "line_number": 374
            },
            {
              "level": 3,
              "text": "3. フロントエンドテスト実行",
              "line_number": 379
            },
            {
              "level": 3,
              "text": "4. 結果記録",
              "line_number": 384
            }
          ],
          "hierarchy_issues": [
            {
              "line": 379,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 16,
          "languages": {
            "bash": 2
          },
          "details": [
            [
              "bash",
              "cd /home/typho/src/elementplus/websys/infrastructure/docker/development\ndocker compose up -d\ndocker exec websys_backend_dev npm run prisma:seed"
            ],
            [
              "bash",
              "# 認証トークン取得\nTOKEN=$(curl -s -X POST \"http://localhost:8000/api/auth/login\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"admin\", \"password\": \"admin123\"}' | jq -r '.data.token')\n\n# 各APIエンドポイントのテスト実行\ncurl -H \"Authorization: Bearer $TOKEN\" \"http://localhost:8000/api/features\"\ncurl -H \"Authorization: Bearer $TOKEN\" \"http://localhost:8000/api/permissions/matrix?companyId=1\""
            ]
          ]
        },
        "tables": {
          "total": 24,
          "total_rows": 196
        }
      },
      "readability": {
        "score": 82.44,
        "sentences": 86,
        "avg_words_per_sentence": 17.5,
        "long_sentences": 36,
        "readability_level": "読みやすい"
      },
      "structure_score": 53,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 68.43
    },
    "docs/53-機能追加改善チェックリスト.md": {
      "basic_metrics": {
        "lines": 259,
        "words": 1038,
        "characters": 4632,
        "avg_line_length": 17.884169884169886
      },
      "structure_analysis": {
        "headers": {
          "total": 24,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能追加・改善チェックリスト",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "使用方法",
              "line_number": 7
            },
            {
              "level": 2,
              "text": "📋 実施情報",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "✅ ユーザビリティチェック",
              "line_number": 28
            },
            {
              "level": 3,
              "text": "👤 一般ユーザー（USER）視点",
              "line_number": 30
            },
            {
              "level": 3,
              "text": "👨‍💼 管理者（ADMIN）視点",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "👔 マネージャー（MANAGER）視点",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "👥 ゲスト・外部ユーザー視点",
              "line_number": 65
            },
            {
              "level": 2,
              "text": "🔒 セキュリティチェック",
              "line_number": 75
            },
            {
              "level": 2,
              "text": "⚡ パフォーマンスチェック",
              "line_number": 90
            },
            {
              "level": 2,
              "text": "📱 UI/UXチェック",
              "line_number": 105
            },
            {
              "level": 2,
              "text": "🔄 ワークフロー・権限チェック",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "🧪 テスト実施状況",
              "line_number": 136
            },
            {
              "level": 2,
              "text": "📝 問題管理シート",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "発見した問題リスト",
              "line_number": 153
            },
            {
              "level": 3,
              "text": "問題詳細記録",
              "line_number": 163
            },
            {
              "level": 4,
              "text": "問題1",
              "line_number": 165
            },
            {
              "level": 2,
              "text": "🎯 改善タスク作成",
              "line_number": 197
            },
            {
              "level": 3,
              "text": "作成したタスク一覧",
              "line_number": 199
            },
            {
              "level": 2,
              "text": "📊 総合評価",
              "line_number": 209
            },
            {
              "level": 3,
              "text": "評価サマリー",
              "line_number": 211
            },
            {
              "level": 3,
              "text": "リリース判定",
              "line_number": 221
            },
            {
              "level": 3,
              "text": "申し送り事項",
              "line_number": 230
            },
            {
              "level": 2,
              "text": "✍️ 承認",
              "line_number": 246
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 3,
          "languages": {},
          "details": [
            [
              "",
              "問題ID: P-YYYY-MM-DD-001\n重要度: CRITICAL / HIGH / MEDIUM / LOW\n影響範囲: 全ユーザー / 特定ロール / 特定機能 / 限定的\n\n【問題内容】\n\n\n【再現手順】\n1.\n2.\n3.\n\n【期待動作】\n\n\n【実際動作】\n\n\n【改善案】\n\n\n【対応方針】\n□ 即時対応\n□ 次回リリース対応\n□ 保留\n□ 対応不要"
            ],
            [
              "",
              "【次回対応が必要な事項】\n\n\n【注意事項】\n\n\n【改善提案】\n\n"
            ]
          ]
        },
        "tables": {
          "total": 15,
          "total_rows": 119
        }
      },
      "readability": {
        "score": 0,
        "sentences": 12,
        "avg_words_per_sentence": 86.5,
        "long_sentences": 2,
        "readability_level": "読みにくい"
      },
      "structure_score": 56,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 44.9
    },
    "docs/05-デプロイ手順.md": {
      "basic_metrics": {
        "lines": 612,
        "words": 1158,
        "characters": 12567,
        "avg_line_length": 20.534313725490197
      },
      "structure_analysis": {
        "headers": {
          "total": 99,
          "hierarchy": [
            {
              "level": 1,
              "text": "デプロイ・運用ガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "環境構成",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "環境一覧",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "環境別設定",
              "line_number": 17
            },
            {
              "level": 4,
              "text": "Development",
              "line_number": 19
            },
            {
              "level": 1,
              "text": "ローカル開発環境",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "Staging",
              "line_number": 29
            },
            {
              "level": 1,
              "text": "ステージング環境",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "Production",
              "line_number": 39
            },
            {
              "level": 1,
              "text": "本番環境",
              "line_number": 41
            },
            {
              "level": 2,
              "text": "ローカル開発環境",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "セットアップ",
              "line_number": 51
            },
            {
              "level": 1,
              "text": "1. 環境構築",
              "line_number": 53
            },
            {
              "level": 1,
              "text": "2. 環境確認",
              "line_number": 56
            },
            {
              "level": 1,
              "text": "3. データベース確認",
              "line_number": 60
            },
            {
              "level": 3,
              "text": "日常運用",
              "line_number": 65
            },
            {
              "level": 1,
              "text": "環境起動",
              "line_number": 67
            },
            {
              "level": 1,
              "text": "環境停止",
              "line_number": 70
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 74
            },
            {
              "level": 1,
              "text": "データベースリセット",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "ステージング環境",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "インフラ構成",
              "line_number": 84
            },
            {
              "level": 1,
              "text": "infrastructure/docker/staging/docker-compose.yml",
              "line_number": 86
            },
            {
              "level": 3,
              "text": "デプロイ手順",
              "line_number": 131
            },
            {
              "level": 1,
              "text": "1. 環境設定生成",
              "line_number": 133
            },
            {
              "level": 1,
              "text": "2. ステージング環境構築",
              "line_number": 136
            },
            {
              "level": 1,
              "text": "3. データベースマイグレーション",
              "line_number": 140
            },
            {
              "level": 1,
              "text": "4. 初期データ投入（初回のみ）",
              "line_number": 143
            },
            {
              "level": 1,
              "text": "5. ヘルスチェック",
              "line_number": 146
            },
            {
              "level": 3,
              "text": "SSL/TLS設定",
              "line_number": 151
            },
            {
              "level": 1,
              "text": "nginx.conf",
              "line_number": 153
            },
            {
              "level": 2,
              "text": "本番環境",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "インフラ構成",
              "line_number": 178
            },
            {
              "level": 4,
              "text": "推奨アーキテクチャ",
              "line_number": 180
            },
            {
              "level": 4,
              "text": "Dockerコンテナ構成",
              "line_number": 198
            },
            {
              "level": 1,
              "text": "infrastructure/docker/production/docker-compose.yml",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "本番デプロイ手順",
              "line_number": 299
            },
            {
              "level": 4,
              "text": "Blue-Green デプロイ",
              "line_number": 301
            },
            {
              "level": 1,
              "text": "1. 新バージョン準備（Green環境）",
              "line_number": 303
            },
            {
              "level": 1,
              "text": "2. ヘルスチェック",
              "line_number": 307
            },
            {
              "level": 1,
              "text": "3. データベースマイグレーション（必要に応じて）",
              "line_number": 310
            },
            {
              "level": 1,
              "text": "4. トラフィック切り替え",
              "line_number": 313
            },
            {
              "level": 1,
              "text": "5. 旧環境停止（Blue環境）",
              "line_number": 316
            },
            {
              "level": 1,
              "text": "6. 環境ラベル更新",
              "line_number": 319
            },
            {
              "level": 4,
              "text": "ローリングアップデート",
              "line_number": 323
            },
            {
              "level": 1,
              "text": "1. バックエンドサービス更新",
              "line_number": 325
            },
            {
              "level": 1,
              "text": "2. 古いコンテナ停止",
              "line_number": 328
            },
            {
              "level": 1,
              "text": "3. フロントエンド更新",
              "line_number": 331
            },
            {
              "level": 3,
              "text": "本番運用",
              "line_number": 335
            },
            {
              "level": 4,
              "text": "バックアップ戦略",
              "line_number": 337
            },
            {
              "level": 1,
              "text": "データベースバックアップ（日次）",
              "line_number": 339
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 340
            },
            {
              "level": 1,
              "text": "scripts/backup-db.sh",
              "line_number": 341
            },
            {
              "level": 1,
              "text": "S3アップロード（オプション）",
              "line_number": 354
            },
            {
              "level": 1,
              "text": "古いバックアップ削除（30日以上）",
              "line_number": 357
            },
            {
              "level": 4,
              "text": "ログローテーション",
              "line_number": 361
            },
            {
              "level": 1,
              "text": "logrotate設定",
              "line_number": 363
            },
            {
              "level": 1,
              "text": "/etc/logrotate.d/websys",
              "line_number": 364
            },
            {
              "level": 2,
              "text": "監視・アラート",
              "line_number": 376
            },
            {
              "level": 3,
              "text": "Prometheus設定",
              "line_number": 378
            },
            {
              "level": 1,
              "text": "monitoring/prometheus.yml",
              "line_number": 380
            },
            {
              "level": 3,
              "text": "Grafanaダッシュボード",
              "line_number": 403
            },
            {
              "level": 4,
              "text": "システムメトリクス",
              "line_number": 405
            },
            {
              "level": 4,
              "text": "アプリケーションメトリクス",
              "line_number": 411
            },
            {
              "level": 4,
              "text": "データベースメトリクス",
              "line_number": 417
            },
            {
              "level": 3,
              "text": "アラート設定",
              "line_number": 423
            },
            {
              "level": 1,
              "text": "alerting/rules.yml",
              "line_number": 425
            },
            {
              "level": 2,
              "text": "セキュリティ",
              "line_number": 454
            },
            {
              "level": 3,
              "text": "SSL/TLS設定",
              "line_number": 456
            },
            {
              "level": 1,
              "text": "セキュリティヘッダー",
              "line_number": 458
            },
            {
              "level": 3,
              "text": "ファイアウォール設定",
              "line_number": 466
            },
            {
              "level": 1,
              "text": "UFW設定例",
              "line_number": 468
            },
            {
              "level": 3,
              "text": "アクセス制御",
              "line_number": 477
            },
            {
              "level": 1,
              "text": "Docker Compose セキュリティ設定",
              "line_number": 479
            },
            {
              "level": 1,
              "text": "非rootユーザーで実行",
              "line_number": 482
            },
            {
              "level": 1,
              "text": "読み取り専用ファイルシステム",
              "line_number": 484
            },
            {
              "level": 1,
              "text": "特権なし",
              "line_number": 486
            },
            {
              "level": 1,
              "text": "セキュリティオプション",
              "line_number": 488
            },
            {
              "level": 2,
              "text": "パフォーマンス最適化",
              "line_number": 493
            },
            {
              "level": 3,
              "text": "CDN設定",
              "line_number": 495
            },
            {
              "level": 3,
              "text": "データベース最適化",
              "line_number": 518
            },
            {
              "level": 3,
              "text": "キャッシュ戦略",
              "line_number": 530
            },
            {
              "level": 2,
              "text": "災害復旧",
              "line_number": 547
            },
            {
              "level": 3,
              "text": "バックアップからの復旧",
              "line_number": 549
            },
            {
              "level": 1,
              "text": "1. サービス停止",
              "line_number": 551
            },
            {
              "level": 1,
              "text": "2. データベース復旧",
              "line_number": 554
            },
            {
              "level": 1,
              "text": "3. サービス再開",
              "line_number": 560
            },
            {
              "level": 1,
              "text": "4. ヘルスチェック",
              "line_number": 563
            },
            {
              "level": 3,
              "text": "高可用性構成",
              "line_number": 567
            },
            {
              "level": 1,
              "text": "本番環境での冗長化",
              "line_number": 569
            },
            {
              "level": 2,
              "text": "コンプライアンス",
              "line_number": 587
            },
            {
              "level": 3,
              "text": "ログ管理",
              "line_number": 589
            },
            {
              "level": 1,
              "text": "アクセスログ保持",
              "line_number": 591
            },
            {
              "level": 1,
              "text": "- アクセスログ: 1年間保持",
              "line_number": 592
            },
            {
              "level": 1,
              "text": "- エラーログ: 2年間保持",
              "line_number": 593
            },
            {
              "level": 1,
              "text": "- 監査ログ: 5年間保持",
              "line_number": 594
            },
            {
              "level": 1,
              "text": "ログフォーマット統一",
              "line_number": 596
            },
            {
              "level": 3,
              "text": "データ保護",
              "line_number": 608
            }
          ],
          "hierarchy_issues": [
            {
              "line": 29,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 39,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 65,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 131,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 151,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 299,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 323,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 335,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 361,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 403,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 466,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 477,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 567,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 608,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 25,
          "inline_code": 51,
          "languages": {
            "bash": 13,
            "yaml": 6,
            "nginx": 2,
            "javascript": 1,
            "sql": 1,
            "typescript": 1
          },
          "details": [
            [
              "bash",
              "# ローカル開発環境\nNODE_ENV=development\nDATABASE_URL=postgresql://admin:password@postgres:5432/websys_db_dev\nJWT_SECRET=dev-secret-key\nPORT=8000\nVITE_API_BASE_URL=http://localhost:8000"
            ],
            [
              "bash",
              "# ステージング環境\nNODE_ENV=staging\nDATABASE_URL=postgresql://admin:staging_password@staging-db:5432/websys_db_staging\nJWT_SECRET=staging-secure-secret-key\nPORT=8000\nVITE_API_BASE_URL=https://api-staging.websys.company.com"
            ],
            [
              "bash",
              "# 本番環境\nNODE_ENV=production\nDATABASE_URL=postgresql://admin:production_password@prod-db:5432/websys_db_prod\nJWT_SECRET=production-super-secure-secret-key\nPORT=8000\nVITE_API_BASE_URL=https://api.websys.company.com"
            ],
            [
              "bash",
              "# 1. 環境構築\n./infrastructure/scripts/setup-dev.sh\n\n# 2. 環境確認\ncurl http://localhost:8000/health\ncurl http://localhost:3000\n\n# 3. データベース確認\ncd infrastructure/docker/development\ndocker-compose exec postgres psql -U admin -d websys_db"
            ],
            [
              "bash",
              "# 環境起動\n./infrastructure/scripts/setup-dev.sh\n\n# 環境停止\ncd infrastructure/docker/development\ndocker-compose down\n\n# ログ確認\ndocker-compose logs -f [frontend|backend|postgres]\n\n# データベースリセット\ndocker-compose down -v\n./infrastructure/scripts/setup-dev.sh"
            ],
            [
              "yaml",
              "# infrastructure/docker/staging/docker-compose.yml\nversion: '3.8'\n\nservices:\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/nginx/ssl\n    depends_on:\n      - frontend\n      - backend\n\n  frontend:\n    build:\n      context: ../../../workspace/frontend\n      dockerfile: ../../infrastructure/docker/staging/frontend/Dockerfile\n    environment:\n      NODE_ENV: staging\n      VITE_API_BASE_URL: https://api-staging.websys.company.com\n\n  backend:\n    build:\n      context: ../../../workspace/backend\n      dockerfile: ../../infrastructure/docker/staging/backend/Dockerfile\n    environment:\n      NODE_ENV: staging\n      DATABASE_URL: ${DATABASE_URL}\n      JWT_SECRET: ${JWT_SECRET}\n    depends_on:\n      - postgres\n\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: ${POSTGRES_USER}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\n      POSTGRES_DB: ${POSTGRES_DB}\n    volumes:\n      - postgres_data_staging:/var/lib/postgresql/data"
            ],
            [
              "bash",
              "# 1. 環境設定生成\n./infrastructure/scripts/generate-env.sh staging\n\n# 2. ステージング環境構築\ncd infrastructure/docker/staging\ndocker-compose --env-file ../../environments/staging/.env up -d --build\n\n# 3. データベースマイグレーション\ndocker-compose exec backend npx prisma migrate deploy\n\n# 4. 初期データ投入（初回のみ）\ndocker-compose exec backend npx prisma db seed\n\n# 5. ヘルスチェック\ncurl https://api-staging.websys.company.com/health\ncurl https://staging.websys.company.com"
            ],
            [
              "nginx",
              "# nginx.conf\nserver {\n    listen 443 ssl http2;\n    server_name staging.websys.company.com;\n\n    ssl_certificate /etc/nginx/ssl/staging.crt;\n    ssl_certificate_key /etc/nginx/ssl/staging.key;\n    ssl_protocols TLSv1.2 TLSv1.3;\n\n    location / {\n        proxy_pass http://frontend:3000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n    location /api {\n        proxy_pass http://backend:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}"
            ],
            [
              "",
              "Internet\n    ↓\n[Load Balancer / CDN]\n    ↓\n[Reverse Proxy (Nginx)]\n    ↓\n┌─────────────┬─────────────┐\n│  Frontend   │   Backend   │\n│ (Multiple)  │ (Multiple)  │\n└─────────────┴─────────────┘\n    ↓\n[Database Cluster]\n[Redis Cache]\n[Monitoring Stack]"
            ],
            [
              "yaml",
              "# infrastructure/docker/production/docker-compose.yml\nversion: '3.8'\n\nservices:\n  nginx:\n    image: nginx:alpine\n    restart: unless-stopped\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/nginx/ssl\n      - ./logs:/var/log/nginx\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  frontend:\n    build:\n      context: ../../../workspace/frontend\n      dockerfile: ../../infrastructure/docker/production/frontend/Dockerfile\n    restart: unless-stopped\n    environment:\n      NODE_ENV: production\n      VITE_API_BASE_URL: https://api.websys.company.com\n    deploy:\n      replicas: 2\n\n  backend:\n    build:\n      context: ../../../workspace/backend\n      dockerfile: ../../infrastructure/docker/production/backend/Dockerfile\n    restart: unless-stopped\n    environment:\n      NODE_ENV: production\n      DATABASE_URL: ${DATABASE_URL}\n      JWT_SECRET: ${JWT_SECRET}\n      REDIS_URL: ${REDIS_URL}\n    depends_on:\n      - postgres\n      - redis\n    deploy:\n      replicas: 3\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  postgres:\n    image: postgres:15-alpine\n    restart: unless-stopped\n    environment:\n      POSTGRES_USER: ${POSTGRES_USER}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\n      POSTGRES_DB: ${POSTGRES_DB}\n    volumes:\n      - postgres_data_prod:/var/lib/postgresql/data\n      - ./backups:/backups\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U ${POSTGRES_USER}\"]\n      interval: 30s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:alpine\n    restart: unless-stopped\n    command: redis-server --appendonly yes\n    volumes:\n      - redis_data_prod:/data\n\n  prometheus:\n    image: prom/prometheus\n    restart: unless-stopped\n    volumes:\n      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus_data:/prometheus\n\n  grafana:\n    image: grafana/grafana\n    restart: unless-stopped\n    environment:\n      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}\n    volumes:\n      - grafana_data:/var/lib/grafana\n    ports:\n      - \"3001:3000\"\n\nvolumes:\n  postgres_data_prod:\n  redis_data_prod:\n  prometheus_data:\n  grafana_data:"
            ],
            [
              "bash",
              "# 1. 新バージョン準備（Green環境）\ncd infrastructure/docker/production\ndocker-compose -f docker-compose.green.yml up -d --build\n\n# 2. ヘルスチェック\n./scripts/health-check.sh green\n\n# 3. データベースマイグレーション（必要に応じて）\ndocker-compose -f docker-compose.green.yml exec backend npx prisma migrate deploy\n\n# 4. トラフィック切り替え\n./scripts/switch-traffic.sh green\n\n# 5. 旧環境停止（Blue環境）\ndocker-compose -f docker-compose.blue.yml down\n\n# 6. 環境ラベル更新\nmv docker-compose.green.yml docker-compose.blue.yml"
            ],
            [
              "bash",
              "# 1. バックエンドサービス更新\ndocker-compose up -d --no-deps --scale backend=6 backend\n\n# 2. 古いコンテナ停止\ndocker-compose up -d --no-deps --scale backend=3 backend\n\n# 3. フロントエンド更新\ndocker-compose up -d --no-deps frontend"
            ],
            [
              "bash",
              "# データベースバックアップ（日次）\n#!/bin/bash\n# scripts/backup-db.sh\n\nDATE=$(date +%Y%m%d_%H%M%S)\nBACKUP_FILE=\"websys_backup_${DATE}.sql\"\n\ndocker-compose exec postgres pg_dump \\\n  -U ${POSTGRES_USER} \\\n  -d ${POSTGRES_DB} \\\n  --format=custom \\\n  --no-owner \\\n  --no-privileges \\\n  > /backups/${BACKUP_FILE}\n\n# S3アップロード（オプション）\naws s3 cp /backups/${BACKUP_FILE} s3://websys-backups/database/\n\n# 古いバックアップ削除（30日以上）\nfind /backups -name \"websys_backup_*.sql\" -mtime +30 -delete"
            ],
            [
              "bash",
              "# logrotate設定\n# /etc/logrotate.d/websys\n/var/log/websys/*.log {\n    daily\n    rotate 30\n    compress\n    delaycompress\n    missingok\n    notifempty\n    copytruncate\n}"
            ],
            [
              "yaml",
              "# monitoring/prometheus.yml\nglobal:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: 'websys-backend'\n    static_configs:\n      - targets: ['backend:8000']\n    metrics_path: '/metrics'\n\n  - job_name: 'websys-frontend'\n    static_configs:\n      - targets: ['frontend:3000']\n\n  - job_name: 'postgres'\n    static_configs:\n      - targets: ['postgres:5432']\n\n  - job_name: 'nginx'\n    static_configs:\n      - targets: ['nginx:80']"
            ],
            [
              "yaml",
              "# alerting/rules.yml\ngroups:\n  - name: websys.rules\n    rules:\n      - alert: HighCPUUsage\n        expr: cpu_usage_percent > 80\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High CPU usage detected\"\n\n      - alert: DatabaseConnectionError\n        expr: postgres_up == 0\n        for: 1m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"Database connection lost\"\n\n      - alert: HighErrorRate\n        expr: http_request_error_rate > 0.05\n        for: 2m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High error rate detected\""
            ],
            [
              "nginx",
              "# セキュリティヘッダー\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\nadd_header X-XSS-Protection \"1; mode=block\";\nadd_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\nadd_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'\";"
            ],
            [
              "bash",
              "# UFW設定例\nufw default deny incoming\nufw default allow outgoing\nufw allow ssh\nufw allow 80/tcp\nufw allow 443/tcp\nufw enable"
            ],
            [
              "yaml",
              "# Docker Compose セキュリティ設定\nservices:\n  postgres:\n    # 非rootユーザーで実行\n    user: postgres\n    # 読み取り専用ファイルシステム\n    read_only: true\n    # 特権なし\n    privileged: false\n    # セキュリティオプション\n    security_opt:\n      - no-new-privileges:true"
            ],
            [
              "javascript",
              "// 静的アセットのCDN配信\nmodule.exports = {\n  build: {\n    assetsPublicPath: 'https://cdn.websys.company.com/',\n    productionSourceMap: false,\n    optimization: {\n      splitChunks: {\n        chunks: 'all',\n        cacheGroups: {\n          vendor: {\n            name: 'vendor',\n            test: /node_modules/,\n            chunks: 'all'\n          }\n        }\n      }\n    }\n  }\n}"
            ],
            [
              "sql",
              "-- インデックス作成\nCREATE INDEX CONCURRENTLY idx_users_email ON users(email);\nCREATE INDEX CONCURRENTLY idx_users_username ON users(username);\nCREATE INDEX CONCURRENTLY idx_users_active ON users(is_active) WHERE is_active = true;\n\n-- パーティショニング（大規模データ用）\nCREATE TABLE user_logs_2024 PARTITION OF user_logs\nFOR VALUES FROM ('2024-01-01') TO ('2025-01-01');"
            ],
            [
              "typescript",
              "// Redis キャッシュ実装\nimport Redis from 'ioredis'\n\nconst redis = new Redis(process.env.REDIS_URL)\n\nexport const cacheUser = async (userId: number, userData: User) => {\n  await redis.setex(`user:${userId}`, 3600, JSON.stringify(userData))\n}\n\nexport const getCachedUser = async (userId: number): Promise<User | null> => {\n  const cached = await redis.get(`user:${userId}`)\n  return cached ? JSON.parse(cached) : null\n}"
            ],
            [
              "bash",
              "# 1. サービス停止\ndocker-compose down\n\n# 2. データベース復旧\ndocker-compose up -d postgres\ndocker-compose exec postgres psql -U admin -c \"DROP DATABASE IF EXISTS websys_db_prod;\"\ndocker-compose exec postgres psql -U admin -c \"CREATE DATABASE websys_db_prod;\"\ndocker-compose exec postgres pg_restore -U admin -d websys_db_prod /backups/latest_backup.sql\n\n# 3. サービス再開\ndocker-compose up -d\n\n# 4. ヘルスチェック\n./scripts/health-check.sh"
            ],
            [
              "yaml",
              "# 本番環境での冗長化\nservices:\n  postgres-primary:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_REPLICATION_MODE: master\n      POSTGRES_REPLICATION_USER: replicator\n      POSTGRES_REPLICATION_PASSWORD: replicator_password\n\n  postgres-replica:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_REPLICATION_MODE: slave\n      POSTGRES_MASTER_HOST: postgres-primary\n      POSTGRES_REPLICATION_USER: replicator\n      POSTGRES_REPLICATION_PASSWORD: replicator_password"
            ],
            [
              "bash",
              "# アクセスログ保持\n# - アクセスログ: 1年間保持\n# - エラーログ: 2年間保持\n# - 監査ログ: 5年間保持\n\n# ログフォーマット統一\n{\n  \"timestamp\": \"2024-01-19T10:30:00Z\",\n  \"level\": \"info\",\n  \"user_id\": 123,\n  \"action\": \"user_login\",\n  \"ip_address\": \"192.168.1.100\",\n  \"user_agent\": \"Mozilla/5.0...\",\n  \"result\": \"success\"\n}"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 5
        }
      },
      "readability": {
        "score": 97.1,
        "sentences": 145,
        "avg_words_per_sentence": 7.99,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 20,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 59.63
    },
    "docs/50-システムUI改善分析レポート.md": {
      "basic_metrics": {
        "lines": 319,
        "words": 821,
        "characters": 5489,
        "avg_line_length": 17.20689655172414
      },
      "structure_analysis": {
        "headers": {
          "total": 49,
          "hierarchy": [
            {
              "level": 1,
              "text": "システムUI/UX改善分析レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. エグゼクティブサマリー",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "2. 現状分析",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2.1 システム構成",
              "line_number": 20
            },
            {
              "level": 4,
              "text": "ユーザー構成",
              "line_number": 22
            },
            {
              "level": 4,
              "text": "部署別権限設定",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "2.2 機能カテゴリ構成",
              "line_number": 36
            },
            {
              "level": 2,
              "text": "3. 問題点分析",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "3.1 【CRITICAL】認証・ログイン問題",
              "line_number": 46
            },
            {
              "level": 4,
              "text": "問題詳細",
              "line_number": 48
            },
            {
              "level": 4,
              "text": "影響範囲",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "根本原因",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "3.2 【HIGH】メニュー・UI設計問題",
              "line_number": 63
            },
            {
              "level": 4,
              "text": "問題詳細",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "影響範囲",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "3.3 【HIGH】ワークフロー設計問題",
              "line_number": 81
            },
            {
              "level": 4,
              "text": "問題詳細",
              "line_number": 83
            },
            {
              "level": 4,
              "text": "影響範囲",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "3.4 【MEDIUM】権限設計問題",
              "line_number": 99
            },
            {
              "level": 4,
              "text": "問題詳細",
              "line_number": 101
            },
            {
              "level": 4,
              "text": "影響範囲",
              "line_number": 112
            },
            {
              "level": 2,
              "text": "4. 改善提案",
              "line_number": 117
            },
            {
              "level": 3,
              "text": "4.1 Phase 1: 緊急改善項目（1-2週間）",
              "line_number": 119
            },
            {
              "level": 4,
              "text": "1. 認証・初期設定の改善",
              "line_number": 121
            },
            {
              "level": 4,
              "text": "2. 権限ベースメニュー表示",
              "line_number": 132
            },
            {
              "level": 3,
              "text": "4.2 Phase 2: 中期改善項目（3-4週間）",
              "line_number": 142
            },
            {
              "level": 4,
              "text": "3. ワークフロー設計の柔軟化",
              "line_number": 144
            },
            {
              "level": 4,
              "text": "4. 役職・権限体系の再設計",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "4.3 Phase 3: 長期改善項目（5-8週間）",
              "line_number": 166
            },
            {
              "level": 4,
              "text": "5. ユーザー体験の統一",
              "line_number": 168
            },
            {
              "level": 2,
              "text": "5. 実装タスク管理",
              "line_number": 179
            },
            {
              "level": 3,
              "text": "5.1 タスク一覧",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "5.2 進捗管理",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "6. ユーザータイプ別改善効果",
              "line_number": 205
            },
            {
              "level": 3,
              "text": "6.1 一般ユーザー（USER）",
              "line_number": 207
            },
            {
              "level": 3,
              "text": "6.2 管理者（ADMIN）",
              "line_number": 219
            },
            {
              "level": 3,
              "text": "6.3 マネージャー（MANAGER）",
              "line_number": 231
            },
            {
              "level": 2,
              "text": "7. 成功指標（KPI）",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "7.1 定量的指標",
              "line_number": 245
            },
            {
              "level": 3,
              "text": "7.2 定性的指標",
              "line_number": 251
            },
            {
              "level": 2,
              "text": "8. リスク管理",
              "line_number": 256
            },
            {
              "level": 3,
              "text": "8.1 技術的リスク",
              "line_number": 258
            },
            {
              "level": 3,
              "text": "8.2 運用リスク",
              "line_number": 265
            },
            {
              "level": 2,
              "text": "9. 実装スケジュール",
              "line_number": 272
            },
            {
              "level": 3,
              "text": "2025年10月（Phase 1）",
              "line_number": 274
            },
            {
              "level": 3,
              "text": "2025年11月（Phase 2）",
              "line_number": 280
            },
            {
              "level": 3,
              "text": "2025年12月（Phase 3）",
              "line_number": 285
            },
            {
              "level": 2,
              "text": "10. 次のアクション",
              "line_number": 290
            },
            {
              "level": 2,
              "text": "11. 結論",
              "line_number": 307
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 5,
          "total_rows": 32
        }
      },
      "readability": {
        "score": 93.23,
        "sentences": 52,
        "avg_words_per_sentence": 15.79,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 46.42,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.04
    },
    "docs/67-PermissionMatrix分割実装効果レポート.md": {
      "basic_metrics": {
        "lines": 237,
        "words": 608,
        "characters": 4874,
        "avg_line_length": 20.565400843881857
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "PermissionMatrix.vue 分割実装効果レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 分割実装概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 分割前後の比較",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "分割前（モノリシック構成）",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "分割後（マイクロフロントエンド構成）",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "📊 削減効果分析",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "ファイルサイズ削減",
              "line_number": 46
            },
            {
              "level": 3,
              "text": "機能別分散効果",
              "line_number": 53
            },
            {
              "level": 2,
              "text": "🛠️ マイクロフロントエンド分割設計",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "アーキテクチャパターン",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "コンポーネント責務分析",
              "line_number": 82
            },
            {
              "level": 2,
              "text": "🚀 性能改善効果",
              "line_number": 96
            },
            {
              "level": 3,
              "text": "初回読み込み性能",
              "line_number": 98
            },
            {
              "level": 3,
              "text": "動的読み込み効果",
              "line_number": 103
            },
            {
              "level": 3,
              "text": "再レンダリング最適化",
              "line_number": 114
            },
            {
              "level": 2,
              "text": "🔧 開発・保守性向上",
              "line_number": 121
            },
            {
              "level": 3,
              "text": "開発効率改善",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "保守性向上",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "テスト容易性",
              "line_number": 134
            },
            {
              "level": 2,
              "text": "📈 技術的負債解消効果",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "Before（技術的負債）",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "After（モダンアーキテクチャ）",
              "line_number": 149
            },
            {
              "level": 2,
              "text": "🎯 実装品質評価",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "コード品質指標",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "設計原則適用",
              "line_number": 165
            },
            {
              "level": 2,
              "text": "🌟 ユーザー体験改善",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "表示速度向上",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "操作性向上",
              "line_number": 180
            },
            {
              "level": 2,
              "text": "📋 今後の拡張計画",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "段階2: さらなる最適化",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "段階3: 再利用拡張",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "🏆 成功基準達成状況",
              "line_number": 201
            },
            {
              "level": 2,
              "text": "💡 学習・知見",
              "line_number": 213
            },
            {
              "level": 3,
              "text": "成功要因",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "次回適用ポイント",
              "line_number": 221
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 9,
          "languages": {
            "json": 1,
            "typescript": 1
          },
          "details": [
            [
              "",
              "PermissionMatrix.vue: 1,038行（28KB）\n├── ページヘッダー: 直接実装\n├── フィルター・検索: 直接実装\n├── 権限マトリクス表示: 直接実装\n├── 権限編集ダイアログ: 直接実装\n├── テンプレート管理: 直接実装\n├── テンプレート作成: 直接実装\n├── 監査履歴表示: 直接実装\n└── エクスポート機能: 直接実装"
            ],
            [
              "",
              "PermissionMatrixNew.vue (メインコンテナ: 543行, 約8KB)\n├── PermissionMatrixHeader.vue (80行, 1.2KB) - ページヘッダー・一括保存\n├── PermissionRolePanel.vue (120行, 1.8KB) - フィルター・検索・操作ボタン\n├── PermissionMatrixGrid.vue (200行, 3.2KB) - 権限マトリクス表示・セル編集\n├── PermissionUserPanel.vue (150行, 2.4KB) - 権限編集ダイアログ\n├── PermissionTemplatePanel.vue (100行, 1.6KB) - テンプレート管理画面\n├── PermissionInheritancePanel.vue (180行, 2.8KB) - テンプレート作成画面\n├── PermissionAuditPanel.vue (220行, 3.5KB) - 権限変更履歴表示\n├── PermissionExportDialog.vue (150行, 2.4KB) - データエクスポート機能\n├── types/permissions.ts (80行, 1.2KB) - TypeScript型定義\n└── components/permissions/index.ts (8行, 0.1KB) - エクスポート統合"
            ],
            [
              "json",
              "{\n  \"before\": {\n    \"total_lines\": 1038,\n    \"single_file\": true,\n    \"complexity\": \"HIGH\",\n    \"maintainability\": \"LOW\"\n  },\n  \"after\": {\n    \"total_components\": 8,\n    \"max_component_lines\": 220,\n    \"avg_component_lines\": 135,\n    \"complexity\": \"LOW\",\n    \"maintainability\": \"HIGH\"\n  }\n}"
            ],
            [
              "typescript",
              "// 遅延読み込み例（実装可能）\nconst PermissionAuditPanel = defineAsyncComponent(\n  () => import('@/components/permissions/PermissionAuditPanel.vue')\n)\nconst PermissionExportDialog = defineAsyncComponent(\n  () => import('@/components/permissions/PermissionExportDialog.vue')\n)"
            ],
            [
              "",
              "従来: 1,038行の巨大ファイル → 修正影響範囲不明\n分割後: 最大220行の小コンポーネント → 影響局所化"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 22
        }
      },
      "readability": {
        "score": 94.7,
        "sentences": 37,
        "avg_words_per_sentence": 16.43,
        "long_sentences": 3,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.16,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.77
    },
    "docs/09-開発ガイドライン.md": {
      "basic_metrics": {
        "lines": 484,
        "words": 1042,
        "characters": 9882,
        "avg_line_length": 20.417355371900825
      },
      "structure_analysis": {
        "headers": {
          "total": 53,
          "hierarchy": [
            {
              "level": 1,
              "text": "開発ガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "基本原則",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "1. モバイルファースト設計の原則",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "2. 共通コンポーネント優先の原則",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "3. 統一性の原則",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "4. 品質管理の原則",
              "line_number": 28
            },
            {
              "level": 2,
              "text": "使用可能コンポーネント一覧",
              "line_number": 34
            },
            {
              "level": 3,
              "text": "Element Plus 直接使用禁止コンポーネント",
              "line_number": 36
            },
            {
              "level": 4,
              "text": "フォーム関連",
              "line_number": 40
            },
            {
              "level": 4,
              "text": "データ表示",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "ナビゲーション",
              "line_number": 58
            },
            {
              "level": 4,
              "text": "フィードバック",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "例外的に直接使用可能なコンポーネント",
              "line_number": 76
            },
            {
              "level": 2,
              "text": "共通コンポーネント使用ルール",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "1. 必須使用ルール",
              "line_number": 90
            },
            {
              "level": 4,
              "text": "ボタンコンポーネント",
              "line_number": 92
            },
            {
              "level": 4,
              "text": "テーブルコンポーネント",
              "line_number": 101
            },
            {
              "level": 4,
              "text": "フォームコンポーネント",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "2. プロップス統一ルール",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "3. イベント統一ルール",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "レスポンシブ開発フロー",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "開発手順",
              "line_number": 152
            },
            {
              "level": 1,
              "text": "必須テストビューポート",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "必須リソース",
              "line_number": 193
            },
            {
              "level": 2,
              "text": "チェック機能の実装",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "1. ESLint ルール",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "2. カスタム ESLint ルール",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "3. プリコミット チェック",
              "line_number": 265
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 268
            },
            {
              "level": 1,
              "text": ".husky/pre-commit",
              "line_number": 269
            },
            {
              "level": 1,
              "text": "禁止されたコンポーネントの使用をチェック",
              "line_number": 273
            },
            {
              "level": 3,
              "text": "4. CI/CD パイプラインチェック",
              "line_number": 287
            },
            {
              "level": 1,
              "text": ".github/workflows/component-check.yml",
              "line_number": 290
            },
            {
              "level": 1,
              "text": "禁止コンポーネントの使用チェック",
              "line_number": 303
            },
            {
              "level": 1,
              "text": "共通コンポーネントの使用率チェック",
              "line_number": 309
            },
            {
              "level": 2,
              "text": "開発フロー",
              "line_number": 324
            },
            {
              "level": 3,
              "text": "1. 新規コンポーネント開発",
              "line_number": 326
            },
            {
              "level": 3,
              "text": "2. コンポーネント更新フロー",
              "line_number": 338
            },
            {
              "level": 2,
              "text": "品質指標",
              "line_number": 348
            },
            {
              "level": 3,
              "text": "1. 共通コンポーネント使用率",
              "line_number": 350
            },
            {
              "level": 3,
              "text": "2. 品質指標ダッシュボード",
              "line_number": 369
            },
            {
              "level": 2,
              "text": "例外申請プロセス",
              "line_number": 389
            },
            {
              "level": 3,
              "text": "1. 例外申請が必要なケース",
              "line_number": 391
            },
            {
              "level": 3,
              "text": "2. 申請フォーマット",
              "line_number": 397
            },
            {
              "level": 2,
              "text": "例外申請",
              "line_number": 400
            },
            {
              "level": 2,
              "text": "ユニバーサルデザイン要件",
              "line_number": 421
            },
            {
              "level": 3,
              "text": "フォント要件",
              "line_number": 423
            },
            {
              "level": 3,
              "text": "共通テーマライブラリ",
              "line_number": 430
            },
            {
              "level": 3,
              "text": "カラーアクセシビリティ",
              "line_number": 444
            },
            {
              "level": 3,
              "text": "実装チェックポイント",
              "line_number": 449
            },
            {
              "level": 3,
              "text": "レスポンシブ対応チェックリスト",
              "line_number": 456
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 470
            }
          ],
          "hierarchy_issues": [
            {
              "line": 193,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 287,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 3,
          "internal": 3,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "レスポンシブデザインガイドライン",
              "11-レスポンシブデザインガイドライン.md"
            ],
            [
              "共通コンポーネント仕様",
              "10-共通コンポーネント仕様.md"
            ],
            [
              "レスポンシブデザインガイドライン",
              "11-レスポンシブデザインガイドライン.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 20,
          "inline_code": 44,
          "languages": {
            "typescript": 7,
            "vue": 3,
            "scss": 1
          },
          "details": [
            [
              "typescript",
              "// ❌ 禁止\nimport { ElButton, ElInput, ElSelect } from 'element-plus'\n\n// ✅ 推奨\nimport { CommonButton, CommonInput, CommonSelect } from '@company/shared-components'"
            ],
            [
              "typescript",
              "// ❌ 禁止\nimport { ElTable, ElCard, ElTag } from 'element-plus'\n\n// ✅ 推奨\nimport { CommonTable, CommonCard, CommonTag } from '@company/shared-components'"
            ],
            [
              "typescript",
              "// ❌ 禁止\nimport { ElMenu, ElBreadcrumb, ElTabs } from 'element-plus'\n\n// ✅ 推奨\nimport { CommonMenu, CommonBreadcrumb, CommonTabs } from '@company/shared-components'"
            ],
            [
              "typescript",
              "// ❌ 禁止\nimport { ElMessage, ElDialog, ElDrawer } from 'element-plus'\n\n// ✅ 推奨\nimport { CommonMessage, CommonDialog, CommonDrawer } from '@company/shared-components'"
            ],
            [
              "typescript",
              "// ✅ 直接使用OK（レイアウト系）\nimport { ElRow, ElCol, ElContainer, ElHeader, ElMain, ElFooter, ElAside } from 'element-plus'\n\n// ✅ 直接使用OK（アイコン）\nimport { Plus, Delete, Edit } from '@element-plus/icons-vue'"
            ],
            [
              "vue",
              "<!-- ❌ 禁止 -->\n<el-button type=\"primary\" @click=\"submit\">送信</el-button>\n\n<!-- ✅ 推奨 -->\n<CommonButton variant=\"primary\" @click=\"submit\">送信</CommonButton>"
            ],
            [
              "vue",
              "<!-- ❌ 禁止 -->\n<el-table :data=\"tableData\">\n  <el-table-column prop=\"name\" label=\"名前\" />\n</el-table>\n\n<!-- ✅ 推奨 -->\n<CommonTable :data=\"tableData\" :columns=\"tableColumns\" />"
            ],
            [
              "vue",
              "<!-- ❌ 禁止 -->\n<el-form :model=\"form\">\n  <el-form-item label=\"名前\">\n    <el-input v-model=\"form.name\" />\n  </el-form-item>\n</el-form>\n\n<!-- ✅ 推奨 -->\n<CommonForm :model=\"form\" :schema=\"formSchema\" />"
            ],
            [
              "typescript",
              "// ✅ 統一されたプロップス名\ninterface CommonButtonProps {\n  variant: 'primary' | 'secondary' | 'danger'  // type ではなく variant\n  size: 'small' | 'medium' | 'large'           // 統一されたサイズ\n  loading: boolean                             // ローディング状態\n  disabled: boolean                            // 無効状態\n}"
            ],
            [
              "typescript",
              "// ✅ 統一されたイベント名\ninterface CommonComponentEvents {\n  'on-click': (event: MouseEvent) => void      // click ではなく on-click\n  'on-change': (value: any) => void           // change ではなく on-change\n  'on-submit': (data: any) => void            // submit ではなく on-submit\n}"
            ],
            [
              "scss",
              "   // 1. モバイル用スタイルを基本として定義\n   .component {\n     padding: 12px;\n     font-size: 14px;\n     min-height: 44px; // タッチ対応\n   }\n\n   // 2. タブレット用の調整\n   @media (min-width: 768px) {\n     .component {\n       padding: 16px;\n       font-size: 16px;\n     }\n   }\n\n   // 3. デスクトップ用の調整\n   @media (min-width: 992px) {\n     .component {\n       padding: 20px;\n       min-height: 36px; // マウス操作では小さくてもOK\n     }\n   }\n   ```\n\n2. **レスポンシブテスト実施**\n   ```bash\n   # 必須テストビューポート\n   npm run test:mobile    # 375px, 414px\n   npm run test:tablet    # 768px, 1024px\n   npm run test:desktop   # 1200px, 1920px\n   ```\n\n3. **タッチインタラクション確認**\n   - タップ領域の最小サイズ（44×44px）\n   - スワイプ操作の対応\n   - ピンチズーム対応\n\n### 必須リソース\n\n開発前に以下のドキュメントを必ず確認：\n- [レスポンシブデザインガイドライン](./11-レスポンシブデザインガイドライン.md)\n- [共通コンポーネント仕様](./10-共通コンポーネント仕様.md)\n\n## チェック機能の実装\n\n### 1. ESLint ルール\n"
            ],
            [
              "",
              "\n### 2. カスタム ESLint ルール\n"
            ],
            [
              "",
              "\n### 3. プリコミット チェック\n"
            ],
            [
              "",
              "\n### 4. CI/CD パイプラインチェック\n"
            ],
            [
              "",
              "\n## 開発フロー\n\n### 1. 新規コンポーネント開発\n"
            ],
            [
              "",
              "\n### 2. コンポーネント更新フロー\n"
            ],
            [
              "",
              "\n## 品質指標\n\n### 1. 共通コンポーネント使用率\n"
            ],
            [
              "",
              "\n### 2. 品質指標ダッシュボード\n"
            ],
            [
              "",
              "\n## 例外申請プロセス\n\n### 1. 例外申請が必要なケース\n\n- 共通コンポーネントで実現不可能な特殊要件\n- パフォーマンス上の制約\n- 外部ライブラリとの互換性問題\n\n### 2. 申請フォーマット\n"
            ],
            [
              "",
              "\n## ユニバーサルデザイン要件\n\n### フォント要件\n- **必須フォント**: BIZ UDPゴシック（UDゴシック）を最優先使用\n- **最小フォントサイズ**: 16px以上（アクセシビリティ考慮）\n- **推奨フォントサイズ**: 18px以上（高齢者・視覚障害者配慮）\n- **行間**: 1.5以上（WCAG準拠）\n- **字間**: 日本語テキストは0.025em以上\n\n### 共通テーマライブラリ"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.58,
        "sentences": 95,
        "avg_words_per_sentence": 10.97,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.17
    },
    "docs/08-コンポーネント仕様書.md": {
      "basic_metrics": {
        "lines": 1116,
        "words": 2261,
        "characters": 23484,
        "avg_line_length": 21.043010752688172
      },
      "structure_analysis": {
        "headers": {
          "total": 70,
          "hierarchy": [
            {
              "level": 1,
              "text": "フロントエンドコンポーネントリファレンス",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "🔄 最新ステータス (2025年1月)",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "基本構成",
              "line_number": 21
            },
            {
              "level": 3,
              "text": "プロジェクト構造",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "コンポーネントインポート戦略",
              "line_number": 45
            },
            {
              "level": 2,
              "text": "共通コンポーネントライブラリ",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "🎯 実装済みコンポーネント (15個)",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "📦 使用方法",
              "line_number": 99
            },
            {
              "level": 3,
              "text": "🔄 移行状況",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "レイアウトコンポーネント",
              "line_number": 131
            },
            {
              "level": 3,
              "text": "Layout.vue",
              "line_number": 133
            },
            {
              "level": 4,
              "text": "構造 (最新実装)",
              "line_number": 137
            },
            {
              "level": 4,
              "text": "Props",
              "line_number": 170
            },
            {
              "level": 4,
              "text": "Events",
              "line_number": 176
            },
            {
              "level": 4,
              "text": "スタイルカスタマイズ",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "Navigation Menu",
              "line_number": 193
            },
            {
              "level": 4,
              "text": "現在の実装 (ハイブリッド)",
              "line_number": 197
            },
            {
              "level": 4,
              "text": "カスタマイズ",
              "line_number": 231
            },
            {
              "level": 2,
              "text": "ページコンポーネント",
              "line_number": 253
            },
            {
              "level": 3,
              "text": "Login.vue",
              "line_number": 255
            },
            {
              "level": 4,
              "text": "機能",
              "line_number": 259
            },
            {
              "level": 4,
              "text": "共通コンポーネント実装",
              "line_number": 268
            },
            {
              "level": 4,
              "text": "バリデーションルール",
              "line_number": 333
            },
            {
              "level": 3,
              "text": "Dashboard.vue",
              "line_number": 347
            },
            {
              "level": 4,
              "text": "機能",
              "line_number": 351
            },
            {
              "level": 4,
              "text": "データ構造",
              "line_number": 358
            },
            {
              "level": 4,
              "text": "カスタマイズ例",
              "line_number": 376
            },
            {
              "level": 3,
              "text": "Users.vue",
              "line_number": 404
            },
            {
              "level": 4,
              "text": "機能",
              "line_number": 408
            },
            {
              "level": 4,
              "text": "共通コンポーネントでのデータテーブル実装",
              "line_number": 417
            },
            {
              "level": 4,
              "text": "検索・フィルタ機能",
              "line_number": 486
            },
            {
              "level": 2,
              "text": "状態管理（Pinia）",
              "line_number": 513
            },
            {
              "level": 3,
              "text": "useAuthStore",
              "line_number": 515
            },
            {
              "level": 4,
              "text": "状態",
              "line_number": 519
            },
            {
              "level": 4,
              "text": "アクション",
              "line_number": 529
            },
            {
              "level": 4,
              "text": "使用例",
              "line_number": 572
            },
            {
              "level": 2,
              "text": "API通信",
              "line_number": 598
            },
            {
              "level": 3,
              "text": "APIクライアント設定",
              "line_number": 600
            },
            {
              "level": 3,
              "text": "APIサービス",
              "line_number": 637
            },
            {
              "level": 2,
              "text": "カスタムコンポーネント",
              "line_number": 665
            },
            {
              "level": 3,
              "text": "アプリケーション固有コンポーネントの作成",
              "line_number": 667
            },
            {
              "level": 4,
              "text": "PageHeader.vue (共通コンポーネントを活用)",
              "line_number": 669
            },
            {
              "level": 4,
              "text": "使用例",
              "line_number": 722
            },
            {
              "level": 3,
              "text": "DataTable.vue",
              "line_number": 759
            },
            {
              "level": 2,
              "text": "スタイリング",
              "line_number": 826
            },
            {
              "level": 3,
              "text": "CSS変数カスタマイズ",
              "line_number": 828
            },
            {
              "level": 3,
              "text": "テーマカスタマイズ",
              "line_number": 875
            },
            {
              "level": 2,
              "text": "国際化（i18n）",
              "line_number": 892
            },
            {
              "level": 3,
              "text": "多言語対応設定",
              "line_number": 894
            },
            {
              "level": 3,
              "text": "使用例",
              "line_number": 936
            },
            {
              "level": 2,
              "text": "パフォーマンス最適化",
              "line_number": 956
            },
            {
              "level": 3,
              "text": "遅延読み込み",
              "line_number": 958
            },
            {
              "level": 3,
              "text": "仮想スクロール",
              "line_number": 974
            },
            {
              "level": 3,
              "text": "メモ化",
              "line_number": 988
            },
            {
              "level": 2,
              "text": "テスト",
              "line_number": 1004
            },
            {
              "level": 3,
              "text": "コンポーネントテスト",
              "line_number": 1006
            },
            {
              "level": 2,
              "text": "デバッグ",
              "line_number": 1033
            },
            {
              "level": 3,
              "text": "Vue DevTools",
              "line_number": 1035
            },
            {
              "level": 3,
              "text": "エラーハンドリング",
              "line_number": 1044
            },
            {
              "level": 2,
              "text": "🚀 移行ロードマップ",
              "line_number": 1055
            },
            {
              "level": 3,
              "text": "Phase 1-4 (完了) ✅",
              "line_number": 1057
            },
            {
              "level": 3,
              "text": "Phase 5: ナビゲーション系 (計画中) 🔄",
              "line_number": 1062
            },
            {
              "level": 3,
              "text": "Phase 6: レイアウト系 (計画中) 📅",
              "line_number": 1071
            },
            {
              "level": 3,
              "text": "Phase 7: フィードバック系 (計画中) 📅",
              "line_number": 1080
            },
            {
              "level": 3,
              "text": "最終目標 🎯",
              "line_number": 1089
            },
            {
              "level": 2,
              "text": "📚 関連ドキュメント",
              "line_number": 1094
            },
            {
              "level": 3,
              "text": "設計書",
              "line_number": 1096
            },
            {
              "level": 3,
              "text": "実装ガイド",
              "line_number": 1101
            },
            {
              "level": 3,
              "text": "API・バックエンド",
              "line_number": 1106
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 8,
          "internal": 8,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "共通コンポーネント設計書",
              "01_機能設計書/04_共通コンポーネント/共通コンポーネント設計書.md"
            ],
            [
              "レスポンシブ対応設計書",
              "01_機能設計書/05_レスポンシブ対応/レスポンシブ対応設計書.md"
            ],
            [
              "アクセシビリティ設計書",
              "01_機能設計書/06_アクセシビリティ/アクセシビリティ設計書.md"
            ],
            [
              "開発ガイドライン",
              "09-開発ガイドライン.md"
            ],
            [
              "共通コンポーネント仕様",
              "10-共通コンポーネント仕様.md"
            ],
            [
              "ユニバーサルデザインガイドライン",
              "12-ユニバーサルデザインガイドライン.md"
            ],
            [
              "API仕様書",
              "07-API仕様書.md"
            ],
            [
              "システム基盤設計書",
              "01_機能設計書/99_システム基盤/システム基盤設計書.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 32,
          "inline_code": 67,
          "languages": {
            "typescript": 13,
            "mermaid": 1,
            "vue": 14,
            "scss": 3
          },
          "details": [
            [
              "",
              "workspace/\n├── packages/\n│   └── shared-components/    # 共通コンポーネントライブラリ\n│       ├── src/\n│       │   ├── components/   # 独自コンポーネント (15個)\n│       │   ├── composables/  # 共通ロジック\n│       │   └── styles/       # 共通スタイル\n│       └── package.json\n├── frontend/\n│   └── src/\n│       ├── components/       # アプリ固有コンポーネント\n│       ├── views/           # ページコンポーネント\n│       ├── stores/          # Pinia ストア\n│       ├── router/          # ルーティング設定\n│       ├── api/             # API通信層\n│       └── assets/          # 静的資源\n└── backend/                  # バックエンドAPI"
            ],
            [
              "typescript",
              "// vite.config.ts - 共通コンポーネント優先設定\nimport Components from 'unplugin-vue-components/vite'\nimport { ElementPlusResolver } from 'unplugin-vue-components/resolvers'\n\nexport default {\n  plugins: [\n    Components({\n      resolvers: [\n        // 共通コンポーネントを優先解決\n        (componentName) => {\n          if (componentName.startsWith('Common')) {\n            return {\n              name: componentName,\n              from: '@company/shared-components'\n            }\n          }\n        },\n        // Element Plusは後方互換性のため残す\n        ElementPlusResolver({\n          importStyle: false // スタイルは共通テーマで管理\n        })\n      ]\n    })\n  ]\n}"
            ],
            [
              "typescript",
              "// パッケージのインストール (package.json)\n{\n  \"dependencies\": {\n    \"@company/shared-components\": \"file:../../packages/shared-components\"\n  }\n}\n\n// コンポーネントの使用\nimport { CommonButton, CommonCard, CommonForm } from '@company/shared-components'\n\n// 自動インポート設定済みの場合は直接使用可能\n<template>\n  <CommonCard variant=\"default\" responsive>\n    <CommonButton variant=\"primary\" @click=\"handleClick\">\n      クリック\n    </CommonButton>\n  </CommonCard>\n</template>"
            ],
            [
              "mermaid",
              "graph LR\n    A[Element Plus<br/>180箇所] -->|Phase 1-4<br/>完了| B[共通コンポーネント<br/>98箇所]\n    A -->|残存| C[Element Plus<br/>82箇所]\n    C -->|Phase 5-7<br/>計画中| D[目標: 10箇所以下]"
            ],
            [
              "vue",
              "<template>\n  <!-- 共通コンポーネントベースのレイアウト -->\n  <div class=\"app-layout\">\n    <CommonRow class=\"layout-container\">\n      <CommonCol :span=\"4\" class=\"layout-aside\" responsive>\n        <NavigationMenu />\n      </CommonCol>\n      <CommonCol :span=\"20\" class=\"layout-main\">\n        <header class=\"layout-header\">\n          <HeaderBar />\n        </header>\n        <main class=\"layout-content\">\n          <router-view v-slot=\"{ Component }\">\n            <transition name=\"fade\" mode=\"out-in\">\n              <component :is=\"Component\" />\n            </transition>\n          </router-view>\n        </main>\n      </CommonCol>\n    </CommonRow>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { CommonRow, CommonCol } from '@company/shared-components'\nimport NavigationMenu from '@/components/NavigationMenu.vue'\nimport HeaderBar from '@/components/HeaderBar.vue'\n</script>"
            ],
            [
              "scss",
              "// カスタムCSS変数で色調整\n.layout-aside {\n  --el-color-primary: #409eff;\n  --sidebar-bg-color: #304156;\n  --sidebar-text-color: #bfcbd9;\n}"
            ],
            [
              "vue",
              "<template>\n  <!-- Element Plus使用（Phase 5で共通コンポーネント化予定） -->\n  <el-menu\n    :default-active=\"activeMenu\"\n    :collapse=\"isCollapsed\"\n    class=\"nav-menu\"\n    router\n  >\n    <template v-for=\"item in menuItems\" :key=\"item.path\">\n      <el-menu-item v-if=\"!item.children\" :index=\"item.path\">\n        <el-icon><component :is=\"item.icon\" /></el-icon>\n        <span>{{ item.title }}</span>\n      </el-menu-item>\n      <el-sub-menu v-else :index=\"item.path\">\n        <template #title>\n          <el-icon><component :is=\"item.icon\" /></el-icon>\n          <span>{{ item.title }}</span>\n        </template>\n        <el-menu-item\n          v-for=\"child in item.children\"\n          :key=\"child.path\"\n          :index=\"child.path\"\n        >\n          {{ child.title }}\n        </el-menu-item>\n      </el-sub-menu>\n    </template>\n  </el-menu>\n</template>"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\n// アクティブメニューの計算\nconst route = useRoute()\nconst activeMenu = computed(() => route.path)\n\n// メニュー項目の定義\ninterface MenuItem {\n  index: string\n  title: string\n  icon: string\n}\n\nconst menuItems: MenuItem[] = [\n  { index: '/dashboard', title: 'ダッシュボード', icon: 'DataAnalysis' },\n  { index: '/users', title: 'ユーザー管理', icon: 'User' }\n]\n</script>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"login-container\">\n    <!-- 共通コンポーネント使用 -->\n    <CommonCard variant=\"bordered\" class=\"login-card\">\n      <h2 class=\"login-title\">システムログイン</h2>\n      <CommonForm\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        variant=\"compact\"\n        responsive\n      >\n        <CommonFormItem prop=\"username\">\n          <CommonInput\n            v-model=\"loginForm.username\"\n            variant=\"default\"\n            placeholder=\"ユーザー名\"\n            :clearable=\"true\"\n            responsive\n            touch-optimized\n          />\n        </CommonFormItem>\n        <CommonFormItem prop=\"password\">\n          <CommonInput\n            v-model=\"loginForm.password\"\n            variant=\"secure\"\n            type=\"password\"\n            placeholder=\"パスワード\"\n            :show-password=\"true\"\n            responsive\n            touch-optimized\n          />\n        </CommonFormItem>\n        <CommonFormItem>\n          <CommonButton\n            variant=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            class=\"login-button\"\n            responsive\n            touch-optimized\n          >\n            ログイン\n          </CommonButton>\n        </CommonFormItem>\n      </CommonForm>\n    </CommonCard>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  CommonCard,\n  CommonForm,\n  CommonFormItem,\n  CommonInput,\n  CommonButton\n} from '@company/shared-components'\nimport type { FormRules } from '@company/shared-components/types'\n</script>"
            ],
            [
              "typescript",
              "const loginRules = reactive<FormRules>({\n  username: [\n    { required: true, message: 'ユーザー名を入力してください', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: 'パスワードを入力してください', trigger: 'blur' },\n    { min: 6, message: 'パスワードは6文字以上で入力してください', trigger: 'blur' }\n  ]\n})"
            ],
            [
              "typescript",
              "interface DashboardStats {\n  totalUsers: number\n  activeUsers: number\n  todayVisits: number\n  completedTasks: number\n}\n\ninterface ActivityItem {\n  time: string\n  user: string\n  action: string\n  status: 'success' | 'warning' | 'error'\n}"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\n// 統計データの取得\nconst stats = ref<DashboardStats>({\n  totalUsers: 0,\n  activeUsers: 0,\n  todayVisits: 0,\n  completedTasks: 0\n})\n\n// データ取得\nconst fetchStats = async () => {\n  try {\n    const response = await api.get('/dashboard/stats')\n    stats.value = response.data\n  } catch (error) {\n    ElMessage.error('データの取得に失敗しました')\n  }\n}\n\nonMounted(() => {\n  fetchStats()\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"users-container\">\n    <!-- 共通コンポーネントテーブル -->\n    <CommonTable\n      :data=\"tableData\"\n      :loading=\"loading\"\n      variant=\"striped\"\n      responsive\n      @row-click=\"handleRowClick\"\n    >\n      <CommonTableColumn type=\"selection\" width=\"55\" />\n      <CommonTableColumn prop=\"id\" label=\"ID\" width=\"80\" sortable />\n      <CommonTableColumn prop=\"username\" label=\"ユーザー名\" width=\"150\" />\n      <CommonTableColumn prop=\"name\" label=\"氏名\" width=\"150\" />\n      <CommonTableColumn prop=\"email\" label=\"メール\" width=\"200\" />\n      <CommonTableColumn prop=\"department\" label=\"部署\" width=\"120\">\n        <template #default=\"{ row }\">\n          <CommonTag :type=\"getDepartmentType(row.department)\">\n            {{ getDepartmentLabel(row.department) }}\n          </CommonTag>\n        </template>\n      </CommonTableColumn>\n      <CommonTableColumn label=\"操作\" fixed=\"right\" width=\"150\">\n        <template #default=\"{ row }\">\n          <CommonButton\n            variant=\"ghost\"\n            size=\"small\"\n            @click=\"handleEdit(row)\"\n          >\n            編集\n          </CommonButton>\n          <CommonButton\n            variant=\"ghost\"\n            size=\"small\"\n            type=\"danger\"\n            @click=\"handleDelete(row)\"\n          >\n            削除\n          </CommonButton>\n        </template>\n      </CommonTableColumn>\n    </CommonTable>\n\n    <!-- ページネーション（Element Plus→Phase 5で移行予定） -->\n    <el-pagination\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      :total=\"total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @current-change=\"handlePageChange\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  CommonTable,\n  CommonTableColumn,\n  CommonTag,\n  CommonButton\n} from '@company/shared-components'\n// el-paginationはPhase 5でCommonPaginationへ移行予定\nimport { ElPagination } from 'element-plus'\n</script>"
            ],
            [
              "vue",
              "<el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\n  <el-form-item label=\"ユーザー名\">\n    <el-input\n      v-model=\"searchForm.username\"\n      placeholder=\"検索...\"\n      clearable\n      @clear=\"handleSearch\"\n      @keyup.enter=\"handleSearch\"\n    />\n  </el-form-item>\n  <el-form-item label=\"部署\">\n    <el-select v-model=\"searchForm.department\" placeholder=\"選択\" clearable>\n      <el-option label=\"営業部\" value=\"sales\" />\n      <el-option label=\"開発部\" value=\"development\" />\n      <el-option label=\"人事部\" value=\"hr\" />\n    </el-select>\n  </el-form-item>\n  <el-form-item>\n    <el-button type=\"primary\" @click=\"handleSearch\">検索</el-button>\n    <el-button @click=\"handleReset\">リセット</el-button>\n  </el-form-item>\n</el-form>"
            ],
            [
              "typescript",
              "interface AuthState {\n  token: string | null\n  user: User | null\n  isAuthenticated: boolean\n}"
            ],
            [
              "typescript",
              "export const useAuthStore = defineStore('auth', () => {\n  const token = ref<string | null>(null)\n  const user = ref<User | null>(null)\n\n  const isAuthenticated = computed(() => !!token.value)\n\n  const setToken = (newToken: string) => {\n    token.value = newToken\n    localStorage.setItem('token', newToken)\n  }\n\n  const setUser = (newUser: User) => {\n    user.value = newUser\n  }\n\n  const logout = () => {\n    token.value = null\n    user.value = null\n    localStorage.removeItem('token')\n  }\n\n  const initializeAuth = () => {\n    const storedToken = localStorage.getItem('token')\n    if (storedToken) {\n      token.value = storedToken\n    }\n  }\n\n  return {\n    token,\n    user,\n    isAuthenticated,\n    setToken,\n    setUser,\n    logout,\n    initializeAuth\n  }\n})"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\nconst authStore = useAuthStore()\n\n// ログイン処理\nconst handleLogin = async () => {\n  try {\n    const response = await api.login(username, password)\n    authStore.setToken(response.token)\n    authStore.setUser(response.user)\n    router.push('/dashboard')\n  } catch (error) {\n    ElMessage.error('ログインに失敗しました')\n  }\n}\n\n// ログアウト処理\nconst handleLogout = () => {\n  authStore.logout()\n  router.push('/login')\n}\n</script>"
            ],
            [
              "typescript",
              "// api/index.ts\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\n\nconst api = axios.create({\n  baseURL: import.meta.env.VITE_API_BASE_URL,\n  timeout: 10000\n})\n\n// リクエストインターセプター\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => Promise.reject(error)\n)\n\n// レスポンスインターセプター\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      ElMessage.error('認証エラー: 再度ログインしてください')\n      // ログアウト処理\n    }\n    return Promise.reject(error)\n  }\n)"
            ],
            [
              "typescript",
              "// api/users.ts\nexport const userAPI = {\n  // ユーザー一覧取得\n  getUsers: (params?: {\n    page?: number\n    limit?: number\n    search?: string\n  }) => api.get('/api/users', { params }),\n\n  // ユーザー詳細取得\n  getUser: (id: number) => api.get(`/api/users/${id}`),\n\n  // ユーザー作成\n  createUser: (userData: CreateUserRequest) =>\n    api.post('/api/users', userData),\n\n  // ユーザー更新\n  updateUser: (id: number, userData: UpdateUserRequest) =>\n    api.put(`/api/users/${id}`, userData),\n\n  // ユーザー削除\n  deleteUser: (id: number) => api.delete(`/api/users/${id}`)\n}"
            ],
            [
              "vue",
              "<template>\n  <CommonCard variant=\"bordered\" class=\"page-header\" responsive>\n    <CommonRow align=\"middle\" justify=\"space-between\">\n      <CommonCol :span=\"16\">\n        <h1 class=\"page-title\">{{ title }}</h1>\n        <p v-if=\"description\" class=\"page-description\">\n          {{ description }}\n        </p>\n      </CommonCol>\n      <CommonCol :span=\"8\" class=\"text-right\">\n        <div v-if=\"$slots.actions\" class=\"page-actions\">\n          <slot name=\"actions\" />\n        </div>\n      </CommonCol>\n    </CommonRow>\n  </CommonCard>\n</template>\n\n<script setup lang=\"ts\">\nimport { CommonCard, CommonRow, CommonCol } from '@company/shared-components'\n\ninterface Props {\n  title: string\n  description?: string\n}\n\ndefineProps<Props>()\ndefineSlots<{\n  actions?: () => any\n}>()\n</script>\n\n<style scoped>\n.page-header {\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.page-description {\n  color: var(--text-secondary);\n  margin-top: 8px;\n}\n</style>"
            ],
            [
              "vue",
              "<template>\n  <!-- PageHeaderコンポーネント -->\n  <PageHeader\n    title=\"ユーザー管理\"\n    description=\"システムユーザーの管理と権限設定\"\n  >\n    <template #actions>\n      <!-- 共通コンポーネントボタン -->\n      <CommonButton\n        variant=\"primary\"\n        @click=\"handleAdd\"\n        responsive\n        touch-optimized\n      >\n        <template #prefix>\n          <Icon name=\"add\" />\n        </template>\n        新規追加\n      </CommonButton>\n    </template>\n  </PageHeader>\n</template>\n\n<script setup lang=\"ts\">\nimport PageHeader from '@/components/PageHeader.vue'\nimport { CommonButton } from '@company/shared-components'\nimport Icon from '@/components/Icon.vue'\n\nconst handleAdd = () => {\n  // 新規追加処理\n}\n</script>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"data-table\">\n    <el-table\n      :data=\"data\"\n      v-loading=\"loading\"\n      :empty-text=\"emptyText\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </el-table>\n\n    <el-pagination\n      v-if=\"showPagination\"\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      :page-sizes=\"pageSizes\"\n      :total=\"total\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\ninterface Props {\n  data: any[]\n  loading?: boolean\n  emptyText?: string\n  showPagination?: boolean\n  total?: number\n  currentPage?: number\n  pageSize?: number\n  pageSizes?: number[]\n}\n\ninterface Emits {\n  (e: 'page-change', page: number): void\n  (e: 'size-change', size: number): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  loading: false,\n  emptyText: 'データがありません',\n  showPagination: true,\n  currentPage: 1,\n  pageSize: 20,\n  pageSizes: () => [10, 20, 50, 100]\n})\n\nconst emit = defineEmits<Emits>()\n\nconst handleSizeChange = (size: number) => {\n  emit('size-change', size)\n}\n\nconst handleCurrentChange = (page: number) => {\n  emit('page-change', page)\n}\n</script>"
            ],
            [
              "scss",
              "// assets/styles/variables.scss\n:root {\n  // Primary Colors\n  --el-color-primary: #409eff;\n  --el-color-primary-light-3: #79bbff;\n  --el-color-primary-light-5: #a0cfff;\n  --el-color-primary-light-7: #c6e2ff;\n  --el-color-primary-light-8: #d9ecff;\n  --el-color-primary-light-9: #ecf5ff;\n  --el-color-primary-dark-2: #337ecc;\n\n  // Success Colors\n  --el-color-success: #67c23a;\n  --el-color-warning: #e6a23c;\n  --el-color-danger: #f56c6c;\n  --el-color-info: #909399;\n\n  // Text Colors\n  --el-text-color-primary: #303133;\n  --el-text-color-regular: #606266;\n  --el-text-color-secondary: #909399;\n  --el-text-color-placeholder: #a8abb2;\n  --el-text-color-disabled: #c0c4cc;\n\n  // Background Colors\n  --el-bg-color: #ffffff;\n  --el-bg-color-page: #f2f3f5;\n  --el-bg-color-overlay: #ffffff;\n\n  // Border Colors\n  --el-border-color: #dcdfe6;\n  --el-border-color-light: #e4e7ed;\n  --el-border-color-lighter: #ebeef5;\n  --el-border-color-extra-light: #f2f6fc;\n  --el-border-color-dark: #d4d7de;\n  --el-border-color-darker: #cdd0d6;\n\n  // Component Sizes\n  --el-component-size-large: 40px;\n  --el-component-size: 32px;\n  --el-component-size-small: 24px;\n}"
            ],
            [
              "scss",
              "// assets/styles/theme.scss\n.dark-theme {\n  --el-bg-color: #1d1e1f;\n  --el-bg-color-page: #0a0a0a;\n  --el-bg-color-overlay: #1d1e1f;\n  --el-text-color-primary: #e5eaf3;\n  --el-text-color-regular: #cfd3dc;\n  --el-text-color-secondary: #a3a6ad;\n  --el-border-color: #4c4d4f;\n  --el-border-color-light: #414243;\n  --el-border-color-lighter: #363637;\n}"
            ],
            [
              "typescript",
              "// plugins/i18n.ts\nimport { createI18n } from 'vue-i18n'\n\nconst messages = {\n  ja: {\n    common: {\n      save: '保存',\n      cancel: 'キャンセル',\n      delete: '削除',\n      edit: '編集'\n    },\n    user: {\n      name: '氏名',\n      email: 'メールアドレス',\n      department: '部署'\n    }\n  },\n  en: {\n    common: {\n      save: 'Save',\n      cancel: 'Cancel',\n      delete: 'Delete',\n      edit: 'Edit'\n    },\n    user: {\n      name: 'Name',\n      email: 'Email',\n      department: 'Department'\n    }\n  }\n}\n\nexport const i18n = createI18n({\n  locale: 'ja',\n  fallbackLocale: 'en',\n  messages\n})"
            ],
            [
              "vue",
              "<template>\n  <el-button>{{ $t('common.save') }}</el-button>\n  <el-form-item :label=\"$t('user.name')\">\n    <el-input v-model=\"form.name\" />\n  </el-form-item>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\n\nconst { t } = useI18n()\n\n// JavaScript内での使用\nconst message = t('common.save')\n</script>"
            ],
            [
              "typescript",
              "// router/index.ts\nconst routes = [\n  {\n    path: '/dashboard',\n    component: () => import('@/views/Dashboard.vue')\n  },\n  {\n    path: '/users',\n    component: () => import('@/views/Users.vue')\n  }\n]"
            ],
            [
              "vue",
              "<template>\n  <el-table-v2\n    :columns=\"columns\"\n    :data=\"data\"\n    :width=\"700\"\n    :height=\"400\"\n    fixed\n  />\n</template>"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\nconst expensiveComputation = computed(() => {\n  // 重い計算処理\n  return data.value.map(item => processItem(item))\n})\n\n// コンポーネントのメモ化\nconst MemoizedComponent = defineAsyncComponent(() =>\n  import('@/components/ExpensiveComponent.vue')\n)\n</script>"
            ],
            [
              "typescript",
              "// tests/components/Login.spec.ts\nimport { mount } from '@vue/test-utils'\nimport { describe, it, expect } from 'vitest'\nimport Login from '@/views/Login.vue'\n\ndescribe('Login.vue', () => {\n  it('renders login form', () => {\n    const wrapper = mount(Login)\n    expect(wrapper.find('h2').text()).toBe('ログイン')\n    expect(wrapper.find('input[placeholder=\"ユーザー名\"]').exists()).toBe(true)\n    expect(wrapper.find('input[placeholder=\"パスワード\"]').exists()).toBe(true)\n  })\n\n  it('validates required fields', async () => {\n    const wrapper = mount(Login)\n    const button = wrapper.find('button[type=\"submit\"]')\n\n    await button.trigger('click')\n\n    expect(wrapper.text()).toContain('ユーザー名を入力してください')\n  })\n})"
            ],
            [
              "typescript",
              "// main.ts\nif (process.env.NODE_ENV === 'development') {\n  app.config.performance = true\n}"
            ],
            [
              "typescript",
              "// エラーバウンダリ\napp.config.errorHandler = (error, instance, info) => {\n  console.error('Global error:', error)\n  // 共通メッセージサービス使用を推奨\n  showErrorMessage('予期しないエラーが発生しました')\n}"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 23
        }
      },
      "readability": {
        "score": 94.92,
        "sentences": 189,
        "avg_words_per_sentence": 11.96,
        "long_sentences": 32,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 81,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 83.38
    },
    "docs/reviews/README.md": {
      "basic_metrics": {
        "lines": 86,
        "words": 168,
        "characters": 1470,
        "avg_line_length": 17.093023255813954
      },
      "structure_analysis": {
        "headers": {
          "total": 19,
          "hierarchy": [
            {
              "level": 1,
              "text": "レビューファイル管理ガイドライン",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📁 フォルダ構成",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "📅 日付フォルダ命名規則",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "📝 ファイル命名規則",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "フェーズ完了報告",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "分析・計画書",
              "line_number": 31
            },
            {
              "level": 2,
              "text": "🔄 運用手順",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "1. 新しいレビューファイル作成時",
              "line_number": 40
            },
            {
              "level": 1,
              "text": "1. 日付フォルダ作成（存在しない場合）",
              "line_number": 42
            },
            {
              "level": 1,
              "text": "2. ファイル作成",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "2. 既存ファイルの移動・整理時",
              "line_number": 49
            },
            {
              "level": 1,
              "text": "日付フォルダに移動",
              "line_number": 51
            },
            {
              "level": 3,
              "text": "3. 検索・参照時",
              "line_number": 55
            },
            {
              "level": 1,
              "text": "特定日付のファイル検索",
              "line_number": 57
            },
            {
              "level": 1,
              "text": "全期間でのファイル検索",
              "line_number": 60
            },
            {
              "level": 1,
              "text": "内容検索",
              "line_number": 63
            },
            {
              "level": 2,
              "text": "📊 現在の状況（2025年1月20日時点）",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "既存ファイル（20250120フォルダ）",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "今後の予定",
              "line_number": 78
            }
          ],
          "hierarchy_issues": [
            {
              "line": 49,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 55,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 17,
          "languages": {
            "bash": 3
          },
          "details": [
            [
              "",
              "docs/reviews/\n├── README.md                    # このファイル（管理ガイドライン）\n├── YYYYMMDD/                   # 日付別フォルダ\n│   ├── Phase*完了報告.md        # フェーズ完了報告\n│   ├── 環境チェック*.md         # 環境分析レポート\n│   ├── 実装チェック*.md         # 実装検証レポート\n│   └── 優先度別*.md            # 対策計画\n└── templates/                  # テンプレートファイル（将来追加予定）"
            ],
            [
              "bash",
              "# 1. 日付フォルダ作成（存在しない場合）\nmkdir -p docs/reviews/$(date +%Y%m%d)\n\n# 2. ファイル作成\ntouch docs/reviews/$(date +%Y%m%d)/新しいレビューファイル.md"
            ],
            [
              "bash",
              "# 日付フォルダに移動\nmv レビューファイル.md docs/reviews/20250120/"
            ],
            [
              "bash",
              "# 特定日付のファイル検索\nls docs/reviews/20250120/\n\n# 全期間でのファイル検索\nfind docs/reviews -name \"*Phase*\" -type f\n\n# 内容検索\ngrep -r \"検索文字列\" docs/reviews/"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.86,
        "sentences": 28,
        "avg_words_per_sentence": 6.0,
        "long_sentences": 2,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 34.36,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 65.6
    },
    "docs/02_システム仕様書/データ辞書・バリデーション定義書.md": {
      "basic_metrics": {
        "lines": 615,
        "words": 2798,
        "characters": 17383,
        "avg_line_length": 28.265040650406505
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "システム全体 データ辞書・バリデーション定義書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. データ型定義",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "2.1 基本データ型",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "2.2 文字列サイズ規約",
              "line_number": 33
            },
            {
              "level": 2,
              "text": "3. 項目辞書",
              "line_number": 49
            },
            {
              "level": 3,
              "text": "3.1 共通項目",
              "line_number": 51
            },
            {
              "level": 3,
              "text": "3.2 ユーザー関連項目",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "3.3 組織関連項目",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "3.4 会社情報項目",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "3.5 権限関連項目",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "3.6 ワークフロー関連項目",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "3.7 承認関連項目",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "3.8 通知関連項目",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "3.9 ファイル関連項目",
              "line_number": 160
            },
            {
              "level": 2,
              "text": "4. enum定義",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "4.1 UserRole（ユーザー権限）",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "4.2 WorkflowStatus（ワークフロー状態）",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "4.3 ApprovalAction（承認アクション）",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "4.4 Priority（優先度）",
              "line_number": 213
            },
            {
              "level": 3,
              "text": "4.5 NotificationType（通知タイプ）",
              "line_number": 224
            },
            {
              "level": 2,
              "text": "5. バリデーション定義",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "5.1 共通バリデーション関数",
              "line_number": 241
            },
            {
              "level": 3,
              "text": "5.2 項目別バリデーション定義",
              "line_number": 298
            },
            {
              "level": 3,
              "text": "5.3 express-validator統合",
              "line_number": 416
            },
            {
              "level": 2,
              "text": "6. 管理ルール",
              "line_number": 485
            },
            {
              "level": 3,
              "text": "6.1 新規項目追加時の手順",
              "line_number": 487
            },
            {
              "level": 3,
              "text": "6.2 項目変更時の影響確認",
              "line_number": 507
            },
            {
              "level": 3,
              "text": "6.3 データ型変更時の注意事項",
              "line_number": 538
            },
            {
              "level": 2,
              "text": "7. バリデーションエラーメッセージ",
              "line_number": 548
            },
            {
              "level": 3,
              "text": "7.1 日本語エラーメッセージ定義",
              "line_number": 550
            },
            {
              "level": 2,
              "text": "8. 今後の拡張計画",
              "line_number": 591
            },
            {
              "level": 3,
              "text": "8.1 国際化対応",
              "line_number": 593
            },
            {
              "level": 3,
              "text": "8.2 高度なバリデーション",
              "line_number": 599
            },
            {
              "level": 3,
              "text": "8.3 自動化",
              "line_number": 605
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 10,
          "inline_code": 20,
          "languages": {
            "typescript": 10
          },
          "details": [
            [
              "typescript",
              "enum UserRole {\n  ADMIN = 'ADMIN',           // システム管理者\n  USER = 'USER',             // 一般ユーザー\n  GUEST = 'GUEST',           // ゲストユーザー\n  MANAGER = 'MANAGER'        // マネージャー\n}"
            ],
            [
              "typescript",
              "enum WorkflowStatus {\n  DRAFT = 'DRAFT',           // 下書き\n  PENDING = 'PENDING',       // 承認待ち\n  APPROVED = 'APPROVED',     // 承認済み\n  REJECTED = 'REJECTED',     // 却下\n  CANCELLED = 'CANCELLED',   // 取り消し\n  RETURNED = 'RETURNED'      // 差し戻し\n}"
            ],
            [
              "typescript",
              "enum ApprovalAction {\n  APPROVE = 'APPROVE',       // 承認\n  REJECT = 'REJECT',         // 却下\n  RETURN = 'RETURN',         // 差し戻し\n  DELEGATE = 'DELEGATE',     // 代理\n  SKIP = 'SKIP',             // スキップ\n  AUTO_APPROVE = 'AUTO_APPROVE' // 自動承認\n}"
            ],
            [
              "typescript",
              "enum Priority {\n  LOW = 'LOW',               // 低\n  NORMAL = 'NORMAL',         // 通常\n  HIGH = 'HIGH',             // 高\n  URGENT = 'URGENT'          // 緊急\n}"
            ],
            [
              "typescript",
              "enum NotificationType {\n  REQUEST_SUBMITTED = 'REQUEST_SUBMITTED',     // 申請受付\n  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',     // 承認要求\n  APPROVED = 'APPROVED',                       // 承認完了\n  REJECTED = 'REJECTED',                       // 却下\n  RETURNED = 'RETURNED',                       // 差し戻し\n  COMPLETED = 'COMPLETED',                     // 処理完了\n  DEADLINE_APPROACHING = 'DEADLINE_APPROACHING', // 期限間近\n  OVERDUE = 'OVERDUE'                          // 期限超過\n}"
            ],
            [
              "typescript",
              "// 文字列長バリデーション\nexport const validateLength = (value: string, min: number, max: number): boolean => {\n  return value.length >= min && value.length <= max\n}\n\n// メールアドレスバリデーション\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email) && validateLength(email, 5, 254)\n}\n\n// コードバリデーション（英数字、アンダースコア、ハイフン）\nexport const validateCode = (code: string): boolean => {\n  const codeRegex = /^[a-zA-Z0-9_-]+$/\n  return codeRegex.test(code)\n}\n\n// 電話番号バリデーション\nexport const validatePhone = (phone: string): boolean => {\n  const phoneRegex = /^[\\d-+().\\s]+$/\n  return phoneRegex.test(phone) && validateLength(phone, 10, 20)\n}\n\n// URLバリデーション\nexport const validateUrl = (url: string): boolean => {\n  try {\n    new URL(url)\n    return validateLength(url, 1, 2048)\n  } catch {\n    return false\n  }\n}\n\n// 日付バリデーション（未来日付）\nexport const validateFutureDate = (date: Date): boolean => {\n  return date > new Date()\n}\n\n// 日付バリデーション（過去日付）\nexport const validatePastDate = (date: Date): boolean => {\n  return date <= new Date()\n}\n\n// 金額バリデーション\nexport const validateAmount = (amount: number): boolean => {\n  return amount >= 0 && amount <= 999999999999.99\n}\n\n// パーセンテージバリデーション\nexport const validatePercentage = (percentage: number): boolean => {\n  return percentage >= 0 && percentage <= 100\n}"
            ],
            [
              "typescript",
              "export const validationRules = {\n  // ユーザー関連\n  username: {\n    required: true,\n    minLength: 3,\n    maxLength: 30,\n    pattern: /^[a-zA-Z0-9_-]+$/,\n    unique: true\n  },\n\n  email: {\n    required: true,\n    minLength: 5,\n    maxLength: 254,\n    format: 'email',\n    unique: true\n  },\n\n  password: {\n    required: true,\n    minLength: 8,\n    maxLength: 128,\n    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d@$!%*?&]{8,}$/,\n    message: 'パスワードは8文字以上で、大文字・小文字・数字を含む必要があります'\n  },\n\n  name: {\n    required: true,\n    minLength: 1,\n    maxLength: 50,\n    trim: true\n  },\n\n  employeeCode: {\n    required: false,\n    minLength: 1,\n    maxLength: 20,\n    pattern: /^[a-zA-Z0-9-]+$/,\n    unique: true\n  },\n\n  // 組織関連\n  companyCode: {\n    required: true,\n    minLength: 1,\n    maxLength: 20,\n    pattern: /^[a-zA-Z0-9_-]+$/,\n    unique: 'per_system'\n  },\n\n  departmentCode: {\n    required: true,\n    minLength: 1,\n    maxLength: 20,\n    pattern: /^[a-zA-Z0-9_-]+$/,\n    unique: 'per_company'\n  },\n\n  // ワークフロー関連\n  requestNumber: {\n    required: true,\n    minLength: 10,\n    maxLength: 30,\n    pattern: /^[A-Z0-9-]+$/,\n    unique: true,\n    autoGenerate: true\n  },\n\n  title: {\n    required: true,\n    minLength: 1,\n    maxLength: 100,\n    trim: true\n  },\n\n  description: {\n    required: false,\n    maxLength: 2000,\n    trim: true\n  },\n\n  amount: {\n    required: false,\n    min: 0,\n    max: 999999999999.99,\n    decimal: 2\n  },\n\n  // ファイル関連\n  fileName: {\n    required: true,\n    minLength: 1,\n    maxLength: 255,\n    pattern: /^[^<>:\"/\\\\|?*]+$/\n  },\n\n  fileSize: {\n    required: true,\n    min: 1,\n    max: 1073741824, // 1GB\n    type: 'integer'\n  },\n\n  mimeType: {\n    required: true,\n    allowedValues: [\n      'image/jpeg', 'image/png', 'image/gif',\n      'application/pdf', 'text/plain',\n      'application/vnd.ms-excel',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ]\n  }\n}"
            ],
            [
              "typescript",
              "import { body, param, query } from 'express-validator'\n\n// ユーザー作成バリデーション\nexport const validateCreateUser = [\n  body('username')\n    .isLength({ min: 3, max: 30 })\n    .matches(/^[a-zA-Z0-9_-]+$/)\n    .withMessage('ユーザー名は3-30文字の英数字、アンダースコア、ハイフンで入力してください'),\n\n  body('email')\n    .isEmail()\n    .isLength({ max: 254 })\n    .normalizeEmail()\n    .withMessage('有効なメールアドレスを入力してください'),\n\n  body('password')\n    .isLength({ min: 8, max: 128 })\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d@$!%*?&]{8,}$/)\n    .withMessage('パスワードは8文字以上で、大文字・小文字・数字を含む必要があります'),\n\n  body('name')\n    .isLength({ min: 1, max: 50 })\n    .trim()\n    .withMessage('氏名は1-50文字で入力してください'),\n\n  body('employeeCode')\n    .optional()\n    .isLength({ max: 20 })\n    .matches(/^[a-zA-Z0-9-]+$/)\n    .withMessage('社員番号は英数字とハイフンで入力してください')\n]\n\n// ワークフロー申請バリデーション\nexport const validateCreateWorkflowRequest = [\n  body('workflowTypeId')\n    .isInt({ min: 1 })\n    .withMessage('ワークフロータイプIDは1以上の整数で入力してください'),\n\n  body('title')\n    .isLength({ min: 1, max: 100 })\n    .trim()\n    .withMessage('タイトルは1-100文字で入力してください'),\n\n  body('description')\n    .optional()\n    .isLength({ max: 2000 })\n    .trim()\n    .withMessage('説明は2000文字以内で入力してください'),\n\n  body('amount')\n    .optional()\n    .isDecimal({ decimal_digits: '0,2' })\n    .custom((value) => {\n      const num = parseFloat(value)\n      if (num < 0 || num > 999999999999.99) {\n        throw new Error('金額は0以上、999兆円以下で入力してください')\n      }\n      return true\n    }),\n\n  body('formData')\n    .isObject()\n    .withMessage('フォームデータは有効なJSONオブジェクトで入力してください')\n]"
            ],
            [
              "typescript",
              "// 項目変更影響チェックリスト\nconst changeImpactCheck = {\n  database: [\n    'Prismaスキーマ更新',\n    'マイグレーションファイル作成',\n    'インデックス影響確認'\n  ],\n\n  backend: [\n    'TypeScript型定義更新',\n    'バリデーション更新',\n    'API仕様書更新'\n  ],\n\n  frontend: [\n    'Vue コンポーネント更新',\n    'バリデーション更新',\n    'UI表示確認'\n  ],\n\n  test: [\n    '単体テスト更新',\n    '統合テスト更新',\n    'バリデーションテスト更新'\n  ]\n}"
            ],
            [
              "typescript",
              "export const errorMessages = {\n  required: '{field}は必須です',\n  minLength: '{field}は{min}文字以上で入力してください',\n  maxLength: '{field}は{max}文字以内で入力してください',\n  pattern: '{field}の形式が正しくありません',\n  email: '有効なメールアドレスを入力してください',\n  unique: 'この{field}は既に使用されています',\n  min: '{field}は{min}以上で入力してください',\n  max: '{field}は{max}以下で入力してください',\n  integer: '{field}は整数で入力してください',\n  decimal: '{field}は小数点以下{places}桁以内で入力してください',\n  date: '{field}は有効な日付を入力してください',\n  futureDate: '{field}は未来の日付を入力してください',\n  pastDate: '{field}は過去の日付を入力してください',\n  url: '{field}は有効なURLを入力してください',\n  phone: '{field}は有効な電話番号を入力してください'\n}\n\n// エラーメッセージ生成関数\nexport const generateErrorMessage = (\n  rule: string,\n  field: string,\n  params?: Record<string, any>\n): string => {\n  let message = errorMessages[rule] || 'バリデーションエラーが発生しました'\n\n  // パラメータ置換\n  message = message.replace('{field}', field)\n  if (params) {\n    Object.keys(params).forEach(key => {\n      message = message.replace(`{${key}}`, params[key])\n    })\n  }\n\n  return message\n}"
            ]
          ]
        },
        "tables": {
          "total": 12,
          "total_rows": 133
        }
      },
      "readability": {
        "score": 73.31,
        "sentences": 113,
        "avg_words_per_sentence": 24.76,
        "long_sentences": 27,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.49
    },
    "docs/01_機能設計書/機能一覧と概要.md": {
      "basic_metrics": {
        "lines": 230,
        "words": 943,
        "characters": 6886,
        "avg_line_length": 29.93913043478261
      },
      "structure_analysis": {
        "headers": {
          "total": 29,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能一覧と概要 - 2025年9月最新版",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 ドキュメント概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🗂️ ディレクトリ構成",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🎯 主要機能一覧（実装完了順）",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "1. ✅ 認証機能 (`01_認証機能/`) - 100%完成",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "2. ✅ ユーザー管理機能 (`02_ユーザー管理機能/`) - 95%完成",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "3. ✅ ダッシュボード機能 (`03_ダッシュボード機能/`) - 95%完成",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "4. ✅ 共通コンポーネント (`04_共通コンポーネント/`) - 98%完成",
              "line_number": 54
            },
            {
              "level": 3,
              "text": "5. ✅ レスポンシブ対応 (`05_レスポンシブ対応/`) - 100%完成",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "6. ✅ アクセシビリティ (`06_アクセシビリティ/`) - 100%完成",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "7. ✅ データベース設計 (`07_データベース設計/`) - 100%完成",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "8. ✅ システム基盤 (`99_システム基盤/`) - 100%完成",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "9. ✅ テスト機能 (`10_テスト機能/`) - 100%完成",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "10. ✅ メッセージ管理 (`11_メッセージ管理/`) - 100%完成",
              "line_number": 96
            },
            {
              "level": 3,
              "text": "11. ログ監視システム (`12_ログ監視システム/`)",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "11. ✅ ログ監視システム (`12_ログ監視システム/`) - 98%完成",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "12. ✅ **権限管理システム (`09_権限管理システム/`) - 98%完成** 🆕",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "13. ✅ アラート機能 (`10_アラート機能/`) - 100%完成",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "14. ✅ 組織管理機能 (`11_組織管理機能/`) - 100%完成",
              "line_number": 132
            },
            {
              "level": 3,
              "text": "15. 🔄 レポート機能 (`12_レポート機能/`) - 80%完成",
              "line_number": 139
            },
            {
              "level": 2,
              "text": "📊 開発ステータス",
              "line_number": 147
            },
            {
              "level": 3,
              "text": "凡例",
              "line_number": 171
            },
            {
              "level": 2,
              "text": "🔄 更新履歴",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "📝 各機能詳細へのリンク",
              "line_number": 184
            },
            {
              "level": 2,
              "text": "🚀 現在の実装状況サマリー",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "✅ 完了済み機能",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "🔧 動作確認済み",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "🆕 実装済み追加機能",
              "line_number": 221
            },
            {
              "level": 3,
              "text": "📊 全体進捗",
              "line_number": 229
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 11,
          "internal": 11,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "01_認証機能",
              "01_認証機能/"
            ],
            [
              "02_ユーザー管理機能",
              "02_ユーザー管理機能/"
            ],
            [
              "03_ダッシュボード機能",
              "03_ダッシュボード機能/"
            ],
            [
              "04_共通コンポーネント",
              "04_共通コンポーネント/"
            ],
            [
              "05_レスポンシブ対応",
              "05_レスポンシブ対応/"
            ],
            [
              "06_アクセシビリティ",
              "06_アクセシビリティ/"
            ],
            [
              "07_データベース設計",
              "07_データベース設計/"
            ],
            [
              "99_システム基盤",
              "99_システム基盤/"
            ],
            [
              "10_テスト機能",
              "10_テスト機能/"
            ],
            [
              "11_メッセージ管理",
              "11_メッセージ管理/"
            ],
            [
              "12_ログ監視システム",
              "12_ログ監視システム/"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 1,
          "inline_code": 17,
          "languages": {},
          "details": [
            [
              "",
              "docs/01_機能設計書/\n├── 機能一覧と概要.md              # このファイル（機能管理マスター）\n├── 01_認証機能/                   # ログイン・認証関連 ✅ 完成\n├── 02_ユーザー管理機能/            # ユーザーCRUD・権限管理 ✅ 完成\n├── 03_ダッシュボード機能/          # ダッシュボード・統計表示 ✅ 完成\n├── 04_共通コンポーネント/          # UI共通コンポーネント ✅ 完成\n├── 05_レスポンシブ対応/            # PC・モバイル対応 ✅ 完成\n├── 06_アクセシビリティ/            # UD対応・フォント設定 ✅ 完成\n├── 07_データベース設計/            # DB設計・テーブル設計 ✅ 完成\n├── 08_ログ監視システム/            # ログ管理・監視機能 ✅ 完成\n├── 09_権限管理システム/            # 権限・テンプレート機能 ✅ 完成 NEW!\n├── 10_アラート機能/               # WebSocketアラート ✅ 完成\n├── 11_組織管理機能/               # 会社・部署管理 ✅ 完成\n├── 12_レポート機能/               # データエクスポート 🔄 80%\n└── 99_システム基盤/               # インフラ・環境設定 ✅ 完成"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 23
        }
      },
      "readability": {
        "score": 92.95,
        "sentences": 59,
        "avg_words_per_sentence": 15.98,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 71.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 79.13
    },
    "docs/01_機能設計書/設計書レビュー報告書.md": {
      "basic_metrics": {
        "lines": 209,
        "words": 603,
        "characters": 3208,
        "avg_line_length": 15.349282296650717
      },
      "structure_analysis": {
        "headers": {
          "total": 43,
          "hierarchy": [
            {
              "level": 1,
              "text": "設計書レビュー報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 レビュー概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "レビュー目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "レビュー実施日",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "レビュー対象",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🔍 現状分析",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "既存設計書の完成度",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "凡例",
              "line_number": 33
            },
            {
              "level": 2,
              "text": "🚨 主要な問題点",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "1. 設計書の不足",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "2. 設計書の品質不足",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "3. 整合性の問題",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "📝 改善計画",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "フェーズ1: 基盤設計書の充実",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "フェーズ2: 主要機能の設計書作成",
              "line_number": 68
            },
            {
              "level": 4,
              "text": "対象機能（優先度順）",
              "line_number": 69
            },
            {
              "level": 4,
              "text": "各機能で作成する設計書",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "フェーズ3: 統合・整合性確認",
              "line_number": 82
            },
            {
              "level": 2,
              "text": "🎯 優先度付けと実装順序",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "最優先（即時実装）",
              "line_number": 90
            },
            {
              "level": 3,
              "text": "高優先（週内実装）",
              "line_number": 99
            },
            {
              "level": 3,
              "text": "中優先（月内実装）",
              "line_number": 108
            },
            {
              "level": 2,
              "text": "📊 品質基準",
              "line_number": 113
            },
            {
              "level": 3,
              "text": "要件定義書の必須項目",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "詳細設計書の必須項目",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "API設計書の必須項目",
              "line_number": 129
            },
            {
              "level": 3,
              "text": "画面設計書の必須項目",
              "line_number": 136
            },
            {
              "level": 2,
              "text": "🔧 実装方針",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "1. テンプレート化",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "2. 段階的実装",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "3. レビュープロセス",
              "line_number": 153
            },
            {
              "level": 2,
              "text": "📈 期待効果",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "短期効果（1ヶ月以内）",
              "line_number": 159
            },
            {
              "level": 3,
              "text": "中期効果（3ヶ月以内）",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "長期効果（6ヶ月以内）",
              "line_number": 169
            },
            {
              "level": 2,
              "text": "📅 実装スケジュール",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "Week 1",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "Week 2",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "Week 3",
              "line_number": 184
            },
            {
              "level": 3,
              "text": "Week 4",
              "line_number": 188
            },
            {
              "level": 2,
              "text": "🔍 次のアクション",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "即座に実行すべき項目",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "レビューが必要な項目",
              "line_number": 199
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 1,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 1,
          "total_rows": 14
        }
      },
      "readability": {
        "score": 88.19,
        "sentences": 31,
        "avg_words_per_sentence": 19.45,
        "long_sentences": 3,
        "readability_level": "読みやすい"
      },
      "structure_score": 39.06,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 64.58
    },
    "docs/01_機能設計書/統合データベース設計書.md": {
      "basic_metrics": {
        "lines": 741,
        "words": 2149,
        "characters": 20390,
        "avg_line_length": 27.516869095816464
      },
      "structure_analysis": {
        "headers": {
          "total": 47,
          "hierarchy": [
            {
              "level": 1,
              "text": "統合データベース設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 データベース基本情報",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 設計方針",
              "line_number": 12
            },
            {
              "level": 2,
              "text": "2. 全体ER図",
              "line_number": 20
            },
            {
              "level": 2,
              "text": "3. テーブル詳細設計",
              "line_number": 248
            },
            {
              "level": 3,
              "text": "3.1 ユーザー管理系テーブル",
              "line_number": 250
            },
            {
              "level": 4,
              "text": "User テーブル",
              "line_number": 252
            },
            {
              "level": 4,
              "text": "UserSession テーブル",
              "line_number": 279
            },
            {
              "level": 3,
              "text": "3.2 組織管理系テーブル",
              "line_number": 299
            },
            {
              "level": 4,
              "text": "Company テーブル",
              "line_number": 301
            },
            {
              "level": 4,
              "text": "Department テーブル",
              "line_number": 327
            },
            {
              "level": 4,
              "text": "UserDepartment テーブル",
              "line_number": 354
            },
            {
              "level": 3,
              "text": "3.3 権限管理系テーブル",
              "line_number": 375
            },
            {
              "level": 4,
              "text": "Feature テーブル",
              "line_number": 377
            },
            {
              "level": 4,
              "text": "DepartmentFeaturePermission テーブル",
              "line_number": 403
            },
            {
              "level": 4,
              "text": "PermissionTemplate テーブル",
              "line_number": 433
            },
            {
              "level": 3,
              "text": "3.4 ログ管理系テーブル",
              "line_number": 461
            },
            {
              "level": 4,
              "text": "LogCategory テーブル",
              "line_number": 463
            },
            {
              "level": 4,
              "text": "LogEntry テーブル",
              "line_number": 479
            },
            {
              "level": 3,
              "text": "3.5 監査ログテーブル",
              "line_number": 508
            },
            {
              "level": 4,
              "text": "AuditLog テーブル",
              "line_number": 510
            },
            {
              "level": 3,
              "text": "3.6 メッセージ管理系テーブル",
              "line_number": 534
            },
            {
              "level": 4,
              "text": "MessageDefinition テーブル",
              "line_number": 536
            },
            {
              "level": 4,
              "text": "SystemMessage テーブル",
              "line_number": 558
            },
            {
              "level": 2,
              "text": "4. 初期データ設計",
              "line_number": 577
            },
            {
              "level": 3,
              "text": "4.1 システム管理者",
              "line_number": 579
            },
            {
              "level": 3,
              "text": "4.2 基本機能マスタ",
              "line_number": 594
            },
            {
              "level": 3,
              "text": "4.3 ログカテゴリ",
              "line_number": 606
            },
            {
              "level": 3,
              "text": "4.4 メッセージ定義",
              "line_number": 617
            },
            {
              "level": 2,
              "text": "5. パフォーマンス最適化",
              "line_number": 628
            },
            {
              "level": 3,
              "text": "5.1 インデックス戦略",
              "line_number": 630
            },
            {
              "level": 3,
              "text": "5.2 パーティショニング",
              "line_number": 635
            },
            {
              "level": 3,
              "text": "5.3 アーカイブ戦略",
              "line_number": 640
            },
            {
              "level": 2,
              "text": "6. セキュリティ設計",
              "line_number": 662
            },
            {
              "level": 3,
              "text": "6.1 データ暗号化",
              "line_number": 664
            },
            {
              "level": 3,
              "text": "6.2 アクセス制御",
              "line_number": 669
            },
            {
              "level": 3,
              "text": "6.3 行レベルセキュリティ",
              "line_number": 685
            },
            {
              "level": 2,
              "text": "7. 運用・保守",
              "line_number": 695
            },
            {
              "level": 3,
              "text": "7.1 バックアップ設計",
              "line_number": 697
            },
            {
              "level": 1,
              "text": "日次フルバックアップ",
              "line_number": 699
            },
            {
              "level": 1,
              "text": "差分バックアップ（WALファイル）",
              "line_number": 702
            },
            {
              "level": 3,
              "text": "7.2 監視項目",
              "line_number": 706
            },
            {
              "level": 3,
              "text": "7.3 定期メンテナンス",
              "line_number": 712
            },
            {
              "level": 2,
              "text": "8. 移行計画",
              "line_number": 724
            },
            {
              "level": 3,
              "text": "8.1 現行システムからの移行",
              "line_number": 726
            },
            {
              "level": 3,
              "text": "8.2 段階的移行",
              "line_number": 731
            }
          ],
          "hierarchy_issues": [
            {
              "line": 706,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 23,
          "inline_code": 45,
          "languages": {
            "mermaid": 1,
            "sql": 21,
            "bash": 1
          },
          "details": [
            [
              "mermaid",
              "erDiagram\n    User ||--o{ UserSession : has\n    User ||--o{ UserDepartment : belongs_to\n    User ||--o{ AuditLog : performs\n    User ||--o{ LogEntry : creates\n\n    Company ||--o{ Department : has\n    Company ||--o{ User : employs\n\n    Department ||--o{ Department : has_sub\n    Department ||--o{ UserDepartment : assigns\n    Department ||--o{ DepartmentFeaturePermission : has\n\n    Feature ||--o{ Feature : has_sub\n    Feature ||--o{ DepartmentFeaturePermission : permitted_to\n    Feature ||--o{ PermissionTemplateDetail : included_in\n\n    PermissionTemplate ||--o{ PermissionTemplateDetail : contains\n\n    LogCategory ||--o{ LogEntry : categorizes\n\n    MessageDefinition ||--o{ SystemMessage : defines\n\n    User {\n        int id PK\n        string username UK\n        string email UK\n        string password\n        string name\n        int company_id FK\n        int primary_department_id FK\n        string employee_code\n        date join_date\n        date leave_date\n        UserRole role\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    Company {\n        int id PK\n        string code UK\n        string name\n        string name_kana\n        string industry\n        date established_date\n        int employee_count\n        text address\n        string phone\n        string email\n        string contract_plan\n        int max_users\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n        int created_by FK\n        int updated_by FK\n    }\n\n    Department {\n        int id PK\n        int company_id FK\n        string code\n        string name\n        string name_kana\n        int parent_id FK\n        int level\n        text path\n        int display_order\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n        int created_by FK\n        int updated_by FK\n    }\n\n    UserDepartment {\n        int id PK\n        int user_id FK\n        int department_id FK\n        boolean is_primary\n        string role\n        date assigned_date\n        date expired_date\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    Feature {\n        int id PK\n        string code UK\n        string name\n        text description\n        string category\n        int parent_id FK\n        text path\n        string url_pattern\n        string api_pattern\n        string icon\n        int display_order\n        boolean is_menu_item\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    DepartmentFeaturePermission {\n        int id PK\n        int department_id FK\n        int feature_id FK\n        boolean can_view\n        boolean can_create\n        boolean can_edit\n        boolean can_delete\n        boolean can_approve\n        boolean can_export\n        boolean inherit_from_parent\n        timestamp created_at\n        timestamp updated_at\n        int created_by FK\n        int updated_by FK\n    }\n\n    PermissionTemplate {\n        int id PK\n        string name\n        text description\n        string department_type\n        int company_id FK\n        boolean is_system_template\n        timestamp created_at\n        timestamp updated_at\n        int created_by FK\n    }\n\n    PermissionTemplateDetail {\n        int id PK\n        int template_id FK\n        int feature_id FK\n        boolean can_view\n        boolean can_create\n        boolean can_edit\n        boolean can_delete\n        boolean can_approve\n        boolean can_export\n    }\n\n    UserSession {\n        int id PK\n        int user_id FK\n        string session_token UK\n        string ip_address\n        text user_agent\n        timestamp expires_at\n        timestamp last_activity\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    LogEntry {\n        int id PK\n        timestamp timestamp\n        LogLevel level\n        int category_id FK\n        string source\n        text message\n        int user_id FK\n        text context\n        string environment\n        timestamp created_at\n    }\n\n    LogCategory {\n        int id PK\n        string code UK\n        string name\n        text description\n        string color\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    AuditLog {\n        int id PK\n        int user_id FK\n        string action\n        string target_type\n        int target_id\n        int feature_id FK\n        jsonb old_permissions\n        jsonb new_permissions\n        text reason\n        string ip_address\n        text user_agent\n        timestamp created_at\n    }\n\n    MessageDefinition {\n        int id PK\n        string code UK\n        string category\n        MessageType type\n        text message_ja\n        text message_en\n        text description\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    SystemMessage {\n        int id PK\n        int definition_id FK\n        int user_id FK\n        text custom_message\n        jsonb context\n        boolean is_read\n        timestamp created_at\n        timestamp read_at\n    }"
            ],
            [
              "sql",
              "CREATE TYPE \"UserRole\" AS ENUM ('ADMIN', 'MANAGER', 'USER', 'GUEST');\n\nCREATE TABLE \"User\" (\n    id SERIAL PRIMARY KEY,\n    username TEXT NOT NULL UNIQUE,\n    email TEXT NOT NULL UNIQUE,\n    password TEXT NOT NULL,\n    name TEXT NOT NULL,\n    company_id INTEGER REFERENCES \"Company\"(id),\n    primary_department_id INTEGER REFERENCES \"Department\"(id),\n    employee_code VARCHAR(50),\n    join_date DATE,\n    leave_date DATE,\n    role \"UserRole\" NOT NULL DEFAULT 'USER',\n    is_active BOOLEAN NOT NULL DEFAULT true,\n    created_at TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_user_company ON \"User\"(company_id);\nCREATE INDEX idx_user_primary_dept ON \"User\"(primary_department_id);\nCREATE INDEX idx_user_role ON \"User\"(role);\nCREATE INDEX idx_user_employee_code ON \"User\"(employee_code);"
            ],
            [
              "sql",
              "CREATE TABLE \"UserSession\" (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL REFERENCES \"User\"(id) ON DELETE CASCADE,\n    session_token TEXT NOT NULL UNIQUE,\n    ip_address VARCHAR(45),\n    user_agent TEXT,\n    expires_at TIMESTAMP(3) NOT NULL,\n    last_activity TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    is_active BOOLEAN NOT NULL DEFAULT true,\n    created_at TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_session_user ON \"UserSession\"(user_id);\nCREATE INDEX idx_session_token ON \"UserSession\"(session_token);\nCREATE INDEX idx_session_expires ON \"UserSession\"(expires_at);"
            ],
            [
              "sql",
              "CREATE TABLE \"Company\" (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(20) UNIQUE NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    name_kana VARCHAR(100),\n    industry VARCHAR(50),\n    established_date DATE,\n    employee_count INTEGER,\n    address TEXT,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    contract_plan VARCHAR(50) DEFAULT 'STANDARD',\n    max_users INTEGER DEFAULT 100,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES \"User\"(id),\n    updated_by INTEGER REFERENCES \"User\"(id)\n);\n\nCREATE INDEX idx_company_code ON \"Company\"(code);\nCREATE INDEX idx_company_active ON \"Company\"(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE \"Department\" (\n    id SERIAL PRIMARY KEY,\n    company_id INTEGER NOT NULL REFERENCES \"Company\"(id) ON DELETE CASCADE,\n    code VARCHAR(20) NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    name_kana VARCHAR(100),\n    parent_id INTEGER REFERENCES \"Department\"(id),\n    level INTEGER NOT NULL DEFAULT 1,\n    path TEXT,\n    display_order INTEGER DEFAULT 0,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES \"User\"(id),\n    updated_by INTEGER REFERENCES \"User\"(id),\n    UNIQUE(company_id, code),\n    CHECK (id != parent_id)\n);\n\nCREATE INDEX idx_dept_company ON \"Department\"(company_id);\nCREATE INDEX idx_dept_parent ON \"Department\"(parent_id);\nCREATE INDEX idx_dept_path ON \"Department\"(path);\nCREATE INDEX idx_dept_active ON \"Department\"(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE \"UserDepartment\" (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL REFERENCES \"User\"(id) ON DELETE CASCADE,\n    department_id INTEGER NOT NULL REFERENCES \"Department\"(id) ON DELETE CASCADE,\n    is_primary BOOLEAN DEFAULT false,\n    role VARCHAR(50) DEFAULT 'MEMBER',\n    assigned_date DATE NOT NULL DEFAULT CURRENT_DATE,\n    expired_date DATE,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE(user_id, department_id),\n    CHECK (expired_date IS NULL OR expired_date > assigned_date)\n);\n\nCREATE INDEX idx_user_dept_user ON \"UserDepartment\"(user_id);\nCREATE INDEX idx_user_dept_dept ON \"UserDepartment\"(department_id);\nCREATE INDEX idx_user_dept_primary ON \"UserDepartment\"(is_primary);"
            ],
            [
              "sql",
              "CREATE TABLE \"Feature\" (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(50) UNIQUE NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    category VARCHAR(50) NOT NULL,\n    parent_id INTEGER REFERENCES \"Feature\"(id),\n    path TEXT,\n    url_pattern VARCHAR(200),\n    api_pattern VARCHAR(200),\n    icon VARCHAR(50),\n    display_order INTEGER DEFAULT 0,\n    is_menu_item BOOLEAN DEFAULT true,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_feature_code ON \"Feature\"(code);\nCREATE INDEX idx_feature_category ON \"Feature\"(category);\nCREATE INDEX idx_feature_parent ON \"Feature\"(parent_id);\nCREATE INDEX idx_feature_active ON \"Feature\"(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE \"DepartmentFeaturePermission\" (\n    id SERIAL PRIMARY KEY,\n    department_id INTEGER NOT NULL REFERENCES \"Department\"(id) ON DELETE CASCADE,\n    feature_id INTEGER NOT NULL REFERENCES \"Feature\"(id) ON DELETE CASCADE,\n    can_view BOOLEAN DEFAULT false,\n    can_create BOOLEAN DEFAULT false,\n    can_edit BOOLEAN DEFAULT false,\n    can_delete BOOLEAN DEFAULT false,\n    can_approve BOOLEAN DEFAULT false,\n    can_export BOOLEAN DEFAULT false,\n    inherit_from_parent BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES \"User\"(id),\n    updated_by INTEGER REFERENCES \"User\"(id),\n    UNIQUE(department_id, feature_id),\n    CHECK (\n        can_view = true OR\n        (can_create = false AND can_edit = false AND can_delete = false AND can_approve = false AND can_export = false)\n    )\n);\n\nCREATE INDEX idx_dept_perm_dept ON \"DepartmentFeaturePermission\"(department_id);\nCREATE INDEX idx_dept_perm_feature ON \"DepartmentFeaturePermission\"(feature_id);\nCREATE INDEX idx_dept_perm_lookup ON \"DepartmentFeaturePermission\"(department_id, feature_id)\n    INCLUDE (can_view, can_create, can_edit, can_delete, can_approve, can_export);"
            ],
            [
              "sql",
              "CREATE TABLE \"PermissionTemplate\" (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    department_type VARCHAR(50),\n    company_id INTEGER REFERENCES \"Company\"(id),\n    is_system_template BOOLEAN DEFAULT false,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES \"User\"(id)\n);\n\nCREATE TABLE \"PermissionTemplateDetail\" (\n    id SERIAL PRIMARY KEY,\n    template_id INTEGER NOT NULL REFERENCES \"PermissionTemplate\"(id) ON DELETE CASCADE,\n    feature_id INTEGER NOT NULL REFERENCES \"Feature\"(id),\n    can_view BOOLEAN DEFAULT false,\n    can_create BOOLEAN DEFAULT false,\n    can_edit BOOLEAN DEFAULT false,\n    can_delete BOOLEAN DEFAULT false,\n    can_approve BOOLEAN DEFAULT false,\n    can_export BOOLEAN DEFAULT false,\n    UNIQUE(template_id, feature_id)\n);"
            ],
            [
              "sql",
              "CREATE TABLE \"LogCategory\" (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(20) UNIQUE NOT NULL,\n    name VARCHAR(50) NOT NULL,\n    description TEXT,\n    color VARCHAR(7) DEFAULT '#666666',\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_log_category_code ON \"LogCategory\"(code);"
            ],
            [
              "sql",
              "CREATE TYPE \"LogLevel\" AS ENUM ('TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL');\n\nCREATE TABLE \"LogEntry\" (\n    id SERIAL PRIMARY KEY,\n    timestamp TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    level \"LogLevel\" NOT NULL,\n    category_id INTEGER REFERENCES \"LogCategory\"(id),\n    source VARCHAR(50) NOT NULL,\n    message TEXT NOT NULL,\n    user_id INTEGER REFERENCES \"User\"(id),\n    context JSONB,\n    environment VARCHAR(20) DEFAULT 'development',\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_log_timestamp ON \"LogEntry\"(timestamp DESC);\nCREATE INDEX idx_log_level ON \"LogEntry\"(level);\nCREATE INDEX idx_log_category ON \"LogEntry\"(category_id);\nCREATE INDEX idx_log_user ON \"LogEntry\"(user_id);\nCREATE INDEX idx_log_source ON \"LogEntry\"(source);\nCREATE INDEX idx_log_environment ON \"LogEntry\"(environment);\n\n-- パーティショニング（月単位）\nCREATE TABLE \"LogEntry_2024_01\" PARTITION OF \"LogEntry\"\nFOR VALUES FROM ('2024-01-01') TO ('2024-02-01');"
            ],
            [
              "sql",
              "CREATE TABLE \"AuditLog\" (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL REFERENCES \"User\"(id),\n    action VARCHAR(50) NOT NULL,\n    target_type VARCHAR(50) NOT NULL,\n    target_id INTEGER NOT NULL,\n    feature_id INTEGER REFERENCES \"Feature\"(id),\n    old_permissions JSONB,\n    new_permissions JSONB,\n    reason TEXT,\n    ip_address VARCHAR(45),\n    user_agent TEXT,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_audit_user ON \"AuditLog\"(user_id);\nCREATE INDEX idx_audit_action ON \"AuditLog\"(action);\nCREATE INDEX idx_audit_target ON \"AuditLog\"(target_type, target_id);\nCREATE INDEX idx_audit_created ON \"AuditLog\"(created_at DESC);\nCREATE INDEX idx_audit_feature ON \"AuditLog\"(feature_id);"
            ],
            [
              "sql",
              "CREATE TYPE \"MessageType\" AS ENUM ('INFO', 'SUCCESS', 'WARNING', 'ERROR');\n\nCREATE TABLE \"MessageDefinition\" (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(50) UNIQUE NOT NULL,\n    category VARCHAR(30) NOT NULL,\n    type \"MessageType\" NOT NULL,\n    message_ja TEXT NOT NULL,\n    message_en TEXT,\n    description TEXT,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_msg_def_code ON \"MessageDefinition\"(code);\nCREATE INDEX idx_msg_def_category ON \"MessageDefinition\"(category);\nCREATE INDEX idx_msg_def_type ON \"MessageDefinition\"(type);"
            ],
            [
              "sql",
              "CREATE TABLE \"SystemMessage\" (\n    id SERIAL PRIMARY KEY,\n    definition_id INTEGER NOT NULL REFERENCES \"MessageDefinition\"(id),\n    user_id INTEGER REFERENCES \"User\"(id),\n    custom_message TEXT,\n    context JSONB,\n    is_read BOOLEAN DEFAULT false,\n    created_at TIMESTAMP(3) DEFAULT CURRENT_TIMESTAMP,\n    read_at TIMESTAMP(3)\n);\n\nCREATE INDEX idx_sys_msg_definition ON \"SystemMessage\"(definition_id);\nCREATE INDEX idx_sys_msg_user ON \"SystemMessage\"(user_id);\nCREATE INDEX idx_sys_msg_read ON \"SystemMessage\"(is_read);\nCREATE INDEX idx_sys_msg_created ON \"SystemMessage\"(created_at DESC);"
            ],
            [
              "sql",
              "-- デフォルト会社\nINSERT INTO \"Company\" (code, name, is_active) VALUES\n('DEFAULT', 'システム管理会社', true);\n\n-- デフォルト部署\nINSERT INTO \"Department\" (company_id, code, name, level, path) VALUES\n(1, 'SYSTEM', 'システム管理部', 1, '/1');\n\n-- システム管理者\nINSERT INTO \"User\" (username, email, password, name, company_id, primary_department_id, role) VALUES\n('admin', 'admin@websys.local', '$2a$12$hashed_password', 'システム管理者', 1, 1, 'ADMIN');"
            ],
            [
              "sql",
              "-- 機能カテゴリ\nINSERT INTO \"Feature\" (code, name, description, category, display_order) VALUES\n('USER_MGMT', 'ユーザー管理', 'ユーザーの登録・編集・削除', 'SYSTEM', 10),\n('DEPT_MGMT', '部署管理', '部署の登録・編集・削除', 'SYSTEM', 20),\n('COMPANY_MGMT', '会社管理', '会社情報の管理', 'SYSTEM', 30),\n('PERMISSION_MGMT', '権限管理', '権限の設定・管理', 'SYSTEM', 40),\n('LOG_MGMT', 'ログ管理', 'システムログの閲覧・管理', 'SYSTEM', 50),\n('DASHBOARD', 'ダッシュボード', 'システム状況の確認', 'GENERAL', 60);"
            ],
            [
              "sql",
              "INSERT INTO \"LogCategory\" (code, name, description, color) VALUES\n('AUTH', '認証', '認証関連のログ', '#ff6b6b'),\n('API', 'API', 'API呼び出しログ', '#4ecdc4'),\n('DB', 'データベース', 'データベース操作ログ', '#45b7d1'),\n('SEC', 'セキュリティ', 'セキュリティ関連ログ', '#f9ca24'),\n('SYS', 'システム', 'システム動作ログ', '#6c5ce7'),\n('USER', 'ユーザー操作', 'ユーザー操作ログ', '#a29bfe');"
            ],
            [
              "sql",
              "INSERT INTO \"MessageDefinition\" (code, category, type, message_ja, message_en) VALUES\n('AUTH_001', 'authentication', 'ERROR', 'ユーザー名またはパスワードが正しくありません', 'Invalid username or password'),\n('AUTH_002', 'authentication', 'INFO', 'ログインしました', 'Logged in successfully'),\n('USER_001', 'user', 'SUCCESS', 'ユーザーを作成しました', 'User created successfully'),\n('USER_002', 'user', 'ERROR', 'ユーザー名が既に使用されています', 'Username already exists'),\n('PERM_001', 'permission', 'ERROR', 'この操作を実行する権限がありません', 'Permission denied'),\n('SYS_001', 'system', 'ERROR', 'システムエラーが発生しました', 'System error occurred');"
            ],
            [
              "sql",
              "-- 古いログの自動削除関数\nCREATE OR REPLACE FUNCTION cleanup_old_logs()\nRETURNS void AS $$\nBEGIN\n    -- 1年以上前のログエントリを削除\n    DELETE FROM \"LogEntry\"\n    WHERE timestamp < CURRENT_DATE - INTERVAL '1 year';\n\n    -- 2年以上前の監査ログを削除\n    DELETE FROM \"AuditLog\"\n    WHERE created_at < CURRENT_DATE - INTERVAL '2 years';\n\n    -- 6ヶ月以上前の読み済みシステムメッセージを削除\n    DELETE FROM \"SystemMessage\"\n    WHERE is_read = true\n    AND read_at < CURRENT_DATE - INTERVAL '6 months';\nEND;\n$$ LANGUAGE plpgsql;"
            ],
            [
              "sql",
              "-- 読み取り専用ユーザー\nCREATE ROLE readonly_user;\nGRANT CONNECT ON DATABASE websys_db TO readonly_user;\nGRANT USAGE ON SCHEMA public TO readonly_user;\nGRANT SELECT ON ALL TABLES IN SCHEMA public TO readonly_user;\n\n-- アプリケーションユーザー\nCREATE ROLE app_user;\nGRANT CONNECT ON DATABASE websys_db TO app_user;\nGRANT USAGE ON SCHEMA public TO app_user;\nGRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA public TO app_user;\nGRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO app_user;"
            ],
            [
              "sql",
              "-- 会社データの分離\nALTER TABLE \"User\" ENABLE ROW LEVEL SECURITY;\n\nCREATE POLICY user_company_policy ON \"User\"\n    FOR ALL TO app_user\n    USING (company_id = current_setting('app.current_company_id')::int);"
            ],
            [
              "bash",
              "# 日次フルバックアップ\npg_dump -h localhost -p 5433 -U admin websys_db | gzip > backup_$(date +%Y%m%d).sql.gz\n\n# 差分バックアップ（WALファイル）\npg_receivewal -h localhost -p 5433 -U replication -D /backup/wal/"
            ],
            [
              "sql",
              "-- 統計情報の更新\nANALYZE;\n\n-- 不要な領域の回収\nVACUUM;\n\n-- インデックスの再構築\nREINDEX INDEX CONCURRENTLY idx_user_email;"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 9.8,
        "sentences": 40,
        "avg_words_per_sentence": 53.73,
        "long_sentences": 17,
        "readability_level": "読みにくい"
      },
      "structure_score": 57,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 48.24
    },
    "docs/reviews/20250120/Phase3B段階的改修完了報告.md": {
      "basic_metrics": {
        "lines": 212,
        "words": 548,
        "characters": 4884,
        "avg_line_length": 23.037735849056602
      },
      "structure_analysis": {
        "headers": {
          "total": 30,
          "hierarchy": [
            {
              "level": 1,
              "text": "Phase 3B 段階的改修完了報告",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実施期間",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施内容",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "✅ 1. 特殊コンポーネント実装完了（Phase 3A）",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "✅ 2. Dashboard.vue完全改修完了",
              "line_number": 34
            },
            {
              "level": 3,
              "text": "✅ 3. Users.vue部分改修完了",
              "line_number": 42
            },
            {
              "level": 3,
              "text": "✅ 4. Login.vue部分改修完了",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "✅ 5. Layout.vue分析完了",
              "line_number": 67
            },
            {
              "level": 2,
              "text": "📊 検証結果",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "フォントチェック",
              "line_number": 79
            },
            {
              "level": 3,
              "text": "Element Plus使用量チェック",
              "line_number": 88
            },
            {
              "level": 2,
              "text": "🎯 達成した目標",
              "line_number": 102
            },
            {
              "level": 3,
              "text": "Phase 3の成果",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "技術的成果",
              "line_number": 110
            },
            {
              "level": 2,
              "text": "🔍 現在の状況",
              "line_number": 116
            },
            {
              "level": 3,
              "text": "解決済み問題",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "残存問題（Phase 4で対応）",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "📈 品質指標の継続改善",
              "line_number": 130
            },
            {
              "level": 2,
              "text": "🚀 Phase 4への引き継ぎ",
              "line_number": 140
            },
            {
              "level": 3,
              "text": "優先実装項目",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "期待される効果（Phase 4完了時）",
              "line_number": 159
            },
            {
              "level": 2,
              "text": "🎖️ Phase 3B成功要因",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "戦略的アプローチ",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "技術的革新",
              "line_number": 172
            },
            {
              "level": 2,
              "text": "📝 Phase 4アクション計画",
              "line_number": 178
            },
            {
              "level": 3,
              "text": "即座開始項目",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "中期計画項目",
              "line_number": 185
            },
            {
              "level": 2,
              "text": "🏆 まとめ",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "重要な成果",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "累積効果",
              "line_number": 200
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 6,
          "languages": {
            "bash": 2
          },
          "details": [
            [
              "bash",
              "./tools/font-check.sh"
            ],
            [
              "bash",
              "./tools/check-element-usage.sh"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 7
        }
      },
      "readability": {
        "score": 96.14,
        "sentences": 70,
        "avg_words_per_sentence": 7.83,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 43.96,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 68.93
    },
    "docs/reviews/20250120/環境チェック詳細分析.md": {
      "basic_metrics": {
        "lines": 229,
        "words": 393,
        "characters": 3770,
        "avg_line_length": 16.46288209606987
      },
      "structure_analysis": {
        "headers": {
          "total": 42,
          "hierarchy": [
            {
              "level": 1,
              "text": "環境チェック詳細分析レポート",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実行日時",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 6
            },
            {
              "level": 2,
              "text": "🚨 重大な問題点（即座対応必要）",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "1. ユニバーサルデザイン違反",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "2. Element Plus直接使用（開発ガイドライン違反）",
              "line_number": 26
            },
            {
              "level": 4,
              "text": "`workspace/frontend/src/views/Dashboard.vue`",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "`workspace/frontend/src/App.vue`",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "他のファイルでも同様の違反が確認",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "3. 共通コンポーネントライブラリ未実装",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "⚠️ 中程度の問題点",
              "line_number": 66
            },
            {
              "level": 3,
              "text": "4. package.json依存関係の不整合",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "5. npmスクリプトの不足",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "6. 共通テーマライブラリの未適用",
              "line_number": 104
            },
            {
              "level": 2,
              "text": "✅ 良好な点",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "1. 基盤構造",
              "line_number": 113
            },
            {
              "level": 3,
              "text": "2. 開発環境",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "3. ドキュメント",
              "line_number": 123
            },
            {
              "level": 2,
              "text": "具体的な修正が必要な箇所",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "Element Plus使用箇所一覧",
              "line_number": 130
            },
            {
              "level": 1,
              "text": "Dashboard.vue: 27箇所",
              "line_number": 132
            },
            {
              "level": 1,
              "text": "Users.vue: 推定15箇所",
              "line_number": 136
            },
            {
              "level": 1,
              "text": "Login.vue: 推定10箇所",
              "line_number": 139
            },
            {
              "level": 1,
              "text": "Layout.vue: 推定20箇所",
              "line_number": 142
            },
            {
              "level": 1,
              "text": "App.vue: 1箇所",
              "line_number": 145
            },
            {
              "level": 3,
              "text": "フォント適用箇所",
              "line_number": 149
            },
            {
              "level": 2,
              "text": "影響度分析",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "高影響（システム全体）",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "中影響（開発効率）",
              "line_number": 161
            },
            {
              "level": 3,
              "text": "低影響（将来課題）",
              "line_number": 165
            },
            {
              "level": 2,
              "text": "修正の緊急度",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "🔴 緊急（24時間以内）",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "🟡 重要（1週間以内）",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "🟢 改善（2週間以内）",
              "line_number": 180
            },
            {
              "level": 2,
              "text": "技術的負債の評価",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "累積技術的負債",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "解決コスト見積もり",
              "line_number": 192
            },
            {
              "level": 2,
              "text": "次のアクション",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "即座実行項目",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "計画実行項目",
              "line_number": 205
            },
            {
              "level": 3,
              "text": "長期改善項目",
              "line_number": 210
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 215
            }
          ],
          "hierarchy_issues": [
            {
              "line": 149,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 31,
          "languages": {
            "css": 2,
            "json": 2,
            "bash": 1
          },
          "details": [
            [
              "css",
              "font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"element-plus\": \"^2.5.1\",  // 直接使用は禁止\n    \"@element-plus/icons-vue\": \"^2.3.1\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-components\": \"workspace:*\",\n    \"@company/shared-theme\": \"workspace:*\"\n  }\n}"
            ],
            [
              "bash",
              "# Dashboard.vue: 27箇所\nel-row, el-col, el-card, el-statistic, el-table,\nel-table-column, el-tag, el-button, el-progress\n\n# Users.vue: 推定15箇所\nel-table, el-table-column, el-button, el-input, el-select\n\n# Login.vue: 推定10箇所\nel-form, el-form-item, el-input, el-button, el-card\n\n# Layout.vue: 推定20箇所\nel-container, el-header, el-aside, el-main, el-menu\n\n# App.vue: 1箇所\nel-config-provider"
            ],
            [
              "css",
              "/* 現在の問題箇所 */\nworkspace/frontend/src/App.vue:23"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.86,
        "sentences": 56,
        "avg_words_per_sentence": 7.02,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 44.86,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.8
    },
    "docs/reviews/20250120/Phase2重要修正完了報告.md": {
      "basic_metrics": {
        "lines": 264,
        "words": 607,
        "characters": 5576,
        "avg_line_length": 21.12121212121212
      },
      "structure_analysis": {
        "headers": {
          "total": 31,
          "hierarchy": [
            {
              "level": 1,
              "text": "Phase 2 重要修正完了報告",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実施期間",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施内容",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "✅ 1. CommonCard実装（レスポンシブ対応）",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "✅ 2. CommonTable実装（モバイルレイアウト）",
              "line_number": 32
            },
            {
              "level": 3,
              "text": "✅ 3. CommonTag実装（バリアント対応）",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "✅ 4. CommonRow/Col実装（グリッドシステム）",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "✅ 5. 共通コンポーネントエクスポート更新",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "✅ 6. Dashboard.vue 大幅改修",
              "line_number": 109
            },
            {
              "level": 2,
              "text": "📊 検証結果",
              "line_number": 141
            },
            {
              "level": 3,
              "text": "フォントチェック",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "Element Plus使用量チェック",
              "line_number": 152
            },
            {
              "level": 2,
              "text": "🎯 達成した目標",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "Phase 2の成果",
              "line_number": 167
            },
            {
              "level": 3,
              "text": "技術的革新",
              "line_number": 173
            },
            {
              "level": 2,
              "text": "🔍 現在の状況",
              "line_number": 179
            },
            {
              "level": 3,
              "text": "解決済み問題",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "残存問題（Phase 3で対応）",
              "line_number": 187
            },
            {
              "level": 2,
              "text": "📈 品質指標の大幅改善",
              "line_number": 192
            },
            {
              "level": 2,
              "text": "🚀 Phase 3への引き継ぎ",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "優先実装項目",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "期待される効果（Phase 3完了時）",
              "line_number": 210
            },
            {
              "level": 2,
              "text": "🎖️ Phase 2成功要因",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "戦略的アプローチ",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "技術的成果",
              "line_number": 223
            },
            {
              "level": 2,
              "text": "📝 今後のアクション",
              "line_number": 229
            },
            {
              "level": 3,
              "text": "即座開始項目（Phase 3）",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "中長期計画項目（Phase 4）",
              "line_number": 236
            },
            {
              "level": 2,
              "text": "🏆 まとめ",
              "line_number": 242
            },
            {
              "level": 3,
              "text": "重要な成果",
              "line_number": 246
            },
            {
              "level": 3,
              "text": "技術革新",
              "line_number": 252
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 8,
          "inline_code": 24,
          "languages": {
            "css": 2,
            "vue": 2,
            "typescript": 2,
            "bash": 2
          },
          "details": [
            [
              "css",
              "/* タッチ最適化 */\nmin-height: 44px;\n\n/* モバイル対応フォントサイズ */\nfont-size: 14px; /* mobile */\nfont-size: 15px; /* tablet */\nfont-size: 18px; /* desktop stat cards */"
            ],
            [
              "vue",
              "<!-- デスクトップ: 通常のテーブル -->\n<el-table :data=\"data\">\n  <slot />\n</el-table>\n\n<!-- モバイル: カードレイアウト -->\n<div class=\"mobile-card-layout\">\n  <div v-for=\"item in data\" class=\"mobile-card-item\">\n    <slot name=\"mobile-card\" :row=\"item\" :index=\"index\">\n      <!-- 自動フィールド表示 -->\n    </slot>\n  </div>\n</div>"
            ],
            [
              "css",
              "/* モバイル最小サイズ */\nmin-height: 36px;\nmin-width: 36px;\npadding: 6px 12px;"
            ],
            [
              "typescript",
              "const computedGutter = computed(() => {\n  if (isMobile.value) return props.mobileGutter    // 12px\n  if (isTablet.value) return props.tabletGutter    // 16px\n  return props.gutter                              // 20px\n})"
            ],
            [
              "typescript",
              "export {\n  CommonButton,\n  CommonCard,    // 新規\n  CommonTable,   // 新規\n  CommonTag,     // 新規\n  CommonRow,     // 新規\n  CommonCol      // 新規\n}"
            ],
            [
              "vue",
              "<!-- 修正前: Element Plus直接使用 -->\n<el-row :gutter=\"20\">\n  <el-col :span=\"6\">\n    <el-card shadow=\"hover\">\n      <el-statistic title=\"総ユーザー数\" :value=\"168\" />\n    </el-card>\n  </el-col>\n</el-row>\n\n<!-- 修正後: 共通コンポーネント使用 -->\n<CommonRow :gutter=\"20\">\n  <CommonCol :span=\"6\">\n    <CommonCard variant=\"stat\" shadow=\"hover\">\n      <el-statistic title=\"総ユーザー数\" :value=\"168\" />\n    </CommonCard>\n  </CommonCol>\n</CommonRow>"
            ],
            [
              "bash",
              "./tools/font-check.sh"
            ],
            [
              "bash",
              "./tools/check-element-usage.sh"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 6
        }
      },
      "readability": {
        "score": 96.25,
        "sentences": 80,
        "avg_words_per_sentence": 7.59,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 54.14,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.03
    },
    "docs/reviews/20250120/Phase1緊急修正完了報告.md": {
      "basic_metrics": {
        "lines": 206,
        "words": 476,
        "characters": 4027,
        "avg_line_length": 19.54854368932039
      },
      "structure_analysis": {
        "headers": {
          "total": 30,
          "hierarchy": [
            {
              "level": 1,
              "text": "Phase 1 緊急修正完了報告",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実施期間",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施内容",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "✅ 1. UDゴシックフォント適用",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "✅ 2. 共通コンポーネントライブラリ最小実装",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "✅ 3. 依存関係設定",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "✅ 4. Dashboard.vue サンプル修正",
              "line_number": 65
            },
            {
              "level": 2,
              "text": "📊 検証結果",
              "line_number": 85
            },
            {
              "level": 3,
              "text": "フォントチェック",
              "line_number": 87
            },
            {
              "level": 3,
              "text": "Element Plus使用量チェック",
              "line_number": 96
            },
            {
              "level": 2,
              "text": "🎯 達成した目標",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "緊急修正の成果",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "アクセシビリティ向上",
              "line_number": 113
            },
            {
              "level": 2,
              "text": "🔍 現在の状況",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "解決済み問題",
              "line_number": 120
            },
            {
              "level": 3,
              "text": "残存問題（Phase 2で対応）",
              "line_number": 125
            },
            {
              "level": 2,
              "text": "🚀 Phase 2への引き継ぎ",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "優先実装項目",
              "line_number": 132
            },
            {
              "level": 3,
              "text": "置換対象ファイル",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "期待される効果",
              "line_number": 145
            },
            {
              "level": 2,
              "text": "🎖️ 成功要因",
              "line_number": 150
            },
            {
              "level": 3,
              "text": "段階的アプローチ",
              "line_number": 152
            },
            {
              "level": 3,
              "text": "技術的成果",
              "line_number": 158
            },
            {
              "level": 2,
              "text": "📝 次のアクション",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "即座開始項目（Phase 2）",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "中期計画項目（Phase 3）",
              "line_number": 171
            },
            {
              "level": 2,
              "text": "📈 品質指標の改善",
              "line_number": 176
            },
            {
              "level": 2,
              "text": "🏆 まとめ",
              "line_number": 185
            },
            {
              "level": 3,
              "text": "重要な成果",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "期待される長期効果",
              "line_number": 195
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 6,
          "inline_code": 26,
          "languages": {
            "css": 1,
            "json": 1,
            "vue": 2,
            "bash": 2
          },
          "details": [
            [
              "css",
              "/* 修正前 */\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n\n/* 修正後 */\nfont-family:\n  \"UD Digi Kyokasho NP-R\",    /* UDデジタル教科書体 */\n  \"UD Digi Kyokasho N-R\",     /* UDデジタル教科書体 */\n  \"BIZ UDPGothic\",            /* BIZ UDPゴシック */\n  \"BIZ UDGothic\",             /* BIZ UDゴシック */\n  \"Hiragino Kaku Gothic ProN\", /* ヒラギノ角ゴ ProN */\n  \"Noto Sans CJK JP\",         /* Noto Sans CJK JP */\n  \"Meiryo\",                   /* メイリオ */\n  sans-serif;\nfont-size: 16px;              /* アクセシブルな最小サイズ */\nline-height: 1.6;             /* 読みやすい行間 */"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-components\": \"file:../../packages/shared-components\",\n    \"@company/shared-theme\": \"file:../../packages/shared-theme\"\n  }\n}"
            ],
            [
              "vue",
              "<el-button type=\"primary\" :icon=\"Plus\" @click=\"handleNewUser\">\n  新規ユーザー追加\n</el-button>"
            ],
            [
              "vue",
              "<CommonButton variant=\"primary\" responsive touch-optimized @on-click=\"handleNewUser\">\n  <template #prefix>\n    <Plus />\n  </template>\n  新規ユーザー追加\n</CommonButton>"
            ],
            [
              "bash",
              "./tools/font-check.sh"
            ],
            [
              "bash",
              "./tools/check-element-usage.sh"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 6
        }
      },
      "readability": {
        "score": 96.95,
        "sentences": 59,
        "avg_words_per_sentence": 8.07,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 51.519999999999996,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.19
    },
    "docs/reviews/20250120/Phase4最終改修完了報告.md": {
      "basic_metrics": {
        "lines": 296,
        "words": 683,
        "characters": 6081,
        "avg_line_length": 20.54391891891892
      },
      "structure_analysis": {
        "headers": {
          "total": 33,
          "hierarchy": [
            {
              "level": 1,
              "text": "Phase 4 最終改修完了報告",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実施期間",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 実施内容",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "✅ 1. フォーム系コンポーネント群実装完了",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "✅ 2. CommonForm実装（包括的フォーム機能）",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "✅ 3. CommonFormItem実装（高度なフォーム項目）",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "✅ 4. CommonInput実装（多様な入力フィールド）",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "✅ 5. CommonSelect + CommonOption実装（高機能選択）",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "✅ 6. CommonSwitch実装（スマートスイッチ）",
              "line_number": 98
            },
            {
              "level": 3,
              "text": "✅ 7. Users.vue部分改修実施",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "✅ 8. 共通コンポーネントエクスポート更新",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "📊 検証結果",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "フォントチェック",
              "line_number": 138
            },
            {
              "level": 3,
              "text": "Element Plus使用量チェック",
              "line_number": 147
            },
            {
              "level": 2,
              "text": "🎯 達成した目標",
              "line_number": 161
            },
            {
              "level": 3,
              "text": "Phase 4の成果",
              "line_number": 163
            },
            {
              "level": 3,
              "text": "技術的革新",
              "line_number": 169
            },
            {
              "level": 2,
              "text": "🔍 現在の状況",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "解決済み問題",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "残存問題（今後の継続改善）",
              "line_number": 183
            },
            {
              "level": 2,
              "text": "📈 全Phase通算の品質指標改善",
              "line_number": 188
            },
            {
              "level": 2,
              "text": "🚀 今後の発展可能性",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "継続改善項目",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "期待される最終効果",
              "line_number": 220
            },
            {
              "level": 2,
              "text": "🎖️ Phase 4成功要因",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "戦略的アプローチ",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "技術的成果",
              "line_number": 233
            },
            {
              "level": 2,
              "text": "📝 プロジェクト全体の総括",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "4つのPhaseで達成した成果",
              "line_number": 241
            },
            {
              "level": 3,
              "text": "最終的な技術革新",
              "line_number": 265
            },
            {
              "level": 2,
              "text": "🏆 まとめ",
              "line_number": 272
            },
            {
              "level": 3,
              "text": "重要な成果",
              "line_number": 276
            },
            {
              "level": 3,
              "text": "プロジェクト全体の価値",
              "line_number": 282
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 8,
          "inline_code": 21,
          "languages": {
            "typescript": 3,
            "css": 3,
            "bash": 2
          },
          "details": [
            [
              "typescript",
              "const computedLabelPosition = computed((): LabelPosition => {\n  if (props.responsive) {\n    if (isMobile.value) return 'top'        // モバイル: 縦積み\n    if (isTablet.value) return 'top'        // タブレット: 縦積み\n  }\n  return props.labelPosition                // デスクトップ: 横並び\n})"
            ],
            [
              "css",
              ".common-form-item--floating .el-form-item__label {\n  position: absolute;\n  top: 50%;\n  left: 12px;\n  transform: translateY(-50%);\n  transition: all 0.2s ease;\n}"
            ],
            [
              "typescript",
              "const computedInputStyle = computed((): CSSProperties => {\n  if (props.responsive && props.touchOptimized && isMobile.value) {\n    return {\n      fontSize: '16px',     // iOS zoom防止\n      minHeight: '44px'     // タッチ最適化\n    }\n  }\n  return props.inputStyle\n})"
            ],
            [
              "css",
              "@media (max-width: 576px) {\n  .common-select-dropdown--mobile {\n    position: fixed !important;\n    left: 16px !important;\n    right: 16px !important;\n    width: auto !important;\n  }\n}"
            ],
            [
              "css",
              ".common-switch--touch-optimized .el-switch__core::before {\n  content: '';\n  position: absolute;\n  top: -12px; left: -12px; right: -12px; bottom: -12px;\n  /* 拡張タップ領域 */\n}"
            ],
            [
              "typescript",
              "export {\n  // 既存9個 +\n  CommonForm,\n  CommonFormItem,\n  CommonInput,\n  CommonSelect,\n  CommonOption,\n  CommonSwitch      // +6個 = 計15個\n}"
            ],
            [
              "bash",
              "./tools/font-check.sh"
            ],
            [
              "bash",
              "./tools/check-element-usage.sh"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 96.3,
        "sentences": 81,
        "avg_words_per_sentence": 8.43,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 55.66,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.65
    },
    "docs/reviews/20250120/実装チェックリストと検証手順.md": {
      "basic_metrics": {
        "lines": 583,
        "words": 1364,
        "characters": 8947,
        "avg_line_length": 15.34648370497427
      },
      "structure_analysis": {
        "headers": {
          "total": 162,
          "hierarchy": [
            {
              "level": 1,
              "text": "実装チェックリストと検証手順",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🔴 Phase 1: 緊急修正チェックリスト",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "1.1 UDゴシックフォント適用",
              "line_number": 9
            },
            {
              "level": 4,
              "text": "作業前チェック",
              "line_number": 11
            },
            {
              "level": 4,
              "text": "実装チェック",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "検証手順",
              "line_number": 21
            },
            {
              "level": 1,
              "text": "1. ブラウザでの確認",
              "line_number": 23
            },
            {
              "level": 1,
              "text": "2. 開発者ツールでフォント確認",
              "line_number": 27
            },
            {
              "level": 1,
              "text": "Elements > Computed > font-family で確認",
              "line_number": 28
            },
            {
              "level": 1,
              "text": "3. 複数ブラウザでの確認",
              "line_number": 30
            },
            {
              "level": 1,
              "text": "Chrome, Firefox, Safari で表示確認",
              "line_number": 31
            },
            {
              "level": 4,
              "text": "合格基準",
              "line_number": 34
            },
            {
              "level": 3,
              "text": "1.2 共通コンポーネントライブラリ最小実装",
              "line_number": 40
            },
            {
              "level": 4,
              "text": "作業前チェック",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "ディレクトリ作成チェック",
              "line_number": 47
            },
            {
              "level": 1,
              "text": "ディレクトリ構造確認",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "CommonButton実装チェック",
              "line_number": 71
            },
            {
              "level": 4,
              "text": "検証手順",
              "line_number": 78
            },
            {
              "level": 1,
              "text": "1. ビルド確認",
              "line_number": 80
            },
            {
              "level": 1,
              "text": "2. 型チェック",
              "line_number": 84
            },
            {
              "level": 1,
              "text": "3. 動作テスト",
              "line_number": 87
            },
            {
              "level": 4,
              "text": "合格基準",
              "line_number": 93
            },
            {
              "level": 3,
              "text": "1.3 Dashboard.vue サンプル修正",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "作業前チェック",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "実装チェック",
              "line_number": 107
            },
            {
              "level": 4,
              "text": "検証手順",
              "line_number": 113
            },
            {
              "level": 1,
              "text": "1. 構文チェック",
              "line_number": 115
            },
            {
              "level": 1,
              "text": "2. 動作確認",
              "line_number": 119
            },
            {
              "level": 1,
              "text": "ブラウザでDashboardページを表示",
              "line_number": 121
            },
            {
              "level": 1,
              "text": "3. 機能テスト",
              "line_number": 123
            },
            {
              "level": 1,
              "text": "修正したボタンをクリックして正常動作を確認",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "合格基準",
              "line_number": 127
            },
            {
              "level": 3,
              "text": "Phase 1 総合検証",
              "line_number": 134
            },
            {
              "level": 4,
              "text": "統合テスト手順",
              "line_number": 136
            },
            {
              "level": 1,
              "text": "1. 全体ビルド",
              "line_number": 138
            },
            {
              "level": 1,
              "text": "2. 型チェック",
              "line_number": 141
            },
            {
              "level": 1,
              "text": "3. リント",
              "line_number": 144
            },
            {
              "level": 1,
              "text": "4. E2Eテスト（基本機能）",
              "line_number": 147
            },
            {
              "level": 1,
              "text": "5. アクセシビリティ基本チェック",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "Phase 1 完了条件",
              "line_number": 154
            },
            {
              "level": 2,
              "text": "🟡 Phase 2: 重要修正チェックリスト",
              "line_number": 161
            },
            {
              "level": 3,
              "text": "2.1 共通コンポーネント完全実装",
              "line_number": 163
            },
            {
              "level": 4,
              "text": "CommonCard実装チェック",
              "line_number": 165
            },
            {
              "level": 4,
              "text": "CommonTable実装チェック",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "CommonTag実装チェック",
              "line_number": 177
            },
            {
              "level": 4,
              "text": "CommonRow/Col実装チェック",
              "line_number": 182
            },
            {
              "level": 4,
              "text": "検証手順",
              "line_number": 187
            },
            {
              "level": 1,
              "text": "各コンポーネントの単体テスト",
              "line_number": 189
            },
            {
              "level": 1,
              "text": "ビルド確認",
              "line_number": 193
            },
            {
              "level": 1,
              "text": "型チェック",
              "line_number": 196
            },
            {
              "level": 1,
              "text": "Storybook確認（実装済みの場合）",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "2.2 ファイル別置換チェック",
              "line_number": 203
            },
            {
              "level": 4,
              "text": "Dashboard.vue 完全置換",
              "line_number": 205
            },
            {
              "level": 4,
              "text": "Users.vue 置換チェック",
              "line_number": 215
            },
            {
              "level": 4,
              "text": "Login.vue 置換チェック",
              "line_number": 221
            },
            {
              "level": 4,
              "text": "Layout.vue 置換チェック",
              "line_number": 227
            },
            {
              "level": 4,
              "text": "置換検証手順",
              "line_number": 233
            },
            {
              "level": 1,
              "text": "Element Plus使用箇所確認",
              "line_number": 235
            },
            {
              "level": 1,
              "text": "期待値: 0件",
              "line_number": 238
            },
            {
              "level": 1,
              "text": "動作確認",
              "line_number": 240
            },
            {
              "level": 1,
              "text": "各ページの動作テスト",
              "line_number": 244
            },
            {
              "level": 1,
              "text": "1. Dashboard - 統計表示、テーブル表示、ボタン動作",
              "line_number": 245
            },
            {
              "level": 1,
              "text": "2. Users - ユーザー一覧、検索、操作",
              "line_number": 246
            },
            {
              "level": 1,
              "text": "3. Login - ログイン処理",
              "line_number": 247
            },
            {
              "level": 1,
              "text": "4. Layout - ナビゲーション、レスポンシブ",
              "line_number": 248
            },
            {
              "level": 3,
              "text": "2.3 依存関係整理チェック",
              "line_number": 251
            },
            {
              "level": 4,
              "text": "package.json修正確認",
              "line_number": 253
            },
            {
              "level": 1,
              "text": "フロントエンドの依存関係確認",
              "line_number": 255
            },
            {
              "level": 1,
              "text": "確認項目",
              "line_number": 258
            },
            {
              "level": 1,
              "text": "- element-plus が削除されている",
              "line_number": 259
            },
            {
              "level": 1,
              "text": "- @company/shared-components が追加されている",
              "line_number": 260
            },
            {
              "level": 1,
              "text": "- @company/shared-theme が追加されている",
              "line_number": 261
            },
            {
              "level": 4,
              "text": "期待される依存関係",
              "line_number": 264
            },
            {
              "level": 4,
              "text": "検証手順",
              "line_number": 279
            },
            {
              "level": 1,
              "text": "依存関係インストール",
              "line_number": 281
            },
            {
              "level": 1,
              "text": "ビルド確認",
              "line_number": 285
            },
            {
              "level": 1,
              "text": "起動確認",
              "line_number": 288
            },
            {
              "level": 3,
              "text": "Phase 2 総合検証",
              "line_number": 292
            },
            {
              "level": 4,
              "text": "Element Plus使用量測定",
              "line_number": 294
            },
            {
              "level": 1,
              "text": "自動チェックスクリプト作成",
              "line_number": 296
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 298
            },
            {
              "level": 4,
              "text": "Phase 2 完了条件",
              "line_number": 322
            },
            {
              "level": 2,
              "text": "🟢 Phase 3: 改善実装チェックリスト",
              "line_number": 329
            },
            {
              "level": 3,
              "text": "3.1 自動チェック機能",
              "line_number": 331
            },
            {
              "level": 4,
              "text": "ESLintルール設定チェック",
              "line_number": 333
            },
            {
              "level": 1,
              "text": "ESLint設定確認",
              "line_number": 335
            },
            {
              "level": 1,
              "text": "ルール動作確認",
              "line_number": 338
            },
            {
              "level": 1,
              "text": "期待値: Element Plus使用箇所でエラー",
              "line_number": 342
            },
            {
              "level": 4,
              "text": "カスタムルール実装チェック",
              "line_number": 345
            },
            {
              "level": 3,
              "text": "3.2 共通テーマライブラリ適用",
              "line_number": 350
            },
            {
              "level": 4,
              "text": "main.ts修正チェック",
              "line_number": 352
            },
            {
              "level": 1,
              "text": "main.tsの内容確認",
              "line_number": 354
            },
            {
              "level": 1,
              "text": "期待される内容:",
              "line_number": 357
            },
            {
              "level": 1,
              "text": "- @company/shared-theme のインポート",
              "line_number": 358
            },
            {
              "level": 1,
              "text": "- SharedComponents の使用",
              "line_number": 359
            },
            {
              "level": 1,
              "text": "- Element Plus直接インポートの削除",
              "line_number": 360
            },
            {
              "level": 4,
              "text": "テーマ適用確認",
              "line_number": 363
            },
            {
              "level": 1,
              "text": "ブラウザでテーマ確認",
              "line_number": 365
            },
            {
              "level": 1,
              "text": "開発者ツールでCSS変数確認",
              "line_number": 368
            },
            {
              "level": 1,
              "text": "--font-family-primary",
              "line_number": 369
            },
            {
              "level": 1,
              "text": "--font-size-accessible-min",
              "line_number": 370
            },
            {
              "level": 1,
              "text": "--color-primary",
              "line_number": 371
            },
            {
              "level": 3,
              "text": "3.3 CI/CD強化",
              "line_number": 374
            },
            {
              "level": 4,
              "text": "pre-commitフック動作確認",
              "line_number": 376
            },
            {
              "level": 1,
              "text": "フック設定確認",
              "line_number": 378
            },
            {
              "level": 1,
              "text": "フック動作テスト",
              "line_number": 381
            },
            {
              "level": 1,
              "text": "期待される動作:",
              "line_number": 385
            },
            {
              "level": 1,
              "text": "1. font-check実行",
              "line_number": 386
            },
            {
              "level": 1,
              "text": "2. component-check:strict実行",
              "line_number": 387
            },
            {
              "level": 1,
              "text": "3. type-check実行",
              "line_number": 388
            },
            {
              "level": 1,
              "text": "4. lint実行",
              "line_number": 389
            },
            {
              "level": 1,
              "text": "5. accessibility-check実行",
              "line_number": 390
            },
            {
              "level": 4,
              "text": "GitHub Actions動作確認",
              "line_number": 393
            },
            {
              "level": 1,
              "text": "workflow設定確認",
              "line_number": 395
            },
            {
              "level": 1,
              "text": "ローカルでの確認",
              "line_number": 398
            },
            {
              "level": 2,
              "text": "包括的検証手順",
              "line_number": 405
            },
            {
              "level": 3,
              "text": "最終統合テスト",
              "line_number": 407
            },
            {
              "level": 4,
              "text": "1. 機能テスト",
              "line_number": 409
            },
            {
              "level": 1,
              "text": "全機能の動作確認スクリプト",
              "line_number": 411
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 413
            },
            {
              "level": 4,
              "text": "2. ブラウザテスト",
              "line_number": 441
            },
            {
              "level": 4,
              "text": "3. アクセシビリティテスト",
              "line_number": 449
            },
            {
              "level": 1,
              "text": "アクセシビリティチェックツール",
              "line_number": 451
            },
            {
              "level": 1,
              "text": "各ページのテスト",
              "line_number": 454
            },
            {
              "level": 4,
              "text": "4. パフォーマンステスト",
              "line_number": 461
            },
            {
              "level": 1,
              "text": "Lighthouse CLI",
              "line_number": 463
            },
            {
              "level": 1,
              "text": "パフォーマンス測定",
              "line_number": 466
            },
            {
              "level": 1,
              "text": "期待値:",
              "line_number": 469
            },
            {
              "level": 1,
              "text": "Performance: 90+",
              "line_number": 470
            },
            {
              "level": 1,
              "text": "Accessibility: 90+",
              "line_number": 471
            },
            {
              "level": 1,
              "text": "Best Practices: 90+",
              "line_number": 472
            },
            {
              "level": 1,
              "text": "SEO: 90+",
              "line_number": 473
            },
            {
              "level": 3,
              "text": "品質メトリクス",
              "line_number": 476
            },
            {
              "level": 4,
              "text": "コード品質指標",
              "line_number": 478
            },
            {
              "level": 4,
              "text": "アクセシビリティ指標",
              "line_number": 484
            },
            {
              "level": 4,
              "text": "パフォーマンス指標",
              "line_number": 490
            },
            {
              "level": 2,
              "text": "トラブルシューティング",
              "line_number": 496
            },
            {
              "level": 3,
              "text": "よくある問題と対処法",
              "line_number": 498
            },
            {
              "level": 4,
              "text": "1. ビルドエラー",
              "line_number": 500
            },
            {
              "level": 1,
              "text": "依存関係の再インストール",
              "line_number": 502
            },
            {
              "level": 1,
              "text": "型定義の再生成",
              "line_number": 507
            },
            {
              "level": 4,
              "text": "2. スタイル適用されない",
              "line_number": 511
            },
            {
              "level": 1,
              "text": "CSS優先順位の確認",
              "line_number": 513
            },
            {
              "level": 1,
              "text": "開発者ツールでスタイル競合をチェック",
              "line_number": 514
            },
            {
              "level": 1,
              "text": "共通テーマの再ビルド",
              "line_number": 516
            },
            {
              "level": 4,
              "text": "3. コンポーネントが表示されない",
              "line_number": 521
            },
            {
              "level": 1,
              "text": "インポートパスの確認",
              "line_number": 523
            },
            {
              "level": 1,
              "text": "デフォルトエクスポートの確認",
              "line_number": 524
            },
            {
              "level": 1,
              "text": "名前付きエクスポートの確認",
              "line_number": 525
            },
            {
              "level": 3,
              "text": "エスカレーション基準",
              "line_number": 528
            },
            {
              "level": 4,
              "text": "即座エスカレーション",
              "line_number": 530
            },
            {
              "level": 4,
              "text": "1時間以内にエスカレーション",
              "line_number": 535
            },
            {
              "level": 2,
              "text": "完了報告書テンプレート",
              "line_number": 540
            },
            {
              "level": 3,
              "text": "Phase完了時の報告内容",
              "line_number": 542
            },
            {
              "level": 1,
              "text": "Phase [X] 完了報告",
              "line_number": 545
            },
            {
              "level": 2,
              "text": "実施期間",
              "line_number": 547
            },
            {
              "level": 2,
              "text": "成果物",
              "line_number": 551
            },
            {
              "level": 2,
              "text": "品質指標",
              "line_number": 556
            },
            {
              "level": 2,
              "text": "課題・リスク",
              "line_number": 562
            },
            {
              "level": 2,
              "text": "次フェーズへの推奨事項",
              "line_number": 566
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 571
            }
          ],
          "hierarchy_issues": [
            {
              "line": 34,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 71,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 93,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 127,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 154,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 203,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 251,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 264,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 292,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 322,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 345,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 363,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 374,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 393,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 441,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 461,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 476,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 511,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 521,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 528,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 24,
          "inline_code": 48,
          "languages": {
            "bash": 21,
            "json": 1,
            "markdown": 1
          },
          "details": [
            [
              "bash",
              "# 1. ブラウザでの確認\ncd workspace/frontend\nnpm run dev\n\n# 2. 開発者ツールでフォント確認\n# Elements > Computed > font-family で確認\n\n# 3. 複数ブラウザでの確認\n# Chrome, Firefox, Safari で表示確認"
            ],
            [
              "bash",
              "# ディレクトリ構造確認\ntree packages/shared-components"
            ],
            [
              "",
              "packages/shared-components/\n├── package.json\n├── src/\n│   ├── components/\n│   │   └── CommonButton/\n│   │       └── index.vue\n│   ├── composables/\n│   │   └── useResponsive.ts\n│   └── index.ts\n└── dist/"
            ],
            [
              "bash",
              "# 1. ビルド確認\ncd packages/shared-components\nnpm run build\n\n# 2. 型チェック\nnpm run type-check\n\n# 3. 動作テスト\ncd ../../workspace/frontend\nnpm install\nnpm run dev"
            ],
            [
              "bash",
              "# 1. 構文チェック\ncd workspace/frontend\nnpm run type-check\n\n# 2. 動作確認\nnpm run dev\n# ブラウザでDashboardページを表示\n\n# 3. 機能テスト\n# 修正したボタンをクリックして正常動作を確認"
            ],
            [
              "bash",
              "# 1. 全体ビルド\nnpm run build\n\n# 2. 型チェック\nnpm run type-check\n\n# 3. リント\nnpm run lint\n\n# 4. E2Eテスト（基本機能）\nnpm run test:e2e\n\n# 5. アクセシビリティ基本チェック\nnpm run accessibility-check"
            ],
            [
              "bash",
              "# 各コンポーネントの単体テスト\ncd packages/shared-components\nnpm run test\n\n# ビルド確認\nnpm run build\n\n# 型チェック\nnpm run type-check\n\n# Storybook確認（実装済みの場合）\nnpm run storybook"
            ],
            [
              "bash",
              "# Element Plus使用箇所確認\ngrep -r \"el-\" workspace/frontend/src/views/\n\n# 期待値: 0件\n\n# 動作確認\ncd workspace/frontend\nnpm run dev\n\n# 各ページの動作テスト\n# 1. Dashboard - 統計表示、テーブル表示、ボタン動作\n# 2. Users - ユーザー一覧、検索、操作\n# 3. Login - ログイン処理\n# 4. Layout - ナビゲーション、レスポンシブ"
            ],
            [
              "bash",
              "# フロントエンドの依存関係確認\ncat workspace/frontend/package.json\n\n# 確認項目\n# - element-plus が削除されている\n# - @company/shared-components が追加されている\n# - @company/shared-theme が追加されている"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-components\": \"workspace:*\",\n    \"@company/shared-theme\": \"workspace:*\",\n    \"@element-plus/icons-vue\": \"^2.3.1\",\n    \"vue\": \"^3.4.15\",\n    \"vue-router\": \"^4.2.5\",\n    \"pinia\": \"^2.1.7\",\n    \"axios\": \"^1.6.5\"\n  }\n}"
            ],
            [
              "bash",
              "# 依存関係インストール\ncd workspace/frontend\nnpm install\n\n# ビルド確認\nnpm run build\n\n# 起動確認\nnpm run dev"
            ],
            [
              "bash",
              "# 自動チェックスクリプト作成\ncat > tools/check-element-usage.sh << 'EOF'\n#!/bin/bash\necho \"=== Element Plus 直接使用チェック ===\"\necho \"対象ディレクトリ: workspace/frontend/src\"\necho \"\"\n\nVIOLATIONS=$(grep -r \"el-\" workspace/frontend/src/ --include=\"*.vue\" | wc -l)\necho \"違反件数: $VIOLATIONS\"\n\nif [ $VIOLATIONS -eq 0 ]; then\n    echo \"✅ Element Plus直接使用なし\"\n    exit 0\nelse\n    echo \"❌ Element Plus直接使用あり\"\n    echo \"\"\n    echo \"違反箇所:\"\n    grep -r \"el-\" workspace/frontend/src/ --include=\"*.vue\"\n    exit 1\nfi\nEOF\n\nchmod +x tools/check-element-usage.sh\n./tools/check-element-usage.sh"
            ],
            [
              "bash",
              "# ESLint設定確認\ncat .eslintrc.js\n\n# ルール動作確認\ncd workspace/frontend\nnpx eslint src/ --fix\n\n# 期待値: Element Plus使用箇所でエラー"
            ],
            [
              "bash",
              "# main.tsの内容確認\ncat workspace/frontend/src/main.ts\n\n# 期待される内容:\n# - @company/shared-theme のインポート\n# - SharedComponents の使用\n# - Element Plus直接インポートの削除"
            ],
            [
              "bash",
              "# ブラウザでテーマ確認\nnpm run dev\n\n# 開発者ツールでCSS変数確認\n# --font-family-primary\n# --font-size-accessible-min\n# --color-primary"
            ],
            [
              "bash",
              "# フック設定確認\ncat .husky/pre-commit\n\n# フック動作テスト\ngit add .\ngit commit -m \"test commit\"\n\n# 期待される動作:\n# 1. font-check実行\n# 2. component-check:strict実行\n# 3. type-check実行\n# 4. lint実行\n# 5. accessibility-check実行"
            ],
            [
              "bash",
              "# workflow設定確認\ncat .github/workflows/quality-gate.yml\n\n# ローカルでの確認\nnpm run component-check:strict\nnpm run font-check\nnpm run accessibility-check\nnpm run build"
            ],
            [
              "bash",
              "# 全機能の動作確認スクリプト\ncat > tools/functional-test.sh << 'EOF'\n#!/bin/bash\necho \"=== 機能テスト実行 ===\"\n\necho \"1. ビルドテスト\"\nnpm run build || exit 1\n\necho \"2. 型チェック\"\nnpm run type-check || exit 1\n\necho \"3. リント\"\nnpm run lint || exit 1\n\necho \"4. Element Plus使用チェック\"\n./tools/check-element-usage.sh || exit 1\n\necho \"5. フォントチェック\"\nnpm run font-check || exit 1\n\necho \"6. アクセシビリティチェック\"\nnpm run accessibility-check || exit 1\n\necho \"✅ すべてのテストがPASS\"\nEOF\n\nchmod +x tools/functional-test.sh\n./tools/functional-test.sh"
            ],
            [
              "bash",
              "# アクセシビリティチェックツール\nnpm install -g @axe-core/cli\n\n# 各ページのテスト\naxe http://localhost:3000/ --tags wcag2a,wcag2aa\naxe http://localhost:3000/dashboard --tags wcag2a,wcag2aa\naxe http://localhost:3000/users --tags wcag2a,wcag2aa\naxe http://localhost:3000/login --tags wcag2a,wcag2aa"
            ],
            [
              "bash",
              "# Lighthouse CLI\nnpm install -g lighthouse\n\n# パフォーマンス測定\nlighthouse http://localhost:3000/ --output=json --output-path=./performance-report.json\n\n# 期待値:\n# Performance: 90+\n# Accessibility: 90+\n# Best Practices: 90+\n# SEO: 90+"
            ],
            [
              "bash",
              "# 依存関係の再インストール\nrm -rf node_modules\nrm package-lock.json\nnpm install\n\n# 型定義の再生成\nnpm run type-check"
            ],
            [
              "bash",
              "# CSS優先順位の確認\n# 開発者ツールでスタイル競合をチェック\n\n# 共通テーマの再ビルド\ncd packages/shared-theme\nnpm run build"
            ],
            [
              "bash",
              "# インポートパスの確認\n# デフォルトエクスポートの確認\n# 名前付きエクスポートの確認"
            ],
            [
              "markdown",
              "# Phase [X] 完了報告\n\n## 実施期間\n開始: YYYY-MM-DD\n完了: YYYY-MM-DD\n\n## 成果物\n- [ ] 修正ファイル数: X件\n- [ ] 実装コンポーネント数: X個\n- [ ] Element Plus削減数: X箇所\n\n## 品質指標\n- [ ] ビルドエラー: 0件\n- [ ] TypeScriptエラー: 0件\n- [ ] ESLintエラー: 0件\n- [ ] テスト成功率: 100%\n\n## 課題・リスク\n- 発見された課題とその対処法\n- 次フェーズへの引き継ぎ事項\n\n## 次フェーズへの推奨事項\n- 優先対応項目\n- 注意事項"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 92.86,
        "sentences": 105,
        "avg_words_per_sentence": 12.99,
        "long_sentences": 25,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 0,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 50.36
    },
    "docs/reviews/20250120/優先度別対策計画.md": {
      "basic_metrics": {
        "lines": 626,
        "words": 1264,
        "characters": 11244,
        "avg_line_length": 17.961661341853034
      },
      "structure_analysis": {
        "headers": {
          "total": 55,
          "hierarchy": [
            {
              "level": 1,
              "text": "優先度別対策計画",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "実行計画概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🔴 Phase 1: 緊急修正（24-48時間）",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "目標",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "1.1 UDゴシックフォント適用（2時間）",
              "line_number": 16
            },
            {
              "level": 1,
              "text": "フォント確認用スクリプト実行",
              "line_number": 46
            },
            {
              "level": 3,
              "text": "1.2 共通コンポーネントライブラリの最小実装（6時間）",
              "line_number": 50
            },
            {
              "level": 4,
              "text": "1.2.1 ディレクトリ構造作成",
              "line_number": 54
            },
            {
              "level": 4,
              "text": "1.2.2 CommonButton実装",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "1.2.3 useResponsive composable実装",
              "line_number": 160
            },
            {
              "level": 4,
              "text": "1.2.4 package.json作成",
              "line_number": 195
            },
            {
              "level": 3,
              "text": "1.3 Dashboard.vueのサンプル修正（2時間）",
              "line_number": 223
            },
            {
              "level": 3,
              "text": "Phase 1 完了条件",
              "line_number": 252
            },
            {
              "level": 2,
              "text": "🟡 Phase 2: 重要修正（1週間）",
              "line_number": 260
            },
            {
              "level": 3,
              "text": "目標",
              "line_number": 262
            },
            {
              "level": 3,
              "text": "2.1 残り共通コンポーネント実装（16時間）",
              "line_number": 265
            },
            {
              "level": 4,
              "text": "優先実装リスト",
              "line_number": 267
            },
            {
              "level": 4,
              "text": "CommonCard実装例",
              "line_number": 273
            },
            {
              "level": 3,
              "text": "2.2 ファイル別置換計画（24時間）",
              "line_number": 351
            },
            {
              "level": 4,
              "text": "2.2.1 Dashboard.vue完全置換（6時間）",
              "line_number": 353
            },
            {
              "level": 4,
              "text": "2.2.2 Users.vue置換（6時間）",
              "line_number": 361
            },
            {
              "level": 4,
              "text": "2.2.3 Login.vue置換（6時間）",
              "line_number": 364
            },
            {
              "level": 4,
              "text": "2.2.4 Layout.vue置換（6時間）",
              "line_number": 367
            },
            {
              "level": 3,
              "text": "2.3 依存関係整理（4時間）",
              "line_number": 370
            },
            {
              "level": 4,
              "text": "frontend package.json修正",
              "line_number": 372
            },
            {
              "level": 3,
              "text": "Phase 2 完了条件",
              "line_number": 395
            },
            {
              "level": 2,
              "text": "🟢 Phase 3: 改善実装（1週間）",
              "line_number": 403
            },
            {
              "level": 3,
              "text": "目標",
              "line_number": 405
            },
            {
              "level": 3,
              "text": "3.1 自動チェック機能実装（8時間）",
              "line_number": 408
            },
            {
              "level": 4,
              "text": "ESLintルール追加",
              "line_number": 410
            },
            {
              "level": 4,
              "text": "カスタムESLintルール",
              "line_number": 437
            },
            {
              "level": 3,
              "text": "3.2 共通テーマライブラリ適用（4時間）",
              "line_number": 465
            },
            {
              "level": 4,
              "text": "main.tsで共通テーマ適用",
              "line_number": 467
            },
            {
              "level": 3,
              "text": "3.3 CI/CD強化（8時間）",
              "line_number": 493
            },
            {
              "level": 4,
              "text": "pre-commitフック",
              "line_number": 495
            },
            {
              "level": 1,
              "text": "!/bin/sh",
              "line_number": 500
            },
            {
              "level": 1,
              "text": "フォントチェック",
              "line_number": 501
            },
            {
              "level": 1,
              "text": "コンポーネント使用チェック",
              "line_number": 504
            },
            {
              "level": 1,
              "text": "型チェック",
              "line_number": 507
            },
            {
              "level": 1,
              "text": "リント",
              "line_number": 510
            },
            {
              "level": 1,
              "text": "アクセシビリティチェック",
              "line_number": 513
            },
            {
              "level": 4,
              "text": "GitHub Actions追加",
              "line_number": 517
            },
            {
              "level": 3,
              "text": "Phase 3 完了条件",
              "line_number": 551
            },
            {
              "level": 2,
              "text": "実行体制",
              "line_number": 559
            },
            {
              "level": 3,
              "text": "担当者配置",
              "line_number": 561
            },
            {
              "level": 3,
              "text": "進捗管理",
              "line_number": 570
            },
            {
              "level": 4,
              "text": "日次チェックポイント",
              "line_number": 572
            },
            {
              "level": 4,
              "text": "週次レビュー",
              "line_number": 578
            },
            {
              "level": 2,
              "text": "リスク管理",
              "line_number": 583
            },
            {
              "level": 3,
              "text": "高リスク",
              "line_number": 585
            },
            {
              "level": 3,
              "text": "中リスク",
              "line_number": 594
            },
            {
              "level": 2,
              "text": "成功指標",
              "line_number": 599
            },
            {
              "level": 3,
              "text": "定量指標",
              "line_number": 601
            },
            {
              "level": 3,
              "text": "定性指標",
              "line_number": 607
            },
            {
              "level": 2,
              "text": "まとめ",
              "line_number": 613
            }
          ],
          "hierarchy_issues": [
            {
              "line": 50,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 517,
              "issue": "見出しレベル4が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 17,
          "inline_code": 45,
          "languages": {
            "css": 2,
            "bash": 3,
            "vue": 4,
            "typescript": 2,
            "json": 3,
            "javascript": 2,
            "yaml": 1
          },
          "details": [
            [
              "css",
              "font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;"
            ],
            [
              "css",
              "/* UDゴシック優先のフォントスタック */\nfont-family:\n  \"UD Digi Kyokasho NP-R\",    /* UDデジタル教科書体 */\n  \"UD Digi Kyokasho N-R\",     /* UDデジタル教科書体 */\n  \"BIZ UDPGothic\",            /* BIZ UDPゴシック */\n  \"BIZ UDGothic\",             /* BIZ UDゴシック */\n  \"Hiragino Kaku Gothic ProN\", /* ヒラギノ角ゴ ProN */\n  \"Noto Sans CJK JP\",         /* Noto Sans CJK JP */\n  \"Meiryo\",                   /* メイリオ */\n  sans-serif;"
            ],
            [
              "bash",
              "# フォント確認用スクリプト実行\nnpm run font-check"
            ],
            [
              "bash",
              "mkdir -p packages/shared-components/src/components\nmkdir -p packages/shared-components/src/composables\nmkdir -p packages/shared-components/dist"
            ],
            [
              "vue",
              "<template>\n  <el-button\n    :type=\"elementVariant\"\n    :size=\"size\"\n    :loading=\"loading\"\n    :disabled=\"disabled\"\n    :class=\"buttonClasses\"\n    v-bind=\"$attrs\"\n    @click=\"handleClick\"\n  >\n    <slot />\n  </el-button>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { ElButton } from 'element-plus'\nimport { useResponsive } from '../../composables/useResponsive'\n\ninterface Props {\n  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger'\n  size?: 'small' | 'medium' | 'large'\n  loading?: boolean\n  disabled?: boolean\n  responsive?: boolean\n  touchOptimized?: boolean\n  fullWidthMobile?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  variant: 'primary',\n  size: 'medium',\n  loading: false,\n  disabled: false,\n  responsive: false,\n  touchOptimized: true,\n  fullWidthMobile: false\n})\n\nconst emit = defineEmits<{\n  'on-click': [event: MouseEvent]\n}>()\n\nconst { isMobile } = useResponsive()\n\nconst elementVariant = computed(() => {\n  const variantMap = {\n    primary: 'primary',\n    secondary: 'default',\n    success: 'success',\n    warning: 'warning',\n    danger: 'danger'\n  }\n  return variantMap[props.variant]\n})\n\nconst buttonClasses = computed(() => [\n  'common-button',\n  {\n    'common-button--responsive': props.responsive,\n    'common-button--touch-optimized': props.touchOptimized,\n    'common-button--full-width-mobile': props.fullWidthMobile && isMobile.value\n  }\n])\n\nconst handleClick = (event: MouseEvent) => {\n  emit('on-click', event)\n}\n</script>\n\n<style scoped>\n.common-button {\n  font-family: inherit; /* UDゴシック継承 */\n}\n\n.common-button--touch-optimized {\n  min-height: 44px;\n  min-width: 44px;\n}\n\n.common-button--full-width-mobile {\n  width: 100%;\n}\n\n@media (max-width: 768px) {\n  .common-button--responsive {\n    font-size: 16px; /* モバイルで読みやすいサイズ */\n    padding: 12px 16px;\n  }\n}\n</style>"
            ],
            [
              "typescript",
              "import { computed, ref } from 'vue'\nimport { useWindowSize } from '@vueuse/core'\n\nexport function useResponsive() {\n  const { width, height } = useWindowSize()\n\n  const isMobile = computed(() => width.value < 768)\n  const isTablet = computed(() => width.value >= 768 && width.value < 992)\n  const isDesktop = computed(() => width.value >= 992)\n\n  const currentBreakpoint = computed(() => {\n    if (width.value < 576) return 'xs'\n    if (width.value < 768) return 'sm'\n    if (width.value < 992) return 'md'\n    if (width.value < 1200) return 'lg'\n    if (width.value < 1920) return 'xl'\n    return 'xxl'\n  })\n\n  return {\n    width,\n    height,\n    isMobile,\n    isTablet,\n    isDesktop,\n    currentBreakpoint\n  }\n}"
            ],
            [
              "json",
              "{\n  \"name\": \"@company/shared-components\",\n  \"version\": \"1.0.0\",\n  \"main\": \"dist/index.js\",\n  \"module\": \"dist/index.esm.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"files\": [\"dist\"],\n  \"scripts\": {\n    \"build\": \"vite build\",\n    \"dev\": \"vite build --watch\"\n  },\n  \"dependencies\": {\n    \"vue\": \"^3.4.15\",\n    \"element-plus\": \"^2.5.1\",\n    \"@vueuse/core\": \"^10.7.1\"\n  },\n  \"devDependencies\": {\n    \"vite\": \"^5.0.11\",\n    \"typescript\": \"^5.3.3\"\n  }\n}"
            ],
            [
              "vue",
              "<el-button type=\"primary\" :icon=\"Plus\" @click=\"handleNewUser\">\n  新規ユーザー\n</el-button>"
            ],
            [
              "vue",
              "<CommonButton variant=\"primary\" @on-click=\"handleNewUser\">\n  <template #prefix>\n    <Plus />\n  </template>\n  新規ユーザー\n</CommonButton>"
            ],
            [
              "vue",
              "<template>\n  <el-card\n    :shadow=\"shadow\"\n    :class=\"cardClasses\"\n    v-bind=\"$attrs\"\n  >\n    <template #header v-if=\"$slots.header || title\">\n      <slot name=\"header\">\n        <div class=\"common-card__header\">\n          <h3 class=\"common-card__title\">{{ title }}</h3>\n        </div>\n      </slot>\n    </template>\n\n    <div class=\"common-card__body\">\n      <slot />\n    </div>\n\n    <template #footer v-if=\"$slots.footer\">\n      <div class=\"common-card__footer\">\n        <slot name=\"footer\" />\n      </div>\n    </template>\n  </el-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { ElCard } from 'element-plus'\nimport { useResponsive } from '../../composables/useResponsive'\n\ninterface Props {\n  title?: string\n  shadow?: 'always' | 'hover' | 'never'\n  bodyPadding?: string\n  headerPadding?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  shadow: 'hover'\n})\n\nconst { isMobile } = useResponsive()\n\nconst cardClasses = computed(() => [\n  'common-card',\n  {\n    'common-card--mobile': isMobile.value\n  }\n])\n</script>\n\n<style scoped>\n.common-card {\n  font-family: inherit;\n}\n\n.common-card__title {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n}\n\n@media (max-width: 768px) {\n  .common-card--mobile {\n    margin: 8px;\n  }\n\n  .common-card__title {\n    font-size: 16px;\n  }\n}\n</style>"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"element-plus\": \"^2.5.1\",\n    \"@element-plus/icons-vue\": \"^2.3.1\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"dependencies\": {\n    \"@company/shared-components\": \"workspace:*\",\n    \"@company/shared-theme\": \"workspace:*\",\n    \"@element-plus/icons-vue\": \"^2.3.1\"\n  }\n}"
            ],
            [
              "javascript",
              "module.exports = {\n  rules: {\n    // Element Plus直接使用を禁止\n    'no-restricted-imports': [\n      'error',\n      {\n        'paths': [\n          {\n            'name': 'element-plus',\n            'importNames': [\n              'ElButton', 'ElCard', 'ElTable', 'ElTag',\n              'ElRow', 'ElCol', 'ElForm', 'ElInput'\n            ],\n            'message': '@company/shared-componentsを使用してください'\n          }\n        ]\n      }\n    ]\n  }\n}"
            ],
            [
              "javascript",
              "module.exports = {\n  meta: {\n    type: 'problem',\n    docs: {\n      description: '共通コンポーネントの使用を強制',\n    },\n  },\n  create(context) {\n    return {\n      JSXElement(node) {\n        const elementName = node.openingElement.name.name\n        if (elementName && elementName.startsWith('el-')) {\n          context.report({\n            node,\n            message: `${elementName}の代わりに対応する共通コンポーネントを使用してください`\n          })\n        }\n      }\n    }\n  }\n}"
            ],
            [
              "typescript",
              "import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n\n// 共通テーマ適用\nimport '@company/shared-theme'\n// 共通コンポーネント\nimport SharedComponents from '@company/shared-components'\n\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\nconst pinia = createPinia()\n\napp.use(pinia)\napp.use(router)\napp.use(SharedComponents)\n\napp.mount('#app')"
            ],
            [
              "bash",
              "#!/bin/sh\n# フォントチェック\nnpm run font-check\n\n# コンポーネント使用チェック\nnpm run component-check:strict\n\n# 型チェック\nnpm run type-check\n\n# リント\nnpm run lint\n\n# アクセシビリティチェック\nnpm run accessibility-check"
            ],
            [
              "yaml",
              "name: Quality Gate\n\non: [push, pull_request]\n\njobs:\n  quality-check:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Component usage check\n        run: npm run component-check:strict\n\n      - name: Font check\n        run: npm run font-check\n\n      - name: Accessibility check\n        run: npm run accessibility-check\n\n      - name: Build check\n        run: npm run build"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 11
        }
      },
      "readability": {
        "score": 96.33,
        "sentences": 147,
        "avg_words_per_sentence": 8.6,
        "long_sentences": 18,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 58,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.6
    },
    "docs/01_機能設計書/03_ダッシュボード機能/ダッシュボード機能設計書.md": {
      "basic_metrics": {
        "lines": 237,
        "words": 745,
        "characters": 5203,
        "avg_line_length": 21.953586497890296
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "ダッシュボード機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "対象画面",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🏗️ システム構成",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "技術スタック",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "📊 画面構成",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "レイアウト設計",
              "line_number": 24
            },
            {
              "level": 2,
              "text": "📈 統計サマリー仕様",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "表示項目",
              "line_number": 58
            },
            {
              "level": 3,
              "text": "Statisticコンポーネント設計",
              "line_number": 66
            },
            {
              "level": 2,
              "text": "📋 アクティビティログ仕様",
              "line_number": 80
            },
            {
              "level": 3,
              "text": "表示項目",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "データ構造",
              "line_number": 90
            },
            {
              "level": 2,
              "text": "⚡ クイックアクション仕様",
              "line_number": 109
            },
            {
              "level": 3,
              "text": "アクションボタン",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "ボタン仕様",
              "line_number": 119
            },
            {
              "level": 2,
              "text": "🖥️ システム状態監視",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "監視項目",
              "line_number": 127
            },
            {
              "level": 3,
              "text": "プログレスバー仕様",
              "line_number": 135
            },
            {
              "level": 2,
              "text": "📱 レスポンシブ設計",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "ブレイクポイント対応",
              "line_number": 151
            },
            {
              "level": 3,
              "text": "レイアウト変更",
              "line_number": 156
            },
            {
              "level": 2,
              "text": "🔄 データ更新仕様",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "自動更新",
              "line_number": 176
            },
            {
              "level": 3,
              "text": "手動更新",
              "line_number": 181
            },
            {
              "level": 3,
              "text": "更新アニメーション",
              "line_number": 185
            },
            {
              "level": 2,
              "text": "🧪 テスト仕様",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "単体テスト",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "結合テスト",
              "line_number": 198
            },
            {
              "level": 3,
              "text": "パフォーマンステスト",
              "line_number": 203
            },
            {
              "level": 2,
              "text": "🚀 実装状況",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "完了済み",
              "line_number": 210
            },
            {
              "level": 3,
              "text": "今後の拡張",
              "line_number": 218
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 225
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 9,
          "languages": {
            "typescript": 3,
            "scss": 1
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────────────┐\n│                     統計サマリー                        │\n│ ┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐ │\n│ │総ユーザー│ │アクティブ│ │今日の訪問│ │処理済み  │ │\n│ │   数    │ │ユーザー  │ │   数    │ │タスク   │ │\n│ └─────────┘ └─────────┘ └─────────┘ └─────────┘ │\n├─────────────────────────────────────────────────────────┤\n│          最近のアクティビティ          │ クイックアクション │\n│ ┌─────────────────────────────────┐   │ ┌─────────────┐ │\n│ │時間  │ユーザー│アクション│ステータス│   │ │新規ユーザー │ │\n│ │10:30 │田中   │ログイン │成功     │   │ │追加        │ │\n│ │10:25 │山田   │データ更新│成功     │   │ ├─────────────┤ │\n│ │10:20 │鈴木   │ログアウト│成功     │   │ │データ      │ │\n│ └─────────────────────────────────┘   │ │エクスポート │ │\n│                                        │ ├─────────────┤ │\n│                                        │ │システム設定 │ │\n│                                        │ ├─────────────┤ │\n│                                        │ │レポート生成 │ │\n│                                        │ └─────────────┘ │\n│                                        ├─────────────────┤\n│                                        │  システム状態   │\n│                                        │ ┌─────────────┐ │\n│                                        │ │サーバー:正常│ │\n│                                        │ │DB:     正常│ │\n│                                        │ │メモリ: 45% │ │\n│                                        │ │CPU:   30% │ │\n│                                        │ └─────────────┘ │\n└─────────────────────────────────────────────────────────┘"
            ],
            [
              "typescript",
              "interface StatisticData {\n  title: string       // 項目名\n  value: number       // 数値\n  suffix?: string     // 単位（件、人、回など）\n  variant: string     // 表示スタイル\n  trend?: {           // トレンド情報（将来拡張）\n    direction: 'up' | 'down' | 'stable'\n    percentage: number\n  }\n}"
            ],
            [
              "typescript",
              "interface ActivityLog {\n  time: string          // 実行時刻\n  user: string          // ユーザー名\n  action: string        // 実行アクション\n  status: 'success' | 'warning' | 'error'  // ステータス\n}\n\nconst activityData: ActivityLog[] = [\n  {\n    time: '2025-01-20 10:30:00',\n    user: '田中太郎',\n    action: 'ユーザー「山田花子」を更新しました',\n    status: 'success'\n  }\n]"
            ],
            [
              "typescript",
              "interface SystemStatus {\n  memory: {\n    usage: number      // 使用率（0-100）\n    status: 'normal' | 'warning' | 'danger'\n  }\n  cpu: {\n    usage: number      // 使用率（0-100）\n    status: 'normal' | 'warning' | 'danger'\n  }\n}"
            ],
            [
              "scss",
              "// PC: 統計4列\n.stats-row {\n  .el-col { @media (min-width: 992px) { span: 6; } }\n}\n\n// タブレット: 統計2列\n.stats-row {\n  .el-col { @media (max-width: 991px) { span: 12; } }\n}\n\n// モバイル: 統計1列\n.stats-row {\n  .el-col { @media (max-width: 767px) { span: 24; } }\n}"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 24
        }
      },
      "readability": {
        "score": 17.14,
        "sentences": 14,
        "avg_words_per_sentence": 53.21,
        "long_sentences": 3,
        "readability_level": "読みにくい"
      },
      "structure_score": 59.9,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 51.6
    },
    "docs/01_機能設計書/10_テスト機能/README.md": {
      "basic_metrics": {
        "lines": 109,
        "words": 251,
        "characters": 1816,
        "avg_line_length": 16.660550458715598
      },
      "structure_analysis": {
        "headers": {
          "total": 21,
          "hierarchy": [
            {
              "level": 1,
              "text": "テスト機能",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🗂️ ディレクトリ構成",
              "line_number": 7
            },
            {
              "level": 2,
              "text": "🎯 主要機能",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "1. API接続テスト機能",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "2. CodePreview機能",
              "line_number": 29
            },
            {
              "level": 2,
              "text": "📊 実装状況",
              "line_number": 39
            },
            {
              "level": 2,
              "text": "🔧 技術仕様",
              "line_number": 46
            },
            {
              "level": 3,
              "text": "使用技術",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "対応言語（CodePreview）",
              "line_number": 55
            },
            {
              "level": 2,
              "text": "🚀 動作確認方法",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "前提条件",
              "line_number": 64
            },
            {
              "level": 1,
              "text": "開発環境起動",
              "line_number": 66
            },
            {
              "level": 1,
              "text": "フロントエンド起動",
              "line_number": 69
            },
            {
              "level": 1,
              "text": "バックエンド起動",
              "line_number": 73
            },
            {
              "level": 3,
              "text": "テスト実行",
              "line_number": 78
            },
            {
              "level": 2,
              "text": "📝 設計ドキュメント",
              "line_number": 82
            },
            {
              "level": 2,
              "text": "🔄 今後の拡張予定",
              "line_number": 87
            },
            {
              "level": 3,
              "text": "短期（1-2週間）",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "中期（1-2ヶ月）",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "長期（3ヶ月以上）",
              "line_number": 99
            }
          ],
          "hierarchy_issues": [
            {
              "line": 78,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 1,
          "internal": 1,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "API接続テスト機能設計書",
              "API接続テスト機能設計書.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 8,
          "languages": {
            "bash": 1
          },
          "details": [
            [
              "",
              "10_テスト機能/\n├── README.md                    # このファイル（テスト機能概要）\n├── API接続テスト機能設計書.md     # API接続テスト詳細仕様\n└── ../04_共通コンポーネント/\n    └── CodePreview機能詳細設計書.md  # CodePreview機能詳細仕様"
            ],
            [
              "bash",
              "# 開発環境起動\ndocker-compose up -d\n\n# フロントエンド起動\ncd workspace/frontend\nnpm run dev\n\n# バックエンド起動\ncd workspace/backend\nnpm run dev"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 4
        }
      },
      "readability": {
        "score": 92.5,
        "sentences": 20,
        "avg_words_per_sentence": 12.55,
        "long_sentences": 5,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 37.019999999999996,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 65.06
    },
    "docs/01_機能設計書/10_テスト機能/API接続テスト機能設計書.md": {
      "basic_metrics": {
        "lines": 261,
        "words": 635,
        "characters": 5270,
        "avg_line_length": 20.191570881226053
      },
      "structure_analysis": {
        "headers": {
          "total": 34,
          "hierarchy": [
            {
              "level": 1,
              "text": "API接続テスト機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 機能概要",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 機能目標",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "2. 画面設計",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2.1 画面構成",
              "line_number": 20
            },
            {
              "level": 3,
              "text": "2.2 操作フロー",
              "line_number": 43
            },
            {
              "level": 2,
              "text": "3. 技術仕様",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "3.1 使用技術",
              "line_number": 50
            },
            {
              "level": 3,
              "text": "3.2 テスト対象API",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "3.3 レスポンス処理",
              "line_number": 64
            },
            {
              "level": 2,
              "text": "4. 機能詳細",
              "line_number": 82
            },
            {
              "level": 3,
              "text": "4.1 ヘルスチェック機能",
              "line_number": 84
            },
            {
              "level": 3,
              "text": "4.2 認証テスト機能",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "4.3 ユーザー一覧取得機能",
              "line_number": 137
            },
            {
              "level": 2,
              "text": "5. UI/UX設計",
              "line_number": 170
            },
            {
              "level": 3,
              "text": "5.1 レスポンシブ対応",
              "line_number": 172
            },
            {
              "level": 3,
              "text": "5.2 アクセシビリティ",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "5.3 ユーザビリティ",
              "line_number": 183
            },
            {
              "level": 2,
              "text": "6. セキュリティ設計",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "6.1 認証情報の取り扱い",
              "line_number": 191
            },
            {
              "level": 3,
              "text": "6.2 API呼び出し制限",
              "line_number": 196
            },
            {
              "level": 2,
              "text": "7. テスト設計",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "7.1 単体テスト",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "7.2 結合テスト",
              "line_number": 208
            },
            {
              "level": 2,
              "text": "8. 運用設計",
              "line_number": 213
            },
            {
              "level": 3,
              "text": "8.1 監視項目",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "8.2 ログ管理",
              "line_number": 220
            },
            {
              "level": 2,
              "text": "9. 今後の拡張予定",
              "line_number": 225
            },
            {
              "level": 3,
              "text": "9.1 機能拡張",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "9.2 UI改善",
              "line_number": 233
            },
            {
              "level": 2,
              "text": "10. 実装状況",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "10.1 現在の実装状況",
              "line_number": 240
            },
            {
              "level": 3,
              "text": "10.2 動作確認",
              "line_number": 251
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 6,
          "inline_code": 22,
          "languages": {
            "typescript": 4,
            "bash": 1
          },
          "details": [
            [
              "",
              "+------------------------------------------+\n|        API接続テスト画面                    |\n+------------------------------------------+\n| [ヘルスチェック] [認証テスト] [ユーザー一覧取得] |\n+------------------------------------------+\n| 実行結果表示エリア                           |\n| ┌──────────────────────────────────────┐ |\n| │ ✅ API接続: 成功 (123ms)                 │ |\n| │ ✅ 認証: 成功                           │ |\n| │ ✅ データ取得: 3件                       │ |\n| └──────────────────────────────────────┘ |\n+------------------------------------------+\n| ログ表示エリア                             |\n| ┌──────────────────────────────────────┐ |\n| │ [2025-09-20 10:30:15] API呼び出し開始   │ |\n| │ [2025-09-20 10:30:15] トークン取得成功   │ |\n| │ [2025-09-20 10:30:15] ユーザー一覧取得完了│ |\n| └──────────────────────────────────────┘ |\n+------------------------------------------+"
            ],
            [
              "typescript",
              "interface TestResult {\n  success: boolean\n  message: string\n  duration?: number\n  data?: any\n  error?: string\n}\n\ninterface ApiTestState {\n  healthCheck: TestResult\n  authentication: TestResult\n  userFetch: TestResult\n  logs: string[]\n}"
            ],
            [
              "typescript",
              "const healthCheck = async (): Promise<TestResult> => {\n  const startTime = Date.now()\n  try {\n    const response = await api.get('/api/health')\n    const duration = Date.now() - startTime\n    return {\n      success: true,\n      message: `API接続成功 (${duration}ms)`,\n      duration,\n      data: response.data\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: 'API接続失敗',\n      error: error.message\n    }\n  }\n}"
            ],
            [
              "typescript",
              "const authenticationTest = async (): Promise<TestResult> => {\n  try {\n    const response = await api.post('/api/auth/login', {\n      username: 'admin',\n      password: 'admin123'\n    })\n\n    // トークンを一時的に保存（テスト用）\n    testToken.value = response.data.token\n\n    return {\n      success: true,\n      message: '認証成功',\n      data: {\n        user: response.data.user,\n        tokenLength: response.data.token.length\n      }\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: '認証失敗',\n      error: error.response?.data?.message || error.message\n    }\n  }\n}"
            ],
            [
              "typescript",
              "const userFetchTest = async (): Promise<TestResult> => {\n  if (!testToken.value) {\n    return {\n      success: false,\n      message: 'トークンが必要です',\n      error: '先に認証テストを実行してください'\n    }\n  }\n\n  try {\n    const response = await api.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${testToken.value}`\n      }\n    })\n\n    return {\n      success: true,\n      message: `ユーザー一覧取得成功 (${response.data.length}件)`,\n      data: response.data\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: 'ユーザー一覧取得失敗',\n      error: error.response?.data?.message || error.message\n    }\n  }\n}"
            ],
            [
              "bash",
              "✅ 基本機能実装完了\n✅ ヘルスチェック機能\n✅ 認証テスト機能\n✅ ユーザー一覧取得機能\n✅ レスポンシブUI対応\n✅ エラーハンドリング\n✅ ログ表示機能"
            ]
          ]
        },
        "tables": {
          "total": 5,
          "total_rows": 19
        }
      },
      "readability": {
        "score": 98.88,
        "sentences": 80,
        "avg_words_per_sentence": 7.94,
        "long_sentences": 3,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.7,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.24
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/データベース設計書.md": {
      "basic_metrics": {
        "lines": 1075,
        "words": 2931,
        "characters": 31518,
        "avg_line_length": 29.31906976744186
      },
      "structure_analysis": {
        "headers": {
          "total": 32,
          "hierarchy": [
            {
              "level": 1,
              "text": "申請・承認ワークフロー データベース設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 目次",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "1.1 設計方針",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "1.2 既存テーブル連携",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "1.3 新規追加テーブル",
              "line_number": 40
            },
            {
              "level": 2,
              "text": "2. ER図",
              "line_number": 51
            },
            {
              "level": 2,
              "text": "3. テーブル設計",
              "line_number": 107
            },
            {
              "level": 3,
              "text": "3.1 workflow_types（申請種別マスタ）",
              "line_number": 109
            },
            {
              "level": 3,
              "text": "3.2 approval_routes（承認ルートマスタ）",
              "line_number": 219
            },
            {
              "level": 3,
              "text": "3.3 workflow_requests（申請書）",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "3.4 approval_history（承認履歴）",
              "line_number": 393
            },
            {
              "level": 3,
              "text": "3.5 approval_delegates（代理承認設定）",
              "line_number": 448
            },
            {
              "level": 3,
              "text": "3.6 workflow_notifications（通知管理）",
              "line_number": 502
            },
            {
              "level": 3,
              "text": "3.7 workflow_attachments（添付ファイル管理）",
              "line_number": 577
            },
            {
              "level": 2,
              "text": "4. インデックス設計",
              "line_number": 654
            },
            {
              "level": 3,
              "text": "4.1 主要検索パターン別インデックス",
              "line_number": 656
            },
            {
              "level": 3,
              "text": "4.2 複合インデックス（性能重視）",
              "line_number": 722
            },
            {
              "level": 3,
              "text": "4.3 JSON列インデックス（GIN）",
              "line_number": 745
            },
            {
              "level": 2,
              "text": "5. 制約設計",
              "line_number": 763
            },
            {
              "level": 3,
              "text": "5.1 外部キー制約",
              "line_number": 765
            },
            {
              "level": 3,
              "text": "5.2 チェック制約",
              "line_number": 809
            },
            {
              "level": 3,
              "text": "5.3 データ整合性制約",
              "line_number": 837
            },
            {
              "level": 2,
              "text": "6. マイグレーション設計",
              "line_number": 866
            },
            {
              "level": 3,
              "text": "6.1 マイグレーション実行順序",
              "line_number": 868
            },
            {
              "level": 3,
              "text": "6.2 初期データ投入",
              "line_number": 884
            },
            {
              "level": 2,
              "text": "7. パフォーマンス考慮",
              "line_number": 990
            },
            {
              "level": 3,
              "text": "7.1 パーティション設計",
              "line_number": 992
            },
            {
              "level": 3,
              "text": "7.2 統計情報更新",
              "line_number": 1008
            },
            {
              "level": 3,
              "text": "7.3 クエリ最適化",
              "line_number": 1029
            },
            {
              "level": 2,
              "text": "📋 承認履歴",
              "line_number": 1058
            },
            {
              "level": 2,
              "text": "📚 関連文書",
              "line_number": 1066
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 2,
          "internal": 2,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "申請承認ワークフロー機能設計書",
              "申請承認ワークフロー機能設計書.md"
            ],
            [
              "申請承認ワークフロー機能設計書",
              "申請承認ワークフロー機能設計書.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 22,
          "inline_code": 50,
          "languages": {
            "sql": 20,
            "json": 2
          },
          "details": [
            [
              "sql",
              "-- 既存テーブルとの関連\nusers (id, username, email, name, company_id, department_id, role)\ncompanies (id, name, code)\ndepartments (id, name, company_id, parent_id)\nfeatures (id, name, code, category)"
            ],
            [
              "sql",
              "                    ┌─────────────┐\n                    │   users     │\n                    │   (既存)    │\n                    └──────┬──────┘\n                           │\n        ┌─────────────────┼─────────────────┐\n        │                 │                 │\n        ▼                 ▼                 ▼\n┌─────────────┐   ┌─────────────┐   ┌─────────────┐\n│ companies   │   │departments  │   │  features   │\n│   (既存)    │   │   (既存)    │   │   (既存)    │\n└──────┬──────┘   └──────┬──────┘   └─────────────┘\n       │                 │\n       │                 │\n       ▼                 ▼\n┌─────────────────────────────────────────────────┐\n│               workflow_types                    │\n│  - id, name, form_schema                       │\n│  - company_id, created_by                      │\n└─────────────────────┬───────────────────────────┘\n                      │\n                      ▼\n┌─────────────────────────────────────────────────┐\n│              approval_routes                    │\n│  - id, workflow_type_id                        │\n│  - department_id, route_definition             │\n└─────────────────────┬───────────────────────────┘\n                      │\n                      ▼\n┌─────────────────────────────────────────────────┐\n│             workflow_requests                   │\n│  - id, workflow_type_id, requester_id          │\n│  - form_data, status, current_step             │\n└─────────────────────┬───────────────────────────┘\n                      │\n        ┌─────────────┼─────────────┐\n        │             │             │\n        ▼             ▼             ▼\n┌─────────────┐ ┌─────────────┐ ┌─────────────┐\n│approval_    │ │workflow_    │ │workflow_    │\n│history      │ │attachments  │ │notifications│\n│             │ │             │ │             │\n└─────────────┘ └─────────────┘ └─────────────┘\n\n        ┌─────────────────────────────────────┐\n        │         approval_delegates          │\n        │  - user_id, delegate_id             │\n        │  - start_date, end_date             │\n        └─────────────────────────────────────┘"
            ],
            [
              "sql",
              "CREATE TABLE workflow_types (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(100) NOT NULL,                    -- 申請種別名（内部用）\n  display_name VARCHAR(100) NOT NULL,            -- 表示名（UI用）\n  description TEXT,                              -- 説明\n  category VARCHAR(50) DEFAULT 'GENERAL',        -- カテゴリ\n\n  -- フォーム定義\n  form_schema JSONB NOT NULL,                    -- 動的フォーム定義\n  validation_rules JSONB,                        -- バリデーションルール\n\n  -- UI設定\n  icon VARCHAR(50) DEFAULT 'Document',           -- アイコン名\n  color VARCHAR(20) DEFAULT '#409EFF',           -- テーマカラー\n  sort_order INTEGER DEFAULT 0,                 -- 表示順序\n\n  -- ファイル設定\n  is_file_required BOOLEAN DEFAULT false,        -- ファイル添付必須\n  max_file_size INTEGER DEFAULT 10485760,       -- 最大ファイルサイズ(10MB)\n  allowed_file_types TEXT DEFAULT 'pdf,doc,docx,xls,xlsx,jpg,png', -- 許可ファイル形式\n  max_file_count INTEGER DEFAULT 5,             -- 最大ファイル数\n\n  -- 業務設定\n  auto_approval_enabled BOOLEAN DEFAULT false,   -- 自動承認有効\n  auto_approval_conditions JSONB,               -- 自動承認条件\n  estimated_processing_days INTEGER DEFAULT 3,   -- 標準処理日数\n  urgent_processing_days INTEGER DEFAULT 1,      -- 緊急時処理日数\n\n  -- 通知設定\n  notification_template JSONB,                  -- 通知テンプレート\n  reminder_days INTEGER[] DEFAULT '{1,3,5}',    -- リマインダー日数\n\n  -- システム項目\n  is_active BOOLEAN DEFAULT true,\n  company_id INTEGER NOT NULL REFERENCES companies(id),\n  created_by INTEGER REFERENCES users(id),\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT workflow_types_company_name_unique\n    UNIQUE(company_id, name),\n  CONSTRAINT workflow_types_name_check\n    CHECK (LENGTH(name) >= 1),\n  CONSTRAINT workflow_types_file_size_check\n    CHECK (max_file_size > 0 AND max_file_size <= 104857600), -- 最大100MB\n  CONSTRAINT workflow_types_file_count_check\n    CHECK (max_file_count > 0 AND max_file_count <= 20)\n);\n\n-- コメント\nCOMMENT ON TABLE workflow_types IS '申請種別マスタテーブル';\nCOMMENT ON COLUMN workflow_types.form_schema IS '動的フォーム定義（JSON形式）';\nCOMMENT ON COLUMN workflow_types.validation_rules IS 'バリデーションルール（JSON形式）';\nCOMMENT ON COLUMN workflow_types.auto_approval_conditions IS '自動承認条件（JSON形式）';"
            ],
            [
              "json",
              "{\n  \"fields\": [\n    {\n      \"name\": \"startDate\",\n      \"type\": \"date\",\n      \"label\": \"開始日\",\n      \"required\": true,\n      \"validation\": {\n        \"min\": \"today\",\n        \"max\": \"today+365\"\n      }\n    },\n    {\n      \"name\": \"endDate\",\n      \"type\": \"date\",\n      \"label\": \"終了日\",\n      \"required\": true,\n      \"validation\": {\n        \"min\": \"{startDate}\",\n        \"max\": \"today+365\"\n      }\n    },\n    {\n      \"name\": \"reason\",\n      \"type\": \"textarea\",\n      \"label\": \"理由\",\n      \"required\": true,\n      \"validation\": {\n        \"maxLength\": 1000\n      }\n    },\n    {\n      \"name\": \"amount\",\n      \"type\": \"number\",\n      \"label\": \"金額\",\n      \"required\": false,\n      \"validation\": {\n        \"min\": 0,\n        \"max\": 1000000\n      }\n    }\n  ]\n}"
            ],
            [
              "sql",
              "CREATE TABLE approval_routes (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  workflow_type_id INTEGER NOT NULL REFERENCES workflow_types(id),\n  department_id INTEGER REFERENCES departments(id), -- NULL = 全部署共通\n  route_name VARCHAR(100) NOT NULL,                 -- ルート名\n\n  -- ルート定義\n  route_definition JSONB NOT NULL,                  -- 承認ルート定義\n  condition_rules JSONB,                            -- 条件分岐ルール\n\n  -- 設定\n  is_default BOOLEAN DEFAULT false,                 -- デフォルトルート\n  priority INTEGER DEFAULT 0,                      -- 優先度（高い順に適用）\n\n  -- メタデータ\n  description TEXT,                                 -- ルート説明\n  estimated_days INTEGER DEFAULT 3,                -- 予想処理日数\n\n  -- システム項目\n  is_active BOOLEAN DEFAULT true,\n  created_by INTEGER REFERENCES users(id),\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT approval_routes_type_dept_name_unique\n    UNIQUE(workflow_type_id, department_id, route_name),\n  CONSTRAINT approval_routes_priority_check\n    CHECK (priority >= 0)\n);\n\n-- コメント\nCOMMENT ON TABLE approval_routes IS '承認ルートマスタテーブル';\nCOMMENT ON COLUMN approval_routes.route_definition IS '承認ルート定義（JSON形式）';\nCOMMENT ON COLUMN approval_routes.condition_rules IS '条件分岐ルール（JSON形式）';"
            ],
            [
              "json",
              "{\n  \"steps\": [\n    {\n      \"stepNumber\": 1,\n      \"stepName\": \"直属上司承認\",\n      \"approverType\": \"DIRECT_MANAGER\",\n      \"approverIds\": [],\n      \"isParallel\": false,\n      \"timeoutDays\": 3,\n      \"isSkippable\": false,\n      \"skipConditions\": []\n    },\n    {\n      \"stepNumber\": 2,\n      \"stepName\": \"部門長承認\",\n      \"approverType\": \"DEPARTMENT_MANAGER\",\n      \"approverIds\": [],\n      \"isParallel\": false,\n      \"timeoutDays\": 3,\n      \"isSkippable\": true,\n      \"skipConditions\": [\n        {\n          \"field\": \"amount\",\n          \"operator\": \"<=\",\n          \"value\": 50000\n        }\n      ]\n    },\n    {\n      \"stepNumber\": 3,\n      \"stepName\": \"役員承認\",\n      \"approverType\": \"EXECUTIVE\",\n      \"approverIds\": [101, 102],\n      \"isParallel\": true,\n      \"timeoutDays\": 5,\n      \"isSkippable\": true,\n      \"skipConditions\": [\n        {\n          \"field\": \"amount\",\n          \"operator\": \"<=\",\n          \"value\": 100000\n        }\n      ]\n    }\n  ]\n}"
            ],
            [
              "sql",
              "CREATE TABLE workflow_requests (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  request_number VARCHAR(50) UNIQUE NOT NULL,       -- 申請番号\n  workflow_type_id INTEGER NOT NULL REFERENCES workflow_types(id),\n  requester_id INTEGER NOT NULL REFERENCES users(id),\n\n  -- 申請内容\n  title VARCHAR(200) NOT NULL,                      -- 申請タイトル\n  description TEXT,                                 -- 申請概要\n  form_data JSONB NOT NULL,                         -- 申請データ\n\n  -- ワークフロー状態\n  current_step INTEGER DEFAULT 0,                   -- 現在のステップ（0=下書き）\n  total_steps INTEGER DEFAULT 0,                    -- 総ステップ数\n  status VARCHAR(20) DEFAULT 'DRAFT',               -- ステータス\n  applied_route_id INTEGER REFERENCES approval_routes(id), -- 適用された承認ルート\n\n  -- メタデータ\n  urgency VARCHAR(10) DEFAULT 'NORMAL',             -- 緊急度\n  priority_score INTEGER DEFAULT 0,                -- 優先度スコア\n  estimated_amount DECIMAL(15,2),                   -- 概算金額\n  currency_code VARCHAR(3) DEFAULT 'JPY',           -- 通貨コード\n\n  -- 日付管理\n  due_date DATE,                                    -- 希望完了日\n  submitted_at TIMESTAMP,                           -- 申請提出日時\n  started_at TIMESTAMP,                             -- 承認開始日時\n  completed_at TIMESTAMP,                           -- 承認完了日時\n  cancelled_at TIMESTAMP,                           -- キャンセル日時\n\n  -- 処理結果\n  final_status VARCHAR(20),                         -- 最終ステータス\n  final_comment TEXT,                               -- 最終コメント\n  final_approver_id INTEGER REFERENCES users(id),   -- 最終承認者\n\n  -- 追加情報\n  tags VARCHAR(500),                                -- タグ（カンマ区切り）\n  reference_numbers VARCHAR(500),                   -- 関連番号\n  cancel_reason TEXT,                               -- キャンセル理由\n\n  -- 計算フィールド\n  processing_time INTERVAL,                         -- 処理時間\n  sla_deadline TIMESTAMP,                           -- SLA期限\n  is_overdue BOOLEAN GENERATED ALWAYS AS (\n    sla_deadline IS NOT NULL AND\n    sla_deadline < NOW() AND\n    status IN ('SUBMITTED', 'IN_PROGRESS')\n  ) STORED,                                         -- 期限超過フラグ\n\n  -- システム項目\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT workflow_requests_status_check\n    CHECK (status IN ('DRAFT', 'SUBMITTED', 'IN_PROGRESS', 'APPROVED', 'REJECTED', 'CANCELLED', 'WITHDRAWN')),\n  CONSTRAINT workflow_requests_urgency_check\n    CHECK (urgency IN ('LOW', 'NORMAL', 'HIGH', 'URGENT')),\n  CONSTRAINT workflow_requests_final_status_check\n    CHECK (final_status IS NULL OR final_status IN ('APPROVED', 'REJECTED', 'CANCELLED', 'WITHDRAWN')),\n  CONSTRAINT workflow_requests_step_check\n    CHECK (current_step >= 0 AND current_step <= total_steps),\n  CONSTRAINT workflow_requests_amount_check\n    CHECK (estimated_amount IS NULL OR estimated_amount >= 0),\n  CONSTRAINT workflow_requests_date_check\n    CHECK (due_date IS NULL OR due_date >= CURRENT_DATE)\n);\n\n-- コメント\nCOMMENT ON TABLE workflow_requests IS '申請書テーブル';\nCOMMENT ON COLUMN workflow_requests.form_data IS '申請データ（JSON形式）';\nCOMMENT ON COLUMN workflow_requests.priority_score IS '緊急度・金額等から算出される優先度';\nCOMMENT ON COLUMN workflow_requests.is_overdue IS 'SLA期限超過フラグ（計算列）';"
            ],
            [
              "sql",
              "CREATE TABLE approval_history (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  request_id INTEGER NOT NULL REFERENCES workflow_requests(id),\n  step_number INTEGER NOT NULL,                     -- ステップ番号\n  step_name VARCHAR(100) NOT NULL,                  -- ステップ名\n\n  -- 承認者情報\n  approver_id INTEGER NOT NULL REFERENCES users(id),\n  original_approver_id INTEGER REFERENCES users(id), -- 元の承認者（代理の場合）\n  approver_department_id INTEGER REFERENCES departments(id), -- 承認者所属部署\n\n  -- アクション\n  action VARCHAR(20) NOT NULL,                      -- アクション\n  decision_reason TEXT,                             -- 判断理由\n  comment TEXT,                                     -- コメント\n  recommendations TEXT,                             -- 推奨事項\n\n  -- 追加データ\n  additional_data JSONB,                            -- 追加データ\n  attachments JSONB,                                -- 承認時添付ファイル\n\n  -- メタデータ\n  processing_duration INTERVAL,                     -- 処理時間\n  decision_confidence INTEGER CHECK (decision_confidence BETWEEN 1 AND 5), -- 判断確信度\n  risk_assessment TEXT,                             -- リスク評価\n\n  -- 監査情報\n  ip_address INET,                                  -- IPアドレス\n  user_agent TEXT,                                  -- ユーザーエージェント\n  session_id VARCHAR(100),                          -- セッションID\n  device_info JSONB,                                -- デバイス情報\n  location_info JSONB,                              -- 位置情報\n\n  -- システム項目\n  created_at TIMESTAMP DEFAULT NOW(),               -- 承認日時\n\n  -- 制約\n  CONSTRAINT approval_history_action_check\n    CHECK (action IN ('APPROVE', 'REJECT', 'RETURN', 'DELEGATE', 'CANCEL', 'TIMEOUT', 'WITHDRAW')),\n  CONSTRAINT approval_history_step_check\n    CHECK (step_number > 0)\n);\n\n-- コメント\nCOMMENT ON TABLE approval_history IS '承認履歴テーブル';\nCOMMENT ON COLUMN approval_history.additional_data IS '承認時の追加データ（JSON形式）';\nCOMMENT ON COLUMN approval_history.decision_confidence IS '判断の確信度（1-5）';"
            ],
            [
              "sql",
              "CREATE TABLE approval_delegates (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  user_id INTEGER NOT NULL REFERENCES users(id),        -- 本人\n  delegate_id INTEGER NOT NULL REFERENCES users(id),    -- 代理人\n\n  -- 代理条件\n  workflow_type_ids INTEGER[] DEFAULT '{}',             -- 対象申請種別ID配列\n  department_ids INTEGER[] DEFAULT '{}',                -- 対象部署ID配列\n  max_amount DECIMAL(15,2),                             -- 代理承認上限金額\n  urgency_levels VARCHAR(50)[] DEFAULT '{NORMAL,HIGH,URGENT}', -- 対象緊急度\n\n  -- 期間設定\n  start_date DATE NOT NULL,                             -- 開始日\n  end_date DATE NOT NULL,                               -- 終了日\n  effective_hours JSONB,                                -- 有効時間帯\n\n  -- メタデータ\n  reason TEXT NOT NULL,                                 -- 代理理由\n  emergency_contact VARCHAR(200),                       -- 緊急連絡先\n  special_instructions TEXT,                            -- 特別指示\n\n  -- 制限設定\n  max_approvals_per_day INTEGER DEFAULT 50,            -- 1日最大承認数\n  requires_notification BOOLEAN DEFAULT true,           -- 本人通知必要\n  auto_delegation BOOLEAN DEFAULT false,                -- 自動代理実行\n\n  -- システム項目\n  is_active BOOLEAN DEFAULT true,\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT approval_delegates_date_check\n    CHECK (end_date >= start_date),\n  CONSTRAINT approval_delegates_different_users\n    CHECK (user_id != delegate_id),\n  CONSTRAINT approval_delegates_amount_check\n    CHECK (max_amount IS NULL OR max_amount >= 0),\n  CONSTRAINT approval_delegates_max_approvals_check\n    CHECK (max_approvals_per_day > 0)\n);\n\n-- コメント\nCOMMENT ON TABLE approval_delegates IS '代理承認設定テーブル';\nCOMMENT ON COLUMN approval_delegates.workflow_type_ids IS '対象申請種別ID配列（空配列=全種別）';\nCOMMENT ON COLUMN approval_delegates.effective_hours IS '有効時間帯設定（JSON形式）';"
            ],
            [
              "sql",
              "CREATE TABLE workflow_notifications (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  request_id INTEGER NOT NULL REFERENCES workflow_requests(id),\n  user_id INTEGER NOT NULL REFERENCES users(id),\n\n  -- 通知内容\n  notification_type VARCHAR(30) NOT NULL,              -- 通知種別\n  title VARCHAR(200) NOT NULL,                         -- 通知タイトル\n  message TEXT NOT NULL,                               -- 通知内容\n  action_url VARCHAR(500),                             -- アクションURL\n\n  -- 表示設定\n  priority_level INTEGER DEFAULT 3,                    -- 優先度（1-5）\n  display_duration INTEGER DEFAULT 5000,               -- 表示時間（ミリ秒）\n  icon VARCHAR(50),                                    -- アイコン\n  color VARCHAR(20),                                   -- カラー\n\n  -- 状態管理\n  is_read BOOLEAN DEFAULT false,                       -- 既読フラグ\n  read_at TIMESTAMP,                                   -- 既読日時\n  is_actionable BOOLEAN DEFAULT false,                 -- アクション可能\n  action_taken BOOLEAN DEFAULT false,                  -- アクション実行済み\n  action_taken_at TIMESTAMP,                           -- アクション実行日時\n\n  -- 配信チャネル\n  sent_in_app BOOLEAN DEFAULT true,                    -- アプリ内通知済み\n  sent_email BOOLEAN DEFAULT false,                    -- メール送信済み\n  sent_sms BOOLEAN DEFAULT false,                      -- SMS送信済み\n  sent_push BOOLEAN DEFAULT false,                     -- プッシュ通知済み\n\n  -- 配信日時\n  in_app_sent_at TIMESTAMP,                           -- アプリ内通知日時\n  email_sent_at TIMESTAMP,                             -- メール送信日時\n  sms_sent_at TIMESTAMP,                               -- SMS送信日時\n  push_sent_at TIMESTAMP,                              -- プッシュ通知日時\n\n  -- エラー管理\n  delivery_errors JSONB,                               -- 配信エラー情報\n  retry_count INTEGER DEFAULT 0,                      -- 再送回数\n  max_retries INTEGER DEFAULT 3,                      -- 最大再送回数\n\n  -- 期限管理\n  expires_at TIMESTAMP,                                -- 通知期限\n  is_expired BOOLEAN GENERATED ALWAYS AS (\n    expires_at IS NOT NULL AND expires_at < NOW()\n  ) STORED,                                           -- 期限切れフラグ\n\n  -- システム項目\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT workflow_notifications_type_check\n    CHECK (notification_type IN (\n      'SUBMITTED', 'APPROVAL_REQUIRED', 'APPROVED', 'REJECTED',\n      'RETURNED', 'CANCELLED', 'REMINDER', 'OVERDUE', 'DELEGATE_ASSIGNED'\n    )),\n  CONSTRAINT workflow_notifications_priority_check\n    CHECK (priority_level BETWEEN 1 AND 5),\n  CONSTRAINT workflow_notifications_retry_check\n    CHECK (retry_count >= 0 AND retry_count <= max_retries)\n);\n\n-- コメント\nCOMMENT ON TABLE workflow_notifications IS 'ワークフロー通知管理テーブル';\nCOMMENT ON COLUMN workflow_notifications.delivery_errors IS '配信エラー情報（JSON形式）';\nCOMMENT ON COLUMN workflow_notifications.is_expired IS '通知期限切れフラグ（計算列）';"
            ],
            [
              "sql",
              "CREATE TABLE workflow_attachments (\n  -- 基本項目\n  id SERIAL PRIMARY KEY,\n  request_id INTEGER NOT NULL REFERENCES workflow_requests(id),\n  approval_history_id INTEGER REFERENCES approval_history(id), -- 承認時添付の場合\n\n  -- ファイル情報\n  original_filename VARCHAR(255) NOT NULL,             -- 元ファイル名\n  stored_filename VARCHAR(255) NOT NULL,               -- 保存ファイル名\n  file_path VARCHAR(500) NOT NULL,                     -- ファイルパス\n  file_size BIGINT NOT NULL,                           -- ファイルサイズ（バイト）\n  mime_type VARCHAR(100) NOT NULL,                     -- MIMEタイプ\n  file_extension VARCHAR(10),                          -- ファイル拡張子\n\n  -- ファイル属性\n  file_category VARCHAR(50) DEFAULT 'DOCUMENT',        -- ファイルカテゴリ\n  file_description TEXT,                               -- ファイル説明\n  is_confidential BOOLEAN DEFAULT false,               -- 機密ファイル\n  access_level INTEGER DEFAULT 1,                     -- アクセスレベル（1-5）\n\n  -- セキュリティ\n  checksum VARCHAR(64) NOT NULL,                       -- ファイルチェックサム\n  encryption_key VARCHAR(100),                         -- 暗号化キー\n  is_encrypted BOOLEAN DEFAULT false,                  -- 暗号化済み\n  virus_scan_status VARCHAR(20) DEFAULT 'PENDING',     -- ウイルススキャン状態\n  virus_scan_result JSONB,                             -- スキャン結果詳細\n\n  -- メタデータ\n  uploaded_by INTEGER NOT NULL REFERENCES users(id),   -- アップロード者\n  upload_ip INET,                                      -- アップロード元IP\n  upload_user_agent TEXT,                              -- ユーザーエージェント\n\n  -- バージョン管理\n  version_number INTEGER DEFAULT 1,                    -- バージョン番号\n  parent_attachment_id INTEGER REFERENCES workflow_attachments(id), -- 親ファイル\n  is_latest_version BOOLEAN DEFAULT true,              -- 最新版フラグ\n\n  -- アクセス制御\n  download_count INTEGER DEFAULT 0,                    -- ダウンロード回数\n  last_accessed_at TIMESTAMP,                          -- 最終アクセス日時\n  last_accessed_by INTEGER REFERENCES users(id),       -- 最終アクセス者\n  access_log JSONB,                                    -- アクセスログ\n\n  -- 保存期間\n  retention_period INTEGER,                            -- 保存期間（日）\n  archive_date DATE,                                   -- アーカイブ予定日\n  deletion_date DATE,                                  -- 削除予定日\n  is_archived BOOLEAN DEFAULT false,                  -- アーカイブ済み\n\n  -- システム項目\n  created_at TIMESTAMP DEFAULT NOW(),\n  updated_at TIMESTAMP DEFAULT NOW(),\n\n  -- 制約\n  CONSTRAINT workflow_attachments_file_size_check\n    CHECK (file_size > 0 AND file_size <= 104857600), -- 最大100MB\n  CONSTRAINT workflow_attachments_access_level_check\n    CHECK (access_level BETWEEN 1 AND 5),\n  CONSTRAINT workflow_attachments_virus_scan_check\n    CHECK (virus_scan_status IN ('PENDING', 'CLEAN', 'INFECTED', 'ERROR')),\n  CONSTRAINT workflow_attachments_version_check\n    CHECK (version_number > 0)\n);\n\n-- コメント\nCOMMENT ON TABLE workflow_attachments IS 'ワークフロー添付ファイル管理テーブル';\nCOMMENT ON COLUMN workflow_attachments.checksum IS 'ファイル整合性チェック用ハッシュ値';\nCOMMENT ON COLUMN workflow_attachments.access_log IS 'ファイルアクセスログ（JSON形式）';"
            ],
            [
              "sql",
              "-- workflow_types関連\nCREATE INDEX idx_workflow_types_company_active\n  ON workflow_types(company_id, is_active);\nCREATE INDEX idx_workflow_types_category\n  ON workflow_types(category, sort_order);\n\n-- approval_routes関連\nCREATE INDEX idx_approval_routes_workflow_dept\n  ON approval_routes(workflow_type_id, department_id, is_active);\nCREATE INDEX idx_approval_routes_default\n  ON approval_routes(workflow_type_id, is_default)\n  WHERE is_active = true;\n\n-- workflow_requests関連（最重要）\nCREATE INDEX idx_workflow_requests_requester_status\n  ON workflow_requests(requester_id, status, created_at DESC);\nCREATE INDEX idx_workflow_requests_status_created\n  ON workflow_requests(status, created_at DESC)\n  WHERE status IN ('SUBMITTED', 'IN_PROGRESS');\nCREATE INDEX idx_workflow_requests_type_status\n  ON workflow_requests(workflow_type_id, status, created_at DESC);\nCREATE INDEX idx_workflow_requests_overdue\n  ON workflow_requests(sla_deadline, status)\n  WHERE is_overdue = true;\nCREATE INDEX idx_workflow_requests_approval_waiting\n  ON workflow_requests(current_step, status)\n  WHERE status = 'IN_PROGRESS';\n\n-- approval_history関連\nCREATE INDEX idx_approval_history_request_step\n  ON approval_history(request_id, step_number, created_at DESC);\nCREATE INDEX idx_approval_history_approver_date\n  ON approval_history(approver_id, created_at DESC);\nCREATE INDEX idx_approval_history_action_date\n  ON approval_history(action, created_at DESC);\n\n-- approval_delegates関連\nCREATE INDEX idx_approval_delegates_user_period\n  ON approval_delegates(user_id, start_date, end_date)\n  WHERE is_active = true;\nCREATE INDEX idx_approval_delegates_delegate_active\n  ON approval_delegates(delegate_id, start_date, end_date)\n  WHERE is_active = true;\n\n-- workflow_notifications関連\nCREATE INDEX idx_workflow_notifications_user_unread\n  ON workflow_notifications(user_id, is_read, created_at DESC);\nCREATE INDEX idx_workflow_notifications_request\n  ON workflow_notifications(request_id, created_at DESC);\nCREATE INDEX idx_workflow_notifications_expired\n  ON workflow_notifications(expires_at)\n  WHERE is_expired = false;\n\n-- workflow_attachments関連\nCREATE INDEX idx_workflow_attachments_request\n  ON workflow_attachments(request_id, created_at DESC);\nCREATE INDEX idx_workflow_attachments_approval\n  ON workflow_attachments(approval_history_id)\n  WHERE approval_history_id IS NOT NULL;\nCREATE INDEX idx_workflow_attachments_checksum\n  ON workflow_attachments(checksum);"
            ],
            [
              "sql",
              "-- 承認待ち検索用（最重要）\nCREATE INDEX idx_approval_waiting_complex\n  ON workflow_requests(status, current_step, urgency, created_at DESC)\n  WHERE status = 'IN_PROGRESS';\n\n-- 統計・レポート用\nCREATE INDEX idx_requests_stats\n  ON workflow_requests(workflow_type_id, status, DATE(created_at));\n\n-- 期限管理用\nCREATE INDEX idx_requests_sla\n  ON workflow_requests(sla_deadline, status, urgency)\n  WHERE status IN ('SUBMITTED', 'IN_PROGRESS');\n\n-- 代理承認判定用\nCREATE INDEX idx_delegates_lookup\n  ON approval_delegates(delegate_id, start_date, end_date, is_active)\n  WHERE is_active = true;"
            ],
            [
              "sql",
              "-- フォームデータ検索用\nCREATE INDEX idx_workflow_types_form_schema_gin\n  ON workflow_types USING gin(form_schema);\n\n-- 申請データ検索用\nCREATE INDEX idx_workflow_requests_form_data_gin\n  ON workflow_requests USING gin(form_data);\n\n-- 承認ルート検索用\nCREATE INDEX idx_approval_routes_definition_gin\n  ON approval_routes USING gin(route_definition);"
            ],
            [
              "sql",
              "-- workflow_types\nALTER TABLE workflow_types\n  ADD CONSTRAINT fk_workflow_types_company\n  FOREIGN KEY (company_id) REFERENCES companies(id) ON DELETE CASCADE;\n\nALTER TABLE workflow_types\n  ADD CONSTRAINT fk_workflow_types_creator\n  FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL;\n\n-- approval_routes\nALTER TABLE approval_routes\n  ADD CONSTRAINT fk_approval_routes_workflow_type\n  FOREIGN KEY (workflow_type_id) REFERENCES workflow_types(id) ON DELETE CASCADE;\n\nALTER TABLE approval_routes\n  ADD CONSTRAINT fk_approval_routes_department\n  FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE;\n\n-- workflow_requests\nALTER TABLE workflow_requests\n  ADD CONSTRAINT fk_workflow_requests_type\n  FOREIGN KEY (workflow_type_id) REFERENCES workflow_types(id) ON DELETE RESTRICT;\n\nALTER TABLE workflow_requests\n  ADD CONSTRAINT fk_workflow_requests_requester\n  FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE RESTRICT;\n\nALTER TABLE workflow_requests\n  ADD CONSTRAINT fk_workflow_requests_route\n  FOREIGN KEY (applied_route_id) REFERENCES approval_routes(id) ON DELETE SET NULL;\n\n-- approval_history\nALTER TABLE approval_history\n  ADD CONSTRAINT fk_approval_history_request\n  FOREIGN KEY (request_id) REFERENCES workflow_requests(id) ON DELETE CASCADE;\n\nALTER TABLE approval_history\n  ADD CONSTRAINT fk_approval_history_approver\n  FOREIGN KEY (approver_id) REFERENCES users(id) ON DELETE RESTRICT;"
            ],
            [
              "sql",
              "-- ステータス遷移制約\nCREATE OR REPLACE FUNCTION check_status_transition()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- 承認済み・却下・キャンセル後の変更禁止\n  IF OLD.status IN ('APPROVED', 'REJECTED', 'CANCELLED')\n     AND NEW.status != OLD.status THEN\n    RAISE EXCEPTION 'Cannot change status from % to %', OLD.status, NEW.status;\n  END IF;\n\n  -- 下書きから直接完了状態への遷移禁止\n  IF OLD.status = 'DRAFT' AND NEW.status IN ('APPROVED', 'REJECTED') THEN\n    RAISE EXCEPTION 'Cannot transition directly from DRAFT to %', NEW.status;\n  END IF;\n\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trigger_workflow_requests_status_transition\n  BEFORE UPDATE ON workflow_requests\n  FOR EACH ROW\n  EXECUTE FUNCTION check_status_transition();"
            ],
            [
              "sql",
              "-- 代理承認期間重複チェック\nCREATE OR REPLACE FUNCTION check_delegate_overlap()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF EXISTS (\n    SELECT 1 FROM approval_delegates\n    WHERE user_id = NEW.user_id\n      AND id != COALESCE(NEW.id, -1)\n      AND is_active = true\n      AND (start_date, end_date) OVERLAPS (NEW.start_date, NEW.end_date)\n  ) THEN\n    RAISE EXCEPTION 'Delegate period overlaps with existing delegation';\n  END IF;\n\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trigger_approval_delegates_overlap\n  BEFORE INSERT OR UPDATE ON approval_delegates\n  FOR EACH ROW\n  EXECUTE FUNCTION check_delegate_overlap();"
            ],
            [
              "sql",
              "-- 001_create_workflow_types.sql\n-- 002_create_approval_routes.sql\n-- 003_create_workflow_requests.sql\n-- 004_create_approval_history.sql\n-- 005_create_approval_delegates.sql\n-- 006_create_workflow_notifications.sql\n-- 007_create_workflow_attachments.sql\n-- 008_create_indexes.sql\n-- 009_create_constraints.sql\n-- 010_create_triggers.sql\n-- 011_insert_initial_data.sql"
            ],
            [
              "sql",
              "-- 基本的な申請種別\nINSERT INTO workflow_types (\n  name, display_name, description, form_schema,\n  company_id, created_by, is_active\n) VALUES\n-- 有給申請\n(\n  'paid_leave', '有給申請', '有給休暇の申請',\n  '{\n    \"fields\": [\n      {\n        \"name\": \"startDate\",\n        \"type\": \"date\",\n        \"label\": \"開始日\",\n        \"required\": true\n      },\n      {\n        \"name\": \"endDate\",\n        \"type\": \"date\",\n        \"label\": \"終了日\",\n        \"required\": true\n      },\n      {\n        \"name\": \"reason\",\n        \"type\": \"textarea\",\n        \"label\": \"理由\",\n        \"required\": true\n      }\n    ]\n  }',\n  1, 1, true\n),\n-- 出張申請\n(\n  'business_trip', '出張申請', '出張の申請',\n  '{\n    \"fields\": [\n      {\n        \"name\": \"destination\",\n        \"type\": \"text\",\n        \"label\": \"出張先\",\n        \"required\": true\n      },\n      {\n        \"name\": \"purpose\",\n        \"type\": \"textarea\",\n        \"label\": \"目的\",\n        \"required\": true\n      },\n      {\n        \"name\": \"estimatedCost\",\n        \"type\": \"number\",\n        \"label\": \"概算費用\",\n        \"required\": true\n      }\n    ]\n  }',\n  1, 1, true\n);\n\n-- 基本的な承認ルート\nINSERT INTO approval_routes (\n  workflow_type_id, route_name, route_definition,\n  is_default, created_by\n) VALUES\n(\n  1, '有給申請_標準ルート',\n  '{\n    \"steps\": [\n      {\n        \"stepNumber\": 1,\n        \"stepName\": \"直属上司承認\",\n        \"approverType\": \"DIRECT_MANAGER\",\n        \"timeoutDays\": 3\n      }\n    ]\n  }',\n  true, 1\n),\n(\n  2, '出張申請_標準ルート',\n  '{\n    \"steps\": [\n      {\n        \"stepNumber\": 1,\n        \"stepName\": \"直属上司承認\",\n        \"approverType\": \"DIRECT_MANAGER\",\n        \"timeoutDays\": 3\n      },\n      {\n        \"stepNumber\": 2,\n        \"stepName\": \"部門長承認\",\n        \"approverType\": \"DEPARTMENT_MANAGER\",\n        \"timeoutDays\": 3\n      }\n    ]\n  }',\n  true, 1\n);"
            ],
            [
              "sql",
              "-- 大量データ対応：日付ベースパーティション\nCREATE TABLE workflow_requests_partitioned (\n  LIKE workflow_requests INCLUDING ALL\n) PARTITION BY RANGE (created_at);\n\n-- 月別パーティション\nCREATE TABLE workflow_requests_2025_01 PARTITION OF workflow_requests_partitioned\n  FOR VALUES FROM ('2025-01-01') TO ('2025-02-01');\n\nCREATE TABLE workflow_requests_2025_02 PARTITION OF workflow_requests_partitioned\n  FOR VALUES FROM ('2025-02-01') TO ('2025-03-01');"
            ],
            [
              "sql",
              "-- 定期的な統計情報更新\nCREATE OR REPLACE FUNCTION update_workflow_statistics()\nRETURNS void AS $$\nBEGIN\n  -- テーブル統計更新\n  ANALYZE workflow_requests;\n  ANALYZE approval_history;\n  ANALYZE workflow_notifications;\n\n  -- カスタム統計の更新\n  REFRESH MATERIALIZED VIEW IF EXISTS workflow_summary_stats;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- 定期実行スケジュール（cron等で実行）\n-- 0 2 * * * psql -d database -c \"SELECT update_workflow_statistics();\""
            ],
            [
              "sql",
              "-- よく使用されるクエリの最適化\n-- 承認待ち一覧（最重要）\nEXPLAIN (ANALYZE, BUFFERS)\nSELECT\n  wr.id, wr.request_number, wr.title, wr.urgency,\n  wt.display_name, wt.icon,\n  u.name as requester_name,\n  wr.created_at\nFROM workflow_requests wr\nJOIN workflow_types wt ON wr.workflow_type_id = wt.id\nJOIN users u ON wr.requester_id = u.id\nWHERE wr.status = 'IN_PROGRESS'\n  AND wr.current_step = 2\nORDER BY\n  CASE wr.urgency\n    WHEN 'URGENT' THEN 1\n    WHEN 'HIGH' THEN 2\n    WHEN 'NORMAL' THEN 3\n    WHEN 'LOW' THEN 4\n  END,\n  wr.created_at\nLIMIT 50;"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 3
        }
      },
      "readability": {
        "score": 71.5,
        "sentences": 112,
        "avg_words_per_sentence": 26.17,
        "long_sentences": 23,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 66,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.35
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/機能間連携承認システム設計書.md": {
      "basic_metrics": {
        "lines": 667,
        "words": 1494,
        "characters": 18247,
        "avg_line_length": 27.356821589205396
      },
      "structure_analysis": {
        "headers": {
          "total": 29,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能間連携承認システム設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 承認対象機能の分析",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "2.1 既存機能の承認レベル分類",
              "line_number": 9
            },
            {
              "level": 2,
              "text": "3. 承認制御システム設計",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "3.1 承認ポリシー管理テーブル",
              "line_number": 28
            },
            {
              "level": 3,
              "text": "3.2 承認ポリシー設定例",
              "line_number": 56
            },
            {
              "level": 2,
              "text": "4. 承認制御エンジン",
              "line_number": 111
            },
            {
              "level": 3,
              "text": "4.1 承認判定サービス",
              "line_number": 113
            },
            {
              "level": 2,
              "text": "5. 既存機能への統合",
              "line_number": 259
            },
            {
              "level": 3,
              "text": "5.1 承認統合デコレーター",
              "line_number": 261
            },
            {
              "level": 3,
              "text": "5.2 承認完了時の自動実行",
              "line_number": 327
            },
            {
              "level": 2,
              "text": "6. 一時操作管理",
              "line_number": 394
            },
            {
              "level": 3,
              "text": "6.1 一時操作テーブル",
              "line_number": 396
            },
            {
              "level": 2,
              "text": "7. 設定画面での承認ポリシー管理",
              "line_number": 418
            },
            {
              "level": 3,
              "text": "7.1 承認ポリシー設定UI",
              "line_number": 420
            },
            {
              "level": 2,
              "text": "8. 承認状況の可視化",
              "line_number": 468
            },
            {
              "level": 3,
              "text": "8.1 承認ダッシュボード",
              "line_number": 470
            },
            {
              "level": 2,
              "text": "9. 高度な承認制御",
              "line_number": 508
            },
            {
              "level": 3,
              "text": "9.1 時間ベース承認",
              "line_number": 510
            },
            {
              "level": 3,
              "text": "9.2 金額ベース段階承認",
              "line_number": 528
            },
            {
              "level": 3,
              "text": "9.3 リスクベース承認",
              "line_number": 558
            },
            {
              "level": 2,
              "text": "10. パフォーマンス最適化",
              "line_number": 584
            },
            {
              "level": 3,
              "text": "10.1 承認ポリシーキャッシュ",
              "line_number": 586
            },
            {
              "level": 2,
              "text": "11. 監査とコンプライアンス",
              "line_number": 611
            },
            {
              "level": 3,
              "text": "11.1 承認操作の完全監査",
              "line_number": 613
            },
            {
              "level": 2,
              "text": "12. まとめ",
              "line_number": 642
            },
            {
              "level": 3,
              "text": "✅ 実現可能な機能",
              "line_number": 646
            },
            {
              "level": 3,
              "text": "🚀 導入効果",
              "line_number": 655
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 13,
          "inline_code": 27,
          "languages": {
            "sql": 2,
            "json": 1,
            "typescript": 8,
            "vue": 2
          },
          "details": [
            [
              "sql",
              "-- 承認ポリシー定義テーブル\nCREATE TABLE approval_policies (\n    id SERIAL PRIMARY KEY,\n    feature_code VARCHAR(50) NOT NULL,  -- 機能コード\n    action_type VARCHAR(50) NOT NULL,   -- CREATE, UPDATE, DELETE, EXPORT等\n    policy_name VARCHAR(100) NOT NULL,\n    is_approval_required BOOLEAN DEFAULT false,\n    conditions JSON,                     -- 承認が必要な条件\n    workflow_type_id INT,               -- 使用するワークフロー\n    bypass_roles JSON,                  -- 承認をバイパスできる役割\n    company_id INT,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    FOREIGN KEY (workflow_type_id) REFERENCES workflow_types(id),\n    FOREIGN KEY (company_id) REFERENCES companies(id),\n    UNIQUE(company_id, feature_code, action_type)\n);\n\n-- インデックス\nCREATE INDEX idx_approval_policies_feature ON approval_policies(feature_code, action_type);\nCREATE INDEX idx_approval_policies_company ON approval_policies(company_id);"
            ],
            [
              "json",
              "[\n  {\n    \"feature_code\": \"USER_MANAGEMENT\",\n    \"action_type\": \"CREATE\",\n    \"policy_name\": \"ユーザー追加承認\",\n    \"is_approval_required\": true,\n    \"conditions\": {},\n    \"workflow_type_id\": 1,\n    \"bypass_roles\": [\"SUPER_ADMIN\"]\n  },\n  {\n    \"feature_code\": \"USER_MANAGEMENT\",\n    \"action_type\": \"UPDATE\",\n    \"policy_name\": \"ユーザー情報変更承認\",\n    \"is_approval_required\": true,\n    \"conditions\": {\n      \"require_approval_when\": [\n        {\"field\": \"role\", \"change_type\": \"upgrade\"},\n        {\"field\": \"permissions\", \"change_type\": \"expand\"}\n      ]\n    },\n    \"workflow_type_id\": 1,\n    \"bypass_roles\": [\"ADMIN\"]\n  },\n  {\n    \"feature_code\": \"DEPARTMENT_MANAGEMENT\",\n    \"action_type\": \"DELETE\",\n    \"policy_name\": \"部署削除承認\",\n    \"is_approval_required\": true,\n    \"conditions\": {\n      \"require_approval_when\": [\n        {\"field\": \"has_users\", \"operator\": \"greater_than\", \"value\": 0}\n      ]\n    },\n    \"workflow_type_id\": 2\n  },\n  {\n    \"feature_code\": \"DATA_EXPORT\",\n    \"action_type\": \"EXPORT\",\n    \"policy_name\": \"データエクスポート承認\",\n    \"is_approval_required\": true,\n    \"conditions\": {\n      \"require_approval_when\": [\n        {\"field\": \"data_type\", \"operator\": \"in\", \"value\": [\"personal_info\", \"financial\"]},\n        {\"field\": \"record_count\", \"operator\": \"greater_than\", \"value\": 1000}\n      ]\n    },\n    \"workflow_type_id\": 3\n  }\n]"
            ],
            [
              "typescript",
              "export class ApprovalPolicyService {\n\n  /**\n   * 指定された操作に承認が必要かどうかを判定\n   */\n  async requiresApproval(\n    featureCode: string,\n    actionType: string,\n    operationData: any,\n    currentUser: User,\n    companyId: number\n  ): Promise<ApprovalRequirement> {\n\n    // 1. 該当する承認ポリシーを取得\n    const policy = await prisma.approval_policies.findFirst({\n      where: {\n        feature_code: featureCode,\n        action_type: actionType,\n        company_id: companyId,\n        is_active: true\n      },\n      include: {\n        workflow_types: true\n      }\n    });\n\n    if (!policy) {\n      return { required: false };\n    }\n\n    // 2. バイパス権限チェック\n    if (this.canBypassApproval(currentUser, policy.bypass_roles)) {\n      return { required: false, reason: 'BYPASSED_BY_ROLE' };\n    }\n\n    // 3. 条件ベース判定\n    if (!policy.is_approval_required) {\n      return { required: false };\n    }\n\n    const conditionsMet = await this.evaluateConditions(\n      policy.conditions,\n      operationData,\n      currentUser\n    );\n\n    if (!conditionsMet) {\n      return { required: false, reason: 'CONDITIONS_NOT_MET' };\n    }\n\n    return {\n      required: true,\n      policy: policy,\n      workflowType: policy.workflow_types,\n      estimatedDuration: this.estimateApprovalDuration(policy.workflow_type_id)\n    };\n  }\n\n  /**\n   * 条件評価エンジン\n   */\n  private async evaluateConditions(\n    conditions: any,\n    operationData: any,\n    currentUser: User\n  ): Promise<boolean> {\n\n    if (!conditions?.require_approval_when) {\n      return true; // 条件未指定の場合は承認必要\n    }\n\n    for (const condition of conditions.require_approval_when) {\n      if (await this.evaluateSingleCondition(condition, operationData, currentUser)) {\n        return true; // いずれかの条件に合致すれば承認必要\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 単一条件の評価\n   */\n  private async evaluateSingleCondition(\n    condition: any,\n    operationData: any,\n    currentUser: User\n  ): Promise<boolean> {\n\n    const { field, operator, value, change_type } = condition;\n\n    switch (field) {\n      case 'role':\n        if (change_type === 'upgrade') {\n          return this.isRoleUpgrade(operationData.oldRole, operationData.newRole);\n        }\n        break;\n\n      case 'permissions':\n        if (change_type === 'expand') {\n          return this.isPermissionExpansion(operationData.oldPermissions, operationData.newPermissions);\n        }\n        break;\n\n      case 'has_users':\n        if (operator === 'greater_than') {\n          const userCount = await this.getUserCountInDepartment(operationData.departmentId);\n          return userCount > value;\n        }\n        break;\n\n      case 'data_type':\n        if (operator === 'in') {\n          return value.includes(operationData.dataType);\n        }\n        break;\n\n      case 'record_count':\n        if (operator === 'greater_than') {\n          return operationData.recordCount > value;\n        }\n        break;\n\n      case 'amount':\n        if (operator === 'greater_than') {\n          return parseFloat(operationData.amount) > value;\n        }\n        break;\n    }\n\n    return false;\n  }\n}\n\ninterface ApprovalRequirement {\n  required: boolean;\n  reason?: string;\n  policy?: any;\n  workflowType?: any;\n  estimatedDuration?: number; // 承認完了予想時間（時間）\n}"
            ],
            [
              "typescript",
              "/**\n * 承認制御デコレーター\n */\nexport function RequiresApproval(featureCode: string, actionType: string) {\n  return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {\n    const method = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      const [operationData, currentUser] = args;\n\n      // 1. 承認要否判定\n      const requirement = await approvalPolicyService.requiresApproval(\n        featureCode,\n        actionType,\n        operationData,\n        currentUser,\n        currentUser.companyId\n      );\n\n      if (!requirement.required) {\n        // 承認不要 - 直接実行\n        return await method.apply(this, args);\n      }\n\n      // 2. 承認プロセス開始\n      const approvalRequest = await this.startApprovalProcess(\n        requirement,\n        operationData,\n        currentUser\n      );\n\n      return {\n        status: 'PENDING_APPROVAL',\n        approvalRequestId: approvalRequest.id,\n        message: '承認申請を開始しました',\n        estimatedDuration: requirement.estimatedDuration\n      };\n    };\n  };\n}\n\n// 使用例\nexport class UserService {\n\n  @RequiresApproval('USER_MANAGEMENT', 'CREATE')\n  async createUser(userData: CreateUserRequest, currentUser: User) {\n    // ユーザー作成ロジック\n    return await prisma.users.create({\n      data: userData\n    });\n  }\n\n  @RequiresApproval('USER_MANAGEMENT', 'UPDATE')\n  async updateUser(userId: number, updateData: UpdateUserRequest, currentUser: User) {\n    // ユーザー更新ロジック\n    return await prisma.users.update({\n      where: { id: userId },\n      data: updateData\n    });\n  }\n}"
            ],
            [
              "typescript",
              "export class ApprovalCompletionService {\n\n  /**\n   * 承認完了時に元の操作を実行\n   */\n  async executeApprovedOperation(approvalRequestId: number): Promise<any> {\n\n    const request = await prisma.workflow_requests.findUnique({\n      where: { id: approvalRequestId },\n      include: {\n        workflow_types: true\n      }\n    });\n\n    if (!request || request.status !== 'APPROVED') {\n      throw new Error('Invalid or unapproved request');\n    }\n\n    const { feature_code, action_type } = this.parseWorkflowType(request.workflow_types.code);\n    const operationData = request.formData;\n\n    // 元の操作を実行\n    switch (feature_code) {\n      case 'USER_MANAGEMENT':\n        return await this.executeUserManagementOperation(action_type, operationData);\n\n      case 'DEPARTMENT_MANAGEMENT':\n        return await this.executeDepartmentOperation(action_type, operationData);\n\n      case 'PERMISSION_MANAGEMENT':\n        return await this.executePermissionOperation(action_type, operationData);\n\n      default:\n        throw new Error(`Unknown feature code: ${feature_code}`);\n    }\n  }\n\n  private async executeUserManagementOperation(actionType: string, data: any) {\n    switch (actionType) {\n      case 'CREATE':\n        return await prisma.users.create({\n          data: {\n            ...data,\n            isActive: true,\n            approval_status: 'APPROVED'\n          }\n        });\n\n      case 'UPDATE':\n        return await prisma.users.update({\n          where: { id: data.userId },\n          data: data.updateData\n        });\n\n      case 'DELETE':\n        return await prisma.users.update({\n          where: { id: data.userId },\n          data: { isActive: false }\n        });\n    }\n  }\n}"
            ],
            [
              "sql",
              "-- 承認待ち操作テーブル\nCREATE TABLE pending_operations (\n    id SERIAL PRIMARY KEY,\n    approval_request_id INT NOT NULL,\n    operation_type VARCHAR(50) NOT NULL,  -- CREATE, UPDATE, DELETE等\n    target_table VARCHAR(50) NOT NULL,\n    target_id INT,\n    operation_data JSON NOT NULL,        -- 操作データ\n    original_data JSON,                  -- 変更前データ（UPDATE/DELETE時）\n    scheduled_execution_at TIMESTAMP,    -- 実行予定日時\n    executed_at TIMESTAMP,\n    execution_result JSON,\n    status VARCHAR(20) DEFAULT 'PENDING', -- PENDING, EXECUTED, FAILED, CANCELLED\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    FOREIGN KEY (approval_request_id) REFERENCES workflow_requests(id)\n);"
            ],
            [
              "vue",
              "<template>\n  <div class=\"approval-policy-settings\">\n    <el-card header=\"承認ポリシー設定\">\n      <el-table :data=\"policies\" style=\"width: 100%\">\n        <el-table-column prop=\"feature_name\" label=\"機能\" />\n        <el-table-column prop=\"action_type\" label=\"操作\" />\n        <el-table-column label=\"承認要否\">\n          <template #default=\"{ row }\">\n            <el-switch\n              v-model=\"row.is_approval_required\"\n              @change=\"updatePolicy(row)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"条件\">\n          <template #default=\"{ row }\">\n            <el-button @click=\"editConditions(row)\">設定</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"ワークフロー\">\n          <template #default=\"{ row }\">\n            <el-select v-model=\"row.workflow_type_id\">\n              <el-option\n                v-for=\"workflow in workflowTypes\"\n                :key=\"workflow.id\"\n                :label=\"workflow.name\"\n                :value=\"workflow.id\"\n              />\n            </el-select>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 条件設定ダイアログ -->\n    <el-dialog v-model=\"showConditionDialog\" title=\"承認条件設定\">\n      <approval-condition-editor\n        v-model=\"currentConditions\"\n        :feature-code=\"currentPolicy.feature_code\"\n      />\n    </el-dialog>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"approval-dashboard\">\n    <!-- 承認待ち件数サマリー -->\n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\" v-for=\"category in approvalSummary\" :key=\"category.name\">\n        <el-card>\n          <div class=\"summary-item\">\n            <h3>{{ category.name }}</h3>\n            <p class=\"count\">{{ category.pending_count }}</p>\n            <p class=\"avg-time\">平均処理時間: {{ category.avg_processing_time }}時間</p>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 承認待ち一覧 -->\n    <el-card header=\"承認待ち一覧\">\n      <el-table :data=\"pendingApprovals\">\n        <el-table-column prop=\"request_number\" label=\"申請番号\" />\n        <el-table-column prop=\"title\" label=\"申請内容\" />\n        <el-table-column prop=\"requester_name\" label=\"申請者\" />\n        <el-table-column prop=\"current_step\" label=\"承認段階\" />\n        <el-table-column prop=\"submitted_at\" label=\"申請日時\" />\n        <el-table-column label=\"操作\">\n          <template #default=\"{ row }\">\n            <el-button @click=\"approveRequest(row)\">承認</el-button>\n            <el-button @click=\"rejectRequest(row)\">却下</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>"
            ],
            [
              "typescript",
              "// 営業時間外の操作は翌営業日まで自動保留\nconst timeBasedPolicy = {\n  \"feature_code\": \"SYSTEM_MAINTENANCE\",\n  \"conditions\": {\n    \"require_approval_when\": [\n      {\n        \"field\": \"execution_time\",\n        \"operator\": \"outside_business_hours\"\n      }\n    ],\n    \"auto_approve_during\": \"maintenance_window\"\n  }\n};"
            ],
            [
              "typescript",
              "// 金額に応じた段階的承認ルート\nconst amountBasedApproval = {\n  \"feature_code\": \"EXPENSE_APPROVAL\",\n  \"approval_routes\": [\n    {\n      \"condition\": {\"amount\": {\"less_than\": 10000}},\n      \"steps\": [{\"approver_type\": \"MANAGER\"}]\n    },\n    {\n      \"condition\": {\"amount\": {\"between\": [10000, 100000]}},\n      \"steps\": [\n        {\"approver_type\": \"MANAGER\"},\n        {\"approver_type\": \"DEPARTMENT_HEAD\"}\n      ]\n    },\n    {\n      \"condition\": {\"amount\": {\"greater_than\": 100000}},\n      \"steps\": [\n        {\"approver_type\": \"MANAGER\"},\n        {\"approver_type\": \"DEPARTMENT_HEAD\"},\n        {\"approver_type\": \"FINANCE_DIRECTOR\"}\n      ]\n    }\n  ]\n};"
            ],
            [
              "typescript",
              "// リスクレベルに応じた承認制御\nconst riskBasedPolicy = {\n  \"feature_code\": \"DATA_ACCESS\",\n  \"conditions\": {\n    \"require_approval_when\": [\n      {\n        \"field\": \"data_sensitivity\",\n        \"operator\": \"in\",\n        \"value\": [\"CONFIDENTIAL\", \"TOP_SECRET\"]\n      },\n      {\n        \"field\": \"access_time\",\n        \"operator\": \"outside_normal_hours\"\n      },\n      {\n        \"field\": \"access_location\",\n        \"operator\": \"not_in_whitelist\"\n      }\n    ]\n  }\n};"
            ],
            [
              "typescript",
              "export class ApprovalPolicyCache {\n  private cache = new Map<string, ApprovalPolicy>();\n  private readonly TTL = 300000; // 5分\n\n  async getPolicy(companyId: number, featureCode: string, actionType: string): Promise<ApprovalPolicy> {\n    const key = `${companyId}:${featureCode}:${actionType}`;\n\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n\n    const policy = await this.loadPolicyFromDB(companyId, featureCode, actionType);\n    this.cache.set(key, policy);\n\n    // TTL設定\n    setTimeout(() => this.cache.delete(key), this.TTL);\n\n    return policy;\n  }\n}"
            ],
            [
              "typescript",
              "export class ApprovalAuditService {\n\n  async logApprovalAction(action: ApprovalAuditLog) {\n    await prisma.audit_logs.create({\n      data: {\n        userId: action.userId,\n        action: 'APPROVAL_ACTION',\n        targetType: 'WORKFLOW_REQUEST',\n        targetId: action.requestId,\n        oldPermissions: action.beforeState,\n        newPermissions: action.afterState,\n        reason: action.reason,\n        ipAddress: action.ipAddress,\n        userAgent: action.userAgent,\n        metadata: {\n          approval_action: action.approvalAction,\n          step_number: action.stepNumber,\n          processing_time: action.processingTime,\n          delegation_info: action.delegationInfo\n        }\n      }\n    });\n  }\n}"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 14
        }
      },
      "readability": {
        "score": 95.92,
        "sentences": 147,
        "avg_words_per_sentence": 10.16,
        "long_sentences": 20,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.08
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/要件定義書.md": {
      "basic_metrics": {
        "lines": 420,
        "words": 931,
        "characters": 6178,
        "avg_line_length": 14.709523809523809
      },
      "structure_analysis": {
        "headers": {
          "total": 73,
          "hierarchy": [
            {
              "level": 1,
              "text": "申請承認ワークフロー システム要件定義書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. プロジェクト概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 背景・目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 適用範囲",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "2. ステークホルダー",
              "line_number": 12
            },
            {
              "level": 2,
              "text": "3. 業務要件",
              "line_number": 22
            },
            {
              "level": 3,
              "text": "3.1 現状の課題",
              "line_number": 24
            },
            {
              "level": 4,
              "text": "3.1.1 承認プロセスの課題",
              "line_number": 26
            },
            {
              "level": 4,
              "text": "3.1.2 ガバナンスの課題",
              "line_number": 32
            },
            {
              "level": 3,
              "text": "3.2 解決すべき業務課題",
              "line_number": 37
            },
            {
              "level": 4,
              "text": "3.2.1 承認フロー標準化",
              "line_number": 39
            },
            {
              "level": 4,
              "text": "3.2.2 セキュリティ強化",
              "line_number": 45
            },
            {
              "level": 4,
              "text": "3.2.3 効率性向上",
              "line_number": 51
            },
            {
              "level": 2,
              "text": "4. 機能要件",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "4.1 ワークフロー管理機能",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "4.1.1 ワークフロータイプ定義 【必須】",
              "line_number": 61
            },
            {
              "level": 4,
              "text": "4.1.2 動的フォーム生成 【必須】",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "4.2 承認プロセス機能",
              "line_number": 86
            },
            {
              "level": 4,
              "text": "4.2.1 多段階承認 【必須】",
              "line_number": 88
            },
            {
              "level": 4,
              "text": "4.2.2 並列・直列承認 【必須】",
              "line_number": 96
            },
            {
              "level": 4,
              "text": "4.2.3 承認アクション 【必須】",
              "line_number": 109
            },
            {
              "level": 3,
              "text": "4.3 承認制御機能",
              "line_number": 121
            },
            {
              "level": 4,
              "text": "4.3.1 条件ベース承認 【重要】",
              "line_number": 123
            },
            {
              "level": 4,
              "text": "4.3.2 自動承認機能 【重要】",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "4.4 通知・アラート機能",
              "line_number": 148
            },
            {
              "level": 4,
              "text": "4.4.1 リアルタイム通知 【必須】",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "4.4.2 通知チャネル 【必須】",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "4.5 既存機能統合",
              "line_number": 169
            },
            {
              "level": 4,
              "text": "4.5.1 ユーザー管理統合 【最重要】",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "4.5.2 組織管理統合 【重要】",
              "line_number": 183
            },
            {
              "level": 4,
              "text": "4.5.3 データ操作統合 【重要】",
              "line_number": 189
            },
            {
              "level": 2,
              "text": "5. 非機能要件",
              "line_number": 200
            },
            {
              "level": 3,
              "text": "5.1 性能要件",
              "line_number": 202
            },
            {
              "level": 4,
              "text": "5.1.1 レスポンス性能",
              "line_number": 204
            },
            {
              "level": 4,
              "text": "5.1.2 スループット",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "5.2 可用性要件",
              "line_number": 218
            },
            {
              "level": 4,
              "text": "5.2.1 稼働率",
              "line_number": 220
            },
            {
              "level": 4,
              "text": "5.2.2 障害対応",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "5.3 セキュリティ要件",
              "line_number": 228
            },
            {
              "level": 4,
              "text": "5.3.1 認証・認可",
              "line_number": 230
            },
            {
              "level": 4,
              "text": "5.3.2 データ保護",
              "line_number": 235
            },
            {
              "level": 3,
              "text": "5.4 運用要件",
              "line_number": 245
            },
            {
              "level": 4,
              "text": "5.4.1 監視・ログ",
              "line_number": 247
            },
            {
              "level": 4,
              "text": "5.4.2 バックアップ・復旧",
              "line_number": 252
            },
            {
              "level": 2,
              "text": "6. 制約条件",
              "line_number": 257
            },
            {
              "level": 3,
              "text": "6.1 技術制約",
              "line_number": 259
            },
            {
              "level": 3,
              "text": "6.2 運用制約",
              "line_number": 264
            },
            {
              "level": 3,
              "text": "6.3 予算制約",
              "line_number": 269
            },
            {
              "level": 2,
              "text": "7. 成功基準",
              "line_number": 279
            },
            {
              "level": 3,
              "text": "7.1 機能面",
              "line_number": 281
            },
            {
              "level": 3,
              "text": "7.2 性能面",
              "line_number": 286
            },
            {
              "level": 3,
              "text": "7.3 運用面",
              "line_number": 291
            },
            {
              "level": 3,
              "text": "7.4 ビジネス面",
              "line_number": 296
            },
            {
              "level": 2,
              "text": "8. リスク分析",
              "line_number": 301
            },
            {
              "level": 3,
              "text": "8.1 技術リスク",
              "line_number": 303
            },
            {
              "level": 4,
              "text": "8.1.1 既存システムとの統合",
              "line_number": 305
            },
            {
              "level": 4,
              "text": "8.1.2 パフォーマンス劣化",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "8.2 運用リスク",
              "line_number": 319
            },
            {
              "level": 4,
              "text": "8.2.1 ユーザー受入",
              "line_number": 321
            },
            {
              "level": 4,
              "text": "8.2.2 承認遅延",
              "line_number": 328
            },
            {
              "level": 2,
              "text": "9. 設計整合性確認",
              "line_number": 335
            },
            {
              "level": 3,
              "text": "9.1 機能設計との整合性",
              "line_number": 337
            },
            {
              "level": 4,
              "text": "✅ 整合している項目",
              "line_number": 339
            },
            {
              "level": 4,
              "text": "❓ 確認が必要な項目",
              "line_number": 346
            },
            {
              "level": 3,
              "text": "9.2 データベース設計との整合性",
              "line_number": 357
            },
            {
              "level": 4,
              "text": "✅ 整合している項目",
              "line_number": 359
            },
            {
              "level": 4,
              "text": "❓ 確認が必要な項目",
              "line_number": 365
            },
            {
              "level": 3,
              "text": "9.3 API設計との整合性",
              "line_number": 373
            },
            {
              "level": 4,
              "text": "✅ 整合している項目",
              "line_number": 375
            },
            {
              "level": 4,
              "text": "❓ 確認が必要な項目",
              "line_number": 380
            },
            {
              "level": 2,
              "text": "10. 次ステップでの確認事項",
              "line_number": 388
            },
            {
              "level": 3,
              "text": "10.1 早急に確認すべき項目",
              "line_number": 390
            },
            {
              "level": 3,
              "text": "10.2 実装前に決定すべき項目",
              "line_number": 404
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 1,
          "total_rows": 7
        }
      },
      "readability": {
        "score": 99.19,
        "sentences": 148,
        "avg_words_per_sentence": 6.29,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 45.620000000000005,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 70.5
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/申請承認ワークフロー機能設計書.md": {
      "basic_metrics": {
        "lines": 687,
        "words": 1640,
        "characters": 10021,
        "avg_line_length": 14.586608442503639
      },
      "structure_analysis": {
        "headers": {
          "total": 90,
          "hierarchy": [
            {
              "level": 1,
              "text": "申請・承認ワークフロー機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 目次",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 24
            },
            {
              "level": 3,
              "text": "1.1 目的",
              "line_number": 26
            },
            {
              "level": 3,
              "text": "1.2 適用範囲",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "1.3 前提条件",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "1.4 制約条件",
              "line_number": 40
            },
            {
              "level": 2,
              "text": "2. 機能要件",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "2.1 申請機能",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "2.1.1 申請書作成機能",
              "line_number": 51
            },
            {
              "level": 4,
              "text": "2.1.2 申請履歴管理機能",
              "line_number": 88
            },
            {
              "level": 4,
              "text": "2.1.3 申請複製機能",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "2.2 承認機能",
              "line_number": 128
            },
            {
              "level": 4,
              "text": "2.2.1 承認処理機能",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "2.2.2 承認待ち一覧機能",
              "line_number": 160
            },
            {
              "level": 4,
              "text": "2.2.3 代理承認機能",
              "line_number": 187
            },
            {
              "level": 3,
              "text": "2.3 ワークフロー管理機能",
              "line_number": 211
            },
            {
              "level": 4,
              "text": "2.3.1 申請種別管理機能",
              "line_number": 213
            },
            {
              "level": 4,
              "text": "2.3.2 承認ルート管理機能",
              "line_number": 238
            },
            {
              "level": 4,
              "text": "2.3.3 統計・レポート機能",
              "line_number": 262
            },
            {
              "level": 3,
              "text": "2.4 通知機能",
              "line_number": 285
            },
            {
              "level": 4,
              "text": "2.4.1 リアルタイム通知機能",
              "line_number": 287
            },
            {
              "level": 4,
              "text": "2.4.2 メール通知機能",
              "line_number": 309
            },
            {
              "level": 2,
              "text": "3. 非機能要件",
              "line_number": 324
            },
            {
              "level": 3,
              "text": "3.1 性能要件",
              "line_number": 326
            },
            {
              "level": 4,
              "text": "3.1.1 応答時間",
              "line_number": 328
            },
            {
              "level": 4,
              "text": "3.1.2 スループット",
              "line_number": 337
            },
            {
              "level": 4,
              "text": "3.1.3 リソース使用量",
              "line_number": 342
            },
            {
              "level": 3,
              "text": "3.2 可用性要件",
              "line_number": 347
            },
            {
              "level": 4,
              "text": "3.2.1 システム稼働率",
              "line_number": 349
            },
            {
              "level": 4,
              "text": "3.2.2 データ整合性",
              "line_number": 354
            },
            {
              "level": 3,
              "text": "3.3 拡張性要件",
              "line_number": 359
            },
            {
              "level": 4,
              "text": "3.3.1 ユーザー数拡張",
              "line_number": 361
            },
            {
              "level": 4,
              "text": "3.3.2 データ量拡張",
              "line_number": 366
            },
            {
              "level": 3,
              "text": "3.4 互換性要件",
              "line_number": 371
            },
            {
              "level": 4,
              "text": "3.4.1 ブラウザ対応",
              "line_number": 373
            },
            {
              "level": 4,
              "text": "3.4.2 デバイス対応",
              "line_number": 379
            },
            {
              "level": 2,
              "text": "4. ユーザーインターフェース",
              "line_number": 386
            },
            {
              "level": 3,
              "text": "4.1 画面構成",
              "line_number": 388
            },
            {
              "level": 4,
              "text": "4.1.1 ワークフローダッシュボード",
              "line_number": 390
            },
            {
              "level": 4,
              "text": "4.1.2 申請作成画面",
              "line_number": 406
            },
            {
              "level": 4,
              "text": "4.1.3 承認画面",
              "line_number": 423
            },
            {
              "level": 3,
              "text": "4.2 操作フロー",
              "line_number": 442
            },
            {
              "level": 4,
              "text": "4.2.1 申請提出フロー",
              "line_number": 444
            },
            {
              "level": 4,
              "text": "4.2.2 承認処理フロー",
              "line_number": 458
            },
            {
              "level": 3,
              "text": "4.3 エラーハンドリング",
              "line_number": 469
            },
            {
              "level": 4,
              "text": "4.3.1 バリデーションエラー",
              "line_number": 471
            },
            {
              "level": 4,
              "text": "4.3.2 システムエラー",
              "line_number": 476
            },
            {
              "level": 2,
              "text": "5. ビジネスルール",
              "line_number": 483
            },
            {
              "level": 3,
              "text": "5.1 申請ルール",
              "line_number": 485
            },
            {
              "level": 4,
              "text": "5.1.1 申請資格",
              "line_number": 487
            },
            {
              "level": 4,
              "text": "5.1.2 申請制限",
              "line_number": 492
            },
            {
              "level": 4,
              "text": "5.1.3 申請キャンセル",
              "line_number": 497
            },
            {
              "level": 3,
              "text": "5.2 承認ルール",
              "line_number": 502
            },
            {
              "level": 4,
              "text": "5.2.1 承認者決定",
              "line_number": 504
            },
            {
              "level": 4,
              "text": "5.2.2 承認期限",
              "line_number": 509
            },
            {
              "level": 4,
              "text": "5.2.3 承認順序",
              "line_number": 514
            },
            {
              "level": 3,
              "text": "5.3 権限ルール",
              "line_number": 519
            },
            {
              "level": 4,
              "text": "5.3.1 申請権限",
              "line_number": 521
            },
            {
              "level": 4,
              "text": "5.3.2 承認権限",
              "line_number": 529
            },
            {
              "level": 2,
              "text": "6. 外部インターフェース",
              "line_number": 539
            },
            {
              "level": 3,
              "text": "6.1 システム連携",
              "line_number": 541
            },
            {
              "level": 4,
              "text": "6.1.1 人事システム連携",
              "line_number": 543
            },
            {
              "level": 4,
              "text": "6.1.2 会計システム連携",
              "line_number": 551
            },
            {
              "level": 4,
              "text": "6.1.3 メールシステム連携",
              "line_number": 558
            },
            {
              "level": 3,
              "text": "6.2 ファイル管理",
              "line_number": 566
            },
            {
              "level": 4,
              "text": "6.2.1 ファイルストレージ",
              "line_number": 568
            },
            {
              "level": 4,
              "text": "6.2.2 ファイル形式制限",
              "line_number": 573
            },
            {
              "level": 2,
              "text": "7. セキュリティ要件",
              "line_number": 585
            },
            {
              "level": 3,
              "text": "7.1 認証・認可",
              "line_number": 587
            },
            {
              "level": 4,
              "text": "7.1.1 認証方式",
              "line_number": 589
            },
            {
              "level": 4,
              "text": "7.1.2 認可制御",
              "line_number": 594
            },
            {
              "level": 3,
              "text": "7.2 データ保護",
              "line_number": 599
            },
            {
              "level": 4,
              "text": "7.2.1 暗号化",
              "line_number": 601
            },
            {
              "level": 4,
              "text": "7.2.2 個人情報保護",
              "line_number": 606
            },
            {
              "level": 3,
              "text": "7.3 監査・ログ",
              "line_number": 611
            },
            {
              "level": 4,
              "text": "7.3.1 操作ログ",
              "line_number": 613
            },
            {
              "level": 4,
              "text": "7.3.2 監査証跡",
              "line_number": 618
            },
            {
              "level": 2,
              "text": "8. 運用要件",
              "line_number": 625
            },
            {
              "level": 3,
              "text": "8.1 システム運用",
              "line_number": 627
            },
            {
              "level": 4,
              "text": "8.1.1 監視項目",
              "line_number": 629
            },
            {
              "level": 4,
              "text": "8.1.2 メンテナンス",
              "line_number": 635
            },
            {
              "level": 3,
              "text": "8.2 データ管理",
              "line_number": 640
            },
            {
              "level": 4,
              "text": "8.2.1 バックアップ",
              "line_number": 642
            },
            {
              "level": 4,
              "text": "8.2.2 データ保存期間",
              "line_number": 647
            },
            {
              "level": 3,
              "text": "8.3 ユーザーサポート",
              "line_number": 655
            },
            {
              "level": 4,
              "text": "8.3.1 ヘルプデスク",
              "line_number": 657
            },
            {
              "level": 4,
              "text": "8.3.2 ユーザー教育",
              "line_number": 662
            },
            {
              "level": 2,
              "text": "📋 承認履歴",
              "line_number": 669
            },
            {
              "level": 2,
              "text": "📚 関連文書",
              "line_number": 677
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 3,
          "inline_code": 5,
          "languages": {},
          "details": [
            [
              "",
              "1. 申請種別選択\n2. 動的フォーム表示\n3. 申請内容入力\n4. ファイル添付（任意）\n5. 承認ルート確認\n6. 下書き保存 OR 申請提出\n7. 申請番号発行\n8. 承認者通知送信"
            ],
            [
              "",
              "1. ダッシュボード表示\n2. 「新規申請」ボタンクリック\n3. 申請種別選択\n4. 動的フォーム表示\n5. 申請内容入力\n6. ファイル添付（任意）\n7. 承認ルート確認\n8. 内容確認・プレビュー\n9. 申請提出\n10. 申請番号表示・完了"
            ],
            [
              "",
              "1. 承認待ち一覧表示\n2. 申請選択・詳細確認\n3. 添付ファイル確認\n4. 承認判断\n5. コメント入力\n6. アクション実行（承認/却下/差戻し）\n7. 処理完了・次ステップ移行"
            ]
          ]
        },
        "tables": {
          "total": 15,
          "total_rows": 102
        }
      },
      "readability": {
        "score": 97.14,
        "sentences": 189,
        "avg_words_per_sentence": 8.68,
        "long_sentences": 18,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 59,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.24
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/ユーザー追加承認フロー設計書.md": {
      "basic_metrics": {
        "lines": 408,
        "words": 802,
        "characters": 7954,
        "avg_line_length": 19.495098039215687
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "ユーザー追加承認フロー設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 実装方式",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "2.1 基本フロー",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "2.2 データベース設計変更",
              "line_number": 24
            },
            {
              "level": 4,
              "text": "usersテーブル拡張",
              "line_number": 26
            },
            {
              "level": 2,
              "text": "3. ワークフロー設定",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "3.1 ユーザー追加用ワークフロータイプ",
              "line_number": 55
            },
            {
              "level": 2,
              "text": "4. API設計",
              "line_number": 140
            },
            {
              "level": 3,
              "text": "4.1 ユーザー追加申請API",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "4.2 承認処理API",
              "line_number": 166
            },
            {
              "level": 2,
              "text": "5. 実装詳細",
              "line_number": 178
            },
            {
              "level": 3,
              "text": "5.1 ユーザー追加申請処理",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "5.2 承認時の処理",
              "line_number": 238
            },
            {
              "level": 2,
              "text": "6. セキュリティ考慮事項",
              "line_number": 297
            },
            {
              "level": 3,
              "text": "6.1 権限チェック",
              "line_number": 299
            },
            {
              "level": 3,
              "text": "6.2 データ保護",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "6.3 監査ログ",
              "line_number": 308
            },
            {
              "level": 2,
              "text": "7. UI/UX設計",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "7.1 申請画面",
              "line_number": 314
            },
            {
              "level": 3,
              "text": "7.2 承認画面",
              "line_number": 319
            },
            {
              "level": 3,
              "text": "7.3 ステータス表示",
              "line_number": 324
            },
            {
              "level": 2,
              "text": "8. 拡張機能",
              "line_number": 329
            },
            {
              "level": 3,
              "text": "8.1 自動承認ルール",
              "line_number": 331
            },
            {
              "level": 3,
              "text": "8.2 一括承認",
              "line_number": 352
            },
            {
              "level": 3,
              "text": "8.3 期限管理",
              "line_number": 356
            },
            {
              "level": 2,
              "text": "9. 移行計画",
              "line_number": 361
            },
            {
              "level": 3,
              "text": "9.1 既存ユーザーの扱い",
              "line_number": 363
            },
            {
              "level": 3,
              "text": "9.2 段階的導入",
              "line_number": 367
            },
            {
              "level": 2,
              "text": "10. パフォーマンス最適化",
              "line_number": 372
            },
            {
              "level": 3,
              "text": "10.1 インデックス追加",
              "line_number": 374
            },
            {
              "level": 3,
              "text": "10.2 キャッシュ戦略",
              "line_number": 380
            },
            {
              "level": 2,
              "text": "11. テスト計画",
              "line_number": 384
            },
            {
              "level": 3,
              "text": "11.1 単体テスト",
              "line_number": 386
            },
            {
              "level": 3,
              "text": "11.2 統合テスト",
              "line_number": 391
            },
            {
              "level": 3,
              "text": "11.3 負荷テスト",
              "line_number": 396
            },
            {
              "level": 2,
              "text": "12. まとめ",
              "line_number": 400
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 9,
          "inline_code": 18,
          "languages": {
            "mermaid": 1,
            "sql": 2,
            "json": 2,
            "typescript": 4
          },
          "details": [
            [
              "mermaid",
              "graph TD\n    A[ユーザー追加申請] --> B[仮ユーザー作成]\n    B --> C[承認ワークフロー起動]\n    C --> D{承認判定}\n    D -->|承認| E[本ユーザー有効化]\n    D -->|却下| F[仮ユーザー削除]\n    D -->|差戻し| G[申請内容修正]\n    G --> C\n    E --> H[通知送信]\n    F --> I[却下通知]"
            ],
            [
              "sql",
              "-- 既存のusersテーブルに追加するカラム\nALTER TABLE users ADD COLUMN approval_status VARCHAR(20) DEFAULT 'PENDING';\n-- PENDING: 承認待ち\n-- APPROVED: 承認済み\n-- REJECTED: 却下\n-- DRAFT: 下書き\n\nALTER TABLE users ADD COLUMN approval_request_id INT;\nALTER TABLE users ADD COLUMN approved_at TIMESTAMP;\nALTER TABLE users ADD COLUMN approved_by INT;\nALTER TABLE users ADD COLUMN rejection_reason TEXT;\n\n-- 外部キー追加\nALTER TABLE users\n  ADD CONSTRAINT fk_users_approval_request\n  FOREIGN KEY (approval_request_id)\n  REFERENCES workflow_requests(id);\n\nALTER TABLE users\n  ADD CONSTRAINT fk_users_approved_by\n  FOREIGN KEY (approved_by)\n  REFERENCES users(id);"
            ],
            [
              "json",
              "{\n  \"code\": \"USER_ADDITION\",\n  \"name\": \"ユーザー追加申請\",\n  \"category\": \"USER_MANAGEMENT\",\n  \"formSchema\": {\n    \"fields\": [\n      {\n        \"name\": \"username\",\n        \"label\": \"ユーザー名\",\n        \"type\": \"text\",\n        \"required\": true,\n        \"validation\": {\n          \"pattern\": \"^[a-zA-Z0-9_-]{3,30}$\",\n          \"unique\": true\n        }\n      },\n      {\n        \"name\": \"email\",\n        \"label\": \"メールアドレス\",\n        \"type\": \"email\",\n        \"required\": true,\n        \"validation\": {\n          \"unique\": true\n        }\n      },\n      {\n        \"name\": \"name\",\n        \"label\": \"氏名\",\n        \"type\": \"text\",\n        \"required\": true\n      },\n      {\n        \"name\": \"employeeCode\",\n        \"label\": \"社員番号\",\n        \"type\": \"text\",\n        \"required\": false\n      },\n      {\n        \"name\": \"departmentId\",\n        \"label\": \"所属部署\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"dataSource\": \"departments\"\n      },\n      {\n        \"name\": \"role\",\n        \"label\": \"権限レベル\",\n        \"type\": \"select\",\n        \"required\": true,\n        \"options\": [\"USER\", \"MANAGER\", \"ADMIN\"]\n      },\n      {\n        \"name\": \"joinDate\",\n        \"label\": \"入社日\",\n        \"type\": \"date\",\n        \"required\": true\n      },\n      {\n        \"name\": \"reason\",\n        \"label\": \"追加理由\",\n        \"type\": \"textarea\",\n        \"required\": true\n      }\n    ]\n  },\n  \"approvalRoutes\": [\n    {\n      \"stepNumber\": 1,\n      \"approverType\": \"ROLE\",\n      \"approverValue\": {\"role\": \"MANAGER\", \"department\": \"HR\"},\n      \"name\": \"人事部門承認\"\n    },\n    {\n      \"stepNumber\": 2,\n      \"approverType\": \"ROLE\",\n      \"approverValue\": {\"role\": \"ADMIN\"},\n      \"name\": \"システム管理者承認\"\n    }\n  ]\n}"
            ],
            [
              "typescript",
              "// POST /api/users/request-addition\ninterface UserAdditionRequest {\n  username: string;\n  email: string;\n  password: string;\n  name: string;\n  employeeCode?: string;\n  departmentId: number;\n  role: UserRole;\n  joinDate: Date;\n  reason: string;\n}\n\ninterface UserAdditionResponse {\n  requestId: number;\n  userId: number;  // 仮ユーザーID\n  status: 'PENDING';\n  message: string;\n}"
            ],
            [
              "typescript",
              "// POST /api/workflow/approve/:requestId\ninterface ApprovalAction {\n  action: 'APPROVE' | 'REJECT' | 'RETURN';\n  comment?: string;\n  // 承認時、ユーザーを自動的に有効化\n  autoActivateUser: boolean;\n}"
            ],
            [
              "typescript",
              "export class UserManagementService {\n  async requestUserAddition(data: UserAdditionRequest): Promise<UserAdditionResponse> {\n    const transaction = await prisma.$transaction(async (tx) => {\n      // 1. 仮ユーザー作成（非アクティブ状態）\n      const tempUser = await tx.users.create({\n        data: {\n          ...data,\n          isActive: false,\n          approval_status: 'PENDING',\n          password: await hashPassword(data.password)\n        }\n      });\n\n      // 2. ワークフロー申請作成\n      const workflowType = await tx.workflow_types.findFirst({\n        where: { code: 'USER_ADDITION' }\n      });\n\n      const workflowRequest = await tx.workflow_requests.create({\n        data: {\n          workflowTypeId: workflowType.id,\n          requestNumber: generateRequestNumber(),\n          companyId: data.companyId,\n          requesterId: currentUserId,\n          departmentId: data.departmentId,\n          title: `ユーザー追加申請: ${data.name}`,\n          description: data.reason,\n          formData: data,\n          status: 'PENDING',\n          submittedAt: new Date()\n        }\n      });\n\n      // 3. ユーザーとワークフローを関連付け\n      await tx.users.update({\n        where: { id: tempUser.id },\n        data: { approval_request_id: workflowRequest.id }\n      });\n\n      // 4. 承認者への通知\n      await this.notifyApprovers(workflowRequest.id);\n\n      return {\n        requestId: workflowRequest.id,\n        userId: tempUser.id,\n        status: 'PENDING',\n        message: '承認申請を受け付けました'\n      };\n    });\n\n    return transaction;\n  }\n}"
            ],
            [
              "typescript",
              "export class ApprovalService {\n  async approveUserAddition(requestId: number, approverId: number): Promise<void> {\n    const transaction = await prisma.$transaction(async (tx) => {\n      // 1. ワークフロー承認処理\n      const request = await tx.workflow_requests.findUnique({\n        where: { id: requestId },\n        include: { workflow_types: true }\n      });\n\n      if (request.workflow_types.code !== 'USER_ADDITION') {\n        throw new Error('Invalid workflow type');\n      }\n\n      // 2. 承認履歴記録\n      await tx.approval_history.create({\n        data: {\n          requestId,\n          approverId,\n          action: 'APPROVE',\n          processedAt: new Date()\n        }\n      });\n\n      // 3. 最終承認の場合、ユーザーを有効化\n      if (await this.isFinalApproval(requestId)) {\n        const user = await tx.users.findFirst({\n          where: { approval_request_id: requestId }\n        });\n\n        await tx.users.update({\n          where: { id: user.id },\n          data: {\n            isActive: true,\n            approval_status: 'APPROVED',\n            approved_at: new Date(),\n            approved_by: approverId\n          }\n        });\n\n        // 4. ワークフロー完了\n        await tx.workflow_requests.update({\n          where: { id: requestId },\n          data: {\n            status: 'APPROVED',\n            completedAt: new Date()\n          }\n        });\n\n        // 5. ユーザーへの通知（メール送信など）\n        await this.sendWelcomeEmail(user.id);\n      }\n    });\n  }\n}"
            ],
            [
              "json",
              "{\n  \"autoApproveRules\": {\n    \"conditions\": [\n      {\n        \"field\": \"role\",\n        \"operator\": \"equals\",\n        \"value\": \"USER\"\n      },\n      {\n        \"field\": \"department\",\n        \"operator\": \"in\",\n        \"value\": [\"営業部\", \"マーケティング部\"]\n      }\n    ],\n    \"action\": \"AUTO_APPROVE_FIRST_STEP\"\n  }\n}"
            ],
            [
              "sql",
              "CREATE INDEX idx_users_approval_status ON users(approval_status);\nCREATE INDEX idx_users_approval_request_id ON users(approval_request_id);"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 98.37,
        "sentences": 92,
        "avg_words_per_sentence": 8.72,
        "long_sentences": 5,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 56.04,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 74.43
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/設計書レビュー・連携チェック報告書.md": {
      "basic_metrics": {
        "lines": 380,
        "words": 1018,
        "characters": 7808,
        "avg_line_length": 20.54736842105263
      },
      "structure_analysis": {
        "headers": {
          "total": 56,
          "hierarchy": [
            {
              "level": 1,
              "text": "申請承認ワークフロー 設計書レビュー・連携チェック報告書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. レビュー概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 既存システム分析",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "2.1 現在のアーキテクチャ確認",
              "line_number": 11
            },
            {
              "level": 4,
              "text": "バックエンド構成",
              "line_number": 13
            },
            {
              "level": 4,
              "text": "フロントエンド構成",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "2.2 既存認証システム確認",
              "line_number": 42
            },
            {
              "level": 4,
              "text": "✅ 確認済み機能",
              "line_number": 44
            },
            {
              "level": 4,
              "text": "既存認証フロー",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "3. 連携チェック結果",
              "line_number": 62
            },
            {
              "level": 3,
              "text": "3.1 データベース連携 ✅ 良好",
              "line_number": 64
            },
            {
              "level": 4,
              "text": "既存テーブルとの関係",
              "line_number": 66
            },
            {
              "level": 4,
              "text": "Prismaスキーマ統合状況",
              "line_number": 75
            },
            {
              "level": 3,
              "text": "3.2 API連携 ✅ 良好",
              "line_number": 89
            },
            {
              "level": 4,
              "text": "既存APIとの統合ポイント",
              "line_number": 91
            },
            {
              "level": 4,
              "text": "統合が必要なAPI",
              "line_number": 96
            },
            {
              "level": 3,
              "text": "3.3 UI連携 📝 要対応",
              "line_number": 109
            },
            {
              "level": 4,
              "text": "既存画面との統合ポイント",
              "line_number": 111
            },
            {
              "level": 4,
              "text": "統合が必要な画面",
              "line_number": 116
            },
            {
              "level": 2,
              "text": "4. 設計整合性チェック",
              "line_number": 125
            },
            {
              "level": 3,
              "text": "4.1 データモデル整合性 ✅ 問題なし",
              "line_number": 127
            },
            {
              "level": 4,
              "text": "設計と実装の対応",
              "line_number": 129
            },
            {
              "level": 4,
              "text": "JSON型フィールドの活用",
              "line_number": 140
            },
            {
              "level": 3,
              "text": "4.2 API設計整合性 ✅ 問題なし",
              "line_number": 149
            },
            {
              "level": 4,
              "text": "RESTful設計準拠",
              "line_number": 151
            },
            {
              "level": 4,
              "text": "既存APIパターンとの統一",
              "line_number": 163
            },
            {
              "level": 3,
              "text": "4.3 セキュリティ設計整合性 ✅ 良好",
              "line_number": 169
            },
            {
              "level": 4,
              "text": "既存セキュリティとの統合",
              "line_number": 171
            },
            {
              "level": 2,
              "text": "5. 実装可能性チェック",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "5.1 技術的実装可能性 ✅ 高",
              "line_number": 194
            },
            {
              "level": 4,
              "text": "既存技術スタックとの適合性",
              "line_number": 196
            },
            {
              "level": 4,
              "text": "追加ライブラリ要件",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "5.2 パフォーマンス影響評価 🔍 要監視",
              "line_number": 219
            },
            {
              "level": 4,
              "text": "予想される影響",
              "line_number": 221
            },
            {
              "level": 4,
              "text": "対策案",
              "line_number": 226
            },
            {
              "level": 3,
              "text": "5.3 運用影響評価 📋 要注意",
              "line_number": 237
            },
            {
              "level": 4,
              "text": "段階的導入計画が必要",
              "line_number": 239
            },
            {
              "level": 2,
              "text": "6. 連携課題と対策",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "6.1 既存機能との統合課題",
              "line_number": 246
            },
            {
              "level": 4,
              "text": "🔴 HIGH: ユーザー管理API統合",
              "line_number": 248
            },
            {
              "level": 4,
              "text": "🟡 MEDIUM: 権限チェック統合",
              "line_number": 266
            },
            {
              "level": 4,
              "text": "🟢 LOW: UI通知統合",
              "line_number": 279
            },
            {
              "level": 3,
              "text": "6.2 データ整合性確保",
              "line_number": 283
            },
            {
              "level": 4,
              "text": "マイグレーション戦略",
              "line_number": 285
            },
            {
              "level": 4,
              "text": "トランザクション設計",
              "line_number": 293
            },
            {
              "level": 2,
              "text": "7. リスク評価",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "7.1 技術リスク",
              "line_number": 305
            },
            {
              "level": 3,
              "text": "7.2 運用リスク",
              "line_number": 313
            },
            {
              "level": 2,
              "text": "8. 推奨実装順序",
              "line_number": 321
            },
            {
              "level": 3,
              "text": "8.1 Phase 1: 基盤実装（2週間）",
              "line_number": 323
            },
            {
              "level": 3,
              "text": "8.2 Phase 2: 統合実装（2週間）",
              "line_number": 331
            },
            {
              "level": 3,
              "text": "8.3 Phase 3: 展開・最適化（1週間）",
              "line_number": 339
            },
            {
              "level": 2,
              "text": "9. 結論・推奨事項",
              "line_number": 347
            },
            {
              "level": 3,
              "text": "9.1 設計品質評価: ⭐⭐⭐⭐⭐ 優秀",
              "line_number": 349
            },
            {
              "level": 3,
              "text": "9.2 実装推奨度: 🚀 強く推奨",
              "line_number": 362
            },
            {
              "level": 3,
              "text": "9.3 次のアクション",
              "line_number": 370
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 18,
          "inline_code": 46,
          "languages": {
            "typescript": 7,
            "prisma": 1,
            "vue": 1,
            "sql": 2,
            "json": 1
          },
          "details": [
            [
              "",
              "/backend/src/\n├── routes/           # APIルート定義\n│   ├── auth.ts      # 認証API（JWT実装済み）\n│   ├── users.ts     # ユーザー管理API\n│   ├── companies.ts # 会社管理API\n│   ├── departments.ts # 部署管理API\n│   ├── permissions.ts # 権限管理API\n│   └── features.ts  # 機能管理API\n├── middleware/      # ミドルウェア\n│   └── auth.ts     # 認証ミドルウェア\n├── services/       # ビジネスロジック\n├── controllers/    # コントローラー\n└── lib/\n    └── prisma.ts   # Prismaクライアント"
            ],
            [
              "",
              "/frontend/src/\n├── views/           # 画面コンポーネント\n│   ├── Users.vue   # ユーザー管理画面\n│   ├── Dashboard.vue # ダッシュボード\n│   ├── PermissionMatrix.vue # 権限マトリクス\n│   └── PermissionTemplate.vue # 権限テンプレート\n└── components/     # 共通コンポーネント"
            ],
            [
              "typescript",
              "// 既存の認証ミドルウェア\nexport const authMiddleware = async (req, res, next) => {\n  const authHeader = req.headers.authorization;\n  const token = authHeader.split(' ')[1];\n  const decoded = jwt.verify(token, process.env.JWT_SECRET);\n  req.user = await getUserById(decoded.userId);\n  next();\n}"
            ],
            [
              "prisma",
              "// ✅ 既存のusersテーブルに追加されたリレーション\nmodel users {\n  // 既存フィールド...\n\n  // ワークフロー関連リレーション（追加済み）\n  workflow_types_created                 workflow_types[]     @relation(\"workflow_types_created\")\n  workflow_requests_requester            workflow_requests[]  @relation(\"workflow_requests_requester\")\n  approval_history_approver              approval_history[]   @relation(\"approval_history_approver\")\n  // ... 他のワークフロー関連リレーション\n}"
            ],
            [
              "typescript",
              "// 既存のユーザー作成API（統合対象）\nrouter.post('/users', authMiddleware, async (req, res) => {\n  // ここに承認制御を統合する必要がある\n})\n\n// 既存の部署管理API（統合対象）\nrouter.delete('/departments/:id', authMiddleware, async (req, res) => {\n  // ここに承認制御を統合する必要がある\n})"
            ],
            [
              "vue",
              "<!-- Users.vue - ユーザー管理画面 -->\n<!-- 承認が必要な操作にワークフロー連携が必要 -->\n<el-button @click=\"createUser\">ユーザー作成</el-button>\n<!-- ↓ 承認制御統合後 -->\n<el-button @click=\"requestUserCreation\">ユーザー作成申請</el-button>"
            ],
            [
              "sql",
              "-- ✅ 設計通りのJSON型活用\nformSchema          Json    -- 動的フォーム定義\nvalidationRules     Json?   -- バリデーションルール\nautoApproveRules    Json?   -- 自動承認条件\nconditions          Json?   -- 承認条件"
            ],
            [
              "",
              "GET    /api/workflow-types         # ワークフロー一覧\nPOST   /api/workflow-types         # ワークフロー作成\nPUT    /api/workflow-types/:id     # ワークフロー更新\nDELETE /api/workflow-types/:id     # ワークフロー削除\n\nGET    /api/workflow-requests      # 申請一覧\nPOST   /api/workflow-requests      # 申請作成\nPUT    /api/workflow-requests/:id/approve  # 承認実行"
            ],
            [
              "typescript",
              "// ✅ 既存認証システムとの統合\nconst workflowMiddleware = [\n  authMiddleware,           // 既存JWT認証\n  checkApprovalPermission,  // 新規：承認権限チェック\n  logApprovalAction         // 新規：承認操作ログ\n]\n\n// ✅ 既存監査システムとの統合\nawait prisma.audit_logs.create({\n  data: {\n    userId: user.id,\n    action: 'WORKFLOW_APPROVAL',\n    targetType: 'WORKFLOW_REQUEST',\n    targetId: requestId,\n    // 既存audit_logsテーブルを活用\n  }\n})"
            ],
            [
              "json",
              "// package.json 追加予定\n{\n  \"dependencies\": {\n    \"node-cron\": \"^3.0.0\",      // スケジュール処理\n    \"nodemailer\": \"^6.9.0\",     // メール通知\n    \"express-validator\": \"✅\",   // 既存利用\n    \"jsonschema\": \"^1.4.0\"      // フォームバリデーション\n  }\n}"
            ],
            [
              "typescript",
              "// キャッシュ戦略\nconst approvalPolicyCache = new Map()\nconst workflowTemplateCache = new Map()\n\n// インデックス最適化\nCREATE INDEX idx_workflow_requests_status ON workflow_requests(status, company_id);\nCREATE INDEX idx_approval_history_request ON approval_history(request_id, step_number);"
            ],
            [
              "typescript",
              "// 現在の実装\nrouter.post('/users', authMiddleware, async (req, res) => {\n  const user = await prisma.users.create({ data: userData })\n  res.json({ success: true, user })\n})\n\n// 統合後の実装\nrouter.post('/users', authMiddleware, requiresApproval('USER_MANAGEMENT', 'CREATE'), async (req, res) => {\n  // 承認が必要な場合は申請を作成\n  // 承認不要な場合は直接実行\n})"
            ],
            [
              "typescript",
              "// 承認者権限の確認\nconst canApprove = await checkApprovalPermission(\n  userId,\n  requestId,\n  currentStep\n)"
            ],
            [
              "sql",
              "-- 段階的マイグレーション\n-- Step 1: ワークフローテーブル作成\n-- Step 2: 既存データとの関連付け\n-- Step 3: 承認制御有効化"
            ],
            [
              "typescript",
              "// 承認完了時の原子性保証\nawait prisma.$transaction(async (tx) => {\n  await tx.approval_history.create({...})\n  await tx.workflow_requests.update({...})\n  await tx.users.update({...}) // 元の操作実行\n})"
            ],
            [
              "",
              "1. Prismaスキーマ追加済み ✅\n2. ワークフローAPI基盤実装\n3. 承認制御エンジン実装\n4. 基本UI実装"
            ],
            [
              "",
              "1. 既存APIとの統合\n2. 権限チェック統合\n3. 通知システム統合\n4. テスト実装"
            ],
            [
              "",
              "1. パフォーマンス最適化\n2. 運用ツール整備\n3. ドキュメント整備\n4. 本番展開"
            ]
          ]
        },
        "tables": {
          "total": 5,
          "total_rows": 34
        }
      },
      "readability": {
        "score": 96.78,
        "sentences": 121,
        "avg_words_per_sentence": 8.41,
        "long_sentences": 13,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 77.53
    },
    "docs/01_機能設計書/06_申請承認ワークフロー/細かい承認制御システム設計書.md": {
      "basic_metrics": {
        "lines": 800,
        "words": 1937,
        "characters": 24355,
        "avg_line_length": 30.44375
      },
      "structure_analysis": {
        "headers": {
          "total": 23,
          "hierarchy": [
            {
              "level": 1,
              "text": "細かい承認制御システム設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 設計アプローチ",
              "line_number": 7
            },
            {
              "level": 3,
              "text": "2.1 制御の粒度",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "2.2 管理対象機能・操作の例",
              "line_number": 21
            },
            {
              "level": 2,
              "text": "3. データベース設計",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "3.1 機能・操作マスタテーブル",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "3.2 承認設定テーブル（更新版）",
              "line_number": 71
            },
            {
              "level": 3,
              "text": "3.3 設定例データ",
              "line_number": 104
            },
            {
              "level": 2,
              "text": "4. 承認制御エンジン（更新版）",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "4.1 承認判定サービス",
              "line_number": 136
            },
            {
              "level": 3,
              "text": "4.2 操作インターセプター",
              "line_number": 258
            },
            {
              "level": 2,
              "text": "5. 管理画面設計",
              "line_number": 338
            },
            {
              "level": 3,
              "text": "5.1 承認制御設定画面",
              "line_number": 340
            },
            {
              "level": 3,
              "text": "5.2 設定概要ダッシュボード",
              "line_number": 543
            },
            {
              "level": 2,
              "text": "6. API設計",
              "line_number": 603
            },
            {
              "level": 3,
              "text": "6.1 承認制御設定API",
              "line_number": 605
            },
            {
              "level": 2,
              "text": "7. 利用シナリオ例",
              "line_number": 713
            },
            {
              "level": 3,
              "text": "7.1 段階的導入シナリオ",
              "line_number": 715
            },
            {
              "level": 3,
              "text": "7.2 部署別設定シナリオ",
              "line_number": 746
            },
            {
              "level": 2,
              "text": "8. まとめ",
              "line_number": 779
            },
            {
              "level": 3,
              "text": "✅ 主要機能",
              "line_number": 783
            },
            {
              "level": 3,
              "text": "🚀 導入効果",
              "line_number": 790
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 12,
          "inline_code": 26,
          "languages": {
            "sql": 3,
            "typescript": 3,
            "vue": 2,
            "javascript": 3
          },
          "details": [
            [
              "",
              "企業\n├── 機能（例：ユーザー管理）\n    ├── 操作：CREATE（登録）→ ワークフローA\n    ├── 操作：UPDATE（更新）→ ワークフローB\n    ├── 操作：DELETE（削除）→ ワークフローC\n    ├── 操作：VIEW（閲覧）→ 承認不要\n    └── 操作：EXPORT（エクスポート）→ ワークフローD"
            ],
            [
              "sql",
              "-- 機能・操作定義マスタテーブル\nCREATE TABLE feature_operations (\n    id SERIAL PRIMARY KEY,\n    feature_code VARCHAR(50) NOT NULL,        -- ユーザー管理、部署管理等\n    feature_name VARCHAR(100) NOT NULL,\n    operation_code VARCHAR(50) NOT NULL,      -- CREATE, UPDATE, DELETE等\n    operation_name VARCHAR(100) NOT NULL,\n    description TEXT,\n    is_available BOOLEAN DEFAULT true,        -- その機能で利用可能な操作か\n    display_order INT DEFAULT 0,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n\n    UNIQUE(feature_code, operation_code)\n);\n\n-- 初期データ例\nINSERT INTO feature_operations (feature_code, feature_name, operation_code, operation_name, description) VALUES\n('USER_MANAGEMENT', 'ユーザー管理', 'CREATE', '登録', 'ユーザーの新規登録'),\n('USER_MANAGEMENT', 'ユーザー管理', 'UPDATE', '更新', 'ユーザー情報の更新'),\n('USER_MANAGEMENT', 'ユーザー管理', 'DELETE', '削除', 'ユーザーの削除'),\n('USER_MANAGEMENT', 'ユーザー管理', 'EXPORT', 'エクスポート', 'ユーザー一覧のエクスポート'),\n('USER_MANAGEMENT', 'ユーザー管理', 'PASSWORD_RESET', 'パスワードリセット', '他ユーザーのパスワードリセット'),\n\n('DEPARTMENT_MANAGEMENT', '部署管理', 'CREATE', '登録', '部署の新規作成'),\n('DEPARTMENT_MANAGEMENT', '部署管理', 'UPDATE', '更新', '部署情報の更新'),\n('DEPARTMENT_MANAGEMENT', '部署管理', 'DELETE', '削除', '部署の削除'),\n('DEPARTMENT_MANAGEMENT', '部署管理', 'RESTRUCTURE', '組織変更', '部署構造の大幅変更'),\n\n('PERMISSION_MANAGEMENT', '権限管理', 'CREATE', '登録', '権限テンプレートの作成'),\n('PERMISSION_MANAGEMENT', '権限管理', 'UPDATE', '更新', '権限テンプレートの更新'),\n('PERMISSION_MANAGEMENT', '権限管理', 'DELETE', '削除', '権限テンプレートの削除'),\n('PERMISSION_MANAGEMENT', '権限管理', 'APPLY', '適用', '権限テンプレートの適用');"
            ],
            [
              "sql",
              "-- 承認制御設定テーブル\nCREATE TABLE approval_control_settings (\n    id SERIAL PRIMARY KEY,\n    company_id INT NOT NULL,\n    feature_code VARCHAR(50) NOT NULL,\n    operation_code VARCHAR(50) NOT NULL,\n    is_approval_enabled BOOLEAN DEFAULT false,   -- 承認の有効/無効\n    workflow_type_id INT,                        -- 割り当てるワークフロー\n    conditions JSON,                             -- 承認が必要な詳細条件\n    bypass_roles JSON,                           -- 承認をバイパスできる役割\n    auto_approve_conditions JSON,                -- 自動承認条件\n    priority INT DEFAULT 0,                      -- 複数条件がある場合の優先度\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INT,\n    updated_by INT,\n\n    FOREIGN KEY (company_id) REFERENCES companies(id),\n    FOREIGN KEY (workflow_type_id) REFERENCES workflow_types(id),\n    FOREIGN KEY (feature_code, operation_code) REFERENCES feature_operations(feature_code, operation_code),\n    UNIQUE(company_id, feature_code, operation_code, priority)\n);\n\n-- インデックス\nCREATE INDEX idx_approval_control_company_feature ON approval_control_settings(company_id, feature_code, operation_code);\nCREATE INDEX idx_approval_control_workflow ON approval_control_settings(workflow_type_id);\nCREATE INDEX idx_approval_control_active ON approval_control_settings(is_active);"
            ],
            [
              "sql",
              "-- 承認制御設定例\nINSERT INTO approval_control_settings (\n    company_id, feature_code, operation_code,\n    is_approval_enabled, workflow_type_id, conditions, bypass_roles\n) VALUES\n-- ユーザー管理：登録は常に承認必要\n(1, 'USER_MANAGEMENT', 'CREATE', true, 1, '{}', '[\"SUPER_ADMIN\"]'),\n\n-- ユーザー管理：更新は権限昇格時のみ承認\n(1, 'USER_MANAGEMENT', 'UPDATE', true, 1,\n '{\"require_approval_when\": [{\"field\": \"role\", \"change_type\": \"upgrade\"}]}',\n '[\"ADMIN\"]'),\n\n-- ユーザー管理：削除は常に承認必要\n(1, 'USER_MANAGEMENT', 'DELETE', true, 2, '{}', '[\"SUPER_ADMIN\"]'),\n\n-- ユーザー管理：エクスポートは100人以上で承認\n(1, 'USER_MANAGEMENT', 'EXPORT', true, 3,\n '{\"require_approval_when\": [{\"field\": \"record_count\", \"operator\": \"greater_than\", \"value\": 100}]}',\n '[\"ADMIN\"]'),\n\n-- 部署管理：削除は所属者がいる場合のみ承認\n(1, 'DEPARTMENT_MANAGEMENT', 'DELETE', true, 2,\n '{\"require_approval_when\": [{\"field\": \"has_members\", \"operator\": \"equals\", \"value\": true}]}',\n '[\"SUPER_ADMIN\"]');"
            ],
            [
              "typescript",
              "export class DetailedApprovalControlService {\n\n  /**\n   * 指定された機能・操作に対する承認要否を判定\n   */\n  async requiresApproval(\n    companyId: number,\n    featureCode: string,\n    operationCode: string,\n    operationData: any,\n    currentUser: User\n  ): Promise<ApprovalRequirement> {\n\n    // 1. 承認制御設定を取得\n    const settings = await prisma.approval_control_settings.findMany({\n      where: {\n        company_id: companyId,\n        feature_code: featureCode,\n        operation_code: operationCode,\n        is_active: true\n      },\n      include: {\n        workflow_types: true\n      },\n      orderBy: {\n        priority: 'desc'  // 優先度の高い順\n      }\n    });\n\n    if (!settings.length) {\n      return { required: false, reason: 'NO_APPROVAL_POLICY' };\n    }\n\n    // 2. 各設定を優先度順にチェック\n    for (const setting of settings) {\n\n      // 2.1 承認が無効な場合はスキップ\n      if (!setting.is_approval_enabled) {\n        continue;\n      }\n\n      // 2.2 バイパス権限チェック\n      if (this.canBypassApproval(currentUser, setting.bypass_roles)) {\n        return { required: false, reason: 'BYPASSED_BY_ROLE', setting };\n      }\n\n      // 2.3 自動承認条件チェック\n      if (await this.meetsAutoApprovalConditions(setting.auto_approve_conditions, operationData, currentUser)) {\n        return { required: false, reason: 'AUTO_APPROVED', setting };\n      }\n\n      // 2.4 承認条件チェック\n      if (await this.meetsApprovalConditions(setting.conditions, operationData, currentUser)) {\n        return {\n          required: true,\n          setting: setting,\n          workflowType: setting.workflow_types,\n          estimatedDuration: await this.estimateApprovalDuration(setting.workflow_type_id)\n        };\n      }\n    }\n\n    return { required: false, reason: 'CONDITIONS_NOT_MET' };\n  }\n\n  /**\n   * 自動承認条件の評価\n   */\n  private async meetsAutoApprovalConditions(\n    conditions: any,\n    operationData: any,\n    currentUser: User\n  ): Promise<boolean> {\n\n    if (!conditions?.auto_approve_when) {\n      return false;\n    }\n\n    for (const condition of conditions.auto_approve_when) {\n      if (await this.evaluateCondition(condition, operationData, currentUser)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 承認必要条件の評価\n   */\n  private async meetsApprovalConditions(\n    conditions: any,\n    operationData: any,\n    currentUser: User\n  ): Promise<boolean> {\n\n    if (!conditions?.require_approval_when) {\n      return true; // 条件未指定の場合は承認必要\n    }\n\n    for (const condition of conditions.require_approval_when) {\n      if (await this.evaluateCondition(condition, operationData, currentUser)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\ninterface ApprovalRequirement {\n  required: boolean;\n  reason?: string;\n  setting?: any;\n  workflowType?: any;\n  estimatedDuration?: number;\n}"
            ],
            [
              "typescript",
              "/**\n * 操作前の承認チェックデコレーター\n */\nexport function RequiresDetailedApproval(featureCode: string, operationCode: string) {\n  return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {\n    const method = descriptor.value;\n\n    descriptor.value = async function (...args: any[]) {\n      const [operationData, currentUser] = args;\n\n      // 1. 承認要否判定\n      const requirement = await detailedApprovalControlService.requiresApproval(\n        currentUser.companyId,\n        featureCode,\n        operationCode,\n        operationData,\n        currentUser\n      );\n\n      if (!requirement.required) {\n        // 承認不要 - 直接実行\n        return await method.apply(this, args);\n      }\n\n      // 2. 承認プロセス開始\n      const approvalRequest = await this.startDetailedApprovalProcess(\n        requirement,\n        featureCode,\n        operationCode,\n        operationData,\n        currentUser\n      );\n\n      return {\n        status: 'PENDING_APPROVAL',\n        approvalRequestId: approvalRequest.id,\n        workflowName: requirement.workflowType.name,\n        estimatedDuration: requirement.estimatedDuration,\n        message: `${requirement.workflowType.name}による承認が必要です`\n      };\n    };\n  };\n}\n\n// 使用例\nexport class UserService {\n\n  @RequiresDetailedApproval('USER_MANAGEMENT', 'CREATE')\n  async createUser(userData: CreateUserRequest, currentUser: User) {\n    return await prisma.users.create({\n      data: userData\n    });\n  }\n\n  @RequiresDetailedApproval('USER_MANAGEMENT', 'UPDATE')\n  async updateUser(userId: number, updateData: UpdateUserRequest, currentUser: User) {\n    return await prisma.users.update({\n      where: { id: userId },\n      data: updateData\n    });\n  }\n\n  @RequiresDetailedApproval('USER_MANAGEMENT', 'DELETE')\n  async deleteUser(userId: number, currentUser: User) {\n    return await prisma.users.update({\n      where: { id: userId },\n      data: { isActive: false }\n    });\n  }\n\n  @RequiresDetailedApproval('USER_MANAGEMENT', 'EXPORT')\n  async exportUsers(filters: ExportFilters, currentUser: User) {\n    // エクスポート処理\n  }\n}"
            ],
            [
              "vue",
              "<template>\n  <div class=\"approval-control-settings\">\n    <el-card header=\"承認制御設定\">\n\n      <!-- 機能選択 -->\n      <el-row class=\"mb-4\">\n        <el-col :span=\"8\">\n          <el-select v-model=\"selectedFeature\" placeholder=\"機能を選択\" @change=\"loadOperations\">\n            <el-option\n              v-for=\"feature in features\"\n              :key=\"feature.code\"\n              :label=\"feature.name\"\n              :value=\"feature.code\"\n            />\n          </el-select>\n        </el-col>\n      </el-row>\n\n      <!-- 操作ごとの設定 -->\n      <el-table :data=\"operationSettings\" style=\"width: 100%\">\n        <el-table-column prop=\"operation_name\" label=\"操作\" width=\"150\" />\n\n        <!-- 承認有効/無効 -->\n        <el-table-column label=\"承認制御\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-switch\n              v-model=\"row.is_approval_enabled\"\n              @change=\"updateApprovalSetting(row)\"\n            />\n          </template>\n        </el-table-column>\n\n        <!-- ワークフロー選択 -->\n        <el-table-column label=\"ワークフロー\" width=\"200\">\n          <template #default=\"{ row }\">\n            <el-select\n              v-model=\"row.workflow_type_id\"\n              :disabled=\"!row.is_approval_enabled\"\n              placeholder=\"ワークフローを選択\"\n              @change=\"updateApprovalSetting(row)\"\n            >\n              <el-option\n                v-for=\"workflow in workflowTypes\"\n                :key=\"workflow.id\"\n                :label=\"workflow.name\"\n                :value=\"workflow.id\"\n              />\n            </el-select>\n          </template>\n        </el-table-column>\n\n        <!-- 条件設定 -->\n        <el-table-column label=\"条件設定\" width=\"150\">\n          <template #default=\"{ row }\">\n            <el-button\n              @click=\"editConditions(row)\"\n              :disabled=\"!row.is_approval_enabled\"\n              size=\"small\"\n            >\n              条件設定\n            </el-button>\n          </template>\n        </el-table-column>\n\n        <!-- バイパス権限 -->\n        <el-table-column label=\"バイパス権限\" width=\"200\">\n          <template #default=\"{ row }\">\n            <el-select\n              v-model=\"row.bypass_roles\"\n              multiple\n              :disabled=\"!row.is_approval_enabled\"\n              placeholder=\"権限を選択\"\n              @change=\"updateApprovalSetting(row)\"\n            >\n              <el-option label=\"システム管理者\" value=\"ADMIN\" />\n              <el-option label=\"スーパー管理者\" value=\"SUPER_ADMIN\" />\n              <el-option label=\"マネージャー\" value=\"MANAGER\" />\n            </el-select>\n          </template>\n        </el-table-column>\n\n        <!-- 設定状況 -->\n        <el-table-column label=\"状況\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag v-if=\"row.is_approval_enabled\" type=\"success\">承認あり</el-tag>\n            <el-tag v-else type=\"info\">承認なし</el-tag>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 条件設定ダイアログ -->\n    <el-dialog v-model=\"showConditionDialog\" title=\"承認条件設定\" width=\"800px\">\n      <div class=\"condition-editor\">\n        <h4>承認が必要な条件</h4>\n        <approval-condition-builder\n          v-model=\"currentConditions.require_approval_when\"\n          :feature-code=\"selectedFeature\"\n          :operation-code=\"currentOperation.operation_code\"\n        />\n\n        <h4 class=\"mt-4\">自動承認条件</h4>\n        <approval-condition-builder\n          v-model=\"currentConditions.auto_approve_when\"\n          :feature-code=\"selectedFeature\"\n          :operation-code=\"currentOperation.operation_code\"\n          type=\"auto-approve\"\n        />\n      </div>\n\n      <template #footer>\n        <el-button @click=\"showConditionDialog = false\">キャンセル</el-button>\n        <el-button type=\"primary\" @click=\"saveConditions\">保存</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue'\n\nconst selectedFeature = ref('')\nconst features = ref([])\nconst operationSettings = ref([])\nconst workflowTypes = ref([])\nconst showConditionDialog = ref(false)\nconst currentOperation = ref({})\nconst currentConditions = ref({\n  require_approval_when: [],\n  auto_approve_when: []\n})\n\n// 機能一覧を取得\nconst loadFeatures = async () => {\n  const response = await fetch('/api/features/operations')\n  features.value = await response.json()\n}\n\n// 操作一覧と現在の設定を取得\nconst loadOperations = async () => {\n  if (!selectedFeature.value) return\n\n  const response = await fetch(`/api/approval-control-settings/${selectedFeature.value}`)\n  operationSettings.value = await response.json()\n}\n\n// ワークフロータイプ一覧を取得\nconst loadWorkflowTypes = async () => {\n  const response = await fetch('/api/workflow-types')\n  workflowTypes.value = await response.json()\n}\n\n// 承認設定を更新\nconst updateApprovalSetting = async (row: any) => {\n  await fetch('/api/approval-control-settings', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      feature_code: selectedFeature.value,\n      operation_code: row.operation_code,\n      is_approval_enabled: row.is_approval_enabled,\n      workflow_type_id: row.workflow_type_id,\n      bypass_roles: row.bypass_roles\n    })\n  })\n}\n\n// 条件設定ダイアログを開く\nconst editConditions = (row: any) => {\n  currentOperation.value = row\n  currentConditions.value = {\n    require_approval_when: row.conditions?.require_approval_when || [],\n    auto_approve_when: row.conditions?.auto_approve_when || []\n  }\n  showConditionDialog.value = true\n}\n\n// 条件を保存\nconst saveConditions = async () => {\n  await fetch('/api/approval-control-settings/conditions', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      feature_code: selectedFeature.value,\n      operation_code: currentOperation.value.operation_code,\n      conditions: currentConditions.value\n    })\n  })\n\n  showConditionDialog.value = false\n  await loadOperations() // 設定を再読み込み\n}\n\nonMounted(() => {\n  loadFeatures()\n  loadWorkflowTypes()\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"approval-overview-dashboard\">\n    <el-row :gutter=\"20\">\n      <!-- 統計情報 -->\n      <el-col :span=\"6\" v-for=\"stat in statistics\" :key=\"stat.label\">\n        <el-card class=\"stat-card\">\n          <div class=\"stat-content\">\n            <div class=\"stat-number\">{{ stat.value }}</div>\n            <div class=\"stat-label\">{{ stat.label }}</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 機能別承認設定一覧 -->\n    <el-card header=\"機能別承認設定状況\" class=\"mt-4\">\n      <el-table :data=\"featureOverview\" style=\"width: 100%\">\n        <el-table-column prop=\"feature_name\" label=\"機能\" width=\"200\" />\n        <el-table-column label=\"操作別設定\">\n          <template #default=\"{ row }\">\n            <div class=\"operation-badges\">\n              <el-tag\n                v-for=\"op in row.operations\"\n                :key=\"op.operation_code\"\n                :type=\"op.approval_enabled ? 'success' : 'info'\"\n                class=\"mr-1 mb-1\"\n                size=\"small\"\n              >\n                {{ op.operation_name }}\n                <span v-if=\"op.approval_enabled\">({{ op.workflow_name }})</span>\n              </el-tag>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"承認率\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-progress\n              :percentage=\"row.approval_percentage\"\n              :color=\"getProgressColor(row.approval_percentage)\"\n              :show-text=\"false\"\n            />\n            <span class=\"ml-2\">{{ row.approval_percentage }}%</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-button size=\"small\" @click=\"editFeatureSettings(row.feature_code)\">\n              設定\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>"
            ],
            [
              "typescript",
              "// GET /api/approval-control-settings/:featureCode\n// 指定機能の承認設定一覧取得\nexport async function getApprovalControlSettings(req: Request, res: Response) {\n  const { featureCode } = req.params\n  const { companyId } = req.user\n\n  const settings = await prisma.approval_control_settings.findMany({\n    where: {\n      company_id: companyId,\n      feature_code: featureCode\n    },\n    include: {\n      workflow_types: {\n        select: { id: true, name: true }\n      }\n    }\n  })\n\n  // 利用可能な操作一覧と設定をマージ\n  const operations = await prisma.feature_operations.findMany({\n    where: { feature_code: featureCode, is_available: true }\n  })\n\n  const result = operations.map(op => {\n    const setting = settings.find(s => s.operation_code === op.operation_code)\n    return {\n      ...op,\n      is_approval_enabled: setting?.is_approval_enabled || false,\n      workflow_type_id: setting?.workflow_type_id,\n      workflow_name: setting?.workflow_types?.name,\n      conditions: setting?.conditions,\n      bypass_roles: setting?.bypass_roles\n    }\n  })\n\n  res.json(result)\n}\n\n// PUT /api/approval-control-settings\n// 承認設定更新\nexport async function updateApprovalControlSetting(req: Request, res: Response) {\n  const { feature_code, operation_code, is_approval_enabled, workflow_type_id, bypass_roles } = req.body\n  const { companyId, userId } = req.user\n\n  await prisma.approval_control_settings.upsert({\n    where: {\n      company_id_feature_code_operation_code_priority: {\n        company_id: companyId,\n        feature_code,\n        operation_code,\n        priority: 0\n      }\n    },\n    update: {\n      is_approval_enabled,\n      workflow_type_id,\n      bypass_roles,\n      updated_by: userId,\n      updated_at: new Date()\n    },\n    create: {\n      company_id: companyId,\n      feature_code,\n      operation_code,\n      is_approval_enabled,\n      workflow_type_id,\n      bypass_roles,\n      created_by: userId\n    }\n  })\n\n  res.json({ success: true })\n}\n\n// GET /api/approval-control-settings/overview\n// 承認設定概要取得\nexport async function getApprovalControlOverview(req: Request, res: Response) {\n  const { companyId } = req.user\n\n  // 機能別の設定状況を集計\n  const overview = await prisma.$queryRaw`\n    SELECT\n      fo.feature_code,\n      fo.feature_name,\n      COUNT(fo.operation_code) as total_operations,\n      COUNT(CASE WHEN acs.is_approval_enabled = true THEN 1 END) as enabled_operations,\n      ROUND(\n        COUNT(CASE WHEN acs.is_approval_enabled = true THEN 1 END) * 100.0 / COUNT(fo.operation_code),\n        1\n      ) as approval_percentage\n    FROM feature_operations fo\n    LEFT JOIN approval_control_settings acs ON (\n      fo.feature_code = acs.feature_code\n      AND fo.operation_code = acs.operation_code\n      AND acs.company_id = ${companyId}\n    )\n    WHERE fo.is_available = true\n    GROUP BY fo.feature_code, fo.feature_name\n    ORDER BY fo.feature_name\n  `\n\n  res.json(overview)\n}"
            ],
            [
              "javascript",
              "// ユーザー管理の DELETE のみ承認を有効化\nawait updateApprovalSetting('USER_MANAGEMENT', 'DELETE', {\n  enabled: true,\n  workflowTypeId: 1, // 高度承認ワークフロー\n  bypassRoles: ['SUPER_ADMIN']\n})"
            ],
            [
              "javascript",
              "// ユーザー管理の CREATE と権限昇格 UPDATE を追加\nawait updateApprovalSetting('USER_MANAGEMENT', 'CREATE', {\n  enabled: true,\n  workflowTypeId: 2, // 標準承認ワークフロー\n})\n\nawait updateApprovalSetting('USER_MANAGEMENT', 'UPDATE', {\n  enabled: true,\n  workflowTypeId: 2,\n  conditions: {\n    require_approval_when: [\n      { field: 'role', change_type: 'upgrade' }\n    ]\n  }\n})"
            ],
            [
              "javascript",
              "// 人事部：すべてのユーザー操作に承認必要\nawait updateApprovalSetting('USER_MANAGEMENT', 'CREATE', {\n  enabled: true,\n  conditions: {\n    require_approval_when: [\n      { field: 'requester_department', operator: 'equals', value: 'HR' }\n    ]\n  }\n})\n\n// 営業部：大量エクスポートのみ承認\nawait updateApprovalSetting('USER_MANAGEMENT', 'EXPORT', {\n  enabled: true,\n  conditions: {\n    require_approval_when: [\n      {\n        field: 'requester_department',\n        operator: 'equals',\n        value: 'SALES'\n      },\n      {\n        field: 'record_count',\n        operator: 'greater_than',\n        value: 50\n      }\n    ]\n  }\n})"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 7
        }
      },
      "readability": {
        "score": 95.96,
        "sentences": 193,
        "avg_words_per_sentence": 10.04,
        "long_sentences": 26,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.09
    },
    "docs/01_機能設計書/レビュー記録/ユーザー管理API修正レビュー記録.md": {
      "basic_metrics": {
        "lines": 137,
        "words": 280,
        "characters": 2304,
        "avg_line_length": 16.817518248175183
      },
      "structure_analysis": {
        "headers": {
          "total": 26,
          "hierarchy": [
            {
              "level": 1,
              "text": "ユーザー管理API修正レビュー記録",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "発生日時",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "発生した問題",
              "line_number": 6
            },
            {
              "level": 3,
              "text": "現象",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "エラーメッセージ",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "根本原因",
              "line_number": 17
            },
            {
              "level": 2,
              "text": "影響範囲",
              "line_number": 27
            },
            {
              "level": 2,
              "text": "修正内容",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "1. APIレスポンス形式の統一",
              "line_number": 37
            },
            {
              "level": 3,
              "text": "2. バリデーション強化",
              "line_number": 42
            },
            {
              "level": 3,
              "text": "3. エラーハンドリング統一",
              "line_number": 47
            },
            {
              "level": 2,
              "text": "再発防止策",
              "line_number": 52
            },
            {
              "level": 3,
              "text": "1. スキーマ変更時の確認チェックリスト",
              "line_number": 54
            },
            {
              "level": 3,
              "text": "2. 段階的実装の手順明確化",
              "line_number": 60
            },
            {
              "level": 3,
              "text": "3. コードレビューポイント強化",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "4. 自動化検討",
              "line_number": 72
            },
            {
              "level": 2,
              "text": "学習ポイント",
              "line_number": 77
            },
            {
              "level": 2,
              "text": "修正担当者",
              "line_number": 82
            },
            {
              "level": 2,
              "text": "確認者",
              "line_number": 85
            },
            {
              "level": 2,
              "text": "修正完了日",
              "line_number": 88
            },
            {
              "level": 2,
              "text": "修正結果",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "API動作確認",
              "line_number": 93
            },
            {
              "level": 3,
              "text": "改善された機能",
              "line_number": 101
            },
            {
              "level": 2,
              "text": "動作確認結果",
              "line_number": 122
            },
            {
              "level": 1,
              "text": "ユーザー一覧取得テスト結果",
              "line_number": 124
            },
            {
              "level": 2,
              "text": "修正ファイル",
              "line_number": 136
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 2,
          "inline_code": 11,
          "languages": {
            "bash": 1
          },
          "details": [
            [
              "",
              "Unknown field `department` for select statement on model `User`. Available options are marked with ?."
            ],
            [
              "bash",
              "# ユーザー一覧取得テスト結果\nGET /api/users?page=1&pageSize=5\nHTTP Status: 200\nResponse: 1384 bytes (3ユーザー、ページネーション情報含む)"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 95.56,
        "sentences": 27,
        "avg_words_per_sentence": 10.37,
        "long_sentences": 4,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 36.6,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 65.81
    },
    "docs/01_機能設計書/11_メッセージ管理/MessageService使用ガイド.md": {
      "basic_metrics": {
        "lines": 349,
        "words": 677,
        "characters": 5963,
        "avg_line_length": 17.08595988538682
      },
      "structure_analysis": {
        "headers": {
          "total": 33,
          "hierarchy": [
            {
              "level": 1,
              "text": "MessageService 使用ガイド",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 基本的な使い方",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "2.1 インポート",
              "line_number": 10
            },
            {
              "level": 3,
              "text": "2.2 メッセージの表示",
              "line_number": 16
            },
            {
              "level": 4,
              "text": "エラーコードで表示",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2.3 オプション付き表示",
              "line_number": 33
            },
            {
              "level": 2,
              "text": "3. 高度な使い方",
              "line_number": 54
            },
            {
              "level": 3,
              "text": "3.1 APIエラーハンドリング",
              "line_number": 56
            },
            {
              "level": 3,
              "text": "3.2 確認ダイアログ",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "3.3 カスタムメッセージ",
              "line_number": 83
            },
            {
              "level": 3,
              "text": "3.4 複数メッセージの表示",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "3.5 バリデーションエラー",
              "line_number": 107
            },
            {
              "level": 2,
              "text": "4. Vue コンポーネントでの使用例",
              "line_number": 120
            },
            {
              "level": 3,
              "text": "4.1 ログインコンポーネント",
              "line_number": 122
            },
            {
              "level": 3,
              "text": "4.2 CRUDオペレーション",
              "line_number": 144
            },
            {
              "level": 3,
              "text": "4.3 フォームバリデーション",
              "line_number": 182
            },
            {
              "level": 2,
              "text": "5. グローバル設定",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "5.1 デフォルト設定の変更",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "5.2 インスタンス作成",
              "line_number": 222
            },
            {
              "level": 2,
              "text": "6. エラーコード体系",
              "line_number": 237
            },
            {
              "level": 3,
              "text": "6.1 コード形式",
              "line_number": 239
            },
            {
              "level": 3,
              "text": "6.2 タイプ識別子",
              "line_number": 245
            },
            {
              "level": 3,
              "text": "6.3 カテゴリ識別子",
              "line_number": 251
            },
            {
              "level": 2,
              "text": "7. ベストプラクティス",
              "line_number": 261
            },
            {
              "level": 3,
              "text": "7.1 一貫性のあるエラーハンドリング",
              "line_number": 263
            },
            {
              "level": 3,
              "text": "7.2 適切なメッセージタイプの選択",
              "line_number": 283
            },
            {
              "level": 3,
              "text": "7.3 詳細メッセージの活用",
              "line_number": 299
            },
            {
              "level": 2,
              "text": "8. トラブルシューティング",
              "line_number": 310
            },
            {
              "level": 3,
              "text": "8.1 メッセージが表示されない",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "8.2 メッセージをクリア",
              "line_number": 325
            },
            {
              "level": 3,
              "text": "8.3 新しいメッセージコードの追加",
              "line_number": 334
            },
            {
              "level": 2,
              "text": "9. 更新履歴",
              "line_number": 340
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 19,
          "inline_code": 39,
          "languages": {
            "typescript": 15,
            "vue": 3
          },
          "details": [
            [
              "typescript",
              "import { showMessage, showError, showWarning, showInfo, showSuccess } from '@/utils/messages'"
            ],
            [
              "typescript",
              "// 成功メッセージ\nshowSuccess('S-AUTH-001')  // \"ログインに成功しました\"\n\n// エラーメッセージ\nshowError('E-AUTH-001')    // \"ログインに失敗しました\"\n\n// 警告メッセージ\nshowWarning('W-AUTH-001')  // \"セッションがまもなく期限切れです\"\n\n// 情報メッセージ\nshowInfo('I-SYS-001')      // \"システムを初期化しています\""
            ],
            [
              "typescript",
              "// 詳細メッセージも表示\nshowError('E-AUTH-001', {\n  showDetail: true,\n  duration: 5000,\n  closable: true\n})\n\n// エラーコードも表示\nshowError('E-NET-001', {\n  showCode: true  // \"[E-NET-001] ネットワークエラーが発生しました\"\n})\n\n// 通知形式で表示\nshowSuccess('S-USER-001', {\n  showNotification: true\n})"
            ],
            [
              "typescript",
              "try {\n  const response = await api.post('/api/users', userData)\n  showSuccess('S-USER-001')\n} catch (error) {\n  // APIエラーを自動判定して適切なメッセージを表示\n  showApiError(error, 'E-USER-001')  // デフォルトコード指定\n}"
            ],
            [
              "typescript",
              "import { confirm } from '@/utils/messages'\n\nconst handleDelete = async (id: number) => {\n  const confirmed = await confirm('E-USER-002')  // 削除確認メッセージ\n\n  if (confirmed) {\n    await deleteUser(id)\n    showSuccess('S-USER-003')\n  }\n}"
            ],
            [
              "typescript",
              "import { messageService } from '@/utils/messages'\n\n// 一時的なカスタムメッセージ\nmessageService.showCustom('処理が完了しました', 'success')\n\n// コード定義と異なるメッセージで表示\nmessageService.showByCode('E-USER-001', {}, 'カスタムエラーメッセージ')"
            ],
            [
              "typescript",
              "import { messageService } from '@/utils/messages'\n\n// 複数のメッセージを順番に表示\nmessageService.showMultiple([\n  'I-DATA-001',  // データ読み込み中\n  'S-DATA-001'   // データ保存完了\n])"
            ],
            [
              "typescript",
              "import { messageService } from '@/utils/messages'\n\nconst validationErrors = {\n  username: 'ユーザー名は必須です',\n  email: 'メールアドレスの形式が正しくありません'\n}\n\nmessageService.showValidationErrors(validationErrors)"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\nimport { showSuccess, showApiError } from '@/utils/messages'\n\nconst handleLogin = async () => {\n  try {\n    const response = await api.post('/api/auth/login', {\n      username: loginForm.username,\n      password: loginForm.password\n    })\n\n    showSuccess('S-AUTH-001')  // ログイン成功\n    router.push('/dashboard')\n  } catch (error) {\n    showApiError(error, 'E-AUTH-001')  // ログイン失敗\n  }\n}\n</script>"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\nimport { showSuccess, showError, showApiError } from '@/utils/messages'\n\n// 作成\nconst handleCreate = async (data: any) => {\n  try {\n    await createUser(data)\n    showSuccess('S-USER-001')  // ユーザー作成成功\n  } catch (error) {\n    showApiError(error, 'E-USER-001')\n  }\n}\n\n// 更新\nconst handleUpdate = async (id: number, data: any) => {\n  try {\n    await updateUser(id, data)\n    showSuccess('S-USER-002')  // ユーザー更新成功\n  } catch (error) {\n    showApiError(error, 'E-USER-005')\n  }\n}\n\n// 削除\nconst handleDelete = async (id: number) => {\n  try {\n    await deleteUser(id)\n    showSuccess('S-USER-003')  // ユーザー削除成功\n  } catch (error) {\n    showError('E-USER-006')\n  }\n}\n</script>"
            ],
            [
              "vue",
              "<script setup lang=\"ts\">\nimport { showError } from '@/utils/messages'\n\nconst validateForm = () => {\n  if (!formData.email) {\n    showError('E-VALID-001')  // 必須項目未入力\n    return false\n  }\n\n  if (!isValidEmail(formData.email)) {\n    showError('E-VALID-005')  // メール形式エラー\n    return false\n  }\n\n  return true\n}\n</script>"
            ],
            [
              "typescript",
              "// main.ts\nimport { messageService } from '@/utils/messages'\n\n// グローバルオプション設定\nmessageService.setGlobalOptions({\n  duration: 5000,          // 表示時間を5秒に\n  showDetail: true,        // 常に詳細を表示\n  closable: true,          // 常に閉じるボタンを表示\n  showCode: false,         // コードは表示しない\n  showNotification: false  // 通知形式は使用しない\n})"
            ],
            [
              "typescript",
              "import { MessageService } from '@/utils/messages'\n\n// カスタムインスタンス作成\nconst customMessageService = MessageService.getInstance({\n  duration: 10000,\n  showCode: true,\n  showNotification: true\n})\n\ncustomMessageService.showError('E-NET-001')"
            ],
            [
              "",
              "[タイプ][カテゴリ][番号]\n例: E-AUTH-001"
            ],
            [
              "typescript",
              "// 良い例\ntry {\n  await someOperation()\n  showSuccess('S-DATA-001')\n} catch (error) {\n  showApiError(error, 'E-DATA-001')\n}\n\n// 避けるべき例\ntry {\n  await someOperation()\n  ElMessage.success('成功しました')  // 直接ElMessageを使用\n} catch (error) {\n  console.error(error)  // エラーメッセージ表示なし\n}"
            ],
            [
              "typescript",
              "// 成功: 操作が正常に完了\nshowSuccess('S-USER-001')\n\n// エラー: 操作が失敗、ユーザーの対応が必要\nshowError('E-USER-001')\n\n// 警告: 操作は成功したが注意が必要\nshowWarning('W-USER-001')\n\n// 情報: 処理状況や一般的な情報\nshowInfo('I-SYS-001')"
            ],
            [
              "typescript",
              "// デバッグ時や詳細情報が必要な場合\nshowError('E-NET-001', {\n  showDetail: true,\n  showCode: true,\n  duration: 0  // 自動で消えない\n})"
            ],
            [
              "typescript",
              "// メッセージコードが存在するか確認\nimport { messageDefinitions } from '@/utils/messages'\n\nif (messageDefinitions['E-USER-001']) {\n  showError('E-USER-001')\n} else {\n  console.error('メッセージコードが定義されていません')\n}"
            ],
            [
              "typescript",
              "import { messageService } from '@/utils/messages'\n\n// すべてのメッセージをクリア\nmessageService.clearAll()"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 3
        }
      },
      "readability": {
        "score": 95.65,
        "sentences": 62,
        "avg_words_per_sentence": 10.92,
        "long_sentences": 9,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 55.54,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.41
    },
    "docs/01_機能設計書/11_メッセージ管理/メッセージコード定義書.md": {
      "basic_metrics": {
        "lines": 229,
        "words": 954,
        "characters": 6579,
        "avg_line_length": 28.729257641921397
      },
      "structure_analysis": {
        "headers": {
          "total": 41,
          "hierarchy": [
            {
              "level": 1,
              "text": "メッセージコード定義書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 コード体系",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "2. コード体系詳細",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "2.1 タイプ識別子",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "2.2 カテゴリ識別子",
              "line_number": 22
            },
            {
              "level": 2,
              "text": "3. メッセージコード定義",
              "line_number": 34
            },
            {
              "level": 3,
              "text": "3.1 認証関連 (AUTH)",
              "line_number": 36
            },
            {
              "level": 4,
              "text": "エラー (E-AUTH-XXX)",
              "line_number": 38
            },
            {
              "level": 4,
              "text": "警告 (W-AUTH-XXX)",
              "line_number": 48
            },
            {
              "level": 4,
              "text": "成功 (S-AUTH-XXX)",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "3.2 ユーザー管理 (USER)",
              "line_number": 62
            },
            {
              "level": 4,
              "text": "エラー (E-USER-XXX)",
              "line_number": 64
            },
            {
              "level": 4,
              "text": "警告 (W-USER-XXX)",
              "line_number": 74
            },
            {
              "level": 4,
              "text": "成功 (S-USER-XXX)",
              "line_number": 80
            },
            {
              "level": 3,
              "text": "3.3 データ操作 (DATA)",
              "line_number": 88
            },
            {
              "level": 4,
              "text": "エラー (E-DATA-XXX)",
              "line_number": 90
            },
            {
              "level": 4,
              "text": "情報 (I-DATA-XXX)",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "成功 (S-DATA-XXX)",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "3.4 ネットワーク (NET)",
              "line_number": 113
            },
            {
              "level": 4,
              "text": "エラー (E-NET-XXX)",
              "line_number": 115
            },
            {
              "level": 4,
              "text": "警告 (W-NET-XXX)",
              "line_number": 124
            },
            {
              "level": 3,
              "text": "3.5 入力検証 (VALID)",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "エラー (E-VALID-XXX)",
              "line_number": 132
            },
            {
              "level": 4,
              "text": "警告 (W-VALID-XXX)",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "3.6 システム (SYS)",
              "line_number": 149
            },
            {
              "level": 4,
              "text": "エラー (E-SYS-XXX)",
              "line_number": 151
            },
            {
              "level": 4,
              "text": "情報 (I-SYS-XXX)",
              "line_number": 159
            },
            {
              "level": 4,
              "text": "成功 (S-SYS-XXX)",
              "line_number": 165
            },
            {
              "level": 3,
              "text": "3.7 ファイル操作 (FILE)",
              "line_number": 171
            },
            {
              "level": 4,
              "text": "エラー (E-FILE-XXX)",
              "line_number": 173
            },
            {
              "level": 4,
              "text": "成功 (S-FILE-XXX)",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "3.8 権限 (PERM)",
              "line_number": 188
            },
            {
              "level": 4,
              "text": "エラー (E-PERM-XXX)",
              "line_number": 190
            },
            {
              "level": 4,
              "text": "警告 (W-PERM-XXX)",
              "line_number": 197
            },
            {
              "level": 2,
              "text": "4. 使用ガイドライン",
              "line_number": 202
            },
            {
              "level": 3,
              "text": "4.1 コード選択基準",
              "line_number": 204
            },
            {
              "level": 3,
              "text": "4.2 メッセージ作成規則",
              "line_number": 210
            },
            {
              "level": 3,
              "text": "4.3 多言語対応",
              "line_number": 216
            },
            {
              "level": 2,
              "text": "5. 更新履歴",
              "line_number": 219
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 2,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 23,
          "total_rows": 129
        }
      },
      "readability": {
        "score": 72.55,
        "sentences": 40,
        "avg_words_per_sentence": 23.85,
        "long_sentences": 13,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 49.08,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 63.9
    },
    "docs/01_機能設計書/05_レスポンシブ対応/レスポンシブ対応設計書.md": {
      "basic_metrics": {
        "lines": 500,
        "words": 1144,
        "characters": 9648,
        "avg_line_length": 19.296
      },
      "structure_analysis": {
        "headers": {
          "total": 45,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブ対応設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "対象範囲",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "📐 ブレイクポイント設計",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "ブレイクポイント定義",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "メディアクエリ戦略",
              "line_number": 28
            },
            {
              "level": 2,
              "text": "📱 デバイス別UI設計",
              "line_number": 38
            },
            {
              "level": 3,
              "text": "スマートフォン (xs-sm)",
              "line_number": 40
            },
            {
              "level": 3,
              "text": "タブレット (md-lg)",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "デスクトップ (xl-xxl)",
              "line_number": 54
            },
            {
              "level": 2,
              "text": "🎯 コンポーネント別対応",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "共通レスポンシブコンポーネント体系",
              "line_number": 63
            },
            {
              "level": 4,
              "text": "ResponsiveCrudPage（最重要）",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "ResponsiveTable",
              "line_number": 92
            },
            {
              "level": 4,
              "text": "ResponsiveDialog",
              "line_number": 130
            },
            {
              "level": 4,
              "text": "ResponsiveForm",
              "line_number": 153
            },
            {
              "level": 4,
              "text": "ResponsiveGrid",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "グリッドシステム",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "フォームレスポンシブ",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "ボタンレスポンシブ",
              "line_number": 227
            },
            {
              "level": 2,
              "text": "🖼️ レイアウト実装",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "Dashboard レスポンシブ",
              "line_number": 246
            },
            {
              "level": 3,
              "text": "Users画面レスポンシブ",
              "line_number": 276
            },
            {
              "level": 2,
              "text": "📏 タッチ最適化",
              "line_number": 303
            },
            {
              "level": 3,
              "text": "タッチターゲット仕様",
              "line_number": 305
            },
            {
              "level": 3,
              "text": "スワイプ・ジェスチャー対応",
              "line_number": 321
            },
            {
              "level": 2,
              "text": "🔧 Composable実装",
              "line_number": 331
            },
            {
              "level": 3,
              "text": "useResponsive",
              "line_number": 333
            },
            {
              "level": 3,
              "text": "useBreakpoint",
              "line_number": 367
            },
            {
              "level": 2,
              "text": "🧪 テスト戦略",
              "line_number": 385
            },
            {
              "level": 3,
              "text": "レスポンシブテスト",
              "line_number": 387
            },
            {
              "level": 3,
              "text": "ビジュアル回帰テスト",
              "line_number": 415
            },
            {
              "level": 2,
              "text": "📊 パフォーマンス最適化",
              "line_number": 420
            },
            {
              "level": 3,
              "text": "画像最適化",
              "line_number": 422
            },
            {
              "level": 3,
              "text": "CSSバンドル最適化",
              "line_number": 433
            },
            {
              "level": 2,
              "text": "🚀 実装状況",
              "line_number": 445
            },
            {
              "level": 3,
              "text": "完了済み（既存）",
              "line_number": 447
            },
            {
              "level": 3,
              "text": "2025-09-27 新規実装計画",
              "line_number": 453
            },
            {
              "level": 4,
              "text": "Phase 1: 共通コンポーネント開発（3日）",
              "line_number": 454
            },
            {
              "level": 4,
              "text": "Phase 2: パイロット適用（2日）",
              "line_number": 461
            },
            {
              "level": 4,
              "text": "Phase 3: 全面展開（5日）",
              "line_number": 465
            },
            {
              "level": 3,
              "text": "実装効果の測定",
              "line_number": 478
            },
            {
              "level": 3,
              "text": "今後の改善",
              "line_number": 483
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 489
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 18,
          "inline_code": 37,
          "languages": {
            "scss": 4,
            "vue": 6,
            "typescript": 6,
            "css": 2
          },
          "details": [
            [
              "scss",
              "// Mobile First アプローチ\n@media (min-width: 576px) { /* sm以上 */ }\n@media (min-width: 768px) { /* md以上 */ }\n@media (min-width: 992px) { /* lg以上 */ }\n@media (min-width: 1200px) { /* xl以上 */ }\n@media (min-width: 1920px) { /* xxl以上 */ }"
            ],
            [
              "vue",
              "<template>\n  <!-- CRUD画面の共通パターン（10画面対応） -->\n  <ResponsiveCrudPage\n    title=\"ユーザー管理\"\n    :columns=\"tableColumns\"\n    :data=\"tableData\"\n    :dialog-width=\"500\"\n    @add=\"handleAdd\"\n    @edit=\"handleEdit\"\n    @delete=\"handleDelete\"\n  >\n    <template #search>\n      <el-input v-model=\"search\" placeholder=\"検索...\" />\n    </template>\n    <template #dialog-content>\n      <ResponsiveForm :model=\"form\" :rules=\"rules\">\n        <!-- フォーム内容 -->\n      </ResponsiveForm>\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <!-- テーブルのレスポンシブ対応を一元化 -->\n  <div class=\"responsive-table-container\">\n    <el-table\n      :data=\"data\"\n      :style=\"{ minWidth: computedMinWidth }\"\n      v-bind=\"$attrs\"\n    >\n      <el-table-column\n        v-for=\"column in visibleColumns\"\n        :key=\"column.prop\"\n        v-bind=\"getColumnProps(column)\"\n      />\n      <el-table-column\n        label=\"操作\"\n        :width=\"actionWidth\"\n        :fixed=\"!isMobile && 'right'\"\n      >\n        <template #default=\"{ row }\">\n          <slot name=\"actions\" :row=\"row\">\n            <el-button size=\"small\" @click=\"$emit('edit', row)\">編集</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"$emit('delete', row)\">削除</el-button>\n          </slot>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <!-- ダイアログの幅を自動調整 -->\n  <el-dialog\n    v-model=\"modelValue\"\n    :title=\"title\"\n    :width=\"computedWidth\"\n    :fullscreen=\"isMobile && fullscreenOnMobile\"\n  >\n    <slot></slot>\n  </el-dialog>\n</template>\n\n<script setup lang=\"ts\">\nconst computedWidth = computed(() => {\n  if (isMobile.value) return '95%'\n  if (isTablet.value) return '80%'\n  return props.desktopWidth || '600px'\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <!-- フォームレイアウトの自動調整 -->\n  <el-form\n    :model=\"model\"\n    :rules=\"rules\"\n    :label-position=\"computedLabelPosition\"\n    :label-width=\"computedLabelWidth\"\n  >\n    <slot></slot>\n  </el-form>\n</template>\n\n<script setup lang=\"ts\">\nconst computedLabelPosition = computed(() => {\n  if (isMobile.value) return 'top'\n  return props.labelPosition || 'right'\n})\n\nconst computedLabelWidth = computed(() => {\n  if (isMobile.value) return 'auto'\n  return props.labelWidth || '120px'\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <!-- グリッドレイアウトの簡略化 -->\n  <el-row :gutter=\"computedGutter\">\n    <slot></slot>\n  </el-row>\n</template>\n\n<!-- ResponsiveCol -->\n<template>\n  <el-col\n    :xs=\"xs || mobile || 24\"\n    :sm=\"sm || tablet || mobile || 24\"\n    :md=\"md || tablet || desktop || 12\"\n    :lg=\"lg || desktop || 8\"\n    :xl=\"xl || desktop || 6\"\n  >\n    <slot></slot>\n  </el-col>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <!-- 新しいレスポンシブカラム -->\n  <ResponsiveGrid :gutter=\"20\">\n    <ResponsiveCol :mobile=\"24\" :tablet=\"12\" :desktop=\"6\">\n      統計カード\n    </ResponsiveCol>\n  </ResponsiveGrid>\n</template>"
            ],
            [
              "typescript",
              "// CommonForm のレスポンシブ制御\nconst computedLabelPosition = computed((): LabelPosition => {\n  if (props.responsive) {\n    if (isMobile.value) return 'top'        // モバイル: 縦積み\n    if (isTablet.value) return 'top'        // タブレット: 縦積み\n  }\n  return props.labelPosition                // デスクトップ: 横並び\n})"
            ],
            [
              "css",
              ".common-button--responsive {\n  /* モバイル: フル幅 */\n  @media (max-width: 767px) {\n    width: 100%;\n    margin-bottom: 8px;\n  }\n\n  /* タブレット: 適度な余白 */\n  @media (min-width: 768px) and (max-width: 991px) {\n    min-width: 120px;\n    margin-right: 8px;\n  }\n}"
            ],
            [
              "scss",
              "// 統計サマリー\n.stats-row {\n  .el-col {\n    @media (max-width: 767px) {\n      span: 24; margin-bottom: 16px;\n    }\n    @media (min-width: 768px) and (max-width: 991px) {\n      span: 12;\n    }\n    @media (min-width: 992px) {\n      span: 6;\n    }\n  }\n}\n\n// メインコンテンツ\n.content-row {\n  @media (max-width: 767px) {\n    .el-col:first-child { span: 24; margin-bottom: 20px; }\n    .el-col:last-child { span: 24; }\n  }\n  @media (min-width: 768px) {\n    .el-col:first-child { span: 16; }\n    .el-col:last-child { span: 8; }\n  }\n}"
            ],
            [
              "scss",
              "// 検索フォーム\n.search-form {\n  @media (max-width: 767px) {\n    .el-form-item {\n      display: block;\n      margin-right: 0;\n      margin-bottom: 16px;\n    }\n  }\n}\n\n// テーブル\n.users-table {\n  @media (max-width: 767px) {\n    .el-table__body-wrapper {\n      overflow-x: auto;\n    }\n    .el-table th,\n    .el-table td {\n      min-width: 100px;\n    }\n  }\n}"
            ],
            [
              "css",
              ".touch-optimized {\n  min-height: 44px;\n  min-width: 44px;\n\n  /* 拡張タッチ領域 */\n  &::before {\n    content: '';\n    position: absolute;\n    top: -12px; left: -12px;\n    right: -12px; bottom: -12px;\n  }\n}"
            ],
            [
              "typescript",
              "// 将来実装予定\ninterface TouchGesture {\n  swipeLeft: () => void    // 左スワイプ\n  swipeRight: () => void   // 右スワイプ\n  pinchZoom: (scale: number) => void  // ピンチズーム\n}"
            ],
            [
              "typescript",
              "import { ref, computed, onMounted, onUnmounted } from 'vue'\n\nexport const useResponsive = () => {\n  const windowWidth = ref(window.innerWidth)\n\n  const isMobile = computed(() => windowWidth.value < 768)\n  const isTablet = computed(() =>\n    windowWidth.value >= 768 && windowWidth.value < 992\n  )\n  const isDesktop = computed(() => windowWidth.value >= 992)\n\n  const updateWidth = () => {\n    windowWidth.value = window.innerWidth\n  }\n\n  onMounted(() => {\n    window.addEventListener('resize', updateWidth)\n  })\n\n  onUnmounted(() => {\n    window.removeEventListener('resize', updateWidth)\n  })\n\n  return {\n    windowWidth: readonly(windowWidth),\n    isMobile,\n    isTablet,\n    isDesktop\n  }\n}"
            ],
            [
              "typescript",
              "export const useBreakpoint = () => {\n  const { windowWidth } = useResponsive()\n\n  const currentBreakpoint = computed(() => {\n    if (windowWidth.value < 576) return 'xs'\n    if (windowWidth.value < 768) return 'sm'\n    if (windowWidth.value < 992) return 'md'\n    if (windowWidth.value < 1200) return 'lg'\n    if (windowWidth.value < 1920) return 'xl'\n    return 'xxl'\n  })\n\n  return { currentBreakpoint }\n}"
            ],
            [
              "typescript",
              "// Playwright E2Eテスト\ntest.describe('Responsive Layout', () => {\n  const devices = [\n    { name: 'iPhone 12', width: 390, height: 844 },\n    { name: 'iPad', width: 768, height: 1024 },\n    { name: 'Desktop', width: 1200, height: 800 }\n  ]\n\n  devices.forEach(device => {\n    test(`Layout on ${device.name}`, async ({ page }) => {\n      await page.setViewportSize({\n        width: device.width,\n        height: device.height\n      })\n      await page.goto('/dashboard')\n\n      // レイアウト確認\n      await expect(page.locator('.stats-row')).toBeVisible()\n\n      // スクリーンショット比較\n      await expect(page).toHaveScreenshot(`dashboard-${device.name}.png`)\n    })\n  })\n})"
            ],
            [
              "typescript",
              "// レスポンシブ画像\ninterface ResponsiveImageProps {\n  src: string\n  srcSet?: string      // 複数解像度対応\n  sizes?: string       // サイズ指定\n  loading?: 'lazy'     // 遅延読み込み\n}"
            ],
            [
              "scss",
              "// 条件付きCSS読み込み\n@media (max-width: 767px) {\n  @import 'mobile-styles';\n}\n\n@media (min-width: 768px) {\n  @import 'desktop-styles';\n}"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 8
        }
      },
      "readability": {
        "score": 93.92,
        "sentences": 79,
        "avg_words_per_sentence": 14.48,
        "long_sentences": 16,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.48
    },
    "docs/01_機能設計書/12_ログ監視システム/実装仕様書.md": {
      "basic_metrics": {
        "lines": 825,
        "words": 2149,
        "characters": 20410,
        "avg_line_length": 24.73939393939394
      },
      "structure_analysis": {
        "headers": {
          "total": 24,
          "hierarchy": [
            {
              "level": 1,
              "text": "ログ監視システム実装仕様書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 実装対象一覧",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 Phase 1: 基盤実装（優先度：高）",
              "line_number": 5
            },
            {
              "level": 4,
              "text": "1.1.1 バックエンド実装",
              "line_number": 7
            },
            {
              "level": 4,
              "text": "1.1.2 フロントエンド実装",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "1.2 Phase 2: 監視ダッシュボード（優先度：高）",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "1.2.1 ダッシュボード画面",
              "line_number": 25
            },
            {
              "level": 4,
              "text": "1.2.2 共通コンポーネント",
              "line_number": 34
            },
            {
              "level": 3,
              "text": "1.3 Phase 3: 分析・アラート（優先度：中）",
              "line_number": 41
            },
            {
              "level": 4,
              "text": "1.3.1 分析機能",
              "line_number": 43
            },
            {
              "level": 4,
              "text": "1.3.2 アラート機能",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "2. 詳細実装仕様",
              "line_number": 57
            },
            {
              "level": 3,
              "text": "2.1 データベーススキーマ",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "2.1.1 Prisma スキーマ定義",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "2.2 バックエンドAPI実装",
              "line_number": 144
            },
            {
              "level": 4,
              "text": "2.2.1 ログコントローラ",
              "line_number": 146
            },
            {
              "level": 4,
              "text": "2.2.2 ログサービス",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "2.3 フロントエンド実装",
              "line_number": 502
            },
            {
              "level": 4,
              "text": "2.3.1 ログ型定義",
              "line_number": 504
            },
            {
              "level": 4,
              "text": "2.3.2 ログ収集サービス",
              "line_number": 592
            },
            {
              "level": 2,
              "text": "3. 実装優先順位",
              "line_number": 801
            },
            {
              "level": 3,
              "text": "3.1 必須実装（Phase 1）",
              "line_number": 803
            },
            {
              "level": 3,
              "text": "3.2 高優先度（Phase 2）",
              "line_number": 809
            },
            {
              "level": 3,
              "text": "3.3 中優先度（Phase 3）",
              "line_number": 815
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 5,
          "inline_code": 36,
          "languages": {
            "prisma": 1,
            "typescript": 4
          },
          "details": [
            [
              "prisma",
              "// prisma/schema.prisma\n\nmodel Log {\n  id        BigInt   @id @default(autoincrement())\n  timestamp DateTime @default(now())\n  level     Int\n  category  String   @db.VarChar(50)\n  message   String\n\n  // 追跡情報\n  traceId   String? @db.VarChar(100)\n  sessionId String? @db.VarChar(100)\n  userId    Int?\n  user      User?   @relation(fields: [userId], references: [id])\n\n  // システム情報\n  source   String  @db.VarChar(50)\n  hostname String? @db.VarChar(255)\n  service  String? @db.VarChar(100)\n\n  // 詳細情報\n  details         Json?\n  errorInfo       Json?\n  performanceInfo Json?\n\n  // メタデータ\n  tags        String[]\n  environment String   @db.VarChar(50) @default(\"development\")\n\n  createdAt DateTime @default(now())\n\n  @@index([timestamp(sort: Desc)])\n  @@index([level])\n  @@index([category])\n  @@index([source])\n  @@index([traceId])\n  @@index([userId])\n  @@index([environment])\n  @@map(\"logs\")\n}\n\nmodel LogStatistics {\n  id       Int    @id @default(autoincrement())\n  date     DateTime @db.Date\n  hour     Int?   @db.SmallInt\n  level    Int\n  category String @db.VarChar(50)\n  source   String @db.VarChar(50)\n  count    Int    @default(0)\n\n  @@unique([date, hour, level, category, source])\n  @@index([date(sort: Desc)])\n  @@map(\"log_statistics\")\n}\n\nmodel AlertRule {\n  id          Int      @id @default(autoincrement())\n  name        String   @db.VarChar(255)\n  description String?\n\n  // 条件\n  level          Int?\n  category       String? @db.VarChar(50)\n  source         String? @db.VarChar(50)\n  messagePattern String?\n\n  // 閾値\n  thresholdCount  Int @default(1)\n  thresholdPeriod Int @default(300)\n\n  // 通知設定\n  notificationChannels String[]\n\n  isEnabled Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"alert_rules\")\n}"
            ],
            [
              "typescript",
              "// src/controllers/LogController.ts\nimport { Request, Response } from 'express'\nimport { LogService } from '../services/LogService'\nimport { showError, showSuccess } from '../utils/messages'\n\nexport class LogController {\n  private logService: LogService\n\n  constructor() {\n    this.logService = new LogService()\n  }\n\n  // ログ収集\n  async collectLogs(req: Request, res: Response) {\n    try {\n      const { logs } = req.body\n\n      if (!Array.isArray(logs) || logs.length === 0) {\n        return res.status(400).json({\n          success: false,\n          message: 'ログデータが不正です'\n        })\n      }\n\n      const result = await this.logService.saveLogs(logs)\n\n      res.json({\n        success: true,\n        received: result.saved,\n        errors: result.errors\n      })\n    } catch (error) {\n      console.error('ログ収集エラー:', error)\n      res.status(500).json({\n        success: false,\n        message: 'ログの保存に失敗しました'\n      })\n    }\n  }\n\n  // ログ検索\n  async searchLogs(req: Request, res: Response) {\n    try {\n      const searchParams = {\n        startTime: req.query.startTime as string,\n        endTime: req.query.endTime as string,\n        levels: req.query.levels ? (req.query.levels as string).split(',').map(Number) : undefined,\n        categories: req.query.categories ? (req.query.categories as string).split(',') : undefined,\n        sources: req.query.sources ? (req.query.sources as string).split(',') : undefined,\n        traceId: req.query.traceId as string,\n        userId: req.query.userId ? Number(req.query.userId) : undefined,\n        query: req.query.query as string,\n        page: req.query.page ? Number(req.query.page) : 1,\n        pageSize: req.query.pageSize ? Number(req.query.pageSize) : 50,\n        sortBy: req.query.sortBy as string || 'timestamp',\n        sortOrder: req.query.sortOrder as string || 'desc'\n      }\n\n      const result = await this.logService.searchLogs(searchParams)\n\n      res.json(result)\n    } catch (error) {\n      console.error('ログ検索エラー:', error)\n      res.status(500).json({\n        success: false,\n        message: 'ログの検索に失敗しました'\n      })\n    }\n  }\n\n  // ログ統計\n  async getStatistics(req: Request, res: Response) {\n    try {\n      const statsParams = {\n        startTime: req.query.startTime as string,\n        endTime: req.query.endTime as string,\n        groupBy: req.query.groupBy as string || 'hour',\n        categories: req.query.categories ? (req.query.categories as string).split(',') : undefined,\n        levels: req.query.levels ? (req.query.levels as string).split(',').map(Number) : undefined\n      }\n\n      const statistics = await this.logService.getStatistics(statsParams)\n\n      res.json(statistics)\n    } catch (error) {\n      console.error('ログ統計エラー:', error)\n      res.status(500).json({\n        success: false,\n        message: '統計の取得に失敗しました'\n      })\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// src/services/LogService.ts\nimport { PrismaClient } from '@prisma/client'\nimport { LogEntry, LogSearchParams, LogSearchResult, LogStatisticsParams } from '../types/log'\n\nexport class LogService {\n  private prisma: PrismaClient\n\n  constructor() {\n    this.prisma = new PrismaClient()\n  }\n\n  // ログ保存\n  async saveLogs(logs: LogEntry[]): Promise<{ saved: number; errors: string[] }> {\n    const errors: string[] = []\n    let saved = 0\n\n    for (const log of logs) {\n      try {\n        await this.prisma.log.create({\n          data: {\n            timestamp: new Date(log.timestamp),\n            level: log.level,\n            category: log.category,\n            message: log.message,\n            traceId: log.traceId,\n            sessionId: log.sessionId,\n            userId: log.userId,\n            source: log.source,\n            hostname: log.hostname,\n            service: log.service,\n            details: log.details,\n            errorInfo: log.error,\n            performanceInfo: log.performance,\n            tags: log.tags || [],\n            environment: log.environment\n          }\n        })\n        saved++\n      } catch (error) {\n        errors.push(`ログ保存エラー: ${error.message}`)\n      }\n    }\n\n    // 統計情報更新\n    if (saved > 0) {\n      await this.updateStatistics(logs.filter((_, index) => index < saved))\n    }\n\n    return { saved, errors }\n  }\n\n  // ログ検索\n  async searchLogs(params: LogSearchParams): Promise<LogSearchResult> {\n    const where: any = {}\n\n    // 時間範囲フィルタ\n    if (params.startTime || params.endTime) {\n      where.timestamp = {}\n      if (params.startTime) where.timestamp.gte = new Date(params.startTime)\n      if (params.endTime) where.timestamp.lte = new Date(params.endTime)\n    }\n\n    // レベルフィルタ\n    if (params.levels && params.levels.length > 0) {\n      where.level = { in: params.levels }\n    }\n\n    // カテゴリフィルタ\n    if (params.categories && params.categories.length > 0) {\n      where.category = { in: params.categories }\n    }\n\n    // ソースフィルタ\n    if (params.sources && params.sources.length > 0) {\n      where.source = { in: params.sources }\n    }\n\n    // トレースIDフィルタ\n    if (params.traceId) {\n      where.traceId = params.traceId\n    }\n\n    // ユーザーIDフィルタ\n    if (params.userId) {\n      where.userId = params.userId\n    }\n\n    // フリーテキスト検索\n    if (params.query) {\n      where.message = { contains: params.query, mode: 'insensitive' }\n    }\n\n    // 総件数取得\n    const total = await this.prisma.log.count({ where })\n\n    // ページング計算\n    const skip = (params.page - 1) * params.pageSize\n    const take = params.pageSize\n\n    // ソート設定\n    const orderBy = {}\n    orderBy[params.sortBy] = params.sortOrder\n\n    // ログ取得\n    const logs = await this.prisma.log.findMany({\n      where,\n      orderBy,\n      skip,\n      take,\n      include: {\n        user: {\n          select: {\n            id: true,\n            username: true,\n            name: true\n          }\n        }\n      }\n    })\n\n    return {\n      logs: logs.map(this.formatLogEntry),\n      total,\n      page: params.page,\n      pageSize: params.pageSize,\n      hasNext: skip + take < total\n    }\n  }\n\n  // 統計データ取得\n  async getStatistics(params: LogStatisticsParams) {\n    const startDate = new Date(params.startTime)\n    const endDate = new Date(params.endTime)\n\n    let groupByField: string\n    let dateFormat: string\n\n    switch (params.groupBy) {\n      case 'hour':\n        groupByField = 'hour'\n        dateFormat = 'YYYY-MM-DD HH:00'\n        break\n      case 'day':\n        groupByField = 'date'\n        dateFormat = 'YYYY-MM-DD'\n        break\n      case 'category':\n        groupByField = 'category'\n        break\n      case 'level':\n        groupByField = 'level'\n        break\n      default:\n        groupByField = 'hour'\n    }\n\n    // 統計クエリの実装\n    const statistics = await this.prisma.logStatistics.groupBy({\n      by: [groupByField],\n      where: {\n        date: {\n          gte: startDate,\n          lte: endDate\n        },\n        ...(params.categories && { category: { in: params.categories } }),\n        ...(params.levels && { level: { in: params.levels } })\n      },\n      _sum: {\n        count: true\n      }\n    })\n\n    const total = statistics.reduce((sum, stat) => sum + (stat._sum.count || 0), 0)\n\n    return {\n      statistics: statistics.map(stat => ({\n        key: stat[groupByField]?.toString() || 'unknown',\n        count: stat._sum.count || 0,\n        percentage: total > 0 ? ((stat._sum.count || 0) / total) * 100 : 0\n      })),\n      total,\n      period: {\n        start: params.startTime,\n        end: params.endTime\n      }\n    }\n  }\n\n  // ログエントリフォーマット\n  private formatLogEntry(log: any): LogEntry {\n    return {\n      id: log.id.toString(),\n      timestamp: log.timestamp.toISOString(),\n      level: log.level,\n      category: log.category,\n      message: log.message,\n      traceId: log.traceId,\n      sessionId: log.sessionId,\n      userId: log.userId,\n      user: log.user,\n      source: log.source,\n      hostname: log.hostname,\n      service: log.service,\n      details: log.details,\n      error: log.errorInfo,\n      performance: log.performanceInfo,\n      tags: log.tags,\n      environment: log.environment\n    }\n  }\n\n  // 統計情報更新\n  private async updateStatistics(logs: LogEntry[]) {\n    // バッチで統計を更新\n    const statsMap = new Map<string, number>()\n\n    for (const log of logs) {\n      const date = new Date(log.timestamp)\n      const dateStr = date.toISOString().split('T')[0]\n      const hour = date.getHours()\n\n      const key = `${dateStr}-${hour}-${log.level}-${log.category}-${log.source}`\n      statsMap.set(key, (statsMap.get(key) || 0) + 1)\n    }\n\n    for (const [key, count] of statsMap) {\n      const [dateStr, hourStr, levelStr, category, source] = key.split('-')\n\n      await this.prisma.logStatistics.upsert({\n        where: {\n          date_hour_level_category_source: {\n            date: new Date(dateStr),\n            hour: parseInt(hourStr),\n            level: parseInt(levelStr),\n            category,\n            source\n          }\n        },\n        update: {\n          count: {\n            increment: count\n          }\n        },\n        create: {\n          date: new Date(dateStr),\n          hour: parseInt(hourStr),\n          level: parseInt(levelStr),\n          category,\n          source,\n          count\n        }\n      })\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// src/types/log.ts\n\nexport type LogLevel = 60 | 50 | 40 | 30 | 20 | 10\nexport type LogCategory = 'AUTH' | 'API' | 'DB' | 'SEC' | 'SYS' | 'USER' | 'PERF' | 'ERR'\nexport type LogSource = 'frontend' | 'backend' | 'database' | 'infrastructure'\n\nexport interface LogEntry {\n  id?: string\n  timestamp: string\n  level: LogLevel\n  category: LogCategory\n  message: string\n\n  traceId?: string\n  sessionId?: string\n  userId?: number\n  user?: {\n    id: number\n    username: string\n    name: string\n  }\n\n  source: LogSource\n  hostname?: string\n  service?: string\n\n  details?: Record<string, any>\n  error?: ErrorInfo\n  performance?: PerformanceInfo\n\n  tags?: string[]\n  environment: string\n}\n\nexport interface ErrorInfo {\n  name?: string\n  message?: string\n  stack?: string\n  code?: string | number\n}\n\nexport interface PerformanceInfo {\n  duration?: number\n  memoryUsage?: number\n  cpuUsage?: number\n}\n\nexport interface LogSearchParams {\n  startTime?: string\n  endTime?: string\n  levels?: LogLevel[]\n  categories?: LogCategory[]\n  sources?: LogSource[]\n  traceId?: string\n  userId?: number\n  query?: string\n  page: number\n  pageSize: number\n  sortBy: string\n  sortOrder: 'asc' | 'desc'\n}\n\nexport interface LogSearchResult {\n  logs: LogEntry[]\n  total: number\n  page: number\n  pageSize: number\n  hasNext: boolean\n}\n\nexport interface LogStatistics {\n  key: string\n  count: number\n  percentage: number\n}\n\nexport interface LogStatisticsResult {\n  statistics: LogStatistics[]\n  total: number\n  period: {\n    start: string\n    end: string\n  }\n}"
            ],
            [
              "typescript",
              "// src/utils/logging/LogService.ts\nimport { LogEntry, LogLevel, LogCategory, LogSource } from '@/types/log'\nimport api from '@/api'\n\nexport class LogService {\n  private static instance: LogService\n  private buffer: LogEntry[] = []\n  private flushTimer?: number\n  private readonly FLUSH_INTERVAL = 5000  // 5秒\n  private readonly BUFFER_SIZE = 100\n\n  private constructor() {\n    this.startFlushTimer()\n    this.setupGlobalHandlers()\n  }\n\n  static getInstance(): LogService {\n    if (!LogService.instance) {\n      LogService.instance = new LogService()\n    }\n    return LogService.instance\n  }\n\n  // ログエントリ追加\n  log(\n    level: LogLevel,\n    category: LogCategory,\n    message: string,\n    details?: Record<string, any>,\n    error?: any\n  ) {\n    const entry: LogEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      category,\n      message,\n      traceId: this.generateTraceId(),\n      sessionId: this.getSessionId(),\n      userId: this.getCurrentUserId(),\n      source: 'frontend' as LogSource,\n      hostname: window.location.hostname,\n      service: 'websys-frontend',\n      details,\n      error: error ? this.formatError(error) : undefined,\n      tags: this.generateTags(category),\n      environment: process.env.NODE_ENV || 'development'\n    }\n\n    this.buffer.push(entry)\n\n    // バッファサイズチェック\n    if (this.buffer.length >= this.BUFFER_SIZE) {\n      this.flush()\n    }\n  }\n\n  // 便利メソッド\n  fatal(category: LogCategory, message: string, details?: any, error?: any) {\n    this.log(60, category, message, details, error)\n  }\n\n  error(category: LogCategory, message: string, details?: any, error?: any) {\n    this.log(50, category, message, details, error)\n  }\n\n  warn(category: LogCategory, message: string, details?: any) {\n    this.log(40, category, message, details)\n  }\n\n  info(category: LogCategory, message: string, details?: any) {\n    this.log(30, category, message, details)\n  }\n\n  debug(category: LogCategory, message: string, details?: any) {\n    this.log(20, category, message, details)\n  }\n\n  trace(category: LogCategory, message: string, details?: any) {\n    this.log(10, category, message, details)\n  }\n\n  // パフォーマンスログ\n  performance(action: string, startTime: number, details?: any) {\n    const duration = Date.now() - startTime\n    this.log(30, 'PERF', `${action} completed`, {\n      ...details,\n      performance: { duration }\n    })\n  }\n\n  // ユーザーアクションログ\n  userAction(action: string, details?: any) {\n    this.log(30, 'USER', `User action: ${action}`, details)\n  }\n\n  // バッファフラッシュ\n  async flush() {\n    if (this.buffer.length === 0) return\n\n    const logs = [...this.buffer]\n    this.buffer = []\n\n    try {\n      await api.post('/api/logs', { logs })\n    } catch (error) {\n      console.error('ログ送信エラー:', error)\n\n      // エラー時はバッファに戻す（ただし無限ループを避ける）\n      if (this.buffer.length < this.BUFFER_SIZE * 2) {\n        this.buffer.unshift(...logs.slice(0, this.BUFFER_SIZE))\n      }\n    }\n  }\n\n  // タイマー開始\n  private startFlushTimer() {\n    this.flushTimer = window.setInterval(() => {\n      this.flush()\n    }, this.FLUSH_INTERVAL)\n  }\n\n  // グローバルエラーハンドリング\n  private setupGlobalHandlers() {\n    // 未処理エラー\n    window.addEventListener('error', (event) => {\n      this.error('ERR', 'Uncaught error', {\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno\n      }, event.error)\n    })\n\n    // Promise reject\n    window.addEventListener('unhandledrejection', (event) => {\n      this.error('ERR', 'Unhandled promise rejection', {\n        reason: event.reason\n      })\n    })\n\n    // ページ離脱時にフラッシュ\n    window.addEventListener('beforeunload', () => {\n      this.flush()\n    })\n  }\n\n  // ユーティリティメソッド\n  private generateTraceId(): string {\n    return `trace_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private getSessionId(): string | undefined {\n    return sessionStorage.getItem('sessionId') || undefined\n  }\n\n  private getCurrentUserId(): number | undefined {\n    // Pinia store から取得\n    const authStore = useAuthStore()\n    return authStore.user?.id\n  }\n\n  private formatError(error: any) {\n    if (error instanceof Error) {\n      return {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      }\n    }\n    return { message: String(error) }\n  }\n\n  private generateTags(category: LogCategory): string[] {\n    const tags = ['webapp']\n\n    if (category === 'AUTH') tags.push('security')\n    if (category === 'API') tags.push('network')\n    if (category === 'PERF') tags.push('performance')\n\n    return tags\n  }\n\n  // クリーンアップ\n  destroy() {\n    if (this.flushTimer) {\n      clearInterval(this.flushTimer)\n    }\n    this.flush()\n  }\n}\n\n// エクスポート用インスタンス\nexport const logger = LogService.getInstance()\n\n// 便利関数\nexport const logError = (message: string, details?: any, error?: any) =>\n  logger.error('ERR', message, details, error)\n\nexport const logInfo = (message: string, details?: any) =>\n  logger.info('USER', message, details)\n\nexport const logPerformance = (action: string, startTime: number, details?: any) =>\n  logger.performance(action, startTime, details)\n\nexport const logUserAction = (action: string, details?: any) =>\n  logger.userAction(action, details)"
            ]
          ]
        },
        "tables": {
          "total": 6,
          "total_rows": 34
        }
      },
      "readability": {
        "score": 98.88,
        "sentences": 456,
        "avg_words_per_sentence": 4.71,
        "long_sentences": 17,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 78.16
    },
    "docs/01_機能設計書/12_ログ監視システム/ログ監視システム設計書.md": {
      "basic_metrics": {
        "lines": 688,
        "words": 1791,
        "characters": 16548,
        "avg_line_length": 24.052325581395348
      },
      "structure_analysis": {
        "headers": {
          "total": 51,
          "hierarchy": [
            {
              "level": 1,
              "text": "ログ監視システム設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 システム概要",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 目的",
              "line_number": 9
            },
            {
              "level": 3,
              "text": "1.3 対象範囲",
              "line_number": 16
            },
            {
              "level": 2,
              "text": "2. ログ分類体系",
              "line_number": 23
            },
            {
              "level": 3,
              "text": "2.1 ログレベル",
              "line_number": 25
            },
            {
              "level": 3,
              "text": "2.2 ログカテゴリ",
              "line_number": 35
            },
            {
              "level": 3,
              "text": "2.3 ログ構造",
              "line_number": 47
            },
            {
              "level": 2,
              "text": "3. システム構成",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "3.1 アーキテクチャ概要",
              "line_number": 79
            },
            {
              "level": 3,
              "text": "3.2 コンポーネント詳細",
              "line_number": 110
            },
            {
              "level": 4,
              "text": "3.2.1 ログ収集層",
              "line_number": 112
            },
            {
              "level": 4,
              "text": "3.2.2 ログ処理層",
              "line_number": 117
            },
            {
              "level": 4,
              "text": "3.2.3 ログ保存層",
              "line_number": 122
            },
            {
              "level": 4,
              "text": "3.2.4 ログ分析層",
              "line_number": 127
            },
            {
              "level": 2,
              "text": "4. データベース設計",
              "line_number": 132
            },
            {
              "level": 3,
              "text": "4.1 ログテーブル (logs)",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "4.2 ログ統計テーブル (log_statistics)",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "4.3 アラート設定テーブル (alert_rules)",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "5. API設計",
              "line_number": 220
            },
            {
              "level": 3,
              "text": "5.1 ログ収集API",
              "line_number": 222
            },
            {
              "level": 4,
              "text": "POST /api/logs",
              "line_number": 224
            },
            {
              "level": 4,
              "text": "POST /api/logs/batch",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "5.2 ログ検索API",
              "line_number": 247
            },
            {
              "level": 4,
              "text": "GET /api/logs/search",
              "line_number": 249
            },
            {
              "level": 4,
              "text": "GET /api/logs/statistics",
              "line_number": 284
            },
            {
              "level": 2,
              "text": "6. フロントエンド設計",
              "line_number": 308
            },
            {
              "level": 3,
              "text": "6.1 ログ監視ダッシュボード",
              "line_number": 310
            },
            {
              "level": 4,
              "text": "6.1.1 画面構成",
              "line_number": 312
            },
            {
              "level": 4,
              "text": "6.1.2 主要コンポーネント",
              "line_number": 342
            },
            {
              "level": 5,
              "text": "LogDashboard.vue",
              "line_number": 344
            },
            {
              "level": 5,
              "text": "LogFilters.vue",
              "line_number": 376
            },
            {
              "level": 2,
              "text": "7. ログ収集実装",
              "line_number": 419
            },
            {
              "level": 3,
              "text": "7.1 フロントエンドログ収集",
              "line_number": 421
            },
            {
              "level": 4,
              "text": "7.1.1 LogService.ts",
              "line_number": 423
            },
            {
              "level": 4,
              "text": "7.1.2 グローバルエラーハンドリング",
              "line_number": 490
            },
            {
              "level": 3,
              "text": "7.2 バックエンドログ収集",
              "line_number": 514
            },
            {
              "level": 4,
              "text": "7.2.1 Logger.ts",
              "line_number": 516
            },
            {
              "level": 4,
              "text": "7.2.2 API アクセスログ",
              "line_number": 560
            },
            {
              "level": 2,
              "text": "8. アラート機能",
              "line_number": 589
            },
            {
              "level": 3,
              "text": "8.1 リアルタイムアラート",
              "line_number": 591
            },
            {
              "level": 2,
              "text": "9. 実装スケジュール",
              "line_number": 637
            },
            {
              "level": 3,
              "text": "9.1 Phase 1 (1週間): 基盤構築",
              "line_number": 639
            },
            {
              "level": 3,
              "text": "9.2 Phase 2 (1週間): 監視ダッシュボード",
              "line_number": 645
            },
            {
              "level": 3,
              "text": "9.3 Phase 3 (1週間): 分析・アラート",
              "line_number": 651
            },
            {
              "level": 3,
              "text": "9.4 Phase 4 (1週間): 高度な機能",
              "line_number": 657
            },
            {
              "level": 2,
              "text": "10. 運用・保守",
              "line_number": 663
            },
            {
              "level": 3,
              "text": "10.1 ログ保持期間",
              "line_number": 665
            },
            {
              "level": 3,
              "text": "10.2 パフォーマンス要件",
              "line_number": 671
            },
            {
              "level": 3,
              "text": "10.3 セキュリティ",
              "line_number": 677
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 5
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 17,
          "inline_code": 35,
          "languages": {
            "typescript": 10,
            "sql": 3,
            "vue": 2
          },
          "details": [
            [
              "typescript",
              "interface LogEntry {\n  // 基本情報\n  timestamp: string          // ISO 8601 形式のタイムスタンプ\n  level: LogLevel           // ログレベル\n  category: LogCategory     // ログカテゴリ\n  message: string           // メッセージ本文\n\n  // 追跡情報\n  traceId: string          // トレースID（リクエスト追跡用）\n  sessionId?: string       // セッションID\n  userId?: string          // ユーザーID\n\n  // システム情報\n  source: LogSource        // ログソース（frontend/backend/database）\n  hostname: string         // ホスト名\n  service: string          // サービス名\n\n  // 詳細情報\n  details?: Record<string, any>  // 追加詳細情報\n  error?: ErrorInfo        // エラー詳細（エラーログの場合）\n  performance?: PerformanceInfo  // パフォーマンス情報\n\n  // メタデータ\n  tags?: string[]          // タグ\n  environment: string      // 環境（development/staging/production）\n}"
            ],
            [
              "",
              "┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   Frontend      │    │   Backend       │    │   Database      │\n│   (Vue.js)      │    │   (Express)     │    │   (PostgreSQL)  │\n├─────────────────┤    ├─────────────────┤    ├─────────────────┤\n│ • Client Logs   │    │ • Server Logs   │    │ • Query Logs    │\n│ • User Actions  │    │ • API Logs      │    │ • Slow Queries  │\n│ • Errors        │    │ • Auth Logs     │    │ • Connection    │\n│ • Performance   │    │ • Performance   │    │   Logs          │\n└─────────┬───────┘    └─────────┬───────┘    └─────────┬───────┘\n          │                      │                      │\n          │                      │                      │\n          └──────────────────────┼──────────────────────┘\n                                 │\n                         ┌───────▼────────┐\n                         │  Log Collector │\n                         │   (Backend)    │\n                         └───────┬────────┘\n                                 │\n                         ┌───────▼────────┐\n                         │  Log Storage   │\n                         │ (PostgreSQL)   │\n                         └───────┬────────┘\n                                 │\n                         ┌───────▼────────┐\n                         │ Log Dashboard  │\n                         │  (Frontend)    │\n                         └────────────────┘"
            ],
            [
              "sql",
              "CREATE TABLE logs (\n  id BIGSERIAL PRIMARY KEY,\n  timestamp TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),\n  level INTEGER NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  message TEXT NOT NULL,\n\n  -- 追跡情報\n  trace_id VARCHAR(100),\n  session_id VARCHAR(100),\n  user_id INTEGER REFERENCES \"User\"(id),\n\n  -- システム情報\n  source VARCHAR(50) NOT NULL,\n  hostname VARCHAR(255),\n  service VARCHAR(100),\n\n  -- 詳細情報（JSONB形式）\n  details JSONB,\n  error_info JSONB,\n  performance_info JSONB,\n\n  -- メタデータ\n  tags TEXT[],\n  environment VARCHAR(50) NOT NULL DEFAULT 'development',\n\n  -- インデックス用\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()\n);\n\n-- インデックス\nCREATE INDEX idx_logs_timestamp ON logs (timestamp DESC);\nCREATE INDEX idx_logs_level ON logs (level);\nCREATE INDEX idx_logs_category ON logs (category);\nCREATE INDEX idx_logs_source ON logs (source);\nCREATE INDEX idx_logs_trace_id ON logs (trace_id);\nCREATE INDEX idx_logs_user_id ON logs (user_id);\nCREATE INDEX idx_logs_environment ON logs (environment);\nCREATE INDEX idx_logs_details_gin ON logs USING GIN (details);"
            ],
            [
              "sql",
              "CREATE TABLE log_statistics (\n  id SERIAL PRIMARY KEY,\n  date DATE NOT NULL,\n  hour INTEGER CHECK (hour >= 0 AND hour <= 23),\n  level INTEGER NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  source VARCHAR(50) NOT NULL,\n  count INTEGER NOT NULL DEFAULT 0,\n\n  UNIQUE(date, hour, level, category, source)\n);\n\nCREATE INDEX idx_log_statistics_date ON log_statistics (date DESC);"
            ],
            [
              "sql",
              "CREATE TABLE alert_rules (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  description TEXT,\n\n  -- 条件\n  level INTEGER,\n  category VARCHAR(50),\n  source VARCHAR(50),\n  message_pattern TEXT,\n\n  -- 閾値\n  threshold_count INTEGER NOT NULL DEFAULT 1,\n  threshold_period INTEGER NOT NULL DEFAULT 300, -- 秒\n\n  -- 通知設定\n  notification_channels TEXT[], -- email, slack, webhook\n\n  is_enabled BOOLEAN NOT NULL DEFAULT true,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()\n);"
            ],
            [
              "typescript",
              "// ログエントリ送信\ninterface LogRequest {\n  logs: LogEntry[]\n}\n\ninterface LogResponse {\n  success: boolean\n  received: number\n  errors?: string[]\n}"
            ],
            [
              "typescript",
              "// バッチログ送信（大量ログ用）\ninterface BatchLogRequest {\n  logs: LogEntry[]\n  compression?: 'gzip' | 'none'\n}"
            ],
            [
              "typescript",
              "interface LogSearchParams {\n  // 時間範囲\n  startTime?: string\n  endTime?: string\n\n  // フィルタ\n  levels?: LogLevel[]\n  categories?: LogCategory[]\n  sources?: LogSource[]\n  traceId?: string\n  userId?: string\n\n  // 検索\n  query?: string        // フリーテキスト検索\n\n  // ページング\n  page?: number\n  pageSize?: number\n\n  // ソート\n  sortBy?: 'timestamp' | 'level'\n  sortOrder?: 'asc' | 'desc'\n}\n\ninterface LogSearchResponse {\n  logs: LogEntry[]\n  total: number\n  page: number\n  pageSize: number\n  hasNext: boolean\n}"
            ],
            [
              "typescript",
              "interface LogStatisticsParams {\n  startTime: string\n  endTime: string\n  groupBy: 'hour' | 'day' | 'category' | 'level'\n  categories?: string[]\n  levels?: number[]\n}\n\ninterface LogStatisticsResponse {\n  statistics: {\n    key: string\n    count: number\n    percentage: number\n  }[]\n  total: number\n  period: {\n    start: string\n    end: string\n  }\n}"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────┐\n│                   ログ監視ダッシュボード                      │\n├─────────────────────────────────────────────────────────┤\n│ 🔍 フィルタ                                              │\n│ [時間範囲] [レベル] [カテゴリ] [ソース] [検索ワード]          │\n├─────────────────────────────────────────────────────────┤\n│ 📊 統計情報                                              │\n│ ┌─────────┐ ┌─────────┐ ┌─────────┐ ┌─────────┐        │\n│ │総ログ数 │ │エラー数 │ │警告数  │ │情報数  │        │\n│ │ 12,345  │ │   23   │ │   156  │ │ 12,166 │        │\n│ └─────────┘ └─────────┘ └─────────┘ └─────────┘        │\n├─────────────────────────────────────────────────────────┤\n│ 📈 グラフ表示                                            │\n│ ┌─────────────────────────────────────────────────────┐ │\n│ │          時系列ログ数グラフ                         │ │\n│ │                                                   │ │\n│ └─────────────────────────────────────────────────────┘ │\n├─────────────────────────────────────────────────────────┤\n│ 📋 ログ一覧                                              │\n│ ┌─────────────────────────────────────────────────────┐ │\n│ │時刻      │レベル│カテゴリ│メッセージ              │ │\n│ │10:30:15  │ERROR │AUTH   │ログイン失敗             │ │\n│ │10:29:45  │INFO  │USER   │ユーザー作成             │ │\n│ │10:29:30  │WARN  │DB     │スロークエリ検出          │ │\n│ └─────────────────────────────────────────────────────┘ │\n└─────────────────────────────────────────────────────────┘"
            ],
            [
              "vue",
              "<template>\n  <div class=\"log-dashboard\">\n    <!-- フィルタセクション -->\n    <LogFilters\n      v-model=\"filters\"\n      @update=\"handleFilterUpdate\"\n    />\n\n    <!-- 統計セクション -->\n    <LogStatistics\n      :data=\"statistics\"\n      :loading=\"statisticsLoading\"\n    />\n\n    <!-- グラフセクション -->\n    <LogCharts\n      :data=\"chartData\"\n      :loading=\"chartLoading\"\n    />\n\n    <!-- ログ一覧セクション -->\n    <LogTable\n      :logs=\"logs\"\n      :loading=\"tableLoading\"\n      @load-more=\"handleLoadMore\"\n    />\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <el-card class=\"log-filters\">\n    <el-form :inline=\"true\" :model=\"filters\">\n      <el-form-item label=\"時間範囲\">\n        <el-date-picker\n          v-model=\"filters.timeRange\"\n          type=\"datetimerange\"\n          range-separator=\"〜\"\n          start-placeholder=\"開始日時\"\n          end-placeholder=\"終了日時\"\n        />\n      </el-form-item>\n\n      <el-form-item label=\"レベル\">\n        <el-select v-model=\"filters.levels\" multiple>\n          <el-option label=\"FATAL\" value=\"60\" />\n          <el-option label=\"ERROR\" value=\"50\" />\n          <el-option label=\"WARN\" value=\"40\" />\n          <el-option label=\"INFO\" value=\"30\" />\n          <el-option label=\"DEBUG\" value=\"20\" />\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"カテゴリ\">\n        <el-select v-model=\"filters.categories\" multiple>\n          <el-option label=\"認証\" value=\"AUTH\" />\n          <el-option label=\"API\" value=\"API\" />\n          <el-option label=\"データベース\" value=\"DB\" />\n          <el-option label=\"セキュリティ\" value=\"SEC\" />\n        </el-select>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSearch\">検索</el-button>\n        <el-button @click=\"handleReset\">リセット</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>"
            ],
            [
              "typescript",
              "export class LogService {\n  private static instance: LogService\n  private buffer: LogEntry[] = []\n  private flushInterval: number = 5000 // 5秒毎に送信\n\n  static getInstance(): LogService {\n    if (!LogService.instance) {\n      LogService.instance = new LogService()\n    }\n    return LogService.instance\n  }\n\n  // ログエントリ追加\n  log(level: LogLevel, category: LogCategory, message: string, details?: any) {\n    const entry: LogEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      category,\n      message,\n      traceId: this.generateTraceId(),\n      sessionId: this.getSessionId(),\n      userId: this.getCurrentUserId(),\n      source: 'frontend',\n      hostname: window.location.hostname,\n      service: 'websys-frontend',\n      details,\n      environment: process.env.NODE_ENV || 'development'\n    }\n\n    this.buffer.push(entry)\n\n    // バッファが満杯の場合は即座に送信\n    if (this.buffer.length >= 100) {\n      this.flush()\n    }\n  }\n\n  // バッファをサーバーに送信\n  private async flush() {\n    if (this.buffer.length === 0) return\n\n    const logs = [...this.buffer]\n    this.buffer = []\n\n    try {\n      await api.post('/api/logs', { logs })\n    } catch (error) {\n      console.error('ログ送信エラー:', error)\n      // エラー時はバッファに戻す\n      this.buffer.unshift(...logs)\n    }\n  }\n}\n\n// 便利関数\nexport const logError = (message: string, error?: any) =>\n  LogService.getInstance().log('ERROR', 'ERR', message, { error })\n\nexport const logInfo = (message: string, details?: any) =>\n  LogService.getInstance().log('INFO', 'USER', message, details)\n\nexport const logPerformance = (action: string, duration: number) =>\n  LogService.getInstance().log('INFO', 'PERF', `${action} completed`, { duration })"
            ],
            [
              "typescript",
              "// main.ts\nimport { logError } from '@/utils/LogService'\n\n// 未処理エラーをキャッチ\nwindow.addEventListener('error', (event) => {\n  logError('Uncaught error', {\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno,\n    stack: event.error?.stack\n  })\n})\n\n// Promise reject をキャッチ\nwindow.addEventListener('unhandledrejection', (event) => {\n  logError('Unhandled promise rejection', {\n    reason: event.reason\n  })\n})"
            ],
            [
              "typescript",
              "import winston from 'winston'\n\n// カスタム形式\nconst customFormat = winston.format.combine(\n  winston.format.timestamp(),\n  winston.format.errors({ stack: true }),\n  winston.format.json(),\n  winston.format.printf(({ timestamp, level, message, ...meta }) => {\n    return JSON.stringify({\n      timestamp,\n      level: getLogLevelNumber(level),\n      category: meta.category || 'SYS',\n      message,\n      traceId: meta.traceId,\n      sessionId: meta.sessionId,\n      userId: meta.userId,\n      source: 'backend',\n      hostname: os.hostname(),\n      service: 'websys-backend',\n      details: meta.details,\n      error: meta.error,\n      environment: process.env.NODE_ENV || 'development'\n    })\n  })\n)\n\nexport const logger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: customFormat,\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({\n      filename: 'logs/error.log',\n      level: 'error'\n    }),\n    new winston.transports.File({\n      filename: 'logs/combined.log'\n    })\n  ]\n})"
            ],
            [
              "typescript",
              "// middleware/apiLogger.ts\nexport const apiLogger = (req: Request, res: Response, next: NextFunction) => {\n  const startTime = Date.now()\n\n  res.on('finish', () => {\n    const duration = Date.now() - startTime\n\n    logger.info('API Request', {\n      category: 'API',\n      traceId: req.headers['x-trace-id'],\n      sessionId: req.sessionId,\n      userId: req.user?.id,\n      details: {\n        method: req.method,\n        url: req.url,\n        statusCode: res.statusCode,\n        duration,\n        userAgent: req.headers['user-agent'],\n        ip: req.ip\n      }\n    })\n  })\n\n  next()\n}"
            ],
            [
              "typescript",
              "// AlertService.ts\nexport class AlertService {\n  private rules: AlertRule[] = []\n  private counters: Map<string, number> = new Map()\n\n  // ログチェック\n  checkLog(log: LogEntry) {\n    for (const rule of this.rules) {\n      if (this.matchesRule(log, rule)) {\n        this.incrementCounter(rule)\n\n        if (this.exceedsThreshold(rule)) {\n          this.sendAlert(rule, log)\n        }\n      }\n    }\n  }\n\n  // アラート送信\n  private async sendAlert(rule: AlertRule, log: LogEntry) {\n    const alert = {\n      ruleName: rule.name,\n      message: `Alert: ${rule.name} triggered`,\n      log,\n      timestamp: new Date().toISOString()\n    }\n\n    for (const channel of rule.notificationChannels) {\n      switch (channel) {\n        case 'email':\n          await this.sendEmailAlert(alert)\n          break\n        case 'slack':\n          await this.sendSlackAlert(alert)\n          break\n        case 'webhook':\n          await this.sendWebhookAlert(alert)\n          break\n      }\n    }\n  }\n}"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 18
        }
      },
      "readability": {
        "score": 96.7,
        "sentences": 200,
        "avg_words_per_sentence": 8.96,
        "long_sentences": 22,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 64,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 77.11
    },
    "docs/01_機能設計書/07_データベース設計/データベース設計書.md": {
      "basic_metrics": {
        "lines": 219,
        "words": 664,
        "characters": 4267,
        "avg_line_length": 19.484018264840184
      },
      "structure_analysis": {
        "headers": {
          "total": 48,
          "hierarchy": [
            {
              "level": 1,
              "text": "データベース設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 データベース基本情報",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 設計方針",
              "line_number": 12
            },
            {
              "level": 2,
              "text": "2. テーブル設計",
              "line_number": 20
            },
            {
              "level": 3,
              "text": "2.1 User テーブル (ユーザー情報)",
              "line_number": 22
            },
            {
              "level": 4,
              "text": "概要",
              "line_number": 24
            },
            {
              "level": 4,
              "text": "テーブル構造",
              "line_number": 27
            },
            {
              "level": 4,
              "text": "インデックス",
              "line_number": 41
            },
            {
              "level": 4,
              "text": "ENUM定義",
              "line_number": 48
            },
            {
              "level": 4,
              "text": "制約",
              "line_number": 53
            },
            {
              "level": 2,
              "text": "3. セキュリティ設計",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "3.1 パスワード管理",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "3.2 アクセス制御",
              "line_number": 66
            },
            {
              "level": 3,
              "text": "3.3 データ保護",
              "line_number": 72
            },
            {
              "level": 2,
              "text": "4. 運用設計",
              "line_number": 77
            },
            {
              "level": 3,
              "text": "4.1 バックアップ戦略",
              "line_number": 79
            },
            {
              "level": 3,
              "text": "4.2 パフォーマンス監視",
              "line_number": 85
            },
            {
              "level": 3,
              "text": "4.3 メンテナンス",
              "line_number": 90
            },
            {
              "level": 2,
              "text": "5. 初期データ設計",
              "line_number": 95
            },
            {
              "level": 3,
              "text": "5.1 システム管理者",
              "line_number": 97
            },
            {
              "level": 3,
              "text": "5.2 デモユーザー",
              "line_number": 103
            },
            {
              "level": 2,
              "text": "6. 拡張設計",
              "line_number": 110
            },
            {
              "level": 3,
              "text": "6.1 将来的なテーブル追加予定",
              "line_number": 112
            },
            {
              "level": 3,
              "text": "6.2 スケーラビリティ",
              "line_number": 119
            },
            {
              "level": 2,
              "text": "7. 現在の構築状況",
              "line_number": 124
            },
            {
              "level": 3,
              "text": "7.1 データベース接続確認",
              "line_number": 126
            },
            {
              "level": 3,
              "text": "7.2 テーブル作成状況",
              "line_number": 134
            },
            {
              "level": 3,
              "text": "7.3 初期データ投入状況",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "7.4 API接続確認",
              "line_number": 149
            },
            {
              "level": 2,
              "text": "8. 運用コマンド",
              "line_number": 156
            },
            {
              "level": 3,
              "text": "8.1 データベース操作",
              "line_number": 158
            },
            {
              "level": 1,
              "text": "マイグレーション実行",
              "line_number": 160
            },
            {
              "level": 1,
              "text": "スキーマ同期",
              "line_number": 163
            },
            {
              "level": 1,
              "text": "シードデータ投入",
              "line_number": 166
            },
            {
              "level": 1,
              "text": "データベース接続",
              "line_number": 169
            },
            {
              "level": 3,
              "text": "8.2 バックアップ・復元",
              "line_number": 173
            },
            {
              "level": 1,
              "text": "バックアップ",
              "line_number": 175
            },
            {
              "level": 1,
              "text": "復元",
              "line_number": 178
            },
            {
              "level": 2,
              "text": "9. トラブルシューティング",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "9.1 一般的な問題と解決策",
              "line_number": 184
            },
            {
              "level": 4,
              "text": "接続エラー",
              "line_number": 186
            },
            {
              "level": 1,
              "text": "コンテナ状態確認",
              "line_number": 188
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 191
            },
            {
              "level": 4,
              "text": "パフォーマンス問題",
              "line_number": 195
            },
            {
              "level": 1,
              "text": "スロークエリ確認",
              "line_number": 197
            },
            {
              "level": 4,
              "text": "容量確認",
              "line_number": 205
            },
            {
              "level": 1,
              "text": "テーブルサイズ確認",
              "line_number": 207
            }
          ],
          "hierarchy_issues": [
            {
              "line": 173,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 195,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 205,
              "issue": "見出しレベル4が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 12,
          "inline_code": 23,
          "languages": {
            "sql": 3,
            "bash": 9
          },
          "details": [
            [
              "sql",
              "CREATE TYPE \"UserRole\" AS ENUM ('ADMIN', 'USER', 'GUEST');"
            ],
            [
              "sql",
              "INSERT INTO \"User\" (username, email, password, name, department, role) VALUES\n('admin', 'admin@websys.local', '$2a$12$hashed_password', 'システム管理者', 'IT部', 'ADMIN');"
            ],
            [
              "sql",
              "INSERT INTO \"User\" (username, email, password, name, department, role) VALUES\n('demo_user', 'demo@websys.local', '$2a$12$hashed_password', 'デモユーザー', '営業部', 'USER'),\n('guest_user', 'guest@websys.local', '$2a$12$hashed_password', 'ゲストユーザー', NULL, 'GUEST');"
            ],
            [
              "bash",
              "✅ PostgreSQL 15-Alpine コンテナ起動済み\n✅ ポート: localhost:5433\n✅ データベース: websys_db 作成済み\n✅ ユーザー: admin/password 設定済み"
            ],
            [
              "bash",
              "✅ User テーブル作成済み\n✅ UserRole ENUM 作成済み\n✅ インデックス設定済み\n✅ 制約設定済み"
            ],
            [
              "bash",
              "✅ 管理者ユーザー (admin) 作成済み\n✅ デモユーザー (demo_user) 作成済み\n✅ ゲストユーザー (guest_user) 作成済み"
            ],
            [
              "bash",
              "✅ Prisma ORM 接続済み\n✅ マイグレーション実行済み\n✅ CRUD操作動作確認済み"
            ],
            [
              "bash",
              "# マイグレーション実行\nnpx prisma migrate dev\n\n# スキーマ同期\nnpx prisma db push\n\n# シードデータ投入\nnpx prisma db seed\n\n# データベース接続\ndocker exec -it websys_postgres_dev psql -U admin -d websys_db"
            ],
            [
              "bash",
              "# バックアップ\ndocker exec websys_postgres_dev pg_dump -U admin websys_db > backup.sql\n\n# 復元\ndocker exec -i websys_postgres_dev psql -U admin websys_db < backup.sql"
            ],
            [
              "bash",
              "# コンテナ状態確認\ndocker compose ps\n\n# ログ確認\ndocker compose logs postgres"
            ],
            [
              "bash",
              "# スロークエリ確認\ndocker exec websys_postgres_dev psql -U admin -d websys_db -c \"\nSELECT query, mean_time, calls\nFROM pg_stat_statements\nORDER BY mean_time DESC\nLIMIT 10;\""
            ],
            [
              "bash",
              "# テーブルサイズ確認\ndocker exec websys_postgres_dev psql -U admin -d websys_db -c \"\nSELECT schemaname, tablename,\n       pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables\nWHERE schemaname = 'public';\""
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 12
        }
      },
      "readability": {
        "score": 93.22,
        "sentences": 41,
        "avg_words_per_sentence": 16.2,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 46.28,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 68.98
    },
    "docs/01_機能設計書/04_共通コンポーネント/レスポンシブコンポーネント詳細設計書.md": {
      "basic_metrics": {
        "lines": 614,
        "words": 1199,
        "characters": 11716,
        "avg_line_length": 19.0814332247557
      },
      "structure_analysis": {
        "headers": {
          "total": 37,
          "hierarchy": [
            {
              "level": 1,
              "text": "レスポンシブコンポーネント詳細設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 概要",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "🎯 コンポーネント仕様",
              "line_number": 11
            },
            {
              "level": 3,
              "text": "1. ResponsiveCrudPage",
              "line_number": 13
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 15
            },
            {
              "level": 4,
              "text": "Props Interface",
              "line_number": 18
            },
            {
              "level": 4,
              "text": "Events",
              "line_number": 63
            },
            {
              "level": 4,
              "text": "Template Slots",
              "line_number": 76
            },
            {
              "level": 4,
              "text": "実装例",
              "line_number": 116
            },
            {
              "level": 3,
              "text": "2. ResponsiveTable",
              "line_number": 154
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 156
            },
            {
              "level": 4,
              "text": "Props Interface",
              "line_number": 159
            },
            {
              "level": 4,
              "text": "実装詳細",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "3. ResponsiveDialog",
              "line_number": 304
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 306
            },
            {
              "level": 4,
              "text": "Props Interface",
              "line_number": 309
            },
            {
              "level": 4,
              "text": "実装詳細",
              "line_number": 322
            },
            {
              "level": 3,
              "text": "4. ResponsiveForm",
              "line_number": 392
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 394
            },
            {
              "level": 4,
              "text": "Props Interface",
              "line_number": 397
            },
            {
              "level": 4,
              "text": "実装詳細",
              "line_number": 409
            },
            {
              "level": 3,
              "text": "5. ResponsiveGrid & ResponsiveCol",
              "line_number": 444
            },
            {
              "level": 4,
              "text": "目的",
              "line_number": 446
            },
            {
              "level": 4,
              "text": "Props Interface",
              "line_number": 449
            },
            {
              "level": 4,
              "text": "実装詳細",
              "line_number": 473
            },
            {
              "level": 2,
              "text": "🔧 使用方法",
              "line_number": 509
            },
            {
              "level": 3,
              "text": "移行前後の比較",
              "line_number": 511
            },
            {
              "level": 4,
              "text": "Before: Users.vue (54行)",
              "line_number": 513
            },
            {
              "level": 4,
              "text": "After: Users.vue (15行)",
              "line_number": 548
            },
            {
              "level": 2,
              "text": "📊 実装効果",
              "line_number": 570
            },
            {
              "level": 3,
              "text": "定量効果",
              "line_number": 572
            },
            {
              "level": 3,
              "text": "定性効果",
              "line_number": 580
            },
            {
              "level": 2,
              "text": "🚀 実装計画",
              "line_number": 587
            },
            {
              "level": 3,
              "text": "Phase 1: コンポーネント開発（3日）",
              "line_number": 589
            },
            {
              "level": 3,
              "text": "Phase 2: パイロット適用（2日）",
              "line_number": 594
            },
            {
              "level": 3,
              "text": "Phase 3: 全面展開（5日）",
              "line_number": 598
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 604
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 1,
          "internal": 1,
          "external": 0,
          "empty": 0,
          "internal_details": [
            [
              "共通コンポーネント設計書",
              "共通コンポーネント設計書.md"
            ]
          ],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 14,
          "inline_code": 29,
          "languages": {
            "typescript": 6,
            "vue": 8
          },
          "details": [
            [
              "typescript",
              "interface ResponsiveCrudPageProps {\n  // 基本情報\n  title: string\n  subtitle?: string\n\n  // テーブル関連\n  columns: TableColumn[]\n  data: any[]\n  loading?: boolean\n\n  // ページネーション\n  total?: number\n  currentPage?: number\n  pageSize?: number\n  pageSizes?: number[]\n  showPagination?: boolean\n\n  // ダイアログ関連\n  dialogVisible?: boolean\n  dialogTitle?: string\n  dialogWidth?: number | string\n\n  // レスポンシブ設定\n  tableMinWidth?: string\n  hideColumnsOnMobile?: string[]\n\n  // カスタマイズ\n  showSearch?: boolean\n  showActions?: boolean\n  actionWidth?: number\n}\n\ninterface TableColumn {\n  prop: string\n  label: string\n  width?: number\n  minWidth?: number\n  important?: boolean  // モバイル時の表示優先度\n  sortable?: boolean\n  formatter?: (row: any) => string\n}"
            ],
            [
              "typescript",
              "interface ResponsiveCrudPageEmits {\n  'add': () => void\n  'edit': (row: any) => void\n  'delete': (row: any) => void\n  'search': (query: string) => void\n  'page-change': (page: number) => void\n  'size-change': (size: number) => void\n  'selection-change': (selection: any[]) => void\n}"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage>\n    <!-- カスタム検索フォーム -->\n    <template #search>\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-input placeholder=\"検索...\" />\n        </el-form-item>\n      </el-form>\n    </template>\n\n    <!-- カスタムアクションボタン -->\n    <template #header-actions>\n      <el-button>エクスポート</el-button>\n    </template>\n\n    <!-- カスタム列内容 -->\n    <template #column-status=\"{ row }\">\n      <el-tag :type=\"getStatusType(row.status)\">\n        {{ row.status }}\n      </el-tag>\n    </template>\n\n    <!-- カスタムアクション -->\n    <template #row-actions=\"{ row }\">\n      <el-button @click=\"view(row)\">詳細</el-button>\n    </template>\n\n    <!-- ダイアログ内容 -->\n    <template #dialog-content>\n      <ResponsiveForm>\n        <!-- フォーム内容 -->\n      </ResponsiveForm>\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ],
            [
              "vue",
              "<!-- Users.vue の新しい実装 -->\n<template>\n  <ResponsiveCrudPage\n    title=\"ユーザー管理\"\n    :columns=\"userColumns\"\n    :data=\"users\"\n    :total=\"total\"\n    :loading=\"loading\"\n    @add=\"addUser\"\n    @edit=\"editUser\"\n    @delete=\"deleteUser\"\n  >\n    <template #search>\n      <el-input\n        v-model=\"searchQuery\"\n        placeholder=\"ユーザー名、メール、氏名、社員番号で検索...\"\n        clearable\n        @keyup.enter=\"handleSearch\"\n      />\n    </template>\n  </ResponsiveCrudPage>\n</template>\n\n<script setup lang=\"ts\">\nconst userColumns = ref([\n  { prop: 'username', label: 'ユーザー名', minWidth: 150, important: true },\n  { prop: 'name', label: '氏名', minWidth: 150, important: true },\n  { prop: 'email', label: 'メール', minWidth: 200 },\n  { prop: 'company.name', label: '会社', minWidth: 150 },\n  { prop: 'role', label: '権限', minWidth: 120, important: true }\n])\n</script>"
            ],
            [
              "typescript",
              "interface ResponsiveTableProps {\n  data: any[]\n  columns?: TableColumn[]\n  showSelection?: boolean\n  showActions?: boolean\n  actionWidth?: number\n  minWidth?: string\n  hideColumnsOnMobile?: string[]\n  stickyHeader?: boolean\n}"
            ],
            [
              "vue",
              "<template>\n  <div class=\"responsive-table-container\">\n    <el-table\n      :data=\"data\"\n      :style=\"{ minWidth: computedMinWidth }\"\n      v-bind=\"$attrs\"\n    >\n      <!-- 選択列 -->\n      <el-table-column\n        v-if=\"showSelection\"\n        type=\"selection\"\n        :width=\"isMobile ? 40 : 55\"\n      />\n\n      <!-- データ列 -->\n      <el-table-column\n        v-for=\"column in visibleColumns\"\n        :key=\"column.prop\"\n        v-bind=\"getColumnProps(column)\"\n      >\n        <template #default=\"{ row }\" v-if=\"$slots[`column-${column.prop}`]\">\n          <slot :name=\"`column-${column.prop}`\" :row=\"row\" />\n        </template>\n      </el-table-column>\n\n      <!-- アクション列 -->\n      <el-table-column\n        v-if=\"showActions\"\n        label=\"操作\"\n        :width=\"computedActionWidth\"\n        :fixed=\"!isMobile && 'right'\"\n      >\n        <template #default=\"{ row }\">\n          <slot name=\"actions\" :row=\"row\">\n            <el-button size=\"small\" @click=\"$emit('edit', row)\">\n              編集\n            </el-button>\n            <el-button\n              size=\"small\"\n              type=\"danger\"\n              @click=\"$emit('delete', row)\"\n            >\n              削除\n            </el-button>\n          </slot>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useResponsive } from '@/composables/useResponsive'\n\nconst { isMobile, isTablet } = useResponsive()\n\n// モバイル時は重要な列のみ表示\nconst visibleColumns = computed(() => {\n  if (!props.columns) return []\n\n  if (isMobile.value) {\n    return props.columns.filter(col =>\n      col.important !== false &&\n      !props.hideColumnsOnMobile?.includes(col.prop)\n    )\n  }\n  return props.columns\n})\n\nconst computedMinWidth = computed(() => {\n  if (isMobile.value) return '100%'\n  return props.minWidth || '800px'\n})\n\nconst computedActionWidth = computed(() => {\n  if (isMobile.value) return 80\n  return props.actionWidth || 150\n})\n\nconst getColumnProps = (column: TableColumn) => {\n  const props = { ...column }\n\n  // 固定幅を最小幅に変換\n  if (props.width && !props.minWidth) {\n    props.minWidth = props.width\n    delete props.width\n  }\n\n  // モバイル時の幅調整\n  if (isMobile.value && props.minWidth) {\n    props.minWidth = Math.min(props.minWidth as number, 120)\n  }\n\n  return props\n}\n</script>\n\n<style scoped>\n.responsive-table-container {\n  width: 100%;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n@media (max-width: 768px) {\n  .responsive-table-container {\n    margin: 0 -16px;\n    padding: 0 16px;\n  }\n\n  :deep(.el-table) {\n    font-size: 12px;\n  }\n\n  :deep(.el-table .cell) {\n    padding: 0 4px;\n  }\n\n  :deep(.el-button) {\n    padding: 4px 8px;\n    font-size: 12px;\n  }\n}\n</style>"
            ],
            [
              "typescript",
              "interface ResponsiveDialogProps {\n  modelValue: boolean\n  title?: string\n  desktopWidth?: string | number\n  tabletWidth?: string | number\n  mobileWidth?: string | number\n  fullscreenOnMobile?: boolean\n  responsive?: boolean\n}"
            ],
            [
              "vue",
              "<template>\n  <el-dialog\n    :model-value=\"modelValue\"\n    :title=\"title\"\n    :width=\"computedWidth\"\n    :fullscreen=\"computedFullscreen\"\n    v-bind=\"$attrs\"\n    @update:model-value=\"$emit('update:modelValue', $event)\"\n  >\n    <slot></slot>\n\n    <template #footer v-if=\"$slots.footer\">\n      <div class=\"dialog-footer\" :class=\"{ 'mobile-footer': isMobile }\">\n        <slot name=\"footer\"></slot>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useResponsive } from '@/composables/useResponsive'\n\nconst { isMobile, isTablet } = useResponsive()\n\nconst computedWidth = computed(() => {\n  if (!props.responsive) return props.desktopWidth || '600px'\n\n  if (isMobile.value) {\n    return props.mobileWidth || '95%'\n  }\n  if (isTablet.value) {\n    return props.tabletWidth || '80%'\n  }\n  return props.desktopWidth || '600px'\n})\n\nconst computedFullscreen = computed(() => {\n  return isMobile.value && props.fullscreenOnMobile\n})\n</script>\n\n<style scoped>\n.mobile-footer {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.mobile-footer :deep(.el-button) {\n  width: 100%;\n}\n\n@media (min-width: 769px) {\n  .mobile-footer {\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n\n  .mobile-footer :deep(.el-button) {\n    width: auto;\n  }\n}\n</style>"
            ],
            [
              "typescript",
              "interface ResponsiveFormProps {\n  model: Record<string, any>\n  rules?: Record<string, any>\n  labelPosition?: 'left' | 'right' | 'top'\n  labelWidth?: string | number\n  responsive?: boolean\n  mobileStack?: boolean\n}"
            ],
            [
              "vue",
              "<template>\n  <el-form\n    :model=\"model\"\n    :rules=\"rules\"\n    :label-position=\"computedLabelPosition\"\n    :label-width=\"computedLabelWidth\"\n    v-bind=\"$attrs\"\n  >\n    <slot></slot>\n  </el-form>\n</template>\n\n<script setup lang=\"ts\">\nconst computedLabelPosition = computed(() => {\n  if (!props.responsive) return props.labelPosition || 'right'\n\n  if (isMobile.value || (isTablet.value && props.mobileStack)) {\n    return 'top'\n  }\n  return props.labelPosition || 'right'\n})\n\nconst computedLabelWidth = computed(() => {\n  if (!props.responsive) return props.labelWidth || '120px'\n\n  if (isMobile.value) return 'auto'\n  return props.labelWidth || '120px'\n})\n</script>"
            ],
            [
              "typescript",
              "interface ResponsiveGridProps {\n  gutter?: number\n  justify?: string\n  align?: string\n}\n\ninterface ResponsiveColProps {\n  // 簡略プロパティ\n  mobile?: number    // xs, sm\n  tablet?: number    // md\n  desktop?: number   // lg, xl\n\n  // 従来プロパティ（互換性）\n  xs?: number\n  sm?: number\n  md?: number\n  lg?: number\n  xl?: number\n  span?: number\n}"
            ],
            [
              "vue",
              "<!-- ResponsiveGrid -->\n<template>\n  <el-row\n    :gutter=\"computedGutter\"\n    :justify=\"justify\"\n    :align=\"align\"\n  >\n    <slot></slot>\n  </el-row>\n</template>\n\n<!-- ResponsiveCol -->\n<template>\n  <el-col v-bind=\"computedColProps\">\n    <slot></slot>\n  </el-col>\n</template>\n\n<script setup lang=\"ts\">\nconst computedColProps = computed(() => {\n  return {\n    xs: props.xs || props.mobile || 24,\n    sm: props.sm || props.mobile || 24,\n    md: props.md || props.tablet || props.desktop || 12,\n    lg: props.lg || props.desktop || 8,\n    xl: props.xl || props.desktop || 6,\n    span: props.span\n  }\n})\n</script>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"users-page\">\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>ユーザー管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">\n            <el-icon><Plus /></el-icon>\n            新規追加\n          </el-button>\n        </div>\n      </template>\n\n      <el-form :inline=\"true\" :model=\"searchForm\">\n        <!-- 検索フォーム -->\n      </el-form>\n\n      <el-table :data=\"tableData\">\n        <!-- テーブル定義 -->\n      </el-table>\n\n      <el-pagination>\n        <!-- ページネーション -->\n      </el-pagination>\n    </el-card>\n\n    <el-dialog>\n      <!-- ダイアログ内容 -->\n    </el-dialog>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <ResponsiveCrudPage\n    title=\"ユーザー管理\"\n    :columns=\"userColumns\"\n    :data=\"users\"\n    :total=\"total\"\n    @add=\"addUser\"\n    @edit=\"editUser\"\n  >\n    <template #search>\n      <el-input v-model=\"search\" placeholder=\"検索...\" />\n    </template>\n  </ResponsiveCrudPage>\n</template>"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 6
        }
      },
      "readability": {
        "score": 98.3,
        "sentences": 176,
        "avg_words_per_sentence": 6.81,
        "long_sentences": 10,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 64,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 77.59
    },
    "docs/01_機能設計書/04_共通コンポーネント/共通コンポーネント設計書.md": {
      "basic_metrics": {
        "lines": 298,
        "words": 831,
        "characters": 5989,
        "avg_line_length": 20.09731543624161
      },
      "structure_analysis": {
        "headers": {
          "total": 39,
          "hierarchy": [
            {
              "level": 1,
              "text": "共通コンポーネント設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "アーキテクチャ",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🧩 コンポーネント一覧",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "実装済みコンポーネント（15個）",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "新規レスポンシブコンポーネント（2025-09-27追加）",
              "line_number": 39
            },
            {
              "level": 2,
              "text": "🎨 デザインシステム",
              "line_number": 51
            },
            {
              "level": 3,
              "text": "バリアント設計原則",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "レスポンシブ対応",
              "line_number": 61
            },
            {
              "level": 2,
              "text": "🔧 主要コンポーネント仕様",
              "line_number": 74
            },
            {
              "level": 3,
              "text": "CommonButton",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "CommonForm",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "CommonInput",
              "line_number": 110
            },
            {
              "level": 2,
              "text": "📱 レスポンシブ実装",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "ブレイクポイント定義",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "デバイス検知",
              "line_number": 142
            },
            {
              "level": 2,
              "text": "♿ アクセシビリティ対応",
              "line_number": 155
            },
            {
              "level": 3,
              "text": "WCAG 2.1 AA準拠",
              "line_number": 157
            },
            {
              "level": 3,
              "text": "フォント設定",
              "line_number": 163
            },
            {
              "level": 2,
              "text": "🏗️ アーキテクチャ設計",
              "line_number": 173
            },
            {
              "level": 3,
              "text": "ディレクトリ構造",
              "line_number": 175
            },
            {
              "level": 3,
              "text": "エクスポート管理",
              "line_number": 195
            },
            {
              "level": 2,
              "text": "🧪 テスト戦略",
              "line_number": 209
            },
            {
              "level": 3,
              "text": "単体テスト",
              "line_number": 211
            },
            {
              "level": 3,
              "text": "テストカバレッジ目標",
              "line_number": 216
            },
            {
              "level": 3,
              "text": "E2Eテスト",
              "line_number": 222
            },
            {
              "level": 2,
              "text": "📦 パッケージ管理",
              "line_number": 227
            },
            {
              "level": 3,
              "text": "インストール",
              "line_number": 229
            },
            {
              "level": 1,
              "text": "メインプロジェクトで使用",
              "line_number": 231
            },
            {
              "level": 3,
              "text": "使用方法",
              "line_number": 235
            },
            {
              "level": 2,
              "text": "🚀 実装状況と今後の計画",
              "line_number": 255
            },
            {
              "level": 3,
              "text": "Phase 1-4 完了実績",
              "line_number": 257
            },
            {
              "level": 3,
              "text": "今後の拡張計画",
              "line_number": 262
            },
            {
              "level": 4,
              "text": "Phase 5: ナビゲーション系（予定）",
              "line_number": 264
            },
            {
              "level": 4,
              "text": "Phase 6: レイアウト系（予定）",
              "line_number": 270
            },
            {
              "level": 4,
              "text": "Phase 7: フィードバック系（予定）",
              "line_number": 276
            },
            {
              "level": 3,
              "text": "最終目標",
              "line_number": 282
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 287
            }
          ],
          "hierarchy_issues": [
            {
              "line": 235,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 22,
          "languages": {
            "typescript": 7,
            "css": 1,
            "bash": 1,
            "vue": 1
          },
          "details": [
            [
              "typescript",
              "// 共通Props定義\ninterface ResponsiveProps {\n  responsive?: boolean      // レスポンシブ有効化\n  touchOptimized?: boolean  // タッチ最適化\n}"
            ],
            [
              "typescript",
              "interface CommonButtonProps {\n  variant: 'default' | 'primary' | 'action' | 'ghost'\n  size?: 'small' | 'medium' | 'large'\n  responsive?: boolean\n  touchOptimized?: boolean\n  loading?: boolean\n  disabled?: boolean\n}"
            ],
            [
              "typescript",
              "interface CommonFormProps {\n  variant: 'default' | 'compact' | 'card' | 'inline'\n  model: Record<string, any>\n  rules?: FormRules\n  labelPosition?: 'top' | 'left' | 'right'\n  responsive?: boolean\n}"
            ],
            [
              "typescript",
              "interface CommonInputProps {\n  variant: 'default' | 'search' | 'secure' | 'numeric'\n  modelValue: string\n  placeholder?: string\n  clearable?: boolean\n  showPassword?: boolean\n  responsive?: boolean\n  touchOptimized?: boolean\n}"
            ],
            [
              "typescript",
              "const breakpoints = {\n  xs: 320,   // スマートフォン（縦）\n  sm: 576,   // スマートフォン（横）\n  md: 768,   // タブレット（縦）\n  lg: 992,   // タブレット（横）・小型PC\n  xl: 1200,  // デスクトップ\n  xxl: 1920  // 大型ディスプレイ\n}"
            ],
            [
              "typescript",
              "const { isMobile, isTablet, isDesktop } = useResponsive()\n\nconst computedStyle = computed(() => {\n  if (props.responsive) {\n    if (isMobile.value) return mobileStyles\n    if (isTablet.value) return tabletStyles\n  }\n  return defaultStyles\n})"
            ],
            [
              "css",
              "font-family:\n  \"BIZ UDPGothic\",\n  \"BIZ UDGothic\",\n  sans-serif;\nfont-size: 16px;  /* 最小推奨サイズ */\nline-height: 1.6; /* 読みやすい行間 */"
            ],
            [
              "",
              "packages/shared-components/\n├── src/\n│   ├── components/           # コンポーネント本体\n│   │   ├── CommonButton/\n│   │   │   ├── index.vue    # メインコンポーネント\n│   │   │   └── types.ts     # 型定義\n│   │   └── ...\n│   ├── composables/         # 共通ロジック\n│   │   ├── useResponsive.ts # レスポンシブ制御\n│   │   └── useTheme.ts      # テーマ制御\n│   ├── styles/              # 共通スタイル\n│   │   ├── variables.scss   # CSS変数\n│   │   └── mixins.scss      # SCSSミックスイン\n│   └── index.ts            # エクスポート管理\n├── package.json\n└── vite.config.ts"
            ],
            [
              "typescript",
              "// packages/shared-components/src/index.ts\nexport { default as CommonButton } from './components/CommonButton/index.vue'\nexport { default as CommonCard } from './components/CommonCard/index.vue'\n// ... 他15個のコンポーネント\n\nexport type {\n  CommonButtonProps,\n  CommonCardProps,\n  // ... 型定義\n} from './types'"
            ],
            [
              "bash",
              "# メインプロジェクトで使用\nnpm install file:../../packages/shared-components"
            ],
            [
              "vue",
              "<template>\n  <CommonCard variant=\"default\">\n    <CommonButton\n      variant=\"primary\"\n      responsive\n      touch-optimized\n      @on-click=\"handleClick\"\n    >\n      クリック\n    </CommonButton>\n  </CommonCard>\n</template>\n\n<script setup lang=\"ts\">\nimport { CommonCard, CommonButton } from '@company/shared-components'\n</script>"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 24
        }
      },
      "readability": {
        "score": 90.94,
        "sentences": 51,
        "avg_words_per_sentence": 16.29,
        "long_sentences": 11,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.620000000000005,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.83
    },
    "docs/01_機能設計書/04_共通コンポーネント/CodePreview機能詳細設計書.md": {
      "basic_metrics": {
        "lines": 475,
        "words": 1141,
        "characters": 10251,
        "avg_line_length": 21.58105263157895
      },
      "structure_analysis": {
        "headers": {
          "total": 44,
          "hierarchy": [
            {
              "level": 1,
              "text": "CodePreview機能詳細設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 機能概要",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 機能目標",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "2. コンポーネント設計",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2.1 Props定義",
              "line_number": 20
            },
            {
              "level": 3,
              "text": "2.2 バリアント設計",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "2.3 コンポーネント構造",
              "line_number": 41
            },
            {
              "level": 2,
              "text": "3. 言語別実行機能",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "3.1 JavaScript実行",
              "line_number": 70
            },
            {
              "level": 3,
              "text": "3.2 HTML表示",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "3.3 CSS適用",
              "line_number": 97
            },
            {
              "level": 3,
              "text": "3.4 Vue Component実行",
              "line_number": 114
            },
            {
              "level": 2,
              "text": "4. シンタックスハイライト",
              "line_number": 128
            },
            {
              "level": 3,
              "text": "4.1 Prism.js統合",
              "line_number": 130
            },
            {
              "level": 3,
              "text": "4.2 テーマとスタイリング",
              "line_number": 147
            },
            {
              "level": 2,
              "text": "5. セキュリティ設計",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "5.1 コード実行の制限",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "5.2 実行環境の分離",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "6. UI/UX設計",
              "line_number": 210
            },
            {
              "level": 3,
              "text": "6.1 レスポンシブ対応",
              "line_number": 212
            },
            {
              "level": 3,
              "text": "6.2 アクセシビリティ",
              "line_number": 234
            },
            {
              "level": 3,
              "text": "6.3 ユーザビリティ",
              "line_number": 240
            },
            {
              "level": 2,
              "text": "7. デモページ設計",
              "line_number": 259
            },
            {
              "level": 3,
              "text": "7.1 デモ構成",
              "line_number": 261
            },
            {
              "level": 3,
              "text": "7.2 デモページ機能",
              "line_number": 307
            },
            {
              "level": 2,
              "text": "8. パフォーマンス設計",
              "line_number": 313
            },
            {
              "level": 3,
              "text": "8.1 最適化戦略",
              "line_number": 315
            },
            {
              "level": 3,
              "text": "8.2 遅延読み込み",
              "line_number": 337
            },
            {
              "level": 2,
              "text": "9. エラーハンドリング",
              "line_number": 348
            },
            {
              "level": 3,
              "text": "9.1 エラータイプ別処理",
              "line_number": 350
            },
            {
              "level": 3,
              "text": "9.2 タイムアウト処理",
              "line_number": 367
            },
            {
              "level": 2,
              "text": "10. テスト設計",
              "line_number": 387
            },
            {
              "level": 3,
              "text": "10.1 単体テスト",
              "line_number": 389
            },
            {
              "level": 3,
              "text": "10.2 統合テスト",
              "line_number": 411
            },
            {
              "level": 2,
              "text": "11. 運用・保守",
              "line_number": 416
            },
            {
              "level": 3,
              "text": "11.1 ログ管理",
              "line_number": 418
            },
            {
              "level": 3,
              "text": "11.2 モニタリング",
              "line_number": 433
            },
            {
              "level": 2,
              "text": "12. 今後の拡張予定",
              "line_number": 438
            },
            {
              "level": 3,
              "text": "12.1 機能拡張",
              "line_number": 440
            },
            {
              "level": 3,
              "text": "12.2 UI改善",
              "line_number": 446
            },
            {
              "level": 2,
              "text": "13. 実装状況",
              "line_number": 451
            },
            {
              "level": 3,
              "text": "13.1 現在の実装",
              "line_number": 453
            },
            {
              "level": 3,
              "text": "13.2 動作確認",
              "line_number": 465
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 20,
          "inline_code": 50,
          "languages": {
            "typescript": 16,
            "vue": 1,
            "scss": 2,
            "bash": 1
          },
          "details": [
            [
              "typescript",
              "interface CodePreviewProps {\n  code: string                    // 実行・表示するコード\n  language?: 'javascript' | 'typescript' | 'vue' | 'html' | 'css'\n  title?: string                  // プレビューのタイトル\n  variant?: 'default' | 'preview-only' | 'code-only' | 'compact'\n  autoExecute?: boolean          // 自動実行フラグ\n  componentProps?: Record<string, any>  // Vue component用のprops\n  responsive?: boolean           // レスポンシブ対応フラグ\n}"
            ],
            [
              "vue",
              "<template>\n  <div class=\"code-preview\" :class=\"[`variant-${variant}`, { responsive }]\">\n    <!-- ヘッダー部 -->\n    <div v-if=\"title\" class=\"code-preview__header\">\n      <h3>{{ title }}</h3>\n    </div>\n\n    <!-- プレビュー部 -->\n    <div v-if=\"showPreview\" class=\"code-preview__preview\">\n      <div class=\"preview-content\" ref=\"previewRef\"></div>\n    </div>\n\n    <!-- コード表示部 -->\n    <div v-if=\"showCode\" class=\"code-preview__code\">\n      <pre><code class=\"language-javascript\" v-html=\"highlightedCode\"></code></pre>\n    </div>\n\n    <!-- 実行ボタン部 -->\n    <div v-if=\"showControls\" class=\"code-preview__controls\">\n      <el-button @click=\"executeCode\" :loading=\"executing\">実行</el-button>\n    </div>\n  </div>\n</template>"
            ],
            [
              "typescript",
              "const executeJavaScript = (code: string) => {\n  try {\n    // セキュアな実行環境作成\n    const result = new Function(code)()\n\n    // DOM操作の場合は結果をプレビューエリアに反映\n    if (typeof result === 'string') {\n      previewRef.value.innerHTML = result\n    } else if (result instanceof HTMLElement) {\n      previewRef.value.appendChild(result)\n    }\n  } catch (error) {\n    showError(error.message)\n  }\n}"
            ],
            [
              "typescript",
              "const executeHTML = (code: string) => {\n  // HTMLをそのままプレビューエリアに表示\n  previewRef.value.innerHTML = code\n}"
            ],
            [
              "typescript",
              "const executeCSS = (code: string) => {\n  // 一意のIDを持つstyleタグを作成\n  const styleId = `code-preview-style-${Date.now()}`\n  const styleElement = document.createElement('style')\n  styleElement.id = styleId\n  styleElement.textContent = code\n  document.head.appendChild(styleElement)\n\n  // プレビューエリアにサンプル要素を表示\n  previewRef.value.innerHTML = `\n    <div class=\"css-sample\">CSS適用サンプル</div>\n  `\n}"
            ],
            [
              "typescript",
              "const executeVueComponent = (code: string, props: Record<string, any>) => {\n  try {\n    // Vue SFCのパースと実行\n    const component = parseVueComponent(code)\n    const app = createApp(component, props)\n    app.mount(previewRef.value)\n  } catch (error) {\n    showError('Vue component execution failed: ' + error.message)\n  }\n}"
            ],
            [
              "typescript",
              "import Prism from 'prismjs'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-css'\n\nconst highlightCode = (code: string, language: string) => {\n  const grammar = Prism.languages[language]\n  if (grammar) {\n    return Prism.highlight(code, grammar, language)\n  }\n  return code\n}"
            ],
            [
              "scss",
              "// Prism.js カスタムテーマ\n.code-preview__code {\n  .token.comment { color: #6a737d; }\n  .token.keyword { color: #d73a49; font-weight: bold; }\n  .token.string { color: #032f62; }\n  .token.function { color: #6f42c1; }\n  .token.number { color: #005cc5; }\n\n  // BIZ UDGothic対応\n  font-family: 'JetBrains Mono', 'BIZ UDGothic', monospace;\n  font-size: 14px;\n  line-height: 1.5;\n}"
            ],
            [
              "typescript",
              "const securityConfig = {\n  // 禁止されたメソッド・プロパティ\n  blockedMethods: [\n    'fetch', 'XMLHttpRequest', 'WebSocket',\n    'localStorage', 'sessionStorage',\n    'document.cookie', 'location'\n  ],\n\n  // 実行時間制限\n  executionTimeout: 5000, // 5秒\n\n  // DOM操作範囲制限\n  allowedScope: 'preview-container'\n}\n\nconst sanitizeCode = (code: string): string => {\n  // 危険なメソッドの呼び出しをチェック\n  for (const method of securityConfig.blockedMethods) {\n    if (code.includes(method)) {\n      throw new Error(`Blocked method detected: ${method}`)\n    }\n  }\n  return code\n}"
            ],
            [
              "typescript",
              "const createSandbox = () => {\n  // iframe内での実行（より安全）\n  const iframe = document.createElement('iframe')\n  iframe.style.display = 'none'\n  iframe.sandbox = 'allow-scripts'\n  document.body.appendChild(iframe)\n\n  const iframeWindow = iframe.contentWindow\n  const iframeDocument = iframe.contentDocument\n\n  return { window: iframeWindow, document: iframeDocument }\n}"
            ],
            [
              "scss",
              ".code-preview {\n  // デスクトップ: プレビューとコードを上下配置\n  @media (min-width: 768px) {\n    .code-preview__preview {\n      margin-bottom: 1rem;\n    }\n  }\n\n  // モバイル: コンパクトな表示\n  @media (max-width: 767px) {\n    &.variant-default {\n      .code-preview__code {\n        font-size: 12px;\n        overflow-x: auto;\n      }\n    }\n  }\n}"
            ],
            [
              "typescript",
              "// 実行状態の視覚的フィードバック\nconst executeWithFeedback = async (code: string) => {\n  executing.value = true\n  showProgress.value = true\n\n  try {\n    await executeCode(code)\n    showSuccess('実行完了')\n  } catch (error) {\n    showError(error.message)\n  } finally {\n    executing.value = false\n    showProgress.value = false\n  }\n}"
            ],
            [
              "typescript",
              "const demoExamples = [\n  {\n    title: 'JavaScript実行例',\n    code: `\n// 現在時刻を表示\nconst now = new Date()\ndocument.body.innerHTML = '<h2>現在時刻: ' + now.toLocaleString() + '</h2>'\n    `,\n    language: 'javascript'\n  },\n  {\n    title: 'HTML表示例',\n    code: `\n<div style=\"padding: 20px; background: #f0f8ff; border-radius: 8px;\">\n  <h3>サンプルHTML</h3>\n  <p>このHTMLが表示されます</p>\n  <button onclick=\"alert('ボタンがクリックされました!')\">クリック</button>\n</div>\n    `,\n    language: 'html'\n  },\n  {\n    title: 'CSS動作例',\n    code: `\n.css-sample {\n  background: linear-gradient(45deg, #ff6b6b, #4ecdc4);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center;\n  font-size: 18px;\n  animation: fadeIn 1s ease-in;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n    `,\n    language: 'css'\n  }\n]"
            ],
            [
              "typescript",
              "// 実行結果のキャッシュ\nconst executionCache = new Map<string, any>()\n\nconst getCachedResult = (code: string) => {\n  const hash = btoa(code) // コードのハッシュ化\n  return executionCache.get(hash)\n}\n\nconst setCachedResult = (code: string, result: any) => {\n  const hash = btoa(code)\n  executionCache.set(hash, result)\n\n  // キャッシュサイズ制限\n  if (executionCache.size > 50) {\n    const firstKey = executionCache.keys().next().value\n    executionCache.delete(firstKey)\n  }\n}"
            ],
            [
              "typescript",
              "// Prism.jsの言語別遅延読み込み\nconst loadLanguageSupport = async (language: string) => {\n  if (!loadedLanguages.has(language)) {\n    await import(`prismjs/components/prism-${language}`)\n    loadedLanguages.add(language)\n  }\n}"
            ],
            [
              "typescript",
              "const handleExecutionError = (error: Error) => {\n  const errorTypes = {\n    SyntaxError: '構文エラー: コードの記述を確認してください',\n    ReferenceError: '参照エラー: 未定義の変数が使用されています',\n    TypeError: '型エラー: データ型が正しくありません',\n    SecurityError: 'セキュリティエラー: 実行が制限されました'\n  }\n\n  const errorType = error.constructor.name\n  const message = errorTypes[errorType] || '実行エラーが発生しました'\n\n  ElMessage.error(`${message}: ${error.message}`)\n}"
            ],
            [
              "typescript",
              "const executeWithTimeout = (code: string, timeout: number = 5000) => {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      reject(new Error('実行がタイムアウトしました'))\n    }, timeout)\n\n    try {\n      const result = executeCode(code)\n      clearTimeout(timer)\n      resolve(result)\n    } catch (error) {\n      clearTimeout(timer)\n      reject(error)\n    }\n  })\n}"
            ],
            [
              "typescript",
              "describe('CodePreview Component', () => {\n  test('JavaScript code execution', () => {\n    const code = 'return 2 + 2'\n    const result = executeJavaScript(code)\n    expect(result).toBe(4)\n  })\n\n  test('HTML rendering', () => {\n    const code = '<div>Test</div>'\n    executeHTML(code)\n    expect(previewRef.value.innerHTML).toBe(code)\n  })\n\n  test('Security restrictions', () => {\n    const maliciousCode = 'localStorage.clear()'\n    expect(() => sanitizeCode(maliciousCode)).toThrow()\n  })\n})"
            ],
            [
              "typescript",
              "const logExecution = (code: string, result: any, error?: Error) => {\n  const logEntry = {\n    timestamp: new Date().toISOString(),\n    code: code.substring(0, 100), // 先頭100文字のみ\n    success: !error,\n    error: error?.message,\n    executionTime: Date.now() - startTime\n  }\n\n  console.log('CodePreview execution:', logEntry)\n}"
            ],
            [
              "bash",
              "✅ 基本コンポーネント実装完了\n✅ JavaScript/HTML/CSS実行機能\n✅ Prism.jsシンタックスハイライト\n✅ 4バリアント対応\n✅ レスポンシブ対応\n✅ セキュリティ制限実装\n✅ デモページ作成\n✅ エラーハンドリング"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 6
        }
      },
      "readability": {
        "score": 97.83,
        "sentences": 152,
        "avg_words_per_sentence": 7.51,
        "long_sentences": 11,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 62,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 76.65
    },
    "docs/01_機能設計書/13_機能管理システム/データベース設計書.md": {
      "basic_metrics": {
        "lines": 747,
        "words": 2735,
        "characters": 20918,
        "avg_line_length": 28.002677376171352
      },
      "structure_analysis": {
        "headers": {
          "total": 27,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム データベース設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. ER図",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. テーブル詳細設計",
              "line_number": 160
            },
            {
              "level": 3,
              "text": "2.1 companies（会社マスタ）",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "2.2 departments（部署マスタ）",
              "line_number": 188
            },
            {
              "level": 3,
              "text": "2.3 users（ユーザーマスタ）※拡張",
              "line_number": 216
            },
            {
              "level": 3,
              "text": "2.4 user_departments（ユーザー所属）",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "2.5 features（機能マスタ）",
              "line_number": 260
            },
            {
              "level": 3,
              "text": "2.6 department_feature_permissions（部署機能権限）",
              "line_number": 294
            },
            {
              "level": 3,
              "text": "2.7 permission_templates（権限テンプレート）",
              "line_number": 321
            },
            {
              "level": 3,
              "text": "2.8 permission_template_details（権限テンプレート詳細）",
              "line_number": 344
            },
            {
              "level": 3,
              "text": "2.9 permission_audit_logs（権限変更監査ログ）",
              "line_number": 361
            },
            {
              "level": 2,
              "text": "3. データベース初期データ",
              "line_number": 395
            },
            {
              "level": 3,
              "text": "3.1 機能マスタ初期データ",
              "line_number": 397
            },
            {
              "level": 3,
              "text": "3.2 権限テンプレート初期データ",
              "line_number": 427
            },
            {
              "level": 2,
              "text": "4. パフォーマンス最適化設計",
              "line_number": 449
            },
            {
              "level": 3,
              "text": "4.1 インデックス戦略",
              "line_number": 451
            },
            {
              "level": 3,
              "text": "4.2 パーティショニング戦略",
              "line_number": 473
            },
            {
              "level": 2,
              "text": "5. データ整合性保証",
              "line_number": 506
            },
            {
              "level": 3,
              "text": "5.1 トリガー定義",
              "line_number": 508
            },
            {
              "level": 3,
              "text": "5.2 制約定義",
              "line_number": 554
            },
            {
              "level": 2,
              "text": "6. バックアップ・リカバリ設計",
              "line_number": 580
            },
            {
              "level": 3,
              "text": "6.1 バックアップ戦略",
              "line_number": 582
            },
            {
              "level": 3,
              "text": "6.2 リストア手順",
              "line_number": 615
            },
            {
              "level": 2,
              "text": "7. 監視・メンテナンス",
              "line_number": 657
            },
            {
              "level": 3,
              "text": "7.1 統計情報ビュー",
              "line_number": 659
            },
            {
              "level": 3,
              "text": "7.2 メンテナンススクリプト",
              "line_number": 690
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 11,
          "inline_code": 21,
          "languages": {
            "mermaid": 1,
            "sql": 10
          },
          "details": [
            [
              "mermaid",
              "erDiagram\n    companies ||--o{ departments : has\n    companies ||--o{ users : employs\n    departments ||--o{ departments : has_sub\n    departments ||--o{ user_departments : assigns\n    departments ||--o{ department_feature_permissions : has\n    users ||--o{ user_departments : belongs_to\n    users ||--|| departments : primary_dept\n    features ||--o{ features : has_sub\n    features ||--o{ department_feature_permissions : permitted_to\n    features ||--o{ permission_template_details : included_in\n    permission_templates ||--o{ permission_template_details : contains\n    users ||--o{ permission_audit_logs : performs\n\n    companies {\n        serial id PK\n        varchar(20) code UK\n        varchar(100) name\n        varchar(100) name_kana\n        varchar(50) industry\n        date established_date\n        integer employee_count\n        text address\n        varchar(20) phone\n        varchar(100) email\n        varchar(50) contract_plan\n        integer max_users\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n        integer created_by FK\n        integer updated_by FK\n    }\n\n    departments {\n        serial id PK\n        integer company_id FK\n        varchar(20) code\n        varchar(100) name\n        varchar(100) name_kana\n        integer parent_id FK\n        integer level\n        text path\n        integer display_order\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n        integer created_by FK\n        integer updated_by FK\n    }\n\n    users {\n        serial id PK\n        varchar(100) email UK\n        varchar(255) password\n        varchar(100) name\n        integer company_id FK\n        integer primary_department_id FK\n        varchar(50) employee_code\n        date join_date\n        date leave_date\n        varchar(20) role\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    user_departments {\n        serial id PK\n        integer user_id FK\n        integer department_id FK\n        boolean is_primary\n        varchar(50) role\n        date assigned_date\n        date expired_date\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    features {\n        serial id PK\n        varchar(50) code UK\n        varchar(100) name\n        text description\n        varchar(50) category\n        integer parent_id FK\n        text path\n        varchar(200) url_pattern\n        varchar(200) api_pattern\n        varchar(50) icon\n        integer display_order\n        boolean is_menu_item\n        boolean is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    department_feature_permissions {\n        serial id PK\n        integer department_id FK\n        integer feature_id FK\n        boolean can_view\n        boolean can_create\n        boolean can_edit\n        boolean can_delete\n        boolean can_approve\n        boolean can_export\n        boolean inherit_from_parent\n        timestamp created_at\n        timestamp updated_at\n        integer created_by FK\n        integer updated_by FK\n    }\n\n    permission_templates {\n        serial id PK\n        varchar(100) name\n        text description\n        varchar(50) department_type\n        integer company_id FK\n        boolean is_system_template\n        timestamp created_at\n        timestamp updated_at\n        integer created_by FK\n    }\n\n    permission_template_details {\n        serial id PK\n        integer template_id FK\n        integer feature_id FK\n        boolean can_view\n        boolean can_create\n        boolean can_edit\n        boolean can_delete\n        boolean can_approve\n        boolean can_export\n    }\n\n    permission_audit_logs {\n        serial id PK\n        integer user_id FK\n        varchar(50) action\n        varchar(50) target_type\n        integer target_id\n        integer feature_id FK\n        jsonb old_permissions\n        jsonb new_permissions\n        text reason\n        varchar(45) ip_address\n        text user_agent\n        timestamp created_at\n    }"
            ],
            [
              "sql",
              "-- システム管理機能\nINSERT INTO features (code, name, description, category, display_order) VALUES\n('USER_MGMT', 'ユーザー管理', 'ユーザーの登録・編集・削除', 'SYSTEM', 10),\n('DEPT_MGMT', '部署管理', '部署の登録・編集・削除', 'SYSTEM', 20),\n('COMPANY_MGMT', '会社管理', '会社情報の管理', 'SYSTEM', 30),\n('PERMISSION_MGMT', '権限管理', '権限の設定・管理', 'SYSTEM', 40),\n('LOG_MGMT', 'ログ管理', 'システムログの閲覧・管理', 'SYSTEM', 50),\n\n-- ユーザー管理の子機能\n('USER_LIST', 'ユーザー一覧', 'ユーザー一覧の表示', 'USER_MGMT', 11),\n('USER_CREATE', 'ユーザー登録', '新規ユーザーの登録', 'USER_MGMT', 12),\n('USER_EDIT', 'ユーザー編集', 'ユーザー情報の編集', 'USER_MGMT', 13),\n('USER_DELETE', 'ユーザー削除', 'ユーザーの削除', 'USER_MGMT', 14),\n('USER_IMPORT', 'ユーザー一括登録', 'CSVによる一括登録', 'USER_MGMT', 15),\n\n-- ログ管理の子機能\n('LOG_SEARCH', 'ログ検索', 'ログの検索・閲覧', 'LOG_MGMT', 51),\n('LOG_STATISTICS', 'ログ統計', 'ログの統計表示', 'LOG_MGMT', 52),\n('LOG_EXPORT', 'ログエクスポート', 'ログのエクスポート', 'LOG_MGMT', 53),\n('LOG_CLEANUP', 'ログクリーンアップ', '古いログの削除', 'LOG_MGMT', 54),\n\n-- レポート機能\n('REPORT_USER', 'ユーザーレポート', 'ユーザー関連レポート', 'REPORT', 61),\n('REPORT_PERMISSION', '権限レポート', '権限設定レポート', 'REPORT', 62),\n('REPORT_AUDIT', '監査レポート', '監査ログレポート', 'REPORT', 63);"
            ],
            [
              "sql",
              "-- システム管理者用テンプレート\nINSERT INTO permission_templates (name, description, department_type, is_system_template)\nVALUES ('システム管理者', '全機能へのフルアクセス', 'IT', true);\n\n-- テンプレート詳細（全権限付与）\nINSERT INTO permission_template_details (template_id, feature_id, can_view, can_create, can_edit, can_delete, can_approve, can_export)\nSELECT 1, id, true, true, true, true, true, true FROM features;\n\n-- 一般部署用テンプレート\nINSERT INTO permission_templates (name, description, department_type, is_system_template)\nVALUES ('一般部署', '基本機能のみ', 'GENERAL', true);\n\n-- テンプレート詳細（閲覧のみ）\nINSERT INTO permission_template_details (template_id, feature_id, can_view, can_create, can_edit, can_delete, can_approve, can_export)\nSELECT 2, id, true, false, false, false, false, false\nFROM features\nWHERE category NOT IN ('SYSTEM', 'PERMISSION_MGMT');"
            ],
            [
              "sql",
              "-- 権限チェック用複合インデックス\nCREATE INDEX idx_permission_check\nON department_feature_permissions(department_id, feature_id)\nINCLUDE (can_view, can_create, can_edit, can_delete, can_approve, can_export)\nWHERE department_id IS NOT NULL;\n\n-- ユーザー所属検索用\nCREATE INDEX idx_user_dept_active\nON user_departments(user_id, is_primary)\nWHERE expired_date IS NULL OR expired_date > CURRENT_DATE;\n\n-- 部署階層検索用\nCREATE INDEX idx_dept_hierarchy\nON departments(company_id, parent_id, level)\nWHERE is_active = true;"
            ],
            [
              "sql",
              "-- 監査ログのパーティショニング（月単位）\nCREATE TABLE permission_audit_logs_2024_01\nPARTITION OF permission_audit_logs\nFOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n\nCREATE TABLE permission_audit_logs_2024_02\nPARTITION OF permission_audit_logs\nFOR VALUES FROM ('2024-02-01') TO ('2024-03-01');\n\n-- 自動パーティション作成\nCREATE OR REPLACE FUNCTION create_monthly_partition()\nRETURNS void AS $$\nDECLARE\n  partition_name text;\n  start_date date;\n  end_date date;\nBEGIN\n  start_date := date_trunc('month', CURRENT_DATE + interval '1 month');\n  end_date := start_date + interval '1 month';\n  partition_name := 'permission_audit_logs_' || to_char(start_date, 'YYYY_MM');\n\n  EXECUTE format('\n    CREATE TABLE IF NOT EXISTS %I\n    PARTITION OF permission_audit_logs\n    FOR VALUES FROM (%L) TO (%L)',\n    partition_name, start_date, end_date);\nEND;\n$$ LANGUAGE plpgsql;"
            ],
            [
              "sql",
              "-- 部署階層パス自動更新\nCREATE OR REPLACE FUNCTION update_department_path()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.parent_id IS NULL THEN\n    NEW.path = '/' || NEW.id;\n    NEW.level = 1;\n  ELSE\n    SELECT path || '/' || NEW.id, level + 1\n    INTO NEW.path, NEW.level\n    FROM departments\n    WHERE id = NEW.parent_id;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_update_department_path\nBEFORE INSERT OR UPDATE ON departments\nFOR EACH ROW\nEXECUTE FUNCTION update_department_path();\n\n-- ユーザー主所属の一意性保証\nCREATE OR REPLACE FUNCTION ensure_single_primary_dept()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF NEW.is_primary = true THEN\n    UPDATE user_departments\n    SET is_primary = false\n    WHERE user_id = NEW.user_id\n    AND id != NEW.id;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trg_ensure_single_primary\nAFTER INSERT OR UPDATE ON user_departments\nFOR EACH ROW\nWHEN (NEW.is_primary = true)\nEXECUTE FUNCTION ensure_single_primary_dept();"
            ],
            [
              "sql",
              "-- 部署の循環参照防止\nALTER TABLE departments\nADD CONSTRAINT chk_no_self_reference\nCHECK (id != parent_id);\n\n-- 日付の整合性\nALTER TABLE user_departments\nADD CONSTRAINT chk_date_validity\nCHECK (expired_date IS NULL OR expired_date > assigned_date);\n\nALTER TABLE users\nADD CONSTRAINT chk_employment_dates\nCHECK (leave_date IS NULL OR leave_date > join_date);\n\n-- 権限の論理整合性\nALTER TABLE department_feature_permissions\nADD CONSTRAINT chk_permission_logic\nCHECK (\n  (can_view = true) OR\n  (can_create = false AND can_edit = false AND can_delete = false AND can_approve = false AND can_export = false)\n);"
            ],
            [
              "sql",
              "-- 権限設定のバックアップビュー\nCREATE VIEW v_permission_backup AS\nSELECT\n  d.company_id,\n  c.code AS company_code,\n  d.code AS department_code,\n  f.code AS feature_code,\n  p.can_view,\n  p.can_create,\n  p.can_edit,\n  p.can_delete,\n  p.can_approve,\n  p.can_export,\n  p.created_at,\n  p.updated_at\nFROM department_feature_permissions p\nJOIN departments d ON p.department_id = d.id\nJOIN companies c ON d.company_id = c.id\nJOIN features f ON p.feature_id = f.id;\n\n-- バックアップテーブル\nCREATE TABLE permission_backups (\n  id SERIAL PRIMARY KEY,\n  backup_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  backup_type VARCHAR(50),\n  backup_data JSONB,\n  created_by INTEGER REFERENCES users(id)\n);"
            ],
            [
              "sql",
              "-- 権限設定のリストア関数\nCREATE OR REPLACE FUNCTION restore_permissions(backup_id INTEGER)\nRETURNS void AS $$\nDECLARE\n  backup_record RECORD;\n  perm RECORD;\nBEGIN\n  SELECT * INTO backup_record\n  FROM permission_backups\n  WHERE id = backup_id;\n\n  FOR perm IN SELECT * FROM jsonb_array_elements(backup_record.backup_data)\n  LOOP\n    INSERT INTO department_feature_permissions\n    (department_id, feature_id, can_view, can_create, can_edit, can_delete, can_approve, can_export)\n    VALUES (\n      (perm->>'department_id')::INTEGER,\n      (perm->>'feature_id')::INTEGER,\n      (perm->>'can_view')::BOOLEAN,\n      (perm->>'can_create')::BOOLEAN,\n      (perm->>'can_edit')::BOOLEAN,\n      (perm->>'can_delete')::BOOLEAN,\n      (perm->>'can_approve')::BOOLEAN,\n      (perm->>'can_export')::BOOLEAN\n    )\n    ON CONFLICT (department_id, feature_id)\n    DO UPDATE SET\n      can_view = EXCLUDED.can_view,\n      can_create = EXCLUDED.can_create,\n      can_edit = EXCLUDED.can_edit,\n      can_delete = EXCLUDED.can_delete,\n      can_approve = EXCLUDED.can_approve,\n      can_export = EXCLUDED.can_export,\n      updated_at = CURRENT_TIMESTAMP;\n  END LOOP;\nEND;\n$$ LANGUAGE plpgsql;"
            ],
            [
              "sql",
              "-- 権限利用統計\nCREATE VIEW v_permission_statistics AS\nSELECT\n  c.name AS company_name,\n  d.name AS department_name,\n  COUNT(DISTINCT p.feature_id) AS total_features,\n  COUNT(DISTINCT CASE WHEN p.can_view THEN p.feature_id END) AS viewable_features,\n  COUNT(DISTINCT CASE WHEN p.can_create THEN p.feature_id END) AS creatable_features,\n  COUNT(DISTINCT u.user_id) AS total_users\nFROM departments d\nLEFT JOIN companies c ON d.company_id = c.id\nLEFT JOIN department_feature_permissions p ON d.id = p.department_id\nLEFT JOIN user_departments u ON d.id = u.department_id\nWHERE d.is_active = true\nGROUP BY c.id, c.name, d.id, d.name;\n\n-- 監査ログ統計\nCREATE VIEW v_audit_statistics AS\nSELECT\n  DATE(created_at) AS audit_date,\n  action,\n  target_type,\n  COUNT(*) AS action_count,\n  COUNT(DISTINCT user_id) AS unique_users\nFROM permission_audit_logs\nGROUP BY DATE(created_at), action, target_type;"
            ],
            [
              "sql",
              "-- 未使用権限の検出\nCREATE OR REPLACE FUNCTION find_unused_permissions()\nRETURNS TABLE(\n  department_id INTEGER,\n  department_name VARCHAR,\n  feature_id INTEGER,\n  feature_name VARCHAR,\n  last_used TIMESTAMP\n) AS $$\nBEGIN\n  RETURN QUERY\n  SELECT\n    p.department_id,\n    d.name,\n    p.feature_id,\n    f.name,\n    MAX(al.created_at) AS last_used\n  FROM department_feature_permissions p\n  JOIN departments d ON p.department_id = d.id\n  JOIN features f ON p.feature_id = f.id\n  LEFT JOIN permission_audit_logs al ON al.feature_id = p.feature_id\n  WHERE (p.can_view OR p.can_create OR p.can_edit OR p.can_delete)\n  GROUP BY p.department_id, d.name, p.feature_id, f.name\n  HAVING MAX(al.created_at) < CURRENT_DATE - INTERVAL '90 days'\n     OR MAX(al.created_at) IS NULL;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- 権限の一括クリーンアップ\nCREATE OR REPLACE FUNCTION cleanup_expired_permissions()\nRETURNS INTEGER AS $$\nDECLARE\n  deleted_count INTEGER;\nBEGIN\n  -- 退職者の権限削除\n  DELETE FROM user_departments\n  WHERE user_id IN (\n    SELECT id FROM users\n    WHERE leave_date < CURRENT_DATE - INTERVAL '30 days'\n  );\n\n  GET DIAGNOSTICS deleted_count = ROW_COUNT;\n\n  -- 無効部署の権限削除\n  DELETE FROM department_feature_permissions\n  WHERE department_id IN (\n    SELECT id FROM departments\n    WHERE is_active = false\n    AND updated_at < CURRENT_DATE - INTERVAL '90 days'\n  );\n\n  RETURN deleted_count;\nEND;\n$$ LANGUAGE plpgsql;"
            ]
          ]
        },
        "tables": {
          "total": 9,
          "total_rows": 130
        }
      },
      "readability": {
        "score": 78.43,
        "sentences": 127,
        "avg_words_per_sentence": 21.54,
        "long_sentences": 36,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.03
    },
    "docs/01_機能設計書/13_機能管理システム/要件定義書.md": {
      "basic_metrics": {
        "lines": 262,
        "words": 509,
        "characters": 4109,
        "avg_line_length": 15.683206106870228
      },
      "structure_analysis": {
        "headers": {
          "total": 50,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム要件定義書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. システム概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 背景",
              "line_number": 8
            },
            {
              "level": 2,
              "text": "2. 機能要件",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "2.1 ユーザー管理機能の拡張",
              "line_number": 15
            },
            {
              "level": 4,
              "text": "2.1.1 会社情報管理",
              "line_number": 17
            },
            {
              "level": 4,
              "text": "2.1.2 部署情報管理",
              "line_number": 22
            },
            {
              "level": 4,
              "text": "2.1.3 ユーザー所属管理",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "2.2 機能管理",
              "line_number": 33
            },
            {
              "level": 4,
              "text": "2.2.1 機能マスタ管理",
              "line_number": 35
            },
            {
              "level": 4,
              "text": "2.2.2 機能権限設定",
              "line_number": 41
            },
            {
              "level": 3,
              "text": "2.3 権限管理",
              "line_number": 47
            },
            {
              "level": 4,
              "text": "2.3.1 ロールベース権限",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "2.3.2 権限チェック機能",
              "line_number": 55
            },
            {
              "level": 3,
              "text": "2.4 管理機能",
              "line_number": 61
            },
            {
              "level": 4,
              "text": "2.4.1 権限一覧表示",
              "line_number": 63
            },
            {
              "level": 4,
              "text": "2.4.2 権限変更履歴",
              "line_number": 68
            },
            {
              "level": 4,
              "text": "2.4.3 権限テンプレート",
              "line_number": 73
            },
            {
              "level": 2,
              "text": "3. 非機能要件",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "3.1 性能要件",
              "line_number": 80
            },
            {
              "level": 3,
              "text": "3.2 セキュリティ要件",
              "line_number": 85
            },
            {
              "level": 3,
              "text": "3.3 可用性要件",
              "line_number": 91
            },
            {
              "level": 3,
              "text": "3.4 運用要件",
              "line_number": 96
            },
            {
              "level": 2,
              "text": "4. システム構成",
              "line_number": 101
            },
            {
              "level": 3,
              "text": "4.1 データモデル",
              "line_number": 103
            },
            {
              "level": 4,
              "text": "主要エンティティ",
              "line_number": 105
            },
            {
              "level": 3,
              "text": "4.2 システムアーキテクチャ",
              "line_number": 130
            },
            {
              "level": 2,
              "text": "5. 画面構成",
              "line_number": 137
            },
            {
              "level": 3,
              "text": "5.1 管理画面",
              "line_number": 139
            },
            {
              "level": 3,
              "text": "5.2 ユーザー向け画面",
              "line_number": 169
            },
            {
              "level": 2,
              "text": "6. API設計概要",
              "line_number": 177
            },
            {
              "level": 3,
              "text": "6.1 会社・部署管理API",
              "line_number": 179
            },
            {
              "level": 3,
              "text": "6.2 機能管理API",
              "line_number": 189
            },
            {
              "level": 3,
              "text": "6.3 権限管理API",
              "line_number": 195
            },
            {
              "level": 3,
              "text": "6.4 監査API",
              "line_number": 202
            },
            {
              "level": 2,
              "text": "7. 実装優先順位",
              "line_number": 206
            },
            {
              "level": 3,
              "text": "フェーズ1（基本機能）",
              "line_number": 208
            },
            {
              "level": 3,
              "text": "フェーズ2（権限制御）",
              "line_number": 214
            },
            {
              "level": 3,
              "text": "フェーズ3（運用機能）",
              "line_number": 220
            },
            {
              "level": 2,
              "text": "8. 移行計画",
              "line_number": 226
            },
            {
              "level": 3,
              "text": "8.1 既存データの移行",
              "line_number": 228
            },
            {
              "level": 3,
              "text": "8.2 段階的導入",
              "line_number": 233
            },
            {
              "level": 2,
              "text": "9. リスクと対策",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "9.1 技術的リスク",
              "line_number": 240
            },
            {
              "level": 3,
              "text": "9.2 運用リスク",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "9.3 セキュリティリスク",
              "line_number": 248
            },
            {
              "level": 2,
              "text": "10. 成功指標",
              "line_number": 252
            },
            {
              "level": 3,
              "text": "10.1 定量的指標",
              "line_number": 254
            },
            {
              "level": 3,
              "text": "10.2 定性的指標",
              "line_number": 259
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 99.67,
        "sentences": 91,
        "avg_words_per_sentence": 5.59,
        "long_sentences": 1,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 35.18,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 66.47
    },
    "docs/01_機能設計書/13_機能管理システム/詳細設計書.md": {
      "basic_metrics": {
        "lines": 1063,
        "words": 2671,
        "characters": 28837,
        "avg_line_length": 27.12793979303857
      },
      "structure_analysis": {
        "headers": {
          "total": 45,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム詳細設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. システムアーキテクチャ",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 全体構成",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 認証・認可フロー",
              "line_number": 35
            },
            {
              "level": 2,
              "text": "2. データベース詳細設計",
              "line_number": 48
            },
            {
              "level": 3,
              "text": "2.1 テーブル定義",
              "line_number": 50
            },
            {
              "level": 4,
              "text": "Company（会社）",
              "line_number": 52
            },
            {
              "level": 4,
              "text": "Department（部署）",
              "line_number": 78
            },
            {
              "level": 4,
              "text": "UserDepartment（ユーザー所属）",
              "line_number": 104
            },
            {
              "level": 4,
              "text": "Feature（機能）",
              "line_number": 124
            },
            {
              "level": 4,
              "text": "DepartmentFeaturePermission（部署機能権限）",
              "line_number": 150
            },
            {
              "level": 4,
              "text": "PermissionTemplate（権限テンプレート）",
              "line_number": 174
            },
            {
              "level": 4,
              "text": "PermissionAuditLog（権限変更監査ログ）",
              "line_number": 202
            },
            {
              "level": 3,
              "text": "2.2 ユーザーテーブル拡張",
              "line_number": 225
            },
            {
              "level": 2,
              "text": "3. API詳細設計",
              "line_number": 238
            },
            {
              "level": 3,
              "text": "3.1 認証・権限チェックミドルウェア",
              "line_number": 240
            },
            {
              "level": 4,
              "text": "authMiddleware.ts",
              "line_number": 242
            },
            {
              "level": 4,
              "text": "permissionMiddleware.ts",
              "line_number": 268
            },
            {
              "level": 3,
              "text": "3.2 権限サービス",
              "line_number": 285
            },
            {
              "level": 4,
              "text": "permissionService.ts",
              "line_number": 287
            },
            {
              "level": 3,
              "text": "3.3 APIエンドポイント実装",
              "line_number": 357
            },
            {
              "level": 4,
              "text": "会社管理API",
              "line_number": 359
            },
            {
              "level": 4,
              "text": "部署管理API",
              "line_number": 400
            },
            {
              "level": 4,
              "text": "権限管理API",
              "line_number": 448
            },
            {
              "level": 2,
              "text": "4. フロントエンド実装",
              "line_number": 540
            },
            {
              "level": 3,
              "text": "4.1 Vuexストア設計",
              "line_number": 542
            },
            {
              "level": 4,
              "text": "permission.store.ts",
              "line_number": 544
            },
            {
              "level": 3,
              "text": "4.2 権限ディレクティブ",
              "line_number": 612
            },
            {
              "level": 4,
              "text": "permission.directive.ts",
              "line_number": 614
            },
            {
              "level": 3,
              "text": "4.3 権限管理画面コンポーネント",
              "line_number": 653
            },
            {
              "level": 4,
              "text": "PermissionMatrix.vue",
              "line_number": 655
            },
            {
              "level": 2,
              "text": "5. セキュリティ実装",
              "line_number": 797
            },
            {
              "level": 3,
              "text": "5.1 権限昇格防止",
              "line_number": 799
            },
            {
              "level": 3,
              "text": "5.2 監査ログ実装",
              "line_number": 832
            },
            {
              "level": 2,
              "text": "6. パフォーマンス最適化",
              "line_number": 868
            },
            {
              "level": 3,
              "text": "6.1 キャッシュ戦略",
              "line_number": 870
            },
            {
              "level": 3,
              "text": "6.2 データベースインデックス最適化",
              "line_number": 922
            },
            {
              "level": 2,
              "text": "7. テスト戦略",
              "line_number": 939
            },
            {
              "level": 3,
              "text": "7.1 単体テスト",
              "line_number": 941
            },
            {
              "level": 3,
              "text": "7.2 統合テスト",
              "line_number": 964
            },
            {
              "level": 2,
              "text": "8. 移行計画",
              "line_number": 985
            },
            {
              "level": 3,
              "text": "8.1 データ移行スクリプト",
              "line_number": 987
            },
            {
              "level": 2,
              "text": "9. 運用・保守",
              "line_number": 1052
            },
            {
              "level": 3,
              "text": "9.1 監視項目",
              "line_number": 1054
            },
            {
              "level": 3,
              "text": "9.2 定期メンテナンス",
              "line_number": 1060
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 26,
          "inline_code": 55,
          "languages": {
            "sql": 9,
            "typescript": 14,
            "vue": 1
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────────────┐\n│                     Frontend (Vue.js)                     │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │  権限管理UI  │  │  部署管理UI  │  │  機能管理UI  │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘\n                              ↓\n┌─────────────────────────────────────────────────────────┐\n│                   Backend (Express)                       │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │ 認証ミドル   │→ │ 権限ミドル   │→ │  APIルート   │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │ 権限サービス │  │ キャッシュ   │  │  監査ログ    │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘\n                              ↓\n┌─────────────────────────────────────────────────────────┐\n│                   Database (PostgreSQL)                   │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │   Company    │  │  Department  │  │    User      │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │   Feature    │  │  Permission  │  │  AuditLog    │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "1. ユーザーログイン\n   ↓\n2. JWT発行（ユーザーID、会社ID、部署IDを含む）\n   ↓\n3. APIリクエスト時\n   ├→ JWT検証\n   ├→ ユーザー部署情報取得\n   ├→ 機能権限チェック\n   └→ アクセス許可/拒否"
            ],
            [
              "sql",
              "CREATE TABLE companies (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(20) UNIQUE NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    name_kana VARCHAR(100),\n    industry VARCHAR(50),\n    established_date DATE,\n    employee_count INTEGER,\n    address TEXT,\n    phone VARCHAR(20),\n    email VARCHAR(100),\n    contract_plan VARCHAR(50) DEFAULT 'STANDARD',\n    max_users INTEGER DEFAULT 100,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES users(id),\n    updated_by INTEGER REFERENCES users(id)\n);\n\nCREATE INDEX idx_companies_code ON companies(code);\nCREATE INDEX idx_companies_active ON companies(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE departments (\n    id SERIAL PRIMARY KEY,\n    company_id INTEGER NOT NULL REFERENCES companies(id) ON DELETE CASCADE,\n    code VARCHAR(20) NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    name_kana VARCHAR(100),\n    parent_id INTEGER REFERENCES departments(id),\n    level INTEGER NOT NULL DEFAULT 1,\n    path TEXT, -- 階層パス（例：/1/3/7）\n    display_order INTEGER DEFAULT 0,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES users(id),\n    updated_by INTEGER REFERENCES users(id),\n    UNIQUE(company_id, code)\n);\n\nCREATE INDEX idx_departments_company ON departments(company_id);\nCREATE INDEX idx_departments_parent ON departments(parent_id);\nCREATE INDEX idx_departments_path ON departments(path);\nCREATE INDEX idx_departments_active ON departments(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE user_departments (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,\n    department_id INTEGER NOT NULL REFERENCES departments(id) ON DELETE CASCADE,\n    is_primary BOOLEAN DEFAULT false,\n    role VARCHAR(50) DEFAULT 'MEMBER', -- MANAGER, LEADER, MEMBER\n    assigned_date DATE NOT NULL DEFAULT CURRENT_DATE,\n    expired_date DATE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE(user_id, department_id)\n);\n\nCREATE INDEX idx_user_departments_user ON user_departments(user_id);\nCREATE INDEX idx_user_departments_dept ON user_departments(department_id);\nCREATE INDEX idx_user_departments_primary ON user_departments(is_primary);"
            ],
            [
              "sql",
              "CREATE TABLE features (\n    id SERIAL PRIMARY KEY,\n    code VARCHAR(50) UNIQUE NOT NULL,\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    category VARCHAR(50) NOT NULL, -- USER_MGMT, LOG_MGMT, REPORT, etc\n    parent_id INTEGER REFERENCES features(id),\n    path TEXT, -- 階層パス\n    url_pattern VARCHAR(200), -- 対応するURLパターン\n    api_pattern VARCHAR(200), -- 対応するAPIパターン\n    icon VARCHAR(50),\n    display_order INTEGER DEFAULT 0,\n    is_menu_item BOOLEAN DEFAULT true,\n    is_active BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_features_code ON features(code);\nCREATE INDEX idx_features_category ON features(category);\nCREATE INDEX idx_features_parent ON features(parent_id);\nCREATE INDEX idx_features_active ON features(is_active);"
            ],
            [
              "sql",
              "CREATE TABLE department_feature_permissions (\n    id SERIAL PRIMARY KEY,\n    department_id INTEGER NOT NULL REFERENCES departments(id) ON DELETE CASCADE,\n    feature_id INTEGER NOT NULL REFERENCES features(id) ON DELETE CASCADE,\n    can_view BOOLEAN DEFAULT false,\n    can_create BOOLEAN DEFAULT false,\n    can_edit BOOLEAN DEFAULT false,\n    can_delete BOOLEAN DEFAULT false,\n    can_approve BOOLEAN DEFAULT false,\n    can_export BOOLEAN DEFAULT false,\n    inherit_from_parent BOOLEAN DEFAULT true,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES users(id),\n    updated_by INTEGER REFERENCES users(id),\n    UNIQUE(department_id, feature_id)\n);\n\nCREATE INDEX idx_dept_feature_dept ON department_feature_permissions(department_id);\nCREATE INDEX idx_dept_feature_feature ON department_feature_permissions(feature_id);"
            ],
            [
              "sql",
              "CREATE TABLE permission_templates (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    description TEXT,\n    department_type VARCHAR(50), -- SALES, HR, IT, FINANCE, etc\n    company_id INTEGER REFERENCES companies(id),\n    is_system_template BOOLEAN DEFAULT false,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    created_by INTEGER REFERENCES users(id)\n);\n\nCREATE TABLE permission_template_details (\n    id SERIAL PRIMARY KEY,\n    template_id INTEGER NOT NULL REFERENCES permission_templates(id) ON DELETE CASCADE,\n    feature_id INTEGER NOT NULL REFERENCES features(id),\n    can_view BOOLEAN DEFAULT false,\n    can_create BOOLEAN DEFAULT false,\n    can_edit BOOLEAN DEFAULT false,\n    can_delete BOOLEAN DEFAULT false,\n    can_approve BOOLEAN DEFAULT false,\n    can_export BOOLEAN DEFAULT false,\n    UNIQUE(template_id, feature_id)\n);"
            ],
            [
              "sql",
              "CREATE TABLE permission_audit_logs (\n    id SERIAL PRIMARY KEY,\n    user_id INTEGER NOT NULL REFERENCES users(id),\n    action VARCHAR(50) NOT NULL, -- GRANT, REVOKE, MODIFY\n    target_type VARCHAR(50) NOT NULL, -- DEPARTMENT, USER, TEMPLATE\n    target_id INTEGER NOT NULL,\n    feature_id INTEGER REFERENCES features(id),\n    old_permissions JSONB,\n    new_permissions JSONB,\n    reason TEXT,\n    ip_address VARCHAR(45),\n    user_agent TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX idx_audit_user ON permission_audit_logs(user_id);\nCREATE INDEX idx_audit_action ON permission_audit_logs(action);\nCREATE INDEX idx_audit_target ON permission_audit_logs(target_type, target_id);\nCREATE INDEX idx_audit_created ON permission_audit_logs(created_at);"
            ],
            [
              "sql",
              "ALTER TABLE users\nADD COLUMN company_id INTEGER REFERENCES companies(id),\nADD COLUMN primary_department_id INTEGER REFERENCES departments(id),\nADD COLUMN employee_code VARCHAR(50),\nADD COLUMN join_date DATE,\nADD COLUMN leave_date DATE;\n\nCREATE INDEX idx_users_company ON users(company_id);\nCREATE INDEX idx_users_primary_dept ON users(primary_department_id);"
            ],
            [
              "typescript",
              "interface JWTPayload {\n  userId: number;\n  companyId: number;\n  departmentIds: number[];\n  role: 'ADMIN' | 'MANAGER' | 'USER';\n}\n\nexport const authMiddleware = async (req, res, next) => {\n  try {\n    const token = req.headers.authorization?.replace('Bearer ', '');\n    const decoded = jwt.verify(token, process.env.JWT_SECRET) as JWTPayload;\n\n    // ユーザー情報と権限を取得\n    const user = await getUserWithPermissions(decoded.userId);\n    req.user = user;\n    req.permissions = await getEffectivePermissions(user);\n\n    next();\n  } catch (error) {\n    res.status(401).json({ error: 'Unauthorized' });\n  }\n};"
            ],
            [
              "typescript",
              "export const requirePermission = (featureCode: string, action: string) => {\n  return async (req, res, next) => {\n    const userPermissions = req.permissions;\n\n    if (!hasPermission(userPermissions, featureCode, action)) {\n      // 監査ログに記録\n      await logAccessDenied(req.user.id, featureCode, action);\n      return res.status(403).json({ error: 'Forbidden' });\n    }\n\n    next();\n  };\n};"
            ],
            [
              "typescript",
              "export class PermissionService {\n  private cache: Map<string, any> = new Map();\n\n  async getEffectivePermissions(userId: number): Promise<PermissionSet> {\n    const cacheKey = `permissions:${userId}`;\n\n    // キャッシュチェック\n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n\n    // ユーザーの部署を取得\n    const departments = await this.getUserDepartments(userId);\n\n    // 部署の権限を取得（継承含む）\n    const permissions = await this.getDepartmentPermissions(departments);\n\n    // 個別権限のマージ\n    const userPermissions = await this.getUserSpecificPermissions(userId);\n    const merged = this.mergePermissions(permissions, userPermissions);\n\n    // キャッシュに保存（5分間）\n    this.cache.set(cacheKey, merged);\n    setTimeout(() => this.cache.delete(cacheKey), 5 * 60 * 1000);\n\n    return merged;\n  }\n\n  private async getDepartmentPermissions(departments: Department[]): Promise<PermissionSet> {\n    const permissions = new Map();\n\n    for (const dept of departments) {\n      // 部署の権限を取得\n      const deptPerms = await db.departmentFeaturePermissions.findMany({\n        where: { departmentId: dept.id }\n      });\n\n      // 親部署の権限も考慮（inherit_from_parent = true の場合）\n      if (dept.parentId) {\n        const parentPerms = await this.getParentPermissions(dept.parentId);\n        this.mergePermissions(permissions, parentPerms);\n      }\n\n      // 現在の部署の権限をマージ\n      this.mergePermissions(permissions, deptPerms);\n    }\n\n    return permissions;\n  }\n\n  hasPermission(permissions: PermissionSet, featureCode: string, action: string): boolean {\n    const feature = permissions.get(featureCode);\n    if (!feature) return false;\n\n    const actionMap = {\n      'view': feature.canView,\n      'create': feature.canCreate,\n      'edit': feature.canEdit,\n      'delete': feature.canDelete,\n      'approve': feature.canApprove,\n      'export': feature.canExport\n    };\n\n    return actionMap[action] || false;\n  }\n}"
            ],
            [
              "typescript",
              "// GET /api/companies\nrouter.get('/companies', requirePermission('COMPANY_MGMT', 'view'), async (req, res) => {\n  const companies = await db.companies.findMany({\n    where: { isActive: true },\n    orderBy: { name: 'asc' }\n  });\n  res.json(companies);\n});\n\n// POST /api/companies\nrouter.post('/companies', requirePermission('COMPANY_MGMT', 'create'), async (req, res) => {\n  const { code, name, industry, employeeCount } = req.body;\n\n  // バリデーション\n  if (!code || !name) {\n    return res.status(400).json({ error: 'Required fields missing' });\n  }\n\n  try {\n    const company = await db.companies.create({\n      data: {\n        code,\n        name,\n        industry,\n        employeeCount,\n        createdBy: req.user.id\n      }\n    });\n\n    // 監査ログ記録\n    await logAudit(req.user.id, 'CREATE', 'COMPANY', company.id);\n\n    res.status(201).json(company);\n  } catch (error) {\n    res.status(500).json({ error: 'Failed to create company' });\n  }\n});"
            ],
            [
              "typescript",
              "// GET /api/departments/tree\nrouter.get('/departments/tree', requirePermission('DEPT_MGMT', 'view'), async (req, res) => {\n  const { companyId } = req.query;\n\n  const departments = await db.departments.findMany({\n    where: {\n      companyId: Number(companyId),\n      isActive: true\n    },\n    orderBy: [\n      { level: 'asc' },\n      { displayOrder: 'asc' },\n      { name: 'asc' }\n    ]\n  });\n\n  // ツリー構造に変換\n  const tree = buildDepartmentTree(departments);\n  res.json(tree);\n});\n\nfunction buildDepartmentTree(departments: Department[]): DepartmentNode[] {\n  const map = new Map();\n  const roots: DepartmentNode[] = [];\n\n  // マップ作成\n  departments.forEach(dept => {\n    map.set(dept.id, { ...dept, children: [] });\n  });\n\n  // ツリー構築\n  departments.forEach(dept => {\n    if (dept.parentId) {\n      const parent = map.get(dept.parentId);\n      if (parent) {\n        parent.children.push(map.get(dept.id));\n      }\n    } else {\n      roots.push(map.get(dept.id));\n    }\n  });\n\n  return roots;\n}"
            ],
            [
              "typescript",
              "// GET /api/permissions/department/:departmentId\nrouter.get('/permissions/department/:departmentId',\n  requirePermission('PERMISSION_MGMT', 'view'),\n  async (req, res) => {\n    const { departmentId } = req.params;\n\n    // 全機能を取得\n    const features = await db.features.findMany({\n      where: { isActive: true },\n      orderBy: [\n        { category: 'asc' },\n        { displayOrder: 'asc' }\n      ]\n    });\n\n    // 部署の権限を取得\n    const permissions = await db.departmentFeaturePermissions.findMany({\n      where: { departmentId: Number(departmentId) }\n    });\n\n    // 権限マップ作成\n    const permissionMap = new Map();\n    permissions.forEach(p => {\n      permissionMap.set(p.featureId, p);\n    });\n\n    // 機能リストに権限情報を付与\n    const result = features.map(feature => ({\n      ...feature,\n      permissions: permissionMap.get(feature.id) || {\n        canView: false,\n        canCreate: false,\n        canEdit: false,\n        canDelete: false,\n        canApprove: false,\n        canExport: false\n      }\n    }));\n\n    res.json(result);\n});\n\n// POST /api/permissions/department/:departmentId\nrouter.post('/permissions/department/:departmentId',\n  requirePermission('PERMISSION_MGMT', 'edit'),\n  async (req, res) => {\n    const { departmentId } = req.params;\n    const { permissions } = req.body;\n\n    try {\n      // トランザクション開始\n      await db.$transaction(async (prisma) => {\n        // 既存権限を削除\n        await prisma.departmentFeaturePermissions.deleteMany({\n          where: { departmentId: Number(departmentId) }\n        });\n\n        // 新規権限を作成\n        const data = permissions.map(p => ({\n          departmentId: Number(departmentId),\n          featureId: p.featureId,\n          canView: p.canView,\n          canCreate: p.canCreate,\n          canEdit: p.canEdit,\n          canDelete: p.canDelete,\n          canApprove: p.canApprove,\n          canExport: p.canExport,\n          createdBy: req.user.id,\n          updatedBy: req.user.id\n        }));\n\n        await prisma.departmentFeaturePermissions.createMany({ data });\n\n        // 監査ログ記録\n        await logAudit(req.user.id, 'MODIFY', 'DEPARTMENT_PERMISSION', departmentId, {\n          old: [],\n          new: permissions\n        });\n      });\n\n      // キャッシュクリア\n      await clearPermissionCache(departmentId);\n\n      res.json({ success: true });\n    } catch (error) {\n      res.status(500).json({ error: 'Failed to update permissions' });\n    }\n});"
            ],
            [
              "typescript",
              "interface PermissionState {\n  userPermissions: Map<string, FeaturePermission>;\n  departments: Department[];\n  features: Feature[];\n  loading: boolean;\n}\n\nconst permissionModule = {\n  namespaced: true,\n\n  state: (): PermissionState => ({\n    userPermissions: new Map(),\n    departments: [],\n    features: [],\n    loading: false\n  }),\n\n  mutations: {\n    SET_USER_PERMISSIONS(state, permissions) {\n      state.userPermissions = new Map(\n        permissions.map(p => [p.featureCode, p])\n      );\n    },\n    SET_DEPARTMENTS(state, departments) {\n      state.departments = departments;\n    },\n    SET_FEATURES(state, features) {\n      state.features = features;\n    }\n  },\n\n  actions: {\n    async loadUserPermissions({ commit }) {\n      const response = await api.get('/api/permissions/my');\n      commit('SET_USER_PERMISSIONS', response.data);\n    },\n\n    async updateDepartmentPermissions({ commit }, { departmentId, permissions }) {\n      await api.post(`/api/permissions/department/${departmentId}`, {\n        permissions\n      });\n      // 権限更新後、ユーザー権限を再読み込み\n      await this.dispatch('permission/loadUserPermissions');\n    }\n  },\n\n  getters: {\n    hasPermission: (state) => (featureCode: string, action: string) => {\n      const permission = state.userPermissions.get(featureCode);\n      if (!permission) return false;\n\n      const actionMap = {\n        'view': permission.canView,\n        'create': permission.canCreate,\n        'edit': permission.canEdit,\n        'delete': permission.canDelete,\n        'approve': permission.canApprove,\n        'export': permission.canExport\n      };\n\n      return actionMap[action] || false;\n    }\n  }\n};"
            ],
            [
              "typescript",
              "import { DirectiveBinding } from 'vue';\nimport store from '@/store';\n\ninterface PermissionBinding {\n  feature: string;\n  action: string;\n}\n\nexport const permissionDirective = {\n  mounted(el: HTMLElement, binding: DirectiveBinding<PermissionBinding>) {\n    const { feature, action } = binding.value;\n\n    if (!store.getters['permission/hasPermission'](feature, action)) {\n      el.style.display = 'none';\n      el.setAttribute('disabled', 'true');\n    }\n  },\n\n  updated(el: HTMLElement, binding: DirectiveBinding<PermissionBinding>) {\n    const { feature, action } = binding.value;\n\n    if (!store.getters['permission/hasPermission'](feature, action)) {\n      el.style.display = 'none';\n      el.setAttribute('disabled', 'true');\n    } else {\n      el.style.display = '';\n      el.removeAttribute('disabled');\n    }\n  }\n};\n\n// 使用例\n// <el-button v-permission=\"{ feature: 'USER_MGMT', action: 'create' }\">\n//   ユーザー作成\n// </el-button>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"permission-matrix\">\n    <el-table\n      :data=\"features\"\n      border\n      style=\"width: 100%\"\n      max-height=\"600\"\n    >\n      <el-table-column\n        prop=\"category\"\n        label=\"カテゴリ\"\n        width=\"150\"\n        fixed\n      />\n      <el-table-column\n        prop=\"name\"\n        label=\"機能名\"\n        width=\"200\"\n        fixed\n      />\n      <el-table-column label=\"権限\" align=\"center\">\n        <el-table-column label=\"閲覧\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canView\"\n              @change=\"updatePermission(scope.row)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"作成\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canCreate\"\n              @change=\"updatePermission(scope.row)\"\n              :disabled=\"!scope.row.permissions.canView\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"編集\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canEdit\"\n              @change=\"updatePermission(scope.row)\"\n              :disabled=\"!scope.row.permissions.canView\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"削除\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canDelete\"\n              @change=\"updatePermission(scope.row)\"\n              :disabled=\"!scope.row.permissions.canView\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"承認\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canApprove\"\n              @change=\"updatePermission(scope.row)\"\n              :disabled=\"!scope.row.permissions.canView\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"出力\" width=\"80\" align=\"center\">\n          <template #default=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.permissions.canExport\"\n              @change=\"updatePermission(scope.row)\"\n              :disabled=\"!scope.row.permissions.canView\"\n            />\n          </template>\n        </el-table-column>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"button-group\">\n      <el-button @click=\"applyTemplate\">テンプレート適用</el-button>\n      <el-button type=\"primary\" @click=\"savePermissions\">保存</el-button>\n      <el-button @click=\"resetPermissions\">リセット</el-button>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { usePermissionApi } from '@/api/permission';\n\nconst props = defineProps<{\n  departmentId: number;\n}>();\n\nconst features = ref<FeatureWithPermission[]>([]);\nconst {\n  getDepartmentPermissions,\n  updateDepartmentPermissions\n} = usePermissionApi();\n\nonMounted(async () => {\n  await loadPermissions();\n});\n\nconst loadPermissions = async () => {\n  try {\n    const data = await getDepartmentPermissions(props.departmentId);\n    features.value = data;\n  } catch (error) {\n    ElMessage.error('権限情報の取得に失敗しました');\n  }\n};\n\nconst updatePermission = (feature: FeatureWithPermission) => {\n  // 閲覧権限がない場合、他の権限も無効化\n  if (!feature.permissions.canView) {\n    feature.permissions.canCreate = false;\n    feature.permissions.canEdit = false;\n    feature.permissions.canDelete = false;\n    feature.permissions.canApprove = false;\n    feature.permissions.canExport = false;\n  }\n};\n\nconst savePermissions = async () => {\n  try {\n    const permissions = features.value.map(f => ({\n      featureId: f.id,\n      ...f.permissions\n    }));\n\n    await updateDepartmentPermissions(props.departmentId, permissions);\n    ElMessage.success('権限を保存しました');\n  } catch (error) {\n    ElMessage.error('権限の保存に失敗しました');\n  }\n};\n</script>"
            ],
            [
              "typescript",
              "// 権限チェックの多層防御\nclass SecurityLayer {\n  // レイヤー1: JWT検証\n  async verifyJWT(token: string): Promise<JWTPayload> {\n    return jwt.verify(token, process.env.JWT_SECRET);\n  }\n\n  // レイヤー2: セッション検証\n  async verifySession(sessionId: string): Promise<boolean> {\n    const session = await redis.get(`session:${sessionId}`);\n    return session !== null;\n  }\n\n  // レイヤー3: 権限検証\n  async verifyPermission(userId: number, feature: string, action: string): Promise<boolean> {\n    const permissions = await permissionService.getEffectivePermissions(userId);\n    return permissionService.hasPermission(permissions, feature, action);\n  }\n\n  // レイヤー4: レート制限\n  async checkRateLimit(userId: number, endpoint: string): Promise<boolean> {\n    const key = `rate:${userId}:${endpoint}`;\n    const count = await redis.incr(key);\n    if (count === 1) {\n      await redis.expire(key, 60); // 1分間\n    }\n    return count <= 100; // 1分間に100リクエストまで\n  }\n}"
            ],
            [
              "typescript",
              "class AuditLogger {\n  async log(params: AuditLogParams): Promise<void> {\n    await db.permissionAuditLogs.create({\n      data: {\n        userId: params.userId,\n        action: params.action,\n        targetType: params.targetType,\n        targetId: params.targetId,\n        featureId: params.featureId,\n        oldPermissions: params.oldPermissions,\n        newPermissions: params.newPermissions,\n        reason: params.reason,\n        ipAddress: params.ipAddress,\n        userAgent: params.userAgent,\n        createdAt: new Date()\n      }\n    });\n\n    // 重要な変更はアラート送信\n    if (this.isCriticalChange(params)) {\n      await this.sendAlert(params);\n    }\n  }\n\n  private isCriticalChange(params: AuditLogParams): boolean {\n    // 管理者権限の付与・削除\n    // システム機能への権限変更\n    // 大量の権限変更\n    return params.action === 'GRANT' &&\n           params.targetType === 'ADMIN_FEATURE';\n  }\n}"
            ],
            [
              "typescript",
              "class PermissionCache {\n  private redis: Redis;\n  private localCache: Map<string, any> = new Map();\n\n  // 多層キャッシュ\n  async get(key: string): Promise<any> {\n    // L1: ローカルメモリキャッシュ\n    if (this.localCache.has(key)) {\n      return this.localCache.get(key);\n    }\n\n    // L2: Redisキャッシュ\n    const redisValue = await this.redis.get(key);\n    if (redisValue) {\n      const value = JSON.parse(redisValue);\n      this.localCache.set(key, value);\n      return value;\n    }\n\n    return null;\n  }\n\n  async set(key: string, value: any, ttl: number = 300): Promise<void> {\n    // L1キャッシュに保存\n    this.localCache.set(key, value);\n\n    // L2キャッシュに保存\n    await this.redis.setex(key, ttl, JSON.stringify(value));\n\n    // L1キャッシュの自動削除\n    setTimeout(() => this.localCache.delete(key), ttl * 1000);\n  }\n\n  async invalidate(pattern: string): Promise<void> {\n    // パターンマッチでキャッシュクリア\n    const keys = await this.redis.keys(pattern);\n    if (keys.length > 0) {\n      await this.redis.del(...keys);\n    }\n\n    // ローカルキャッシュもクリア\n    for (const [key] of this.localCache) {\n      if (key.includes(pattern)) {\n        this.localCache.delete(key);\n      }\n    }\n  }\n}"
            ],
            [
              "sql",
              "-- 権限チェック用の複合インデックス\nCREATE INDEX idx_dept_perm_lookup\nON department_feature_permissions(department_id, feature_id)\nINCLUDE (can_view, can_create, can_edit, can_delete);\n\n-- ユーザー部署検索用\nCREATE INDEX idx_user_dept_lookup\nON user_departments(user_id, is_primary)\nWHERE expired_date IS NULL;\n\n-- 監査ログ検索用\nCREATE INDEX idx_audit_search\nON permission_audit_logs(created_at DESC, user_id, action);"
            ],
            [
              "typescript",
              "describe('PermissionService', () => {\n  describe('getEffectivePermissions', () => {\n    it('should return merged permissions from all departments', async () => {\n      const userId = 1;\n      const permissions = await permissionService.getEffectivePermissions(userId);\n\n      expect(permissions).toHaveProperty('USER_MGMT');\n      expect(permissions.USER_MGMT.canView).toBe(true);\n    });\n\n    it('should inherit permissions from parent department', async () => {\n      // 親部署の権限が子部署に継承されることを確認\n    });\n\n    it('should cache permissions for performance', async () => {\n      // キャッシュが正しく動作することを確認\n    });\n  });\n});"
            ],
            [
              "typescript",
              "describe('Permission API Integration', () => {\n  it('should deny access without proper permissions', async () => {\n    const response = await request(app)\n      .get('/api/users')\n      .set('Authorization', 'Bearer ' + limitedUserToken);\n\n    expect(response.status).toBe(403);\n  });\n\n  it('should allow access with proper permissions', async () => {\n    const response = await request(app)\n      .get('/api/users')\n      .set('Authorization', 'Bearer ' + adminToken);\n\n    expect(response.status).toBe(200);\n  });\n});"
            ],
            [
              "typescript",
              "async function migrateExistingData() {\n  // 1. デフォルト会社作成\n  const defaultCompany = await db.companies.create({\n    data: {\n      code: 'DEFAULT',\n      name: 'デフォルト会社',\n      isActive: true\n    }\n  });\n\n  // 2. デフォルト部署作成\n  const defaultDept = await db.departments.create({\n    data: {\n      companyId: defaultCompany.id,\n      code: 'DEFAULT',\n      name: '全社',\n      level: 1,\n      isActive: true\n    }\n  });\n\n  // 3. 既存ユーザーの移行\n  await db.users.updateMany({\n    where: { companyId: null },\n    data: {\n      companyId: defaultCompany.id,\n      primaryDepartmentId: defaultDept.id\n    }\n  });\n\n  // 4. 機能マスタの初期データ投入\n  const features = [\n    { code: 'USER_MGMT', name: 'ユーザー管理', category: 'SYSTEM' },\n    { code: 'LOG_MGMT', name: 'ログ管理', category: 'SYSTEM' },\n    { code: 'PERMISSION_MGMT', name: '権限管理', category: 'SYSTEM' }\n  ];\n\n  await db.features.createMany({ data: features });\n\n  // 5. デフォルト権限設定\n  // 管理者には全権限を付与\n  const adminDept = await db.departments.findFirst({\n    where: { code: 'ADMIN' }\n  });\n\n  if (adminDept) {\n    const allFeatures = await db.features.findMany();\n    const permissions = allFeatures.map(f => ({\n      departmentId: adminDept.id,\n      featureId: f.id,\n      canView: true,\n      canCreate: true,\n      canEdit: true,\n      canDelete: true,\n      canApprove: true,\n      canExport: true\n    }));\n\n    await db.departmentFeaturePermissions.createMany({ data: permissions });\n  }\n}"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 98.15,
        "sentences": 356,
        "avg_words_per_sentence": 7.5,
        "long_sentences": 22,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.94
    },
    "docs/01_機能設計書/13_機能管理システム/API設計書.md": {
      "basic_metrics": {
        "lines": 1203,
        "words": 2400,
        "characters": 22091,
        "avg_line_length": 18.36325852036575
      },
      "structure_analysis": {
        "headers": {
          "total": 104,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム API設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. API概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 基本仕様",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 共通ヘッダー",
              "line_number": 12
            },
            {
              "level": 3,
              "text": "1.3 共通レスポンス形式",
              "line_number": 19
            },
            {
              "level": 2,
              "text": "2. 会社管理API",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "2.1 会社一覧取得",
              "line_number": 55
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 58
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 66
            },
            {
              "level": 3,
              "text": "2.2 会社詳細取得",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "パスパラメータ",
              "line_number": 103
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "2.3 会社登録",
              "line_number": 142
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 145
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "2.4 会社更新",
              "line_number": 175
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 178
            },
            {
              "level": 3,
              "text": "2.5 会社削除（論理削除）",
              "line_number": 187
            },
            {
              "level": 2,
              "text": "3. 部署管理API",
              "line_number": 190
            },
            {
              "level": 3,
              "text": "3.1 部署ツリー取得",
              "line_number": 192
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 195
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "3.2 部署一覧取得（フラット）",
              "line_number": 244
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 247
            },
            {
              "level": 3,
              "text": "3.3 部署詳細取得",
              "line_number": 255
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 258
            },
            {
              "level": 3,
              "text": "3.4 部署登録",
              "line_number": 294
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 297
            },
            {
              "level": 3,
              "text": "3.5 部署更新",
              "line_number": 309
            },
            {
              "level": 3,
              "text": "3.6 部署削除（論理削除）",
              "line_number": 312
            },
            {
              "level": 3,
              "text": "3.7 部署移動（階層変更）",
              "line_number": 315
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 318
            },
            {
              "level": 2,
              "text": "4. ユーザー所属管理API",
              "line_number": 326
            },
            {
              "level": 3,
              "text": "4.1 ユーザー所属一覧取得",
              "line_number": 328
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 331
            },
            {
              "level": 3,
              "text": "4.2 ユーザー所属追加",
              "line_number": 368
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 371
            },
            {
              "level": 3,
              "text": "4.3 ユーザー所属更新",
              "line_number": 382
            },
            {
              "level": 3,
              "text": "4.4 ユーザー所属削除",
              "line_number": 385
            },
            {
              "level": 2,
              "text": "5. 機能管理API",
              "line_number": 388
            },
            {
              "level": 3,
              "text": "5.1 機能一覧取得",
              "line_number": 390
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 393
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 401
            },
            {
              "level": 3,
              "text": "5.2 機能カテゴリ一覧取得",
              "line_number": 436
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 439
            },
            {
              "level": 3,
              "text": "5.3 機能登録",
              "line_number": 462
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 465
            },
            {
              "level": 3,
              "text": "5.4 機能更新",
              "line_number": 481
            },
            {
              "level": 3,
              "text": "5.5 機能削除（論理削除）",
              "line_number": 484
            },
            {
              "level": 2,
              "text": "6. 権限管理API",
              "line_number": 487
            },
            {
              "level": 3,
              "text": "6.1 部署権限取得",
              "line_number": 489
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 492
            },
            {
              "level": 3,
              "text": "6.2 部署権限更新",
              "line_number": 520
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 523
            },
            {
              "level": 3,
              "text": "6.3 ユーザー有効権限取得",
              "line_number": 541
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 544
            },
            {
              "level": 3,
              "text": "6.4 現在のユーザー権限取得",
              "line_number": 578
            },
            {
              "level": 3,
              "text": "6.5 権限チェック",
              "line_number": 581
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 584
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 592
            },
            {
              "level": 3,
              "text": "6.6 権限一括チェック",
              "line_number": 605
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 608
            },
            {
              "level": 2,
              "text": "7. 権限テンプレートAPI",
              "line_number": 624
            },
            {
              "level": 3,
              "text": "7.1 テンプレート一覧取得",
              "line_number": 626
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 629
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 636
            },
            {
              "level": 3,
              "text": "7.2 テンプレート詳細取得",
              "line_number": 661
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 664
            },
            {
              "level": 3,
              "text": "7.3 テンプレート作成",
              "line_number": 704
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 707
            },
            {
              "level": 3,
              "text": "7.4 テンプレート更新",
              "line_number": 729
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 732
            },
            {
              "level": 3,
              "text": "7.5 テンプレート削除",
              "line_number": 754
            },
            {
              "level": 4,
              "text": "説明",
              "line_number": 757
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 760
            },
            {
              "level": 3,
              "text": "7.6 テンプレート適用",
              "line_number": 771
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 774
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 782
            },
            {
              "level": 3,
              "text": "7.7 テンプレート複製",
              "line_number": 809
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 812
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 820
            },
            {
              "level": 2,
              "text": "8. 監査ログAPI",
              "line_number": 855
            },
            {
              "level": 3,
              "text": "8.1 権限変更ログ検索",
              "line_number": 857
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 860
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 872
            },
            {
              "level": 3,
              "text": "8.2 権限変更統計取得",
              "line_number": 919
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 922
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 929
            },
            {
              "level": 3,
              "text": "8.3 監査ログエクスポート",
              "line_number": 963
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 966
            },
            {
              "level": 2,
              "text": "9. レポートAPI",
              "line_number": 974
            },
            {
              "level": 3,
              "text": "9.1 権限マトリクスレポート取得",
              "line_number": 976
            },
            {
              "level": 4,
              "text": "リクエストパラメータ",
              "line_number": 979
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 985
            },
            {
              "level": 3,
              "text": "9.2 未使用権限レポート取得",
              "line_number": 1015
            },
            {
              "level": 4,
              "text": "レスポンス",
              "line_number": 1018
            },
            {
              "level": 3,
              "text": "9.3 権限棚卸レポート生成",
              "line_number": 1043
            },
            {
              "level": 4,
              "text": "リクエストボディ",
              "line_number": 1046
            },
            {
              "level": 2,
              "text": "10. エラーコード一覧",
              "line_number": 1055
            },
            {
              "level": 2,
              "text": "11. レート制限",
              "line_number": 1071
            },
            {
              "level": 2,
              "text": "12. API実装サンプル",
              "line_number": 1081
            },
            {
              "level": 3,
              "text": "12.1 権限チェックミドルウェア",
              "line_number": 1083
            },
            {
              "level": 3,
              "text": "12.2 権限情報のキャッシング",
              "line_number": 1130
            },
            {
              "level": 3,
              "text": "12.3 バッチ権限チェック",
              "line_number": 1171
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 39,
          "inline_code": 122,
          "languages": {
            "json": 36,
            "typescript": 3
          },
          "details": [
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    // レスポンスデータ\n  },\n  \"meta\": {\n    \"timestamp\": \"2024-01-20T10:00:00Z\",\n    \"requestId\": \"req_123456\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"PERMISSION_DENIED\",\n    \"message\": \"この操作を実行する権限がありません\",\n    \"details\": {\n      \"requiredPermission\": \"USER_MGMT.CREATE\"\n    }\n  },\n  \"meta\": {\n    \"timestamp\": \"2024-01-20T10:00:00Z\",\n    \"requestId\": \"req_123456\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"companies\": [\n      {\n        \"id\": 1,\n        \"code\": \"COMP001\",\n        \"name\": \"株式会社サンプル\",\n        \"nameKana\": \"カブシキガイシャサンプル\",\n        \"industry\": \"IT\",\n        \"establishedDate\": \"2000-04-01\",\n        \"employeeCount\": 150,\n        \"address\": \"東京都千代田区...\",\n        \"phone\": \"03-1234-5678\",\n        \"email\": \"info@sample.co.jp\",\n        \"contractPlan\": \"ENTERPRISE\",\n        \"maxUsers\": 500,\n        \"isActive\": true,\n        \"createdAt\": \"2024-01-01T00:00:00Z\",\n        \"updatedAt\": \"2024-01-01T00:00:00Z\"\n      }\n    ],\n    \"pagination\": {\n      \"page\": 1,\n      \"limit\": 20,\n      \"total\": 100,\n      \"totalPages\": 5\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"code\": \"COMP001\",\n    \"name\": \"株式会社サンプル\",\n    \"nameKana\": \"カブシキガイシャサンプル\",\n    \"industry\": \"IT\",\n    \"establishedDate\": \"2000-04-01\",\n    \"employeeCount\": 150,\n    \"address\": \"東京都千代田区...\",\n    \"phone\": \"03-1234-5678\",\n    \"email\": \"info@sample.co.jp\",\n    \"contractPlan\": \"ENTERPRISE\",\n    \"maxUsers\": 500,\n    \"currentUsers\": 120,\n    \"departments\": 15,\n    \"isActive\": true,\n    \"createdAt\": \"2024-01-01T00:00:00Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00Z\",\n    \"createdBy\": {\n      \"id\": 1,\n      \"name\": \"管理者\"\n    },\n    \"updatedBy\": {\n      \"id\": 1,\n      \"name\": \"管理者\"\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"code\": \"COMP002\",\n  \"name\": \"新規会社\",\n  \"nameKana\": \"シンキガイシャ\",\n  \"industry\": \"製造業\",\n  \"establishedDate\": \"2020-01-01\",\n  \"employeeCount\": 50,\n  \"address\": \"大阪府大阪市...\",\n  \"phone\": \"06-9876-5432\",\n  \"email\": \"info@newcompany.co.jp\",\n  \"contractPlan\": \"STANDARD\",\n  \"maxUsers\": 100\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"code\": \"COMP002\",\n    \"name\": \"新規会社\",\n    // ... 登録したデータ\n  }\n}"
            ],
            [
              "json",
              "{\n  \"name\": \"更新後の会社名\",\n  \"employeeCount\": 60,\n  \"contractPlan\": \"ENTERPRISE\"\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"tree\": [\n      {\n        \"id\": 1,\n        \"code\": \"HQ\",\n        \"name\": \"本社\",\n        \"nameKana\": \"ホンシャ\",\n        \"level\": 1,\n        \"userCount\": 10,\n        \"isActive\": true,\n        \"children\": [\n          {\n            \"id\": 2,\n            \"code\": \"SALES\",\n            \"name\": \"営業部\",\n            \"nameKana\": \"エイギョウブ\",\n            \"level\": 2,\n            \"userCount\": 25,\n            \"isActive\": true,\n            \"children\": [\n              {\n                \"id\": 3,\n                \"code\": \"SALES_1\",\n                \"name\": \"営業1課\",\n                \"nameKana\": \"エイギョウ1カ\",\n                \"level\": 3,\n                \"userCount\": 12,\n                \"isActive\": true,\n                \"children\": []\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"companyId\": 1,\n    \"code\": \"SALES\",\n    \"name\": \"営業部\",\n    \"nameKana\": \"エイギョウブ\",\n    \"parentId\": 1,\n    \"parent\": {\n      \"id\": 1,\n      \"name\": \"本社\"\n    },\n    \"level\": 2,\n    \"path\": \"/1/2\",\n    \"displayOrder\": 1,\n    \"isActive\": true,\n    \"users\": [\n      {\n        \"id\": 10,\n        \"name\": \"山田太郎\",\n        \"email\": \"yamada@example.com\",\n        \"role\": \"MANAGER\",\n        \"isPrimary\": true\n      }\n    ],\n    \"childDepartments\": 3,\n    \"totalUsers\": 25,\n    \"createdAt\": \"2024-01-01T00:00:00Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00Z\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"companyId\": 1,\n  \"code\": \"IT\",\n  \"name\": \"情報システム部\",\n  \"nameKana\": \"ジョウホウシステムブ\",\n  \"parentId\": 1,\n  \"displayOrder\": 2\n}"
            ],
            [
              "json",
              "{\n  \"newParentId\": 5,\n  \"displayOrder\": 3\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"departments\": [\n      {\n        \"id\": 1,\n        \"departmentId\": 2,\n        \"department\": {\n          \"id\": 2,\n          \"name\": \"営業部\",\n          \"path\": \"/1/2\"\n        },\n        \"isPrimary\": true,\n        \"role\": \"MANAGER\",\n        \"assignedDate\": \"2023-04-01\",\n        \"expiredDate\": null\n      },\n      {\n        \"id\": 2,\n        \"departmentId\": 5,\n        \"department\": {\n          \"id\": 5,\n          \"name\": \"プロジェクトチーム\",\n          \"path\": \"/1/5\"\n        },\n        \"isPrimary\": false,\n        \"role\": \"MEMBER\",\n        \"assignedDate\": \"2024-01-01\",\n        \"expiredDate\": \"2024-12-31\"\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"departmentId\": 3,\n  \"isPrimary\": false,\n  \"role\": \"MEMBER\",\n  \"assignedDate\": \"2024-02-01\",\n  \"expiredDate\": null\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"features\": [\n      {\n        \"id\": 1,\n        \"code\": \"USER_MGMT\",\n        \"name\": \"ユーザー管理\",\n        \"description\": \"ユーザーの登録・編集・削除\",\n        \"category\": \"SYSTEM\",\n        \"parentId\": null,\n        \"path\": \"/1\",\n        \"urlPattern\": \"/users/*\",\n        \"apiPattern\": \"/api/v1/users/*\",\n        \"icon\": \"el-icon-user\",\n        \"displayOrder\": 10,\n        \"isMenuItem\": true,\n        \"isActive\": true,\n        \"children\": [\n          {\n            \"id\": 11,\n            \"code\": \"USER_LIST\",\n            \"name\": \"ユーザー一覧\",\n            \"parentId\": 1,\n            \"path\": \"/1/11\"\n          }\n        ]\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"categories\": [\n      {\n        \"code\": \"SYSTEM\",\n        \"name\": \"システム管理\",\n        \"description\": \"システム全体の管理機能\",\n        \"featureCount\": 5\n      },\n      {\n        \"code\": \"USER_MGMT\",\n        \"name\": \"ユーザー管理\",\n        \"description\": \"ユーザー関連の管理機能\",\n        \"featureCount\": 8\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"code\": \"NEW_FEATURE\",\n  \"name\": \"新機能\",\n  \"description\": \"新しい機能の説明\",\n  \"category\": \"CUSTOM\",\n  \"parentId\": null,\n  \"urlPattern\": \"/new-feature/*\",\n  \"apiPattern\": \"/api/v1/new-feature/*\",\n  \"icon\": \"el-icon-star\",\n  \"displayOrder\": 100,\n  \"isMenuItem\": true\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"departmentId\": 2,\n    \"departmentName\": \"営業部\",\n    \"permissions\": [\n      {\n        \"featureId\": 1,\n        \"featureCode\": \"USER_MGMT\",\n        \"featureName\": \"ユーザー管理\",\n        \"category\": \"SYSTEM\",\n        \"permissions\": {\n          \"canView\": true,\n          \"canCreate\": false,\n          \"canEdit\": false,\n          \"canDelete\": false,\n          \"canApprove\": false,\n          \"canExport\": true\n        },\n        \"inheritFromParent\": true\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"permissions\": [\n    {\n      \"featureId\": 1,\n      \"canView\": true,\n      \"canCreate\": true,\n      \"canEdit\": true,\n      \"canDelete\": false,\n      \"canApprove\": false,\n      \"canExport\": true,\n      \"inheritFromParent\": false\n    }\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"userId\": 10,\n    \"userName\": \"山田太郎\",\n    \"effectivePermissions\": [\n      {\n        \"featureCode\": \"USER_MGMT\",\n        \"featureName\": \"ユーザー管理\",\n        \"permissions\": {\n          \"canView\": true,\n          \"canCreate\": true,\n          \"canEdit\": true,\n          \"canDelete\": false,\n          \"canApprove\": true,\n          \"canExport\": true\n        },\n        \"source\": \"PRIMARY_DEPARTMENT\"\n      }\n    ],\n    \"departments\": [\n      {\n        \"id\": 2,\n        \"name\": \"営業部\",\n        \"isPrimary\": true,\n        \"role\": \"MANAGER\"\n      }\n    ]\n  }\n}"
            ],
            [
              "json",
              "{\n  \"featureCode\": \"USER_MGMT\",\n  \"action\": \"CREATE\"\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"hasPermission\": true,\n    \"feature\": \"USER_MGMT\",\n    \"action\": \"CREATE\",\n    \"source\": \"PRIMARY_DEPARTMENT\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"checks\": [\n    {\n      \"featureCode\": \"USER_MGMT\",\n      \"action\": \"VIEW\"\n    },\n    {\n      \"featureCode\": \"LOG_MGMT\",\n      \"action\": \"EXPORT\"\n    }\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"companyId\": 1,\n      \"name\": \"営業部標準権限\",\n      \"description\": \"営業部向けの標準権限設定\",\n      \"category\": \"CUSTOM\",\n      \"isPreset\": false,\n      \"isActive\": true,\n      \"displayOrder\": 1,\n      \"createdAt\": \"2024-01-01T00:00:00Z\",\n      \"updatedAt\": \"2024-01-01T00:00:00Z\",\n      \"createdBy\": {\n        \"id\": 1,\n        \"name\": \"管理者\"\n      }\n    }\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"companyId\": 1,\n    \"name\": \"営業部標準権限\",\n    \"description\": \"営業部向けの標準権限設定\",\n    \"category\": \"CUSTOM\",\n    \"isPreset\": false,\n    \"isActive\": true,\n    \"displayOrder\": 1,\n    \"permissions\": [\n      {\n        \"featureId\": 1,\n        \"featureCode\": \"USER_MGMT\",\n        \"featureName\": \"ユーザー管理\",\n        \"canView\": true,\n        \"canCreate\": false,\n        \"canEdit\": false,\n        \"canDelete\": false,\n        \"canApprove\": false,\n        \"canExport\": true\n      }\n    ],\n    \"createdAt\": \"2024-01-01T00:00:00Z\",\n    \"updatedAt\": \"2024-01-01T00:00:00Z\",\n    \"createdBy\": {\n      \"id\": 1,\n      \"name\": \"管理者\"\n    },\n    \"updatedBy\": {\n      \"id\": 1,\n      \"name\": \"管理者\"\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"companyId\": 1,\n  \"name\": \"カスタムテンプレート\",\n  \"description\": \"特定用途のテンプレート\",\n  \"category\": \"CUSTOM\",\n  \"displayOrder\": 1,\n  \"permissions\": [\n    {\n      \"featureId\": 1,\n      \"canView\": true,\n      \"canCreate\": true,\n      \"canEdit\": true,\n      \"canDelete\": false,\n      \"canApprove\": false,\n      \"canExport\": true\n    }\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"name\": \"更新されたテンプレート\",\n  \"description\": \"更新された説明\",\n  \"category\": \"CUSTOM\",\n  \"isActive\": true,\n  \"displayOrder\": 2,\n  \"permissions\": [\n    {\n      \"featureId\": 1,\n      \"canView\": true,\n      \"canCreate\": false,\n      \"canEdit\": true,\n      \"canDelete\": false,\n      \"canApprove\": false,\n      \"canExport\": true\n    }\n  ]\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"テンプレートが削除されました\",\n    \"deletedAt\": \"2024-01-20T10:00:00Z\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"departmentIds\": [2, 3, 5],\n  \"overwrite\": true\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"appliedTo\": [\n      {\n        \"departmentId\": 2,\n        \"departmentName\": \"営業部\",\n        \"status\": \"SUCCESS\"\n      },\n      {\n        \"departmentId\": 3,\n        \"departmentName\": \"企画部\",\n        \"status\": \"SUCCESS\"\n      },\n      {\n        \"departmentId\": 5,\n        \"departmentName\": \"システム部\",\n        \"status\": \"SUCCESS\"\n      }\n    ],\n    \"appliedAt\": \"2024-01-20T10:00:00Z\"\n  }\n}"
            ],
            [
              "json",
              "{\n  \"name\": \"複製されたテンプレート\",\n  \"description\": \"元のテンプレートから複製\"\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 2,\n    \"companyId\": 1,\n    \"name\": \"複製されたテンプレート\",\n    \"description\": \"元のテンプレートから複製\",\n    \"category\": \"CUSTOM\",\n    \"isPreset\": false,\n    \"isActive\": true,\n    \"displayOrder\": 100,\n    \"permissions\": [\n      {\n        \"featureId\": 1,\n        \"featureCode\": \"USER_MGMT\",\n        \"featureName\": \"ユーザー管理\",\n        \"canView\": true,\n        \"canCreate\": false,\n        \"canEdit\": false,\n        \"canDelete\": false,\n        \"canApprove\": false,\n        \"canExport\": true\n      }\n    ],\n    \"createdAt\": \"2024-01-20T10:00:00Z\",\n    \"createdBy\": {\n      \"id\": 1,\n      \"name\": \"管理者\"\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"logs\": [\n      {\n        \"id\": 100,\n        \"userId\": 1,\n        \"userName\": \"管理者\",\n        \"action\": \"MODIFY\",\n        \"targetType\": \"DEPARTMENT\",\n        \"targetId\": 2,\n        \"targetName\": \"営業部\",\n        \"featureId\": 1,\n        \"featureName\": \"ユーザー管理\",\n        \"oldPermissions\": {\n          \"canView\": true,\n          \"canCreate\": false,\n          \"canEdit\": false,\n          \"canDelete\": false,\n          \"canApprove\": false,\n          \"canExport\": false\n        },\n        \"newPermissions\": {\n          \"canView\": true,\n          \"canCreate\": true,\n          \"canEdit\": true,\n          \"canDelete\": false,\n          \"canApprove\": false,\n          \"canExport\": true\n        },\n        \"reason\": \"営業部の権限拡張\",\n        \"ipAddress\": \"192.168.1.100\",\n        \"createdAt\": \"2024-01-20T10:00:00Z\"\n      }\n    ],\n    \"pagination\": {\n      \"page\": 1,\n      \"limit\": 20,\n      \"total\": 500,\n      \"totalPages\": 25\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"statistics\": {\n      \"totalChanges\": 150,\n      \"byAction\": {\n        \"GRANT\": 50,\n        \"REVOKE\": 30,\n        \"MODIFY\": 70\n      },\n      \"byTargetType\": {\n        \"DEPARTMENT\": 100,\n        \"USER\": 50\n      },\n      \"byDate\": [\n        {\n          \"date\": \"2024-01-20\",\n          \"count\": 25\n        }\n      ],\n      \"topUsers\": [\n        {\n          \"userId\": 1,\n          \"userName\": \"管理者\",\n          \"changeCount\": 80\n        }\n      ]\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"matrix\": [\n      {\n        \"departmentId\": 2,\n        \"departmentName\": \"営業部\",\n        \"features\": [\n          {\n            \"featureCode\": \"USER_MGMT\",\n            \"featureName\": \"ユーザー管理\",\n            \"permissions\": \"V,E,X\"\n          }\n        ]\n      }\n    ],\n    \"legend\": {\n      \"V\": \"閲覧\",\n      \"C\": \"作成\",\n      \"E\": \"編集\",\n      \"D\": \"削除\",\n      \"A\": \"承認\",\n      \"X\": \"出力\"\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"success\": true,\n  \"data\": {\n    \"unusedPermissions\": [\n      {\n        \"departmentId\": 5,\n        \"departmentName\": \"企画部\",\n        \"featureId\": 10,\n        \"featureName\": \"高度な分析\",\n        \"lastUsed\": null,\n        \"daysUnused\": 365,\n        \"recommendation\": \"REVOKE\"\n      }\n    ],\n    \"summary\": {\n      \"total\": 25,\n      \"neverUsed\": 10,\n      \"over90Days\": 15\n    }\n  }\n}"
            ],
            [
              "json",
              "{\n  \"companyId\": 1,\n  \"includeInactive\": false,\n  \"format\": \"EXCEL\"\n}"
            ],
            [
              "typescript",
              "export const requirePermission = (\n  featureCode: string,\n  action: 'VIEW' | 'CREATE' | 'EDIT' | 'DELETE' | 'APPROVE' | 'EXPORT'\n) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userId = req.user.id;\n      const hasPermission = await permissionService.checkPermission(\n        userId,\n        featureCode,\n        action\n      );\n\n      if (!hasPermission) {\n        // 監査ログに記録\n        await auditService.logAccessDenied(userId, featureCode, action);\n\n        return res.status(403).json({\n          success: false,\n          error: {\n            code: 'PERMISSION_DENIED',\n            message: `権限がありません: ${featureCode}.${action}`,\n            details: {\n              requiredPermission: `${featureCode}.${action}`\n            }\n          }\n        });\n      }\n\n      next();\n    } catch (error) {\n      next(error);\n    }\n  };\n};\n\n// 使用例\nrouter.get(\n  '/api/v1/users',\n  authMiddleware,\n  requirePermission('USER_MGMT', 'VIEW'),\n  userController.list\n);"
            ],
            [
              "typescript",
              "class PermissionCache {\n  private cache: NodeCache;\n\n  constructor() {\n    this.cache = new NodeCache({ stdTTL: 300 }); // 5分間キャッシュ\n  }\n\n  async getUserPermissions(userId: number): Promise<PermissionSet> {\n    const cacheKey = `permissions:${userId}`;\n\n    // キャッシュから取得\n    let permissions = this.cache.get<PermissionSet>(cacheKey);\n\n    if (!permissions) {\n      // DBから取得\n      permissions = await this.loadPermissionsFromDB(userId);\n      this.cache.set(cacheKey, permissions);\n    }\n\n    return permissions;\n  }\n\n  invalidateUser(userId: number): void {\n    this.cache.del(`permissions:${userId}`);\n  }\n\n  invalidateDepartment(departmentId: number): void {\n    // 部署に所属する全ユーザーのキャッシュをクリア\n    const pattern = 'permissions:*';\n    const keys = this.cache.keys();\n    keys.forEach(key => {\n      if (key.startsWith('permissions:')) {\n        this.cache.del(key);\n      }\n    });\n  }\n}"
            ],
            [
              "typescript",
              "export const checkBulkPermissions = async (\n  req: Request,\n  res: Response\n): Promise<void> => {\n  const { checks } = req.body;\n  const userId = req.user.id;\n\n  const results = await Promise.all(\n    checks.map(async (check) => {\n      const hasPermission = await permissionService.checkPermission(\n        userId,\n        check.featureCode,\n        check.action\n      );\n\n      return {\n        featureCode: check.featureCode,\n        action: check.action,\n        hasPermission\n      };\n    })\n  );\n\n  res.json({\n    success: true,\n    data: {\n      results\n    }\n  });\n};"
            ]
          ]
        },
        "tables": {
          "total": 13,
          "total_rows": 80
        }
      },
      "readability": {
        "score": 76.9,
        "sentences": 113,
        "avg_words_per_sentence": 21.24,
        "long_sentences": 40,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 71.57
    },
    "docs/01_機能設計書/13_機能管理システム/画面設計書.md": {
      "basic_metrics": {
        "lines": 524,
        "words": 1632,
        "characters": 19366,
        "avg_line_length": 36.958015267175576
      },
      "structure_analysis": {
        "headers": {
          "total": 49,
          "hierarchy": [
            {
              "level": 1,
              "text": "機能管理システム画面設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. 画面一覧",
              "line_number": 3
            },
            {
              "level": 2,
              "text": "2. 画面詳細設計",
              "line_number": 18
            },
            {
              "level": 3,
              "text": "2.1 会社一覧画面（SCR_COMPANY_LIST）",
              "line_number": 20
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 22
            },
            {
              "level": 4,
              "text": "機能仕様",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "2.2 会社詳細画面（SCR_COMPANY_DETAIL）",
              "line_number": 50
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 52
            },
            {
              "level": 4,
              "text": "編集モード",
              "line_number": 89
            },
            {
              "level": 3,
              "text": "2.3 部署管理画面（SCR_DEPT_TREE）",
              "line_number": 110
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 112
            },
            {
              "level": 4,
              "text": "機能仕様",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "2.4 権限設定画面（SCR_PERM_MATRIX）",
              "line_number": 149
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 151
            },
            {
              "level": 4,
              "text": "機能仕様",
              "line_number": 182
            },
            {
              "level": 3,
              "text": "2.5 権限テンプレート画面（SCR_PERM_TEMPLATE）",
              "line_number": 189
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 191
            },
            {
              "level": 4,
              "text": "テンプレート適用ダイアログ",
              "line_number": 219
            },
            {
              "level": 3,
              "text": "2.6 ユーザー権限確認画面（SCR_PERM_USER）",
              "line_number": 242
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 244
            },
            {
              "level": 3,
              "text": "2.7 監査ログ画面（SCR_AUDIT_LOG）",
              "line_number": 271
            },
            {
              "level": 4,
              "text": "レイアウト",
              "line_number": 273
            },
            {
              "level": 4,
              "text": "詳細表示ダイアログ",
              "line_number": 297
            },
            {
              "level": 2,
              "text": "3. 画面遷移図",
              "line_number": 327
            },
            {
              "level": 2,
              "text": "4. UI コンポーネント仕様",
              "line_number": 353
            },
            {
              "level": 3,
              "text": "4.1 共通コンポーネント",
              "line_number": 355
            },
            {
              "level": 4,
              "text": "PermissionCheckbox",
              "line_number": 357
            },
            {
              "level": 4,
              "text": "DepartmentTreeSelect",
              "line_number": 373
            },
            {
              "level": 4,
              "text": "FeatureCategoryFilter",
              "line_number": 388
            },
            {
              "level": 3,
              "text": "4.2 レイアウトコンポーネント",
              "line_number": 410
            },
            {
              "level": 4,
              "text": "SplitPanel",
              "line_number": 412
            },
            {
              "level": 2,
              "text": "5. 画面操作フロー",
              "line_number": 427
            },
            {
              "level": 3,
              "text": "5.1 権限設定フロー",
              "line_number": 429
            },
            {
              "level": 3,
              "text": "5.2 テンプレート適用フロー",
              "line_number": 436
            },
            {
              "level": 2,
              "text": "6. バリデーション仕様",
              "line_number": 444
            },
            {
              "level": 3,
              "text": "6.1 入力値検証",
              "line_number": 446
            },
            {
              "level": 3,
              "text": "6.2 業務ロジック検証",
              "line_number": 456
            },
            {
              "level": 2,
              "text": "7. アクセシビリティ対応",
              "line_number": 465
            },
            {
              "level": 3,
              "text": "7.1 キーボード操作",
              "line_number": 467
            },
            {
              "level": 3,
              "text": "7.2 スクリーンリーダー対応",
              "line_number": 475
            },
            {
              "level": 2,
              "text": "8. レスポンシブ対応",
              "line_number": 481
            },
            {
              "level": 3,
              "text": "8.1 ブレークポイント",
              "line_number": 483
            },
            {
              "level": 3,
              "text": "8.2 モバイル表示",
              "line_number": 488
            },
            {
              "level": 2,
              "text": "9. パフォーマンス最適化",
              "line_number": 494
            },
            {
              "level": 3,
              "text": "9.1 遅延読み込み",
              "line_number": 496
            },
            {
              "level": 3,
              "text": "9.2 キャッシュ戦略",
              "line_number": 501
            },
            {
              "level": 2,
              "text": "10. エラーハンドリング",
              "line_number": 506
            },
            {
              "level": 3,
              "text": "10.1 エラー表示",
              "line_number": 508
            },
            {
              "level": 3,
              "text": "10.2 エラー種別",
              "line_number": 520
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 16,
          "inline_code": 31,
          "languages": {
            "mermaid": 1,
            "vue": 5
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 会社管理                                           [新規登録]     │\n├─────────────────────────────────────────────────────────────────┤\n│ 検索条件:                                                        │\n│ ┌──────────────┐ ┌──────────────┐ ┌──────────┐ [検索] [クリア] │\n│ │会社名/コード  │ │業種         │ │状態      │               │\n│ └──────────────┘ └──────────────┘ └──────────┘               │\n├─────────────────────────────────────────────────────────────────┤\n│ 検索結果: 25件                                    [エクスポート]  │\n│ ┌───┬──────────┬────────────────┬──────┬──────┬──────┬──────┐│\n│ │No │会社コード│会社名          │業種  │社員数│プラン│操作  ││\n│ ├───┼──────────┼────────────────┼──────┼──────┼──────┼──────┤│\n│ │1  │COMP001  │株式会社サンプル│IT    │150   │ENTER │[詳細]││\n│ │2  │COMP002  │製造会社        │製造業│300   │STAND │[詳細]││\n│ └───┴──────────┴────────────────┴──────┴──────┴──────┴──────┘│\n│ [<] [1] [2] [3] ... [>]  表示件数: [20▼]                       │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 会社詳細 > 株式会社サンプル              [編集] [削除] [戻る]    │\n├─────────────────────────────────────────────────────────────────┤\n│ 基本情報                                                        │\n│ ┌─────────────────────────────────────────────────────────────┤\n│ │会社コード: COMP001                                           │\n│ │会社名:     株式会社サンプル                                  │\n│ │会社名カナ: カブシキガイシャサンプル                          │\n│ │業種:       IT                                                │\n│ │設立日:     2000-04-01                                        │\n│ │従業員数:   150名                                             │\n│ │住所:       東京都千代田区...                                 │\n│ │電話番号:   03-1234-5678                                      │\n│ │メール:     info@sample.co.jp                                 │\n│ └─────────────────────────────────────────────────────────────┤\n│                                                                 │\n│ 契約情報                                                        │\n│ ┌─────────────────────────────────────────────────────────────┤\n│ │契約プラン: ENTERPRISE                                        │\n│ │最大ユーザー数: 500                                           │\n│ │現在のユーザー数: 120 / 500                                   │\n│ │部署数: 15                                                    │\n│ │状態: 有効                                                    │\n│ └─────────────────────────────────────────────────────────────┤\n│                                                                 │\n│ 部署一覧                                          [部署管理へ]  │\n│ ┌───┬──────────┬────────────────┬──────┬──────────────────┐│\n│ │No │部署コード│部署名          │レベル│所属ユーザー数    ││\n│ ├───┼──────────┼────────────────┼──────┼──────────────────┤│\n│ │1  │HQ       │本社            │1     │10                ││\n│ │2  │SALES    │営業部          │2     │25                ││\n│ └───┴──────────┴────────────────┴──────┴──────────────────┘│\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 会社編集 > 株式会社サンプル                   [保存] [キャンセル]│\n├─────────────────────────────────────────────────────────────────┤\n│ 基本情報                                                        │\n│ ┌─────────────────────────────────────────────────────────────┤\n│ │会社コード*: [COMP001        ] (変更不可)                     │\n│ │会社名*:     [株式会社サンプル                ]               │\n│ │会社名カナ:  [カブシキガイシャサンプル        ]               │\n│ │業種:        [IT              ▼]                             │\n│ │設立日:      [2000-04-01      ]                               │\n│ │従業員数:    [150             ]                               │\n│ │住所:        [東京都千代田区...                             ] │\n│ │電話番号:    [03-1234-5678    ]                               │\n│ │メール:      [info@sample.co.jp              ]                │\n│ └─────────────────────────────────────────────────────────────┤\n│ * は必須項目                                                    │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 部署管理                                                        │\n├─────────────────────────────────────────────────────────────────┤\n│ 会社: [株式会社サンプル    ▼]            [新規部署] [一括編集] │\n├─────────────────────────────────────────────────────────────────┤\n│ ┌─────────────────────────┬───────────────────────────────────┤\n│ │▼ 本社 (HQ)             │部署情報                           │\n│ │  ├─ 営業部 (SALES)     │───────────────────────────────────│\n│ │  │  ├─ 営業1課        │部署名: 営業部                     │\n│ │  │  └─ 営業2課        │部署コード: SALES                  │\n│ │  ├─ 技術部 (TECH)      │親部署: 本社                       │\n│ │  │  ├─ 開発課         │階層レベル: 2                      │\n│ │  │  └─ インフラ課     │所属ユーザー数: 25名               │\n│ │  ├─ 管理部 (ADMIN)     │                                   │\n│ │  └─ 企画部 (PLAN)      │[編集] [削除] [移動] [権限設定]    │\n│ │                        │                                   │\n│ │                        │所属ユーザー                       │\n│ │                        │┌────┬──────────┬──────┬────────┐│\n│ │                        ││氏名│メール    │役割  │主所属  ││\n│ │                        │├────┼──────────┼──────┼────────┤│\n│ │                        ││山田│yamada@...│課長  │○       ││\n│ │                        ││鈴木│suzuki@...│一般  │○       ││\n│ │                        │└────┴──────────┴──────┴────────┘│\n│ └─────────────────────────┴───────────────────────────────────┘\n│ [無効な部署を表示]                                              │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 権限設定                                                        │\n├─────────────────────────────────────────────────────────────────┤\n│ 部署: [営業部              ▼]     [テンプレート適用] [一括設定] │\n│ 親部署から継承: [✓]                                             │\n├─────────────────────────────────────────────────────────────────┤\n│ カテゴリ: [全て ▼] 検索: [              ] [適用] [リセット]    │\n├─────────────────────────────────────────────────────────────────┤\n│ ┌──────────────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐│\n│ │機能名        │全て │閲覧 │作成 │編集 │削除 │承認 │出力 ││\n│ │              │[✓]  │     │     │     │     │     │     ││\n│ ├──────────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤│\n│ │■ ユーザー管理│[ ]  │     │     │     │     │     │     ││\n│ │  ユーザー一覧│     │[✓]  │[ ]  │[ ]  │[ ]  │[ ]  │[✓]  ││\n│ │  ユーザー登録│     │[✓]  │[ ]  │[ ]  │[ ]  │[ ]  │[ ]  ││\n│ │  ユーザー編集│     │[✓]  │[ ]  │[ ]  │[ ]  │[ ]  │[ ]  ││\n│ │  ユーザー削除│     │[✓]  │[ ]  │[ ]  │[ ]  │[ ]  │[ ]  ││\n│ ├──────────────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤│\n│ │■ ログ管理    │[✓]  │     │     │     │     │     │     ││\n│ │  ログ検索    │     │[✓]  │[-]  │[-]  │[-]  │[-]  │[✓]  ││\n│ │  ログ統計    │     │[✓]  │[-]  │[-]  │[-]  │[-]  │[✓]  ││\n│ │  ログ削除    │     │[ ]  │[-]  │[-]  │[ ]  │[-]  │[-]  ││\n│ └──────────────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘│\n│ 凡例: [✓]有効 [ ]無効 [-]該当なし (継承)継承された権限          │\n│                                                                 │\n│                                    [プレビュー] [保存] [取消]   │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 権限テンプレート                                  [新規作成]    │\n├─────────────────────────────────────────────────────────────────┤\n│ ┌─────────────────────┬───────────────────────────────────────┤\n│ │テンプレート一覧      │テンプレート詳細                       │\n│ ├─────────────────────┼───────────────────────────────────────┤\n│ │■ システムテンプレート│営業部標準                             │\n│ │  ・システム管理者    │───────────────────────────────────────│\n│ │  ・一般ユーザー      │説明: 営業部用の標準権限セット         │\n│ │                      │部署タイプ: SALES                      │\n│ │■ カスタムテンプレート│作成者: 管理者                         │\n│ │  ・営業部標準 ←選択  │作成日: 2024-01-01                     │\n│ │  ・技術部標準        │                                       │\n│ │  ・管理部標準        │権限設定:                              │\n│ │                      │┌────────────┬─┬─┬─┬─┬─┬─┐│\n│ │                      ││機能名      │閲│作│編│削│承│出││\n│ │                      │├────────────┼─┼─┼─┼─┼─┼─┤│\n│ │                      ││ユーザー管理│✓│ │ │ │ │✓││\n│ │                      ││ログ管理    │✓│ │ │ │ │✓││\n│ │                      │└────────────┴─┴─┴─┴─┴─┴─┘│\n│ │                      │                                       │\n│ │                      │[編集] [複製] [削除] [適用]            │\n│ └─────────────────────┴───────────────────────────────────────┘\n└─────────────────────────────────────────────────────────────────┐"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ テンプレート適用                                    [×]        │\n├─────────────────────────────────────────────────────────────────┤\n│ テンプレート: 営業部標準                                        │\n│                                                                 │\n│ 適用対象部署:                                                   │\n│ ┌─────────────────────────────────────────────────────────────┤\n│ │[✓] 営業部                                                    │\n│ │[✓] 営業1課                                                   │\n│ │[✓] 営業2課                                                   │\n│ │[ ] 技術部                                                    │\n│ └─────────────────────────────────────────────────────────────┤\n│                                                                 │\n│ 適用方法:                                                       │\n│ (●) 既存権限を上書き                                           │\n│ ( ) 既存権限とマージ（権限を追加のみ）                         │\n│                                                                 │\n│ [プレビュー]                              [適用] [キャンセル]   │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ ユーザー権限確認                                                │\n├─────────────────────────────────────────────────────────────────┤\n│ ユーザー検索: [              ] [検索]                          │\n├─────────────────────────────────────────────────────────────────┤\n│ ユーザー: 山田太郎 (yamada@example.com)                        │\n│ 会社: 株式会社サンプル                                          │\n│ 主所属: 営業部 (課長)                                           │\n│ 副所属: プロジェクトチーム (メンバー)                           │\n├─────────────────────────────────────────────────────────────────┤\n│ 有効な権限:                                      [エクスポート] │\n│ ┌──────────────┬──────────┬─────┬─────┬─────┬─────┬─────┬─────┐│\n│ │機能名        │取得元    │閲覧 │作成 │編集 │削除 │承認 │出力 ││\n│ ├──────────────┼──────────┼─────┼─────┼─────┼─────┼─────┼─────┤│\n│ │ユーザー管理  │営業部    │✓    │✓    │✓    │     │     │✓    ││\n│ │ログ管理      │営業部    │✓    │     │     │     │     │✓    ││\n│ │レポート      │プロジェクト│✓    │✓    │     │     │     │✓    ││\n│ └──────────────┴──────────┴─────┴─────┴─────┴─────┴─────┴─────┘│\n│                                                                 │\n│ 権限の取得経路:                                                 │\n│ ・営業部（主所属）→ 本社 → 会社デフォルト                      │\n│ ・プロジェクトチーム（副所属）→ 個別設定                       │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 権限変更監査ログ                                                │\n├─────────────────────────────────────────────────────────────────┤\n│ 検索条件:                                                       │\n│ 期間: [2024-01-01] ～ [2024-01-31]                              │\n│ 実行者: [              ] アクション: [全て        ▼]            │\n│ 対象: [              ]                            [検索] [クリア]│\n├─────────────────────────────────────────────────────────────────┤\n│ 検索結果: 150件                                   [エクスポート] │\n│ ┌────────────────┬──────┬──────┬──────────┬────────────────────┐│\n│ │日時            │実行者│アクション│対象      │変更内容        ││\n│ ├────────────────┼──────┼──────┼──────────┼────────────────────┤│\n│ │2024-01-20 10:00│管理者│変更  │営業部    │ユーザー管理:   ││\n│ │                │      │      │          │作成権限を付与  ││\n│ ├────────────────┼──────┼──────┼──────────┼────────────────────┤│\n│ │2024-01-20 09:30│山田  │適用  │技術部    │テンプレート:   ││\n│ │                │      │      │          │技術部標準を適用││\n│ └────────────────┴──────┴──────┴──────────┴────────────────────┘│\n│ [<] [1] [2] [3] ... [>]                                         │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "",
              "┌─────────────────────────────────────────────────────────────────┐\n│ 監査ログ詳細                                         [×]       │\n├─────────────────────────────────────────────────────────────────┤\n│ 基本情報:                                                       │\n│ ・日時: 2024-01-20 10:00:00                                     │\n│ ・実行者: 管理者 (admin@example.com)                            │\n│ ・IPアドレス: 192.168.1.100                                     │\n│ ・アクション: MODIFY                                            │\n│                                                                 │\n│ 対象:                                                           │\n│ ・タイプ: DEPARTMENT                                            │\n│ ・名称: 営業部                                                  │\n│                                                                 │\n│ 変更内容:                                                       │\n│ 機能: ユーザー管理                                              │\n│ ┌──────┬──────────┬──────────┐                               │\n│ │権限  │変更前    │変更後    │                               │\n│ ├──────┼──────────┼──────────┤                               │\n│ │閲覧  │✓         │✓         │                               │\n│ │作成  │          │✓ (追加)  │                               │\n│ │編集  │          │✓ (追加)  │                               │\n│ └──────┴──────────┴──────────┘                               │\n│                                                                 │\n│ 変更理由: 営業部の権限拡張                                      │\n│                                                     [閉じる]    │\n└─────────────────────────────────────────────────────────────────┘"
            ],
            [
              "mermaid",
              "graph LR\n    A[メインメニュー] --> B[会社一覧]\n    B --> C[会社詳細]\n    C --> D[部署管理]\n    D --> E[部署詳細]\n    D --> F[権限設定]\n\n    A --> G[機能一覧]\n    G --> H[機能詳細]\n\n    A --> I[権限テンプレート]\n    I --> J[テンプレート適用]\n\n    A --> K[ユーザー権限確認]\n    A --> L[監査ログ]\n\n    C --> M[ユーザー管理]\n    M --> N[ユーザー所属管理]\n\n    F --> I\n    F --> K"
            ],
            [
              "vue",
              "<template>\n  <el-checkbox\n    v-model=\"value\"\n    :disabled=\"disabled || inherited\"\n    :indeterminate=\"indeterminate\"\n    @change=\"handleChange\"\n  >\n    <el-tooltip v-if=\"inherited\" content=\"親部署から継承\">\n      <span class=\"inherited-mark\">(継承)</span>\n    </el-tooltip>\n  </el-checkbox>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <el-tree-select\n    v-model=\"selectedDepartment\"\n    :data=\"departmentTree\"\n    :props=\"treeProps\"\n    :render-after-expand=\"false\"\n    placeholder=\"部署を選択\"\n    filterable\n    @change=\"handleDepartmentChange\"\n  />\n</template>"
            ],
            [
              "vue",
              "<template>\n  <el-select\n    v-model=\"selectedCategory\"\n    placeholder=\"カテゴリを選択\"\n    clearable\n    @change=\"handleCategoryChange\"\n  >\n    <el-option\n      v-for=\"category in categories\"\n      :key=\"category.code\"\n      :label=\"category.name\"\n      :value=\"category.code\"\n    >\n      <span>{{ category.name }}</span>\n      <span class=\"category-count\">({{ category.count }})</span>\n    </el-option>\n  </el-select>\n</template>"
            ],
            [
              "vue",
              "<template>\n  <div class=\"split-panel\">\n    <div class=\"left-panel\" :style=\"{ width: leftWidth }\">\n      <slot name=\"left\"></slot>\n    </div>\n    <div class=\"splitter\" @mousedown=\"startResize\"></div>\n    <div class=\"right-panel\">\n      <slot name=\"right\"></slot>\n    </div>\n  </div>\n</template>"
            ],
            [
              "vue",
              "<el-alert\n  v-if=\"error\"\n  :title=\"error.title\"\n  :description=\"error.message\"\n  :type=\"error.type\"\n  :closable=\"true\"\n  @close=\"clearError\"\n/>"
            ]
          ]
        },
        "tables": {
          "total": 3,
          "total_rows": 25
        }
      },
      "readability": {
        "score": 79.16,
        "sentences": 76,
        "avg_words_per_sentence": 21.47,
        "long_sentences": 20,
        "readability_level": "やや読みやすい"
      },
      "structure_score": 65,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 72.25
    },
    "docs/01_機能設計書/02_ユーザー管理機能/ユーザー管理機能設計書.md": {
      "basic_metrics": {
        "lines": 229,
        "words": 588,
        "characters": 3652,
        "avg_line_length": 15.947598253275109
      },
      "structure_analysis": {
        "headers": {
          "total": 35,
          "hierarchy": [
            {
              "level": 1,
              "text": "ユーザー管理機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "対象画面",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "🏗️ システム構成",
              "line_number": 13
            },
            {
              "level": 3,
              "text": "技術スタック",
              "line_number": 15
            },
            {
              "level": 3,
              "text": "データ構造",
              "line_number": 21
            },
            {
              "level": 2,
              "text": "🔍 機能仕様",
              "line_number": 45
            },
            {
              "level": 3,
              "text": "1. ユーザー一覧表示",
              "line_number": 47
            },
            {
              "level": 3,
              "text": "2. 検索機能",
              "line_number": 53
            },
            {
              "level": 3,
              "text": "3. ユーザー操作",
              "line_number": 59
            },
            {
              "level": 4,
              "text": "新規追加",
              "line_number": 60
            },
            {
              "level": 4,
              "text": "編集",
              "line_number": 65
            },
            {
              "level": 4,
              "text": "削除",
              "line_number": 70
            },
            {
              "level": 4,
              "text": "状態変更",
              "line_number": 74
            },
            {
              "level": 2,
              "text": "📝 バリデーション仕様",
              "line_number": 78
            },
            {
              "level": 3,
              "text": "入力項目検証",
              "line_number": 80
            },
            {
              "level": 3,
              "text": "エラーメッセージ",
              "line_number": 89
            },
            {
              "level": 2,
              "text": "🎨 UI設計",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "レイアウト構成",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "レスポンシブ対応",
              "line_number": 117
            },
            {
              "level": 3,
              "text": "カラーコード",
              "line_number": 122
            },
            {
              "level": 2,
              "text": "🔄 データフロー",
              "line_number": 129
            },
            {
              "level": 3,
              "text": "CRUD操作フロー",
              "line_number": 131
            },
            {
              "level": 2,
              "text": "🧪 テスト仕様",
              "line_number": 166
            },
            {
              "level": 3,
              "text": "単体テスト",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "結合テスト",
              "line_number": 174
            },
            {
              "level": 3,
              "text": "E2Eテスト",
              "line_number": 179
            },
            {
              "level": 2,
              "text": "📊 マスターデータ",
              "line_number": 184
            },
            {
              "level": 3,
              "text": "部署一覧",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "権限一覧",
              "line_number": 194
            },
            {
              "level": 2,
              "text": "🚀 実装状況",
              "line_number": 201
            },
            {
              "level": 3,
              "text": "完了済み",
              "line_number": 203
            },
            {
              "level": 3,
              "text": "今後の課題",
              "line_number": 211
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 218
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 7,
          "languages": {
            "typescript": 2,
            "mermaid": 1
          },
          "details": [
            [
              "typescript",
              "interface User {\n  id: number\n  username: string        // ユーザー名（ログインID）\n  name: string           // 表示名\n  email: string          // メールアドレス\n  department: string     // 部署コード\n  role: string          // 権限レベル\n  status: boolean       // 有効/無効\n}\n\ninterface Department {\n  value: string         // 部署コード\n  label: string         // 部署名\n}\n\ninterface Role {\n  value: string         // 権限コード\n  label: string         // 権限名\n  type: string          // 表示タイプ\n}"
            ],
            [
              "typescript",
              "const userRules: FormRules = {\n  username: [\n    { required: true, message: 'ユーザー名を入力してください' },\n    { min: 1, max: 20, message: '1-20文字で入力してください' }\n  ],\n  name: [\n    { required: true, message: '氏名を入力してください' }\n  ],\n  email: [\n    { required: true, message: 'メールアドレスを入力してください' },\n    { type: 'email', message: '正しい形式で入力してください' }\n  ]\n}"
            ],
            [
              "",
              "[ヘッダー: タイトル + 新規追加ボタン]\n[検索フォーム: ユーザー名 + 部署 + 検索/リセットボタン]\n[データテーブル: ユーザー一覧 + 操作ボタン]\n[ページネーション: ページ切り替え]\n[モーダル: ユーザー編集フォーム]"
            ],
            [
              "mermaid",
              "sequenceDiagram\n    participant U as User\n    participant V as Users.vue\n    participant API as Mock API\n\n    Note over U,API: 一覧取得\n    V->>API: fetchUsers()\n    API->>V: users[]\n\n    Note over U,API: 新規作成\n    U->>V: 新規追加クリック\n    V->>V: ダイアログ表示\n    U->>V: フォーム入力・保存\n    V->>V: バリデーション\n    V->>API: createUser(userData)\n    API->>V: 作成完了\n    V->>V: 一覧更新\n\n    Note over U,API: 更新\n    U->>V: 編集ボタンクリック\n    V->>V: 既存データ設定・ダイアログ表示\n    U->>V: データ変更・保存\n    V->>API: updateUser(userData)\n    API->>V: 更新完了\n\n    Note over U,API: 削除\n    U->>V: 削除ボタンクリック\n    V->>V: 確認ダイアログ表示\n    U->>V: 削除確認\n    V->>API: deleteUser(userId)\n    API->>V: 削除完了"
            ]
          ]
        },
        "tables": {
          "total": 4,
          "total_rows": 22
        }
      },
      "readability": {
        "score": 0,
        "sentences": 9,
        "avg_words_per_sentence": 65.33,
        "long_sentences": 4,
        "readability_level": "読みにくい"
      },
      "structure_score": 53.76,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 44.0
    },
    "docs/01_機能設計書/99_システム基盤/システム基盤設計書.md": {
      "basic_metrics": {
        "lines": 526,
        "words": 1096,
        "characters": 10164,
        "avg_line_length": 19.32319391634981
      },
      "structure_analysis": {
        "headers": {
          "total": 63,
          "hierarchy": [
            {
              "level": 1,
              "text": "システム基盤設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 システム概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "技術スタック",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🏗️ アーキテクチャ設計",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "システム構成図",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "ディレクトリ構造",
              "line_number": 50
            },
            {
              "level": 2,
              "text": "🐳 Docker設計",
              "line_number": 68
            },
            {
              "level": 3,
              "text": "docker-compose.yml",
              "line_number": 70
            },
            {
              "level": 3,
              "text": "Dockerfile設計",
              "line_number": 122
            },
            {
              "level": 4,
              "text": "Frontend Dockerfile",
              "line_number": 124
            },
            {
              "level": 1,
              "text": "package.json コピーして依存関係インストール",
              "line_number": 130
            },
            {
              "level": 1,
              "text": "ソースコードコピー",
              "line_number": 134
            },
            {
              "level": 1,
              "text": "開発サーバー起動",
              "line_number": 137
            },
            {
              "level": 4,
              "text": "Backend Dockerfile",
              "line_number": 142
            },
            {
              "level": 1,
              "text": "package.json コピーして依存関係インストール",
              "line_number": 148
            },
            {
              "level": 1,
              "text": "Prisma クライアント生成",
              "line_number": 152
            },
            {
              "level": 1,
              "text": "ソースコードコピー",
              "line_number": 156
            },
            {
              "level": 1,
              "text": "サーバー起動",
              "line_number": 159
            },
            {
              "level": 2,
              "text": "⚙️ 開発環境セットアップ",
              "line_number": 164
            },
            {
              "level": 3,
              "text": "初回セットアップ (setup.sh)",
              "line_number": 166
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 168
            },
            {
              "level": 1,
              "text": "1. workspace ディレクトリ作成",
              "line_number": 173
            },
            {
              "level": 1,
              "text": "2. テンプレートから workspace にコピー",
              "line_number": 176
            },
            {
              "level": 1,
              "text": "3. workspace 内で Git 初期化",
              "line_number": 180
            },
            {
              "level": 1,
              "text": "4. Docker 環境起動",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "テンプレート更新 (init.sh)",
              "line_number": 197
            },
            {
              "level": 1,
              "text": "!/bin/bash",
              "line_number": 199
            },
            {
              "level": 1,
              "text": "確認プロンプト",
              "line_number": 204
            },
            {
              "level": 1,
              "text": "テンプレートコピー",
              "line_number": 211
            },
            {
              "level": 2,
              "text": "🔧 開発ツール設定",
              "line_number": 219
            },
            {
              "level": 3,
              "text": "package.json (frontend)",
              "line_number": 221
            },
            {
              "level": 3,
              "text": "vite.config.ts",
              "line_number": 252
            },
            {
              "level": 2,
              "text": "📊 モニタリング・ログ設計",
              "line_number": 290
            },
            {
              "level": 3,
              "text": "ログ設計",
              "line_number": 292
            },
            {
              "level": 3,
              "text": "ヘルスチェック",
              "line_number": 313
            },
            {
              "level": 2,
              "text": "🔒 セキュリティ設計",
              "line_number": 332
            },
            {
              "level": 3,
              "text": "環境変数管理",
              "line_number": 334
            },
            {
              "level": 1,
              "text": ".env.example",
              "line_number": 336
            },
            {
              "level": 3,
              "text": "セキュリティヘッダー",
              "line_number": 344
            },
            {
              "level": 2,
              "text": "🧪 テスト環境",
              "line_number": 365
            },
            {
              "level": 3,
              "text": "テスト構成",
              "line_number": 367
            },
            {
              "level": 1,
              "text": "docker-compose.test.yml",
              "line_number": 369
            },
            {
              "level": 3,
              "text": "E2Eテスト設定",
              "line_number": 398
            },
            {
              "level": 2,
              "text": "🚀 デプロイ・運用",
              "line_number": 421
            },
            {
              "level": 3,
              "text": "ビルド最適化",
              "line_number": 423
            },
            {
              "level": 3,
              "text": "本番用 Docker",
              "line_number": 448
            },
            {
              "level": 1,
              "text": "Multi-stage build",
              "line_number": 450
            },
            {
              "level": 2,
              "text": "📋 運用手順",
              "line_number": 464
            },
            {
              "level": 3,
              "text": "日常運用コマンド",
              "line_number": 466
            },
            {
              "level": 1,
              "text": "環境起動",
              "line_number": 468
            },
            {
              "level": 1,
              "text": "環境停止",
              "line_number": 471
            },
            {
              "level": 1,
              "text": "ログ確認",
              "line_number": 474
            },
            {
              "level": 1,
              "text": "データベース接続",
              "line_number": 478
            },
            {
              "level": 1,
              "text": "環境リセット",
              "line_number": 481
            },
            {
              "level": 3,
              "text": "トラブルシューティング",
              "line_number": 486
            },
            {
              "level": 1,
              "text": "コンテナ状態確認",
              "line_number": 488
            },
            {
              "level": 1,
              "text": "リソース使用量確認",
              "line_number": 491
            },
            {
              "level": 1,
              "text": "ネットワーク確認",
              "line_number": 494
            },
            {
              "level": 2,
              "text": "📊 実装状況",
              "line_number": 499
            },
            {
              "level": 3,
              "text": "完了済み",
              "line_number": 501
            },
            {
              "level": 3,
              "text": "今後の実装",
              "line_number": 508
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 515
            }
          ],
          "hierarchy_issues": [
            {
              "line": 142,
              "issue": "見出しレベル4が1から飛躍"
            },
            {
              "line": 197,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 344,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 398,
              "issue": "見出しレベル3が1から飛躍"
            },
            {
              "line": 486,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 19,
          "inline_code": 37,
          "languages": {
            "yaml": 2,
            "dockerfile": 3,
            "bash": 5,
            "json": 1,
            "typescript": 6
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────┐\n│                  Browser                        │\n└─────────────────┬───────────────────────────────┘\n                  │ HTTP/HTTPS\n┌─────────────────▼───────────────────────────────┐\n│           Frontend Container                    │\n│  ┌─────────────────────────────────────────┐   │\n│  │ Vue 3 + TypeScript + Element Plus      │   │\n│  │ Vite Dev Server (Port: 3000)           │   │\n│  └─────────────────────────────────────────┘   │\n└─────────────────┬───────────────────────────────┘\n                  │ API Calls\n┌─────────────────▼───────────────────────────────┐\n│            Backend Container                    │\n│  ┌─────────────────────────────────────────┐   │\n│  │ Express + Prisma ORM                   │   │\n│  │ Node.js Server (Port: 8000)            │   │\n│  └─────────────────────────────────────────┘   │\n└─────────────────┬───────────────────────────────┘\n                  │ Database Connection\n┌─────────────────▼───────────────────────────────┐\n│          Database Container                     │\n│  ┌─────────────────────────────────────────┐   │\n│  │ PostgreSQL 15                          │   │\n│  │ Database Server (Port: 5432)           │   │\n│  └─────────────────────────────────────────┘   │\n└─────────────────────────────────────────────────┘"
            ],
            [
              "",
              "websys/                          # Docker環境管理\n├── templates/                   # ソースコードテンプレート\n│   ├── frontend/               # Vue.js テンプレート\n│   └── backend/                # Express テンプレート\n├── workspace/                  # 開発用ソースコード\n│   ├── frontend/              # 実際のフロントエンド開発\n│   └── backend/               # 実際のバックエンド開発\n├── docker/                    # Dockerビルド設定\n│   ├── frontend.Dockerfile\n│   ├── backend.Dockerfile\n│   └── postgres.Dockerfile\n├── docker-compose.yml         # サービス構成定義\n├── setup.sh                   # 初回セットアップ\n└── init.sh                    # テンプレート再コピー"
            ],
            [
              "yaml",
              "version: '3.8'\n\nservices:\n  frontend:\n    build:\n      context: ./workspace/frontend\n      dockerfile: Dockerfile\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./workspace/frontend:/app\n      - /app/node_modules\n    depends_on:\n      - backend\n    environment:\n      - VITE_API_URL=http://localhost:8000\n    command: npm run dev\n\n  backend:\n    build:\n      context: ./workspace/backend\n      dockerfile: Dockerfile\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./workspace/backend:/app\n      - /app/node_modules\n    depends_on:\n      - postgres\n    environment:\n      - DATABASE_URL=postgresql://user:password@postgres:5432/websys\n      - NODE_ENV=development\n    command: npm run dev\n\n  postgres:\n    image: postgres:15-alpine\n    ports:\n      - \"5432:5432\"\n    environment:\n      - POSTGRES_USER=user\n      - POSTGRES_PASSWORD=password\n      - POSTGRES_DB=websys\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql\n\nvolumes:\n  postgres_data:"
            ],
            [
              "dockerfile",
              "FROM node:18-alpine\n\nWORKDIR /app\n\n# package.json コピーして依存関係インストール\nCOPY package*.json ./\nRUN npm ci\n\n# ソースコードコピー\nCOPY . .\n\n# 開発サーバー起動\nEXPOSE 3000\nCMD [\"npm\", \"run\", \"dev\"]"
            ],
            [
              "dockerfile",
              "FROM node:18-alpine\n\nWORKDIR /app\n\n# package.json コピーして依存関係インストール\nCOPY package*.json ./\nRUN npm ci\n\n# Prisma クライアント生成\nCOPY prisma ./prisma/\nRUN npx prisma generate\n\n# ソースコードコピー\nCOPY . .\n\n# サーバー起動\nEXPOSE 8000\nCMD [\"npm\", \"run\", \"dev\"]"
            ],
            [
              "bash",
              "#!/bin/bash\nset -e\n\necho \"🚀 社内システム開発環境セットアップ開始\"\n\n# 1. workspace ディレクトリ作成\nmkdir -p workspace\n\n# 2. テンプレートから workspace にコピー\necho \"📁 テンプレートコピー中...\"\ncp -r templates/* workspace/\n\n# 3. workspace 内で Git 初期化\ncd workspace\ngit init\ngit add .\ngit commit -m \"初期プロジェクト構成\"\n\n# 4. Docker 環境起動\necho \"🐳 Docker環境起動中...\"\ncd ../\ndocker-compose up -d\n\necho \"✅ セットアップ完了！\"\necho \"🌐 フロントエンド: http://localhost:3000\"\necho \"🔧 バックエンド: http://localhost:8000\"\necho \"🗄️ データベース: localhost:5432\""
            ],
            [
              "bash",
              "#!/bin/bash\nset -e\n\necho \"🔄 テンプレート再コピー開始\"\n\n# 確認プロンプト\nread -p \"workspace の内容を上書きしますか？ (y/N): \" confirm\nif [[ $confirm != [yY] ]]; then\n  echo \"キャンセルしました\"\n  exit 0\nfi\n\n# テンプレートコピー\necho \"📁 テンプレートコピー中...\"\nrm -rf workspace/*\ncp -r templates/* workspace/\n\necho \"✅ テンプレート更新完了\""
            ],
            [
              "json",
              "{\n  \"name\": \"websys-frontend\",\n  \"scripts\": {\n    \"dev\": \"vite --host 0.0.0.0 --port 3000\",\n    \"build\": \"vue-tsc && vite build\",\n    \"preview\": \"vite preview\",\n    \"lint\": \"eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts\",\n    \"lint:fix\": \"eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix\",\n    \"type-check\": \"vue-tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"vue\": \"^3.4.0\",\n    \"vue-router\": \"^4.2.0\",\n    \"pinia\": \"^2.1.0\",\n    \"element-plus\": \"^2.4.0\",\n    \"@fontsource/biz-udgothic\": \"^5.2.7\",\n    \"@fontsource/biz-udpgothic\": \"^5.2.8\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^5.0.0\",\n    \"vite\": \"^5.0.0\",\n    \"@vitejs/plugin-vue\": \"^4.5.0\",\n    \"vue-tsc\": \"^1.8.0\",\n    \"eslint\": \"^8.57.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.0.0\"\n  }\n}"
            ],
            [
              "typescript",
              "import { defineConfig } from 'vite'\nimport vue from '@vitejs/plugin-vue'\nimport { resolve } from 'path'\n\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    alias: {\n      '@': resolve(__dirname, 'src')\n    }\n  },\n  server: {\n    host: '0.0.0.0',\n    port: 3000,\n    proxy: {\n      '/api': {\n        target: 'http://backend:8000',\n        changeOrigin: true\n      }\n    }\n  },\n  build: {\n    outDir: 'dist',\n    sourcemap: true,\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          'element-plus': ['element-plus'],\n          'vue-vendor': ['vue', 'vue-router', 'pinia']\n        }\n      }\n    }\n  }\n})"
            ],
            [
              "typescript",
              "// ログレベル定義\nenum LogLevel {\n  ERROR = 'error',\n  WARN = 'warn',\n  INFO = 'info',\n  DEBUG = 'debug'\n}\n\n// ログ構造\ninterface LogEntry {\n  timestamp: string\n  level: LogLevel\n  message: string\n  context?: Record<string, any>\n  userId?: string\n  sessionId?: string\n}"
            ],
            [
              "typescript",
              "// /api/health エンドポイント\ninterface HealthStatus {\n  status: 'healthy' | 'unhealthy'\n  timestamp: string\n  services: {\n    database: 'up' | 'down'\n    redis: 'up' | 'down'\n    external_api: 'up' | 'down'\n  }\n  metrics: {\n    memory_usage: number\n    cpu_usage: number\n    uptime: number\n  }\n}"
            ],
            [
              "bash",
              "# .env.example\nNODE_ENV=development\nDATABASE_URL=postgresql://user:password@localhost:5432/websys\nJWT_SECRET=your-secret-key\nAPI_PORT=8000\nCORS_ORIGIN=http://localhost:3000"
            ],
            [
              "typescript",
              "// Express セキュリティ設定\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"fonts.googleapis.com\"],\n      fontSrc: [\"'self'\", \"fonts.gstatic.com\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      scriptSrc: [\"'self'\"]\n    }\n  },\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n}))"
            ],
            [
              "yaml",
              "# docker-compose.test.yml\nversion: '3.8'\n\nservices:\n  frontend-test:\n    build:\n      context: ./workspace/frontend\n      target: test\n    command: npm run test\n    environment:\n      - NODE_ENV=test\n\n  backend-test:\n    build:\n      context: ./workspace/backend\n      target: test\n    command: npm run test\n    environment:\n      - NODE_ENV=test\n      - DATABASE_URL=postgresql://test:test@postgres-test:5432/websys_test\n\n  postgres-test:\n    image: postgres:15-alpine\n    environment:\n      - POSTGRES_USER=test\n      - POSTGRES_PASSWORD=test\n      - POSTGRES_DB=websys_test"
            ],
            [
              "typescript",
              "// playwright.config.ts\nexport default defineConfig({\n  testDir: './tests/e2e',\n  use: {\n    baseURL: 'http://localhost:3000',\n    trace: 'on-first-retry',\n    screenshot: 'only-on-failure'\n  },\n  projects: [\n    { name: 'chrome', use: { ...devices['Desktop Chrome'] } },\n    { name: 'firefox', use: { ...devices['Desktop Firefox'] } },\n    { name: 'mobile', use: { ...devices['iPhone 12'] } }\n  ],\n  webServer: {\n    command: 'docker-compose up',\n    port: 3000,\n    reuseExistingServer: !process.env.CI\n  }\n})"
            ],
            [
              "typescript",
              "// 本番ビルド設定\nexport default defineConfig({\n  build: {\n    minify: 'terser',\n    terserOptions: {\n      compress: {\n        drop_console: true,\n        drop_debugger: true\n      }\n    },\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          vendor: ['vue', 'vue-router', 'pinia'],\n          ui: ['element-plus'],\n          utils: ['axios', 'dayjs']\n        }\n      }\n    }\n  }\n})"
            ],
            [
              "dockerfile",
              "# Multi-stage build\nFROM node:18-alpine AS build\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\nFROM node:18-alpine AS production\nWORKDIR /app\nCOPY --from=build /app/node_modules ./node_modules\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]"
            ],
            [
              "bash",
              "# 環境起動\ndocker-compose up -d\n\n# 環境停止\ndocker-compose down\n\n# ログ確認\ndocker-compose logs -f frontend\ndocker-compose logs -f backend\n\n# データベース接続\ndocker-compose exec postgres psql -U user -d websys\n\n# 環境リセット\ndocker-compose down -v\ndocker-compose up -d"
            ],
            [
              "bash",
              "# コンテナ状態確認\ndocker-compose ps\n\n# リソース使用量確認\ndocker stats\n\n# ネットワーク確認\ndocker network ls\ndocker network inspect websys_default"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 97.44,
        "sentences": 129,
        "avg_words_per_sentence": 8.5,
        "long_sentences": 11,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 45,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.73
    },
    "docs/01_機能設計書/01_認証機能/要件定義書.md": {
      "basic_metrics": {
        "lines": 305,
        "words": 758,
        "characters": 5522,
        "avg_line_length": 18.104918032786884
      },
      "structure_analysis": {
        "headers": {
          "total": 65,
          "hierarchy": [
            {
              "level": 1,
              "text": "認証機能要件定義書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. システム概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 背景",
              "line_number": 8
            },
            {
              "level": 3,
              "text": "1.3 スコープ",
              "line_number": 13
            },
            {
              "level": 2,
              "text": "2. 機能要件",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "2.1 ログイン機能",
              "line_number": 21
            },
            {
              "level": 4,
              "text": "2.1.1 基本ログイン",
              "line_number": 23
            },
            {
              "level": 4,
              "text": "2.1.2 入力バリデーション",
              "line_number": 36
            },
            {
              "level": 4,
              "text": "2.1.3 認証失敗時の処理",
              "line_number": 43
            },
            {
              "level": 3,
              "text": "2.2 ログアウト機能",
              "line_number": 49
            },
            {
              "level": 4,
              "text": "2.2.1 通常ログアウト",
              "line_number": 51
            },
            {
              "level": 4,
              "text": "2.2.2 自動ログアウト",
              "line_number": 59
            },
            {
              "level": 3,
              "text": "2.3 セッション管理機能",
              "line_number": 64
            },
            {
              "level": 4,
              "text": "2.3.1 セッション生成",
              "line_number": 66
            },
            {
              "level": 4,
              "text": "2.3.2 セッション検証",
              "line_number": 76
            },
            {
              "level": 4,
              "text": "2.3.3 同時セッション制御",
              "line_number": 81
            },
            {
              "level": 3,
              "text": "2.4 パスワード管理機能",
              "line_number": 86
            },
            {
              "level": 4,
              "text": "2.4.1 パスワード要件",
              "line_number": 88
            },
            {
              "level": 4,
              "text": "2.4.2 パスワード変更",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "2.5 権限管理機能",
              "line_number": 100
            },
            {
              "level": 4,
              "text": "2.5.1 権限レベル",
              "line_number": 102
            },
            {
              "level": 4,
              "text": "2.5.2 権限チェック",
              "line_number": 110
            },
            {
              "level": 2,
              "text": "3. 非機能要件",
              "line_number": 115
            },
            {
              "level": 3,
              "text": "3.1 性能要件",
              "line_number": 117
            },
            {
              "level": 3,
              "text": "3.2 セキュリティ要件",
              "line_number": 123
            },
            {
              "level": 4,
              "text": "3.2.1 データ保護",
              "line_number": 125
            },
            {
              "level": 4,
              "text": "3.2.2 攻撃対策",
              "line_number": 131
            },
            {
              "level": 4,
              "text": "3.2.3 監査・ログ",
              "line_number": 137
            },
            {
              "level": 3,
              "text": "3.3 可用性要件",
              "line_number": 143
            },
            {
              "level": 3,
              "text": "3.4 互換性要件",
              "line_number": 149
            },
            {
              "level": 3,
              "text": "3.5 運用要件",
              "line_number": 154
            },
            {
              "level": 2,
              "text": "4. システム制約",
              "line_number": 160
            },
            {
              "level": 3,
              "text": "4.1 技術制約",
              "line_number": 162
            },
            {
              "level": 3,
              "text": "4.2 業務制約",
              "line_number": 168
            },
            {
              "level": 3,
              "text": "4.3 法的制約",
              "line_number": 173
            },
            {
              "level": 2,
              "text": "5. インターフェース仕様",
              "line_number": 178
            },
            {
              "level": 3,
              "text": "5.1 ユーザーインターフェース",
              "line_number": 180
            },
            {
              "level": 3,
              "text": "5.2 API インターフェース",
              "line_number": 186
            },
            {
              "level": 3,
              "text": "5.3 データベースインターフェース",
              "line_number": 192
            },
            {
              "level": 2,
              "text": "6. テスト要件",
              "line_number": 197
            },
            {
              "level": 3,
              "text": "6.1 機能テスト",
              "line_number": 199
            },
            {
              "level": 3,
              "text": "6.2 性能テスト",
              "line_number": 205
            },
            {
              "level": 3,
              "text": "6.3 セキュリティテスト",
              "line_number": 210
            },
            {
              "level": 2,
              "text": "7. 受け入れ基準",
              "line_number": 215
            },
            {
              "level": 3,
              "text": "7.1 機能要件の受け入れ基準",
              "line_number": 217
            },
            {
              "level": 3,
              "text": "7.2 性能要件の受け入れ基準",
              "line_number": 224
            },
            {
              "level": 3,
              "text": "7.3 セキュリティ要件の受け入れ基準",
              "line_number": 229
            },
            {
              "level": 2,
              "text": "8. リスクと対策",
              "line_number": 235
            },
            {
              "level": 3,
              "text": "8.1 技術的リスク",
              "line_number": 237
            },
            {
              "level": 4,
              "text": "高リスク",
              "line_number": 239
            },
            {
              "level": 4,
              "text": "中リスク",
              "line_number": 243
            },
            {
              "level": 3,
              "text": "8.2 運用リスク",
              "line_number": 247
            },
            {
              "level": 4,
              "text": "高リスク",
              "line_number": 249
            },
            {
              "level": 4,
              "text": "中リスク",
              "line_number": 253
            },
            {
              "level": 3,
              "text": "8.3 外部リスク",
              "line_number": 257
            },
            {
              "level": 4,
              "text": "高リスク",
              "line_number": 259
            },
            {
              "level": 2,
              "text": "9. 移行・展開計画",
              "line_number": 263
            },
            {
              "level": 3,
              "text": "9.1 開発フェーズ",
              "line_number": 265
            },
            {
              "level": 3,
              "text": "9.2 データ移行",
              "line_number": 271
            },
            {
              "level": 3,
              "text": "9.3 ユーザー教育",
              "line_number": 276
            },
            {
              "level": 2,
              "text": "10. 保守・運用",
              "line_number": 281
            },
            {
              "level": 3,
              "text": "10.1 監視項目",
              "line_number": 283
            },
            {
              "level": 3,
              "text": "10.2 定期メンテナンス",
              "line_number": 289
            },
            {
              "level": 3,
              "text": "10.3 緊急時対応",
              "line_number": 295
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 0,
          "inline_code": 0,
          "languages": {},
          "details": []
        },
        "tables": {
          "total": 2,
          "total_rows": 11
        }
      },
      "readability": {
        "score": 98.09,
        "sentences": 94,
        "avg_words_per_sentence": 8.06,
        "long_sentences": 6,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 44.16,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 69.59
    },
    "docs/01_機能設計書/01_認証機能/詳細設計書.md": {
      "basic_metrics": {
        "lines": 1178,
        "words": 2850,
        "characters": 28982,
        "avg_line_length": 24.60271646859083
      },
      "structure_analysis": {
        "headers": {
          "total": 27,
          "hierarchy": [
            {
              "level": 1,
              "text": "認証機能詳細設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "1. システムアーキテクチャ",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "1.1 全体構成",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "1.2 認証フロー",
              "line_number": 34
            },
            {
              "level": 2,
              "text": "2. フロントエンド設計",
              "line_number": 88
            },
            {
              "level": 3,
              "text": "2.1 認証ストア (Pinia)",
              "line_number": 90
            },
            {
              "level": 4,
              "text": "AuthStore 詳細設計",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "2.2 ルーターガード",
              "line_number": 252
            },
            {
              "level": 4,
              "text": "Navigation Guards 設計",
              "line_number": 254
            },
            {
              "level": 3,
              "text": "2.3 API クライアント",
              "line_number": 338
            },
            {
              "level": 4,
              "text": "Auth API Service",
              "line_number": 340
            },
            {
              "level": 2,
              "text": "3. バックエンド設計",
              "line_number": 466
            },
            {
              "level": 3,
              "text": "3.1 認証サービス",
              "line_number": 468
            },
            {
              "level": 4,
              "text": "AuthService クラス設計",
              "line_number": 470
            },
            {
              "level": 3,
              "text": "3.2 認証ミドルウェア",
              "line_number": 727
            },
            {
              "level": 4,
              "text": "Authentication Middleware",
              "line_number": 729
            },
            {
              "level": 2,
              "text": "4. セキュリティ設計",
              "line_number": 804
            },
            {
              "level": 3,
              "text": "4.1 パスワードセキュリティ",
              "line_number": 806
            },
            {
              "level": 3,
              "text": "4.2 レート制限",
              "line_number": 884
            },
            {
              "level": 2,
              "text": "5. ログ・監査設計",
              "line_number": 919
            },
            {
              "level": 3,
              "text": "5.1 認証ログ",
              "line_number": 921
            },
            {
              "level": 2,
              "text": "6. エラーハンドリング",
              "line_number": 987
            },
            {
              "level": 3,
              "text": "6.1 エラーレスポンス標準化",
              "line_number": 989
            },
            {
              "level": 2,
              "text": "7. テスト設計",
              "line_number": 1053
            },
            {
              "level": 3,
              "text": "7.1 単体テスト",
              "line_number": 1055
            },
            {
              "level": 2,
              "text": "8. パフォーマンス最適化",
              "line_number": 1128
            },
            {
              "level": 3,
              "text": "8.1 セッション管理最適化",
              "line_number": 1130
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 4
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 13,
          "inline_code": 39,
          "languages": {
            "mermaid": 1,
            "typescript": 11
          },
          "details": [
            [
              "",
              "┌─────────────────────────────────────────────────────────┐\n│                     Frontend (Vue.js)                     │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │  Login.vue   │  │  AuthStore   │  │  Router      │  │\n│  │              │  │  (Pinia)     │  │  Guards      │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘\n                              ↓ HTTP/JSON\n┌─────────────────────────────────────────────────────────┐\n│                   Backend (Express)                       │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │ AuthRouter   │  │ AuthService  │  │ AuthMiddle   │  │\n│  │              │  │              │  │ ware         │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │ UserModel    │  │ TokenService │  │ ValidationMW │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘\n                              ↓ SQL\n┌─────────────────────────────────────────────────────────┐\n│                   Database (PostgreSQL)                   │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐  │\n│  │ User         │  │ UserSession  │  │ AuditLog     │  │\n│  └──────────────┘  └──────────────┘  └──────────────┘  │\n└─────────────────────────────────────────────────────────┘"
            ],
            [
              "mermaid",
              "sequenceDiagram\n    participant U as User\n    participant F as Frontend\n    participant B as Backend\n    participant DB as Database\n    participant JWT as JWT Service\n\n    Note over U,JWT: ログイン処理\n    U->>F: ユーザー名・パスワード入力\n    F->>F: クライアント側バリデーション\n    F->>B: POST /api/auth/login\n    B->>B: サーバー側バリデーション\n    B->>DB: ユーザー情報取得\n    DB->>B: ユーザーデータ\n    B->>B: パスワード検証 (bcrypt)\n    B->>JWT: JWTトークン生成\n    JWT->>B: トークン返却\n    B->>DB: セッション情報保存\n    B->>B: ログイン履歴記録\n    B->>F: 認証成功レスポンス + トークン\n    F->>F: トークンをlocalStorageに保存\n    F->>F: ユーザー情報をStoreに保存\n    F->>U: ダッシュボードにリダイレクト\n\n    Note over U,JWT: 認証チェック\n    U->>F: 保護されたページアクセス\n    F->>F: ローカルトークン確認\n    F->>B: GET /api/auth/verify (Authorization: Bearer token)\n    B->>JWT: トークン検証\n    JWT->>B: 検証結果\n    alt トークン有効\n        B->>DB: ユーザー状態確認\n        DB->>B: ユーザー情報\n        B->>F: 認証成功\n        F->>U: ページ表示\n    else トークン無効\n        B->>F: 認証失敗 (401)\n        F->>F: ローカルストレージクリア\n        F->>U: ログイン画面にリダイレクト\n    end\n\n    Note over U,JWT: ログアウト処理\n    U->>F: ログアウトボタンクリック\n    F->>B: POST /api/auth/logout\n    B->>DB: セッション無効化\n    B->>B: ログアウト履歴記録\n    B->>F: ログアウト成功\n    F->>F: ローカルストレージクリア\n    F->>F: Storeクリア\n    F->>U: ログイン画面にリダイレクト"
            ],
            [
              "typescript",
              "interface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  lastActivity: Date | null;\n  sessionExpiry: Date | null;\n}\n\ninterface User {\n  id: number;\n  username: string;\n  name: string;\n  email: string;\n  role: UserRole;\n  companyId: number;\n  departmentId: number;\n  lastLoginAt: Date;\n}\n\ntype UserRole = 'ADMIN' | 'MANAGER' | 'USER' | 'GUEST';\n\nexport const useAuthStore = defineStore('auth', {\n  state: (): AuthState => ({\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    isAuthenticated: false,\n    isLoading: false,\n    lastActivity: null,\n    sessionExpiry: null\n  }),\n\n  getters: {\n    isAdmin: (state) => state.user?.role === 'ADMIN',\n    isManager: (state) => ['ADMIN', 'MANAGER'].includes(state.user?.role || ''),\n    userDisplayName: (state) => state.user?.name || state.user?.username || '',\n    sessionTimeRemaining: (state) => {\n      if (!state.sessionExpiry) return 0;\n      return Math.max(0, state.sessionExpiry.getTime() - Date.now());\n    },\n    isSessionExpiringSoon: (state) => {\n      const remaining = state.sessionTimeRemaining;\n      return remaining > 0 && remaining < 30 * 60 * 1000; // 30分以内\n    }\n  },\n\n  actions: {\n    async login(credentials: LoginCredentials): Promise<LoginResult> {\n      this.isLoading = true;\n      try {\n        const response = await authApi.login(credentials);\n\n        if (response.success) {\n          this.setAuthData(response.data);\n          this.updateLastActivity();\n          return { success: true };\n        } else {\n          return {\n            success: false,\n            error: response.error || 'ログインに失敗しました'\n          };\n        }\n      } catch (error) {\n        return {\n          success: false,\n          error: 'ネットワークエラーが発生しました'\n        };\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    async logout(): Promise<void> {\n      this.isLoading = true;\n      try {\n        if (this.token) {\n          await authApi.logout();\n        }\n      } catch (error) {\n        console.error('Logout API error:', error);\n      } finally {\n        this.clearAuthData();\n        this.isLoading = false;\n        router.push('/login');\n      }\n    },\n\n    async verifyToken(): Promise<boolean> {\n      if (!this.token) {\n        return false;\n      }\n\n      try {\n        const response = await authApi.verify();\n        if (response.success) {\n          this.user = response.data.user;\n          this.isAuthenticated = true;\n          this.updateSessionExpiry(response.data.expiresIn);\n          return true;\n        } else {\n          this.clearAuthData();\n          return false;\n        }\n      } catch (error) {\n        this.clearAuthData();\n        return false;\n      }\n    },\n\n    setAuthData(authData: AuthData): void {\n      this.user = authData.user;\n      this.token = authData.token;\n      this.isAuthenticated = true;\n\n      // localStorage に保存\n      localStorage.setItem('auth_token', authData.token);\n      localStorage.setItem('user_data', JSON.stringify(authData.user));\n\n      // セッション期限設定\n      this.updateSessionExpiry(authData.expiresIn);\n    },\n\n    clearAuthData(): void {\n      this.user = null;\n      this.token = null;\n      this.isAuthenticated = false;\n      this.lastActivity = null;\n      this.sessionExpiry = null;\n\n      // localStorage クリア\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user_data');\n    },\n\n    updateLastActivity(): void {\n      this.lastActivity = new Date();\n    },\n\n    updateSessionExpiry(expiresIn: number): void {\n      this.sessionExpiry = new Date(Date.now() + expiresIn * 1000);\n    },\n\n    async refreshToken(): Promise<boolean> {\n      try {\n        const response = await authApi.refreshToken();\n        if (response.success) {\n          this.setAuthData(response.data);\n          return true;\n        }\n        return false;\n      } catch (error) {\n        return false;\n      }\n    }\n  }\n});"
            ],
            [
              "typescript",
              "// router/guards.ts\nimport { useAuthStore } from '@/stores/auth';\n\nexport const authGuard = async (to: RouteLocationNormalized) => {\n  const authStore = useAuthStore();\n\n  // 認証不要なページ\n  const publicPages = ['/login', '/forgot-password', '/reset-password'];\n  const isPublicPage = publicPages.includes(to.path);\n\n  if (isPublicPage) {\n    // 既にログイン済みの場合はダッシュボードにリダイレクト\n    if (authStore.isAuthenticated) {\n      return '/dashboard';\n    }\n    return true;\n  }\n\n  // 認証必要なページ\n  if (!authStore.token) {\n    return '/login';\n  }\n\n  // トークン検証\n  const isValid = await authStore.verifyToken();\n  if (!isValid) {\n    return '/login';\n  }\n\n  // 権限チェック\n  if (to.meta.requiresAdmin && !authStore.isAdmin) {\n    return '/unauthorized';\n  }\n\n  if (to.meta.requiresManager && !authStore.isManager) {\n    return '/unauthorized';\n  }\n\n  return true;\n};\n\n// セッション監視\nexport const sessionMonitor = () => {\n  const authStore = useAuthStore();\n\n  // 定期的なトークン検証（30分間隔）\n  setInterval(async () => {\n    if (authStore.isAuthenticated) {\n      const isValid = await authStore.verifyToken();\n      if (!isValid) {\n        authStore.logout();\n      }\n    }\n  }, 30 * 60 * 1000);\n\n  // アクティビティ監視\n  const activityEvents = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\n  const updateActivity = () => {\n    if (authStore.isAuthenticated) {\n      authStore.updateLastActivity();\n    }\n  };\n\n  activityEvents.forEach(event => {\n    document.addEventListener(event, updateActivity, true);\n  });\n\n  // 非アクティブ時間監視（2時間）\n  setInterval(() => {\n    if (authStore.isAuthenticated && authStore.lastActivity) {\n      const inactiveTime = Date.now() - authStore.lastActivity.getTime();\n      const maxInactiveTime = 2 * 60 * 60 * 1000; // 2時間\n\n      if (inactiveTime > maxInactiveTime) {\n        authStore.logout();\n        ElMessage.warning('長時間操作がないため、自動的にログアウトしました');\n      }\n    }\n  }, 60 * 1000); // 1分間隔でチェック\n};"
            ],
            [
              "typescript",
              "// api/auth.ts\ninterface LoginCredentials {\n  username: string;\n  password: string;\n}\n\ninterface AuthResponse {\n  success: boolean;\n  data?: {\n    user: User;\n    token: string;\n    expiresIn: number;\n  };\n  error?: string;\n}\n\nclass AuthApiService {\n  private baseURL = '/api/auth';\n\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\n    try {\n      const response = await fetch(`${this.baseURL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        return {\n          success: false,\n          error: data.error || 'ログインに失敗しました'\n        };\n      }\n\n      return {\n        success: true,\n        data: data.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'ネットワークエラーが発生しました'\n      };\n    }\n  }\n\n  async logout(): Promise<void> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) return;\n\n    try {\n      await fetch(`${this.baseURL}/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }\n\n  async verify(): Promise<AuthResponse> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return { success: false, error: 'No token found' };\n    }\n\n    try {\n      const response = await fetch(`${this.baseURL}/verify`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        return { success: false, error: data.error };\n      }\n\n      return { success: true, data: data.data };\n    } catch (error) {\n      return { success: false, error: 'Verification failed' };\n    }\n  }\n\n  async refreshToken(): Promise<AuthResponse> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return { success: false, error: 'No token found' };\n    }\n\n    try {\n      const response = await fetch(`${this.baseURL}/refresh`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        return { success: false, error: data.error };\n      }\n\n      return { success: true, data: data.data };\n    } catch (error) {\n      return { success: false, error: 'Token refresh failed' };\n    }\n  }\n}\n\nexport const authApi = new AuthApiService();"
            ],
            [
              "typescript",
              "// services/AuthService.ts\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\nimport { PrismaClient } from '@prisma/client';\n\ninterface LoginRequest {\n  username: string;\n  password: string;\n}\n\ninterface LoginResult {\n  success: boolean;\n  user?: User;\n  token?: string;\n  expiresIn?: number;\n  error?: string;\n}\n\nexport class AuthService {\n  private prisma: PrismaClient;\n  private saltRounds = 12;\n  private tokenSecret = process.env.JWT_SECRET!;\n  private tokenExpiry = '8h';\n\n  constructor() {\n    this.prisma = new PrismaClient();\n  }\n\n  async login(request: LoginRequest, clientInfo: ClientInfo): Promise<LoginResult> {\n    try {\n      // 入力バリデーション\n      const validation = this.validateLoginInput(request);\n      if (!validation.isValid) {\n        await this.logFailedAttempt(request.username, clientInfo, 'INVALID_INPUT');\n        return { success: false, error: validation.error };\n      }\n\n      // ユーザー存在確認\n      const user = await this.findUserByUsername(request.username);\n      if (!user) {\n        await this.logFailedAttempt(request.username, clientInfo, 'USER_NOT_FOUND');\n        return { success: false, error: 'ユーザー名またはパスワードが正しくありません' };\n      }\n\n      // アカウントロック確認\n      const lockStatus = await this.checkAccountLock(user.id);\n      if (lockStatus.isLocked) {\n        await this.logFailedAttempt(request.username, clientInfo, 'ACCOUNT_LOCKED');\n        return {\n          success: false,\n          error: `アカウントがロックされています。${lockStatus.unlockAt}まで待機してください`\n        };\n      }\n\n      // パスワード検証\n      const isPasswordValid = await bcrypt.compare(request.password, user.password);\n      if (!isPasswordValid) {\n        await this.recordFailedAttempt(user.id, clientInfo);\n        await this.logFailedAttempt(request.username, clientInfo, 'WRONG_PASSWORD');\n        return { success: false, error: 'ユーザー名またはパスワードが正しくありません' };\n      }\n\n      // アクティブユーザー確認\n      if (!user.isActive) {\n        await this.logFailedAttempt(request.username, clientInfo, 'INACTIVE_USER');\n        return { success: false, error: 'アカウントが無効になっています' };\n      }\n\n      // 同時セッション数チェック\n      const sessionCount = await this.getActiveSessionCount(user.id);\n      const maxSessions = this.getMaxSessionsForRole(user.role);\n      if (sessionCount >= maxSessions) {\n        await this.cleanupOldestSession(user.id);\n      }\n\n      // JWTトークン生成\n      const tokenPayload = {\n        userId: user.id,\n        username: user.username,\n        role: user.role,\n        companyId: user.companyId,\n        departmentId: user.primaryDepartmentId\n      };\n\n      const token = jwt.sign(tokenPayload, this.tokenSecret, {\n        expiresIn: this.tokenExpiry\n      });\n\n      // セッション保存\n      const session = await this.createSession(user.id, token, clientInfo);\n\n      // ログイン履歴記録\n      await this.logSuccessfulLogin(user.id, clientInfo);\n\n      // 失敗回数リセット\n      await this.resetFailedAttempts(user.id);\n\n      // 最終ログイン時刻更新\n      await this.updateLastLogin(user.id);\n\n      return {\n        success: true,\n        user: this.sanitizeUser(user),\n        token,\n        expiresIn: 8 * 60 * 60 // 8時間（秒）\n      };\n\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: 'システムエラーが発生しました' };\n    }\n  }\n\n  async logout(token: string): Promise<void> {\n    try {\n      // トークンから情報を抽出\n      const decoded = jwt.decode(token) as any;\n      if (!decoded?.userId) return;\n\n      // セッション無効化\n      await this.invalidateSession(token);\n\n      // ログアウト履歴記録\n      await this.logLogout(decoded.userId);\n\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }\n\n  async verifyToken(token: string): Promise<TokenVerificationResult> {\n    try {\n      // JWT検証\n      const decoded = jwt.verify(token, this.tokenSecret) as any;\n\n      // セッション存在確認\n      const session = await this.findSessionByToken(token);\n      if (!session || !session.isActive) {\n        return { isValid: false, error: 'セッションが無効です' };\n      }\n\n      // セッション期限確認\n      if (session.expiresAt < new Date()) {\n        await this.invalidateSession(token);\n        return { isValid: false, error: 'セッションが期限切れです' };\n      }\n\n      // ユーザー存在・アクティブ確認\n      const user = await this.findUserById(decoded.userId);\n      if (!user || !user.isActive) {\n        await this.invalidateSession(token);\n        return { isValid: false, error: 'ユーザーが無効です' };\n      }\n\n      // 最終アクティビティ更新\n      await this.updateSessionActivity(session.id);\n\n      return {\n        isValid: true,\n        user: this.sanitizeUser(user),\n        expiresIn: Math.floor((session.expiresAt.getTime() - Date.now()) / 1000)\n      };\n\n    } catch (error) {\n      if (error instanceof jwt.TokenExpiredError) {\n        return { isValid: false, error: 'トークンが期限切れです' };\n      } else if (error instanceof jwt.JsonWebTokenError) {\n        return { isValid: false, error: 'トークンが無効です' };\n      }\n\n      console.error('Token verification error:', error);\n      return { isValid: false, error: 'トークン検証エラー' };\n    }\n  }\n\n  private validateLoginInput(request: LoginRequest): ValidationResult {\n    if (!request.username || !request.password) {\n      return { isValid: false, error: 'ユーザー名とパスワードを入力してください' };\n    }\n\n    if (request.username.length > 50) {\n      return { isValid: false, error: 'ユーザー名が長すぎます' };\n    }\n\n    if (request.password.length > 128) {\n      return { isValid: false, error: 'パスワードが長すぎます' };\n    }\n\n    return { isValid: true };\n  }\n\n  private async checkAccountLock(userId: number): Promise<LockStatus> {\n    const failedAttempts = await this.getFailedAttemptCount(userId);\n\n    if (failedAttempts >= 5) {\n      const lastAttempt = await this.getLastFailedAttempt(userId);\n      const lockDuration = 30 * 60 * 1000; // 30分\n      const unlockAt = new Date(lastAttempt.getTime() + lockDuration);\n\n      if (new Date() < unlockAt) {\n        return { isLocked: true, unlockAt: unlockAt.toLocaleString() };\n      } else {\n        // ロック期間終了、失敗回数リセット\n        await this.resetFailedAttempts(userId);\n      }\n    }\n\n    return { isLocked: false };\n  }\n\n  private async createSession(\n    userId: number,\n    token: string,\n    clientInfo: ClientInfo\n  ): Promise<UserSession> {\n    const expiresAt = new Date(Date.now() + 8 * 60 * 60 * 1000); // 8時間後\n\n    return this.prisma.userSession.create({\n      data: {\n        userId,\n        sessionToken: token,\n        ipAddress: clientInfo.ipAddress,\n        userAgent: clientInfo.userAgent,\n        expiresAt,\n        lastActivity: new Date(),\n        isActive: true\n      }\n    });\n  }\n\n  private getMaxSessionsForRole(role: string): number {\n    switch (role) {\n      case 'ADMIN': return 5;\n      case 'MANAGER': return 4;\n      case 'USER': return 3;\n      case 'GUEST': return 2;\n      default: return 3;\n    }\n  }\n\n  private sanitizeUser(user: any): User {\n    return {\n      id: user.id,\n      username: user.username,\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      companyId: user.companyId,\n      departmentId: user.primaryDepartmentId,\n      lastLoginAt: user.lastLoginAt\n    };\n  }\n}"
            ],
            [
              "typescript",
              "// middleware/auth.ts\nimport { Request, Response, NextFunction } from 'express';\nimport { AuthService } from '../services/AuthService';\n\ninterface AuthenticatedRequest extends Request {\n  user?: User;\n  token?: string;\n}\n\nexport const authMiddleware = async (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  try {\n    const authHeader = req.headers.authorization;\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return res.status(401).json({\n        success: false,\n        error: 'Authorization header missing'\n      });\n    }\n\n    const token = authHeader.substring(7);\n    const authService = new AuthService();\n\n    const verificationResult = await authService.verifyToken(token);\n\n    if (!verificationResult.isValid) {\n      return res.status(401).json({\n        success: false,\n        error: verificationResult.error\n      });\n    }\n\n    req.user = verificationResult.user;\n    req.token = token;\n\n    next();\n  } catch (error) {\n    console.error('Auth middleware error:', error);\n    return res.status(500).json({\n      success: false,\n      error: 'Internal server error'\n    });\n  }\n};\n\nexport const requireRole = (allowedRoles: string[]) => {\n  return (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: 'Authentication required'\n      });\n    }\n\n    if (!allowedRoles.includes(req.user.role)) {\n      return res.status(403).json({\n        success: false,\n        error: 'Insufficient permissions'\n      });\n    }\n\n    next();\n  };\n};\n\nexport const requireAdmin = requireRole(['ADMIN']);\nexport const requireManager = requireRole(['ADMIN', 'MANAGER']);"
            ],
            [
              "typescript",
              "// utils/password.ts\nimport bcrypt from 'bcrypt';\n\nexport class PasswordService {\n  private saltRounds = 12;\n\n  async hashPassword(password: string): Promise<string> {\n    return bcrypt.hash(password, this.saltRounds);\n  }\n\n  async verifyPassword(password: string, hash: string): Promise<boolean> {\n    return bcrypt.compare(password, hash);\n  }\n\n  validatePasswordStrength(password: string): ValidationResult {\n    const errors: string[] = [];\n\n    if (password.length < 6) {\n      errors.push('パスワードは6文字以上である必要があります');\n    }\n\n    if (password.length > 128) {\n      errors.push('パスワードは128文字以下である必要があります');\n    }\n\n    if (!/[a-zA-Z]/.test(password)) {\n      errors.push('英字を含める必要があります');\n    }\n\n    if (!/[0-9]/.test(password)) {\n      errors.push('数字を含める必要があります');\n    }\n\n    // 推奨要件（警告レベル）\n    const warnings: string[] = [];\n\n    if (!/[A-Z]/.test(password)) {\n      warnings.push('大文字を含めることを推奨します');\n    }\n\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      warnings.push('記号を含めることを推奨します');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  generateSecurePassword(length: number = 12): string {\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n    let password = '';\n\n    // 必須文字種を最低1つずつ含める\n    password += this.getRandomChar('abcdefghijklmnopqrstuvwxyz'); // 小文字\n    password += this.getRandomChar('ABCDEFGHIJKLMNOPQRSTUVWXYZ'); // 大文字\n    password += this.getRandomChar('0123456789'); // 数字\n    password += this.getRandomChar('!@#$%^&*'); // 記号\n\n    // 残りの文字をランダム生成\n    for (let i = password.length; i < length; i++) {\n      password += this.getRandomChar(charset);\n    }\n\n    // シャッフル\n    return password.split('').sort(() => Math.random() - 0.5).join('');\n  }\n\n  private getRandomChar(charset: string): string {\n    return charset.charAt(Math.floor(Math.random() * charset.length));\n  }\n}"
            ],
            [
              "typescript",
              "// middleware/rateLimit.ts\nimport rateLimit from 'express-rate-limit';\nimport { Request } from 'express';\n\n// ログイン試行制限\nexport const loginRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15分\n  max: 5, // 最大5回の試行\n  message: {\n    success: false,\n    error: 'ログイン試行回数が上限に達しました。15分後に再試行してください。'\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n  keyGenerator: (req: Request) => {\n    // IPアドレスとユーザー名の組み合わせでレート制限\n    const ip = req.ip;\n    const username = req.body.username || 'unknown';\n    return `${ip}:${username}`;\n  }\n});\n\n// API全般の制限\nexport const apiRateLimit = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1分\n  max: 100, // 最大100リクエスト\n  message: {\n    success: false,\n    error: 'リクエスト回数が上限に達しました。しばらく待ってから再試行してください。'\n  }\n});"
            ],
            [
              "typescript",
              "// services/AuditService.ts\nexport class AuditService {\n  private prisma: PrismaClient;\n\n  constructor() {\n    this.prisma = new PrismaClient();\n  }\n\n  async logLoginAttempt(\n    username: string,\n    success: boolean,\n    clientInfo: ClientInfo,\n    failureReason?: string\n  ): Promise<void> {\n    await this.prisma.auditLog.create({\n      data: {\n        action: success ? 'LOGIN_SUCCESS' : 'LOGIN_FAILED',\n        targetType: 'USER',\n        targetId: 0, // username ベースなので ID は不明の場合がある\n        reason: failureReason || undefined,\n        ipAddress: clientInfo.ipAddress,\n        userAgent: clientInfo.userAgent,\n        createdAt: new Date(),\n        context: {\n          username,\n          timestamp: new Date().toISOString(),\n          success\n        }\n      }\n    });\n  }\n\n  async logPasswordChange(userId: number, clientInfo: ClientInfo): Promise<void> {\n    await this.prisma.auditLog.create({\n      data: {\n        userId,\n        action: 'PASSWORD_CHANGE',\n        targetType: 'USER',\n        targetId: userId,\n        ipAddress: clientInfo.ipAddress,\n        userAgent: clientInfo.userAgent,\n        createdAt: new Date()\n      }\n    });\n  }\n\n  async logSessionActivity(\n    userId: number,\n    action: 'CREATE' | 'INVALIDATE' | 'EXPIRE',\n    sessionId: number\n  ): Promise<void> {\n    await this.prisma.auditLog.create({\n      data: {\n        userId,\n        action: `SESSION_${action}`,\n        targetType: 'SESSION',\n        targetId: sessionId,\n        createdAt: new Date()\n      }\n    });\n  }\n}"
            ],
            [
              "typescript",
              "// utils/errorHandler.ts\nexport enum AuthErrorCode {\n  INVALID_CREDENTIALS = 'AUTH_001',\n  ACCOUNT_LOCKED = 'AUTH_002',\n  SESSION_EXPIRED = 'AUTH_003',\n  INSUFFICIENT_PERMISSIONS = 'AUTH_004',\n  INVALID_TOKEN = 'AUTH_005',\n  RATE_LIMITED = 'AUTH_006'\n}\n\nexport interface AuthError {\n  code: AuthErrorCode;\n  message: string;\n  details?: any;\n}\n\nexport class AuthErrorHandler {\n  static handleLoginError(error: any): AuthError {\n    if (error.type === 'INVALID_CREDENTIALS') {\n      return {\n        code: AuthErrorCode.INVALID_CREDENTIALS,\n        message: 'ユーザー名またはパスワードが正しくありません'\n      };\n    }\n\n    if (error.type === 'ACCOUNT_LOCKED') {\n      return {\n        code: AuthErrorCode.ACCOUNT_LOCKED,\n        message: 'アカウントがロックされています',\n        details: { unlockAt: error.unlockAt }\n      };\n    }\n\n    return {\n      code: AuthErrorCode.INVALID_CREDENTIALS,\n      message: 'ログインに失敗しました'\n    };\n  }\n\n  static handleTokenError(error: any): AuthError {\n    if (error instanceof jwt.TokenExpiredError) {\n      return {\n        code: AuthErrorCode.SESSION_EXPIRED,\n        message: 'セッションが期限切れです'\n      };\n    }\n\n    if (error instanceof jwt.JsonWebTokenError) {\n      return {\n        code: AuthErrorCode.INVALID_TOKEN,\n        message: '認証トークンが無効です'\n      };\n    }\n\n    return {\n      code: AuthErrorCode.INVALID_TOKEN,\n      message: '認証に失敗しました'\n    };\n  }\n}"
            ],
            [
              "typescript",
              "// tests/auth/AuthService.test.ts\ndescribe('AuthService', () => {\n  let authService: AuthService;\n  let mockPrisma: jest.Mocked<PrismaClient>;\n\n  beforeEach(() => {\n    mockPrisma = createMockPrismaClient();\n    authService = new AuthService(mockPrisma);\n  });\n\n  describe('login', () => {\n    it('should login successfully with valid credentials', async () => {\n      // Arrange\n      const credentials = {\n        username: 'testuser',\n        password: 'password123'\n      };\n\n      const mockUser = {\n        id: 1,\n        username: 'testuser',\n        password: await bcrypt.hash('password123', 12),\n        isActive: true,\n        role: 'USER'\n      };\n\n      mockPrisma.user.findUnique.mockResolvedValue(mockUser);\n\n      // Act\n      const result = await authService.login(credentials, mockClientInfo);\n\n      // Assert\n      expect(result.success).toBe(true);\n      expect(result.token).toBeDefined();\n      expect(result.user?.username).toBe('testuser');\n    });\n\n    it('should fail with invalid credentials', async () => {\n      // Arrange\n      const credentials = {\n        username: 'testuser',\n        password: 'wrongpassword'\n      };\n\n      mockPrisma.user.findUnique.mockResolvedValue(null);\n\n      // Act\n      const result = await authService.login(credentials, mockClientInfo);\n\n      // Assert\n      expect(result.success).toBe(false);\n      expect(result.error).toBe('ユーザー名またはパスワードが正しくありません');\n    });\n\n    it('should lock account after 5 failed attempts', async () => {\n      // テスト実装\n    });\n  });\n\n  describe('verifyToken', () => {\n    it('should verify valid token', async () => {\n      // テスト実装\n    });\n\n    it('should reject expired token', async () => {\n      // テスト実装\n    });\n  });\n});"
            ],
            [
              "typescript",
              "// services/SessionCache.ts\nimport Redis from 'redis';\n\nexport class SessionCache {\n  private redis: Redis;\n\n  constructor() {\n    this.redis = Redis.createClient({\n      host: process.env.REDIS_HOST || 'localhost',\n      port: parseInt(process.env.REDIS_PORT || '6379')\n    });\n  }\n\n  async cacheSession(sessionId: string, sessionData: any): Promise<void> {\n    const key = `session:${sessionId}`;\n    const ttl = 8 * 60 * 60; // 8時間\n\n    await this.redis.setex(key, ttl, JSON.stringify(sessionData));\n  }\n\n  async getSession(sessionId: string): Promise<any | null> {\n    const key = `session:${sessionId}`;\n    const data = await this.redis.get(key);\n\n    return data ? JSON.parse(data) : null;\n  }\n\n  async invalidateSession(sessionId: string): Promise<void> {\n    const key = `session:${sessionId}`;\n    await this.redis.del(key);\n  }\n\n  async extendSession(sessionId: string): Promise<void> {\n    const key = `session:${sessionId}`;\n    const ttl = 8 * 60 * 60; // 8時間\n\n    await this.redis.expire(key, ttl);\n  }\n}"
            ]
          ]
        },
        "tables": {
          "total": 0,
          "total_rows": 0
        }
      },
      "readability": {
        "score": 98.05,
        "sentences": 431,
        "avg_words_per_sentence": 6.61,
        "long_sentences": 28,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 60,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 75.91
    },
    "docs/01_機能設計書/01_認証機能/認証機能設計書.md": {
      "basic_metrics": {
        "lines": 159,
        "words": 350,
        "characters": 2305,
        "avg_line_length": 14.49685534591195
      },
      "structure_analysis": {
        "headers": {
          "total": 28,
          "hierarchy": [
            {
              "level": 1,
              "text": "認証機能設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "対象画面",
              "line_number": 10
            },
            {
              "level": 2,
              "text": "🏗️ システム構成",
              "line_number": 14
            },
            {
              "level": 3,
              "text": "技術スタック",
              "line_number": 16
            },
            {
              "level": 3,
              "text": "アーキテクチャ",
              "line_number": 22
            },
            {
              "level": 2,
              "text": "🔐 認証フロー",
              "line_number": 27
            },
            {
              "level": 3,
              "text": "1. ログイン処理",
              "line_number": 29
            },
            {
              "level": 3,
              "text": "2. セッション確認",
              "line_number": 47
            },
            {
              "level": 2,
              "text": "📝 機能仕様",
              "line_number": 61
            },
            {
              "level": 3,
              "text": "入力項目",
              "line_number": 63
            },
            {
              "level": 3,
              "text": "画面要素",
              "line_number": 69
            },
            {
              "level": 3,
              "text": "状態管理 (AuthStore)",
              "line_number": 76
            },
            {
              "level": 2,
              "text": "🎨 UI設計",
              "line_number": 92
            },
            {
              "level": 3,
              "text": "レイアウト",
              "line_number": 94
            },
            {
              "level": 3,
              "text": "カラー・デザイン",
              "line_number": 99
            },
            {
              "level": 2,
              "text": "🔒 セキュリティ要件",
              "line_number": 104
            },
            {
              "level": 3,
              "text": "認証セキュリティ",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "入力検証",
              "line_number": 111
            },
            {
              "level": 2,
              "text": "🧪 テスト仕様",
              "line_number": 116
            },
            {
              "level": 3,
              "text": "単体テスト",
              "line_number": 118
            },
            {
              "level": 3,
              "text": "結合テスト",
              "line_number": 123
            },
            {
              "level": 3,
              "text": "E2Eテスト",
              "line_number": 128
            },
            {
              "level": 2,
              "text": "🚀 実装状況",
              "line_number": 133
            },
            {
              "level": 3,
              "text": "完了済み",
              "line_number": 135
            },
            {
              "level": 3,
              "text": "今後の課題",
              "line_number": 142
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 148
            }
          ],
          "hierarchy_issues": [],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 4,
          "inline_code": 7,
          "languages": {
            "mermaid": 2,
            "typescript": 1
          },
          "details": [
            [
              "",
              "[Login.vue] → [useAuthStore] → [localStorage] → [Router Guard]"
            ],
            [
              "mermaid",
              "sequenceDiagram\n    participant U as User\n    participant L as Login.vue\n    participant S as AuthStore\n    participant API as Backend API\n\n    U->>L: ユーザー名・パスワード入力\n    L->>L: バリデーション実行\n    L->>S: login() 呼び出し\n    S->>API: 認証リクエスト送信\n    API->>S: JWTトークン返却\n    S->>S: localStorage保存\n    S->>L: 認証成功通知\n    L->>L: ダッシュボードへリダイレクト"
            ],
            [
              "mermaid",
              "sequenceDiagram\n    participant R as Router\n    participant S as AuthStore\n    participant LS as localStorage\n\n    R->>S: 認証状態確認\n    S->>LS: トークン取得\n    LS->>S: トークン返却\n    S->>S: トークン有効性確認\n    S->>R: 認証結果返却"
            ],
            [
              "typescript",
              "interface AuthState {\n  user: User | null           // ユーザー情報\n  token: string | null        // JWTトークン\n  isAuthenticated: boolean    // 認証状態\n}\n\ninterface User {\n  id: number\n  username: string\n  name: string\n  role?: string\n}"
            ]
          ]
        },
        "tables": {
          "total": 1,
          "total_rows": 4
        }
      },
      "readability": {
        "score": 55.45,
        "sentences": 11,
        "avg_words_per_sentence": 31.82,
        "long_sentences": 4,
        "readability_level": "やや読みにくい"
      },
      "structure_score": 46.0,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 57.54
    },
    "docs/01_機能設計書/06_アクセシビリティ/アクセシビリティ設計書.md": {
      "basic_metrics": {
        "lines": 318,
        "words": 804,
        "characters": 6099,
        "avg_line_length": 19.17924528301887
      },
      "structure_analysis": {
        "headers": {
          "total": 41,
          "hierarchy": [
            {
              "level": 1,
              "text": "アクセシビリティ設計書",
              "line_number": 1
            },
            {
              "level": 2,
              "text": "📋 機能概要",
              "line_number": 3
            },
            {
              "level": 3,
              "text": "目的",
              "line_number": 5
            },
            {
              "level": 3,
              "text": "対象範囲",
              "line_number": 11
            },
            {
              "level": 2,
              "text": "🎯 WCAG 2.1 AA準拠項目",
              "line_number": 17
            },
            {
              "level": 3,
              "text": "レベルA要件",
              "line_number": 19
            },
            {
              "level": 3,
              "text": "レベルAA要件",
              "line_number": 25
            },
            {
              "level": 2,
              "text": "🔤 フォント・タイポグラフィ",
              "line_number": 31
            },
            {
              "level": 3,
              "text": "UDフォント実装",
              "line_number": 33
            },
            {
              "level": 3,
              "text": "フォントサイズ基準",
              "line_number": 44
            },
            {
              "level": 3,
              "text": "読みやすさ向上",
              "line_number": 53
            },
            {
              "level": 2,
              "text": "🎨 色彩・コントラスト設計",
              "line_number": 65
            },
            {
              "level": 3,
              "text": "カラーパレット",
              "line_number": 67
            },
            {
              "level": 3,
              "text": "カラーアクセシビリティ検証",
              "line_number": 76
            },
            {
              "level": 3,
              "text": "色以外の情報伝達",
              "line_number": 93
            },
            {
              "level": 2,
              "text": "⌨️ キーボードナビゲーション",
              "line_number": 106
            },
            {
              "level": 3,
              "text": "キーボード操作要件",
              "line_number": 108
            },
            {
              "level": 3,
              "text": "フォーカス管理",
              "line_number": 114
            },
            {
              "level": 3,
              "text": "タブインデックス設計",
              "line_number": 130
            },
            {
              "level": 2,
              "text": "🔊 スクリーンリーダー対応",
              "line_number": 140
            },
            {
              "level": 3,
              "text": "ARIA属性実装",
              "line_number": 142
            },
            {
              "level": 3,
              "text": "ライブリージョン",
              "line_number": 179
            },
            {
              "level": 2,
              "text": "📱 タッチアクセシビリティ",
              "line_number": 192
            },
            {
              "level": 3,
              "text": "タッチターゲットサイズ",
              "line_number": 194
            },
            {
              "level": 3,
              "text": "ジェスチャー代替手段",
              "line_number": 213
            },
            {
              "level": 2,
              "text": "🌐 多言語・国際化対応",
              "line_number": 218
            },
            {
              "level": 3,
              "text": "言語設定",
              "line_number": 220
            },
            {
              "level": 3,
              "text": "RTL対応準備",
              "line_number": 231
            },
            {
              "level": 2,
              "text": "🧪 アクセシビリティテスト",
              "line_number": 242
            },
            {
              "level": 3,
              "text": "自動テストツール",
              "line_number": 244
            },
            {
              "level": 1,
              "text": "axe-core による自動検証",
              "line_number": 246
            },
            {
              "level": 1,
              "text": "Lighthouse Accessibility Audit",
              "line_number": 249
            },
            {
              "level": 3,
              "text": "手動テスト項目",
              "line_number": 253
            },
            {
              "level": 3,
              "text": "E2Eアクセシビリティテスト",
              "line_number": 259
            },
            {
              "level": 2,
              "text": "📋 チェックリスト",
              "line_number": 276
            },
            {
              "level": 3,
              "text": "開発時確認事項",
              "line_number": 278
            },
            {
              "level": 3,
              "text": "リリース前確認",
              "line_number": 286
            },
            {
              "level": 2,
              "text": "🚀 実装状況",
              "line_number": 292
            },
            {
              "level": 3,
              "text": "完了済み",
              "line_number": 294
            },
            {
              "level": 3,
              "text": "今後の改善",
              "line_number": 301
            },
            {
              "level": 2,
              "text": "📋 関連ドキュメント",
              "line_number": 307
            }
          ],
          "hierarchy_issues": [
            {
              "line": 253,
              "issue": "見出しレベル3が1から飛躍"
            }
          ],
          "deepest_level": 3
        },
        "links": {
          "total": 0,
          "internal": 0,
          "external": 0,
          "empty": 0,
          "internal_details": [],
          "external_details": []
        },
        "images": {
          "total": 0,
          "with_alt": 0,
          "without_alt": 0,
          "details": []
        },
        "code_blocks": {
          "total_blocks": 13,
          "inline_code": 25,
          "languages": {
            "css": 5,
            "typescript": 4,
            "vue": 3,
            "bash": 1
          },
          "details": [
            [
              "css",
              "/* BIZ UDゴシック適用 */\nfont-family:\n  \"BIZ UDPGothic\",            /* 最優先 */\n  \"BIZ UDGothic\",\n  \"UD Digi Kyokasho NP-R\",\n  \"UD Digi Kyokasho N-R\",\n  sans-serif;"
            ],
            [
              "css",
              "/* 文字間隔・行間最適化 */\n.accessible-text {\n  font-size: 16px;\n  line-height: 1.6;\n  letter-spacing: 0.05em;    /* 文字間隔 */\n  word-spacing: 0.1em;       /* 単語間隔 */\n  text-align: left;          /* 左揃え固定 */\n}"
            ],
            [
              "typescript",
              "// コントラスト比計算\nfunction calculateContrastRatio(color1: string, color2: string): number {\n  const luminance1 = getLuminance(color1)\n  const luminance2 = getLuminance(color2)\n  const brighter = Math.max(luminance1, luminance2)\n  const darker = Math.min(luminance1, luminance2)\n  return (brighter + 0.05) / (darker + 0.05)\n}\n\n// WCAG AA準拠チェック\nfunction isWCAGCompliant(ratio: number): boolean {\n  return ratio >= 4.5  // AA要件\n}"
            ],
            [
              "vue",
              "<!-- 色覚障害対応例 -->\n<el-tag :type=\"status.type\" :class=\"status.pattern\">\n  <el-icon><component :is=\"status.icon\" /></el-icon>\n  {{ status.text }}\n</el-tag>"
            ],
            [
              "css",
              "/* フォーカス表示強化 */\n.keyboard-focus {\n  outline: 3px solid #409EFF;\n  outline-offset: 2px;\n  box-shadow: 0 0 0 1px #ffffff;\n}\n\n/* カスタムフォーカス */\n.common-button:focus-visible {\n  outline: 3px solid #409EFF;\n  outline-offset: 2px;\n}"
            ],
            [
              "typescript",
              "interface TabSequence {\n  navigation: 1-10      // ナビゲーション\n  main: 11-100         // メインコンテンツ\n  sidebar: 101-200     // サイドバー\n  footer: 201-300      // フッター\n}"
            ],
            [
              "vue",
              "<template>\n  <!-- ランドマーク -->\n  <main role=\"main\" aria-label=\"メインコンテンツ\">\n    <!-- ナビゲーション -->\n    <nav role=\"navigation\" aria-label=\"メインナビゲーション\">\n\n    <!-- フォーム -->\n    <form role=\"form\" aria-label=\"ユーザー検索\">\n      <label for=\"username\" aria-required=\"true\">\n        ユーザー名\n      </label>\n      <input\n        id=\"username\"\n        aria-describedby=\"username-help\"\n        aria-invalid=\"false\"\n      />\n      <div id=\"username-help\" aria-live=\"polite\">\n        1-20文字で入力してください\n      </div>\n    </form>\n\n    <!-- テーブル -->\n    <table role=\"table\" aria-label=\"ユーザー一覧\">\n      <caption>登録ユーザー一覧（全100件）</caption>\n      <thead>\n        <tr>\n          <th scope=\"col\" aria-sort=\"none\">氏名</th>\n          <th scope=\"col\" aria-sort=\"ascending\">部署</th>\n        </tr>\n      </thead>\n    </table>\n  </main>\n</template>"
            ],
            [
              "vue",
              "<!-- 動的コンテンツ通知 -->\n<div aria-live=\"polite\" aria-atomic=\"true\">\n  {{ statusMessage }}\n</div>\n\n<!-- 緊急通知 -->\n<div aria-live=\"assertive\" role=\"alert\">\n  {{ errorMessage }}\n</div>"
            ],
            [
              "css",
              "/* 最小44pxターゲット */\n.touch-accessible {\n  min-height: 44px;\n  min-width: 44px;\n  padding: 12px;\n}\n\n/* 拡張タッチエリア */\n.touch-extended::before {\n  content: '';\n  position: absolute;\n  top: -12px; left: -12px;\n  right: -12px; bottom: -12px;\n  z-index: -1;\n}"
            ],
            [
              "typescript",
              "// i18n設定\ninterface LocaleSettings {\n  language: 'ja' | 'en'        // 言語\n  direction: 'ltr' | 'rtl'     // 文字方向\n  dateFormat: string           // 日付形式\n  numberFormat: string         // 数値形式\n}"
            ],
            [
              "css",
              "/* 論理プロパティ使用 */\n.content {\n  margin-inline-start: 16px;   /* margin-left: の代替 */\n  margin-inline-end: 16px;     /* margin-right: の代替 */\n  padding-block: 12px;         /* padding-top/bottom: */\n  padding-inline: 16px;        /* padding-left/right: */\n}"
            ],
            [
              "bash",
              "# axe-core による自動検証\nnpm install @axe-core/playwright\n\n# Lighthouse Accessibility Audit\nlighthouse --only-categories=accessibility http://localhost:3000"
            ],
            [
              "typescript",
              "// Playwright + axe-core\ntest('Accessibility compliance', async ({ page }) => {\n  await page.goto('/dashboard')\n\n  // axe-core スキャン\n  const accessibilityScanResults = await page.evaluate(async () => {\n    const axe = await import('axe-core')\n    return await axe.run()\n  })\n\n  // 違反がないことを確認\n  expect(accessibilityScanResults.violations).toHaveLength(0)\n})"
            ]
          ]
        },
        "tables": {
          "total": 2,
          "total_rows": 14
        }
      },
      "readability": {
        "score": 93.73,
        "sentences": 67,
        "avg_words_per_sentence": 12.0,
        "long_sentences": 14,
        "readability_level": "非常に読みやすい"
      },
      "structure_score": 57.08,
      "ai_analysis": {
        "score": 75,
        "suggestions": [],
        "ai_enabled": false,
        "analysis_method": "rule_based_simulation"
      },
      "overall_score": 73.45
    }
  },
  "readability_scores": {},
  "structure_scores": {},
  "improvement_suggestions": {},
  "ai_recommendations": [
    {
      "priority": "high",
      "category": "content_quality",
      "title": "低品質ファイルの改善",
      "description": "40件のファイルが品質基準を下回っています",
      "action": "見出し構造、リンク、視覚要素の追加・改善",
      "affected_files": [
        "docs/14-想定問題とリスク分析.md",
        "docs/22-未実装機能分析報告書.md",
        "docs/24-権限テンプレート単体試験仕様書.md",
        "docs/18-プロジェクトステータスボード.md",
        "docs/71-企業向けフォルダ構成サンプル.md"
      ]
    },
    {
      "priority": "medium",
      "category": "structure",
      "title": "見出し階層の改善",
      "description": "35件のファイルで見出し階層に問題があります",
      "action": "適切な見出しレベル（h1→h2→h3）の使用",
      "impact": "文書構造の明確化・アクセシビリティ向上"
    }
  ],
  "quality_summary": {
    "average_score": 70.27,
    "total_files": 112,
    "score_distribution": {
      "excellent": 0,
      "good": 2,
      "fair": 70,
      "poor": 40
    },
    "quality_level": "普通"
  }
}